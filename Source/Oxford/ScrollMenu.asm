	subtitle	"ScrollMenu";;===========================================================================================;;  FileName: ScrollMenu.asm;  Date: 9/2/03;  File Version: 1.1.1;  ;  Author: David M. Flynn;  Company: Oxford V.U.E., Inc.;;============================================================================================; Revision History;; 1.1.1  9/2/03	Fixed minor bug in ScrollStringIdle which always put the str on line 3; 1.1    6/21/03	Added ScrollStringIdle.; 1.0b1  5/17/03	Added SetupTask; 1.0d2  4/21/03	Added ActivateMenu. (0x4E (78) bytes); 1.0d1  3/26/03	First Code;;============================================================================================; Notes:;;  These are the routines to implement a scrolling menu system on an LCD;  This file is all general perpose routines.;  Include this file after LowStuff.asm in *** Segment 0 ***;;  To Use:;	MOVLW	MenuID;	CALL	ActivateMenu;; 63 menus max....; MenuTitleStrPtr = evDataROM*256+Menu0TitleSPtr+MenuID; MenuTextStrPtr = evDataROM*256+Menu0StrPtr+MenuID; KeyMask = evDataROM*256+MenuID*2;; Memory required: (bank0); ScrollMenuStrPtr	RES	1	;String Ptr to display; ScrollMenuCurChr	RES	1	;The first char to display;;============================================================================================; Routines in segment 0; Name	(additional stack words required) Description;============================================================================================; ScrollStringIdle	(1+2) Scroll any string. Called every Tick.; ScrollMenuIdle	(1+2) Scroll the active menu's text (ScrollMenuStrPtr). Called every Tick.; ActivateMenu	(1+3) Activate Menu ID in W; SetupTask	(0+1) Setup for the task in W; ScrollMenuStop	(1+0) Stop the scroll menu and clear the line; ScrollMenuStart	(1+2) Setup to scroll the str ptr W;;============================================================================================;	ifndef SM_LineNumSM_LineNum	EQU	0x01	; 2nd line	endif;	ifndef SM_LastChrSM_LastChr	EQU	0x0F	; Max X value	endif;;SM_ScrolTimeMask	EQU	0x03;SM_ScrolTime	EQU	0x02	; 2 20thsSM_ScrolTimeMask	EQU	0x07SM_ScrolTime	EQU	0x04	; 4 20ths;;;;============================================================================================;Scroll any string. Called every Tick.;; Enrty: ScrollMenuStrPtr<>0, ScrollMenuCurChr, a 0x00 terminated string at evScrollStr; Exit: ScrollMenuCurChr++ wrapped by SM_LastChr; RAM used: Param75, Param77, Param78, Param79, Param7A, Param7B, Param7D, Param7F; Calls: (1+2) lcd_gotoxy_NC, SRAM_ReadPI, DisplaysW;ScrollStringIdle	mBank3	MOVF	ScrollStringStrPtr,W	SKPNZ		;ScrollMenuStrPtr=0?	GOTO	SSI_bank0_Rtn	;Yes;	MOVF	ScrollStringLine,W	;goto beginning of line	MOVWF	Param78	; w/o clearing it	MOVF	ScrollStrCurChr,W	MOVWF	Param7D	;Char offset;	mBank0	MOVF	tickcount,W	ANDLW	SM_ScrolTimeMask	SUBLW	SM_ScrolTime		SKPZ	RETURN;	CLRW	CALL	lcd_gotoxy_NC;	MOVLW	SM_LastChr+1	MOVWF	Param77	;Chars to print;SSI_SetSRAM	mBank3	MOVLW	high evScrollStr	MOVWF	SRAM_Addr2	;0x01	MOVLW	low evScrollStr	MOVWF	SRAM_Addr1	MOVF	Param7D,W	MOVWF	SRAM_Addr0,F;		SSI_L1	CALL	SRAM_ReadPI	IORLW	0x00	SKPNZ	GOTO	SSI_EndOfStr	CALL	DisplaysW	;Display the Char	INCF	Param7D,F	DECFSZ	Param77,F	GOTO	SSI_L1	mBank3	INCF	ScrollStrCurChr,FSSI_bank0_Rtn	mBank0	RETURN;SSI_EndOfStr	CLRF	Param7D	MOVLW	SM_LastChr+1	;Param77==SM_LastChr+1?	SUBWF	Param77,W	mBank3	SKPNZ	CLRF	ScrollStrCurChr	;Yes	GOTO	SSI_SetSRAM	;No;;============================================================================================;Scroll the active menu's text (ScrollMenuStrPtr). Called every Tick.;; Enrty: ScrollMenuStrPtr<>0, ScrollMenuCurChr, Bank0 selected; Exit: ScrollMenuCurChr++ wrapped by SM_LastChr; RAM used: Param75, Param77, Param78, Param79, Param7A, Param7B, Param7D, Param7F; Calls: (1+2) lcd_gotoxy_NC, StringDispatch, DisplaysW;ScrollMenuIdle	MOVLW	SM_LineNum	;goto beginning of line	MOVWF	Param78	; w/o clearing it	MOVF	ScrollMenuStrPtr,W	SKPNZ		;ScrollMenuStrPtr=0?	RETURN		;Yes;	MOVWF	Param7F	;Str Ptr;	MOVF	tickcount,W	ANDLW	SM_ScrolTimeMask	SUBLW	SM_ScrolTime		SKPZ	RETURN;	CLRW	CALL	lcd_gotoxy_NC;	MOVLW	SM_LastChr+1	MOVWF	Param77	;Chars to print	MOVF	ScrollMenuCurChr,W	MOVWF	Param7D	;Char offsetSMI_L1	CALL	StringDispatch	IORLW	0x00	SKPNZ	GOTO	SMI_EndOfStr	CALL	DisplaysW	;Display the Char	INCF	Param7D,F	DECFSZ	Param77,F	GOTO	SMI_L1	INCF	ScrollMenuCurChr,F	RETURN;SMI_EndOfStr	CLRF	Param7D	MOVLW	SM_LastChr+1	;Param77==SM_LastChr+1?	SUBWF	Param77,W	SKPNZ	CLRF	ScrollMenuCurChr	;Yes	GOTO	SMI_L1	;No;;;;===================================================================================; Activate Menu ID in W; Show menu title on line 0;; Entry: W=MenuID; Exit: none; RAM used: Param78, Param79, Param7A, Param7B, Param7C, Param7D, Param7F; Calls: (1+3) lcd_GotoLineW, SRAM_Read, PrintString, ScrollMenuStart, SetKeyMask;ActivateMenu	MOVWF	Param7C	mBank2	MOVWF	CurrentMenu	CLRF	ModlessTaskID	;default to task 0	CLRW	CALL	lcd_GotoLineW	mBank3	CLRF	ScrollStringStrPtr	MOVLW	MainMenuTitleSPtr	;Display menu title	ADDWF	Param7C,W	CALL	SRAM_ReadDR	CALL	PrintString;		mBank3	MOVLW	MainMenuStrPtr	;setup to scroll text	ADDWF	Param7C,W	CALL	SRAM_ReadDR	CALL	ScrollMenuStart;	CLRC	RLF	Param7C,W	BSF	PCLATH,4	;segment 2	GOTO	SetKeyMask; ;============================================================================================; Setup for the task in W;; Enrty: none; Exit: ScrollMenuStrPtr=0; RAM used: Param75, Param78, Param79, Param7A, Param7B, Param7D, Param7F; Calls: (1+0) lcd_GotoLineW;SetupTask	mBank2	MOVWF	ModlessTaskID	BSF	CurrentMenu,7	;Decativate menu;; Fall through to ScrollMenuStop;============================================================================================;Stop the scroll menu and clear the line;; Enrty: none; Exit: ScrollMenuStrPtr=0; RAM used: Param75, Param78, Param79, Param7A, Param7B, Param7D, Param7F; Calls: (1+0) lcd_GotoLineW; ;ScrollMenuStop	CLRW;; Fall through to ScrollMenuStart;===========================================================================================;Setup to scroll the str ptr W;; Enrty: none; Exit: none; RAM used: Param75, Param78, Param79, Param7A, Param7B, Param7D, Param7F; Calls: (1+2) lcd_GotoLineW, PrintString;ScrollMenuStart	mBank3	CLRF	ScrollStrCurChr	CLRF	ScrollStringLine	mBank0	MOVWF	ScrollMenuStrPtr	CLRF	ScrollMenuCurChr		MOVLW	SM_LineNum	CALL	lcd_GotoLineW	MOVF	ScrollMenuStrPtr,W	BTFSC	STATUS,Z	;Ptr=0?	RETURN		;Yes, Stop	INCF	ScrollMenuCurChr,F	GOTO	PrintString;;;;;;;;;;;;;;;;;