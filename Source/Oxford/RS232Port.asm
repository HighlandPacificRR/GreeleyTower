	subtitle	"RS232Port.asm"	Page;===========================================================================================;;  File Name: RS232Port.asm;  Date: 5/7/2006;  File Version: 1.0.2;; Author: David M. Flynn; Company: Oxford V.U.E., Inc.;;===========================================================================================; Notes:;;  This file contains a general purpose routine that should be in NICStuff.asm;  but did not fit.;  This is the handler for the TCPRS232Port and is called by tcp_handler;;============================================================================================; Revision History;; 1.0.2  5/7/2006	Vars were moved to Bank3; 1.0    4/4/2003	First Code;;============================================================================================;;Routines in segment 0; Name	(additional stack words required) Description;============================================================================================;;RS232Port_handler	(1+?) Handler for the TCPRS232Port Port;;============================================================================================;; Handler for the TCPRS232Port Port;  if length is zero then send bytes from evRS232InBuff and ACK;  if length is greater than zero (1..255) then write this data to evRS232OutBuff and ;    send bytes from evRS232InBuff and ACK;; Entry: next NIC byte to read is first byte of TCP segment's data field; Exit:; RAM used: Param78, Param79, Param7A; Calls:(1+ ) getch_net, SRAM_Write, SRAM_NextAddr, setnic_addr, putnic_checkbyte,;	SRAM_Read;RS232Port_handler	CALL	getch_net_D18	; get the len byte	MOVWF	Param7A;	BTFSC	atend	RETURN		; bad data, too short;; if length of data is 0x00 goto RS232Port_Read	MOVF	Param7A,W	SKPNZ	GOTO	RS232Port_Read;; read Param7A bytes of data into SRAM;RS232Port_handler_L1	CALL	getch_net_D18	; get the next data byte	BTFSC	atend	RETURN		; bad data, too short	mCall3To0	PutRS232Chr;	DECFSZ	Param7A,F	GOTO	RS232Port_handler_L1;; Read bytes of data into buffer;; Send data to nic buffer, calc checksum ; 301 bytes max (IPHDR_LEN+TCPHDR_LEN+lenByte+Address+256 Data)RS232Port_Read	mCall3To1	Std_TCP_Setup;	MOVLW	IPHDR_LEN+TCPHDR_LEN	;txin = IPHDR_LEN + TCPHDR_LEN;	MOVWF	txin;;;Move length to NIC buffer	mBank3	MOVF	rsInBuffCount,W;	MOVLW	0x01	;tc	MOVWF	Param7A	CALL	putnic_checkbyte_D18	MOVF	Param7A,F	SKPNZ	GOTO	RS232Port_End;RS232Port_handler_L2	mCall3To0	GetRS232Chr;	MOVLW	'.	;tc	CALL	putnic_checkbyte_D18	DECFSZ	Param7A,F	GOTO	RS232Port_handler_L2;;RS232Port_End	MOVLW	TFIN+TACK+TPUSH	; tflags  Ack & close & Push	MOVWF	tflags	MOVF	checkhi,W	; d_checkhi = checkhi   Save checksum 	MOVWF	d_checkhi	MOVF	checklo,W	; d_checklo = checklo	MOVWF	d_checklo;	BCF	PCLATH,4	GOTO	tcp_xmit	; ..do it;;;;;;