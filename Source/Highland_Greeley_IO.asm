	subtitle	"Highland Greeley.ASM"	page;===========================================================================================;;  FileName: Highland Greeley.ASM;  Date: 9/18/04;  File Version: 2.0;  ;  Author: David M. Flynn;  Company: Oxford V.U.E., Inc.;;============================================================================================; Notes:;;  This file is the main loop for Highlad Greeley;;============================================================================================; Revision History;; 2.0     9/18/04	Start of conversion from 6502;;============================================================================================; Conditionals;;============================================================================================;; Name	(additional stack words required) Description;================================================================================================;DoDMFEIO	Called by main loop;GETBTN	Test for a user button press;DoBtn	Process a user button;StorBtn	Store the button number;FindRTNum	compare RTBtn1..5 with Rout Select Table;DoTest	Turn off outputs 0/0/0..127 - 0/1/0..127;SORTBTNS	Sort the buttons RTBtn1..RTBtn4;GetBST_Y	Get a value from the Button Sort Table;ClearSMLeds	SM FEEDBACK LEDS;;in SMTable each Byte represents one Switch Machine; bit0 = Has been sent to TCC Com I/O; bit1 = unused; bit2 = unused; bit3 = unused; bit4 = unused; bit5 = Feed Back; bit6 = Command if 1 then bit 7 will also be 1; bit7 = Control;;SMControlMask	EQU	0x7F;SMFBMask	EQU	0xDF;SMChangedMask	EQU	0xFE;SMCnFMask	EQU	0xA0;SMCMDMask	EQU	0x40;InputC_D10	mCall2To3	InputC	RETURNOutputC_D10	mCall2To3	OutputC	RETURNInputB_D10	mCall2To3	InputB	RETURNOutputB_D10	mCall2To3	OutputB	RETURNInputA_D10	mCall2To3	InputA	RETURNOutputA_D10	mCall2To3	OutputA	RETURN;	if UsesSpeakerCLICK_D10	mCall2To3	CLICK	RETURN;Beep_D10	mCall2To3	Beep	RETURN	endif;;Push_D10	mCall2To0	Push;	mBank3;	RETURNPop_D10	mCall2To0	Pop	mBank3	RETURN;;CONSTANTS ******************************************;kMaxRetry	EQU	0x05;LastSMNumber	EQU	0x0002EastBound	EQU	0x40WestBound	EQU	0x20;Cab1Mask	EQU	0x10Cab2Mask	EQU	0x08Cab3Mask	EQU	0x04Cab4Mask	EQU	0x02Cab5Mask	EQU	0x01Cab1InvertMask	EQU	0x0FCab2InvertMask	EQU	0x17Cab3InvertMask	EQU	0x1BCab4InvertMask	EQU	0x1DCab5InvertMask	EQU	0x1E;;=============================================================;         ********** MAIN ***********;=============================================================;; Calls:(1+) ;DoDMFEIO		if UsePsuedoReset	BTFSS	PORTA,3	GOTO	Main	endif;;	mBank3	BTFSS	UDP_DataReceived	;Has any data arrived?	GOTO	MainLoop_E2	; No	BCF	UDP_DataReceived;	include RecBlkPwr.inc;;======================================================================================; Enters here when no UDP packet was received;MainLoop_E2	mBank3;	if UsesSpeaker; turn off beeper	BTFSS	BeepOn	GOTO	MainLoop_1	MOVF	BeepTimer,F	SKPZ	GOTO	MainLoop_1	BCF	BeepOn	MOVLW	low SPKR	;#<SPKR or / =Low byte	MOVWF	CurBlk	MOVLW	high SPKR	;#>SPKR or mod =Hi byte	MOVWF	CurBlk+1	BCF	OActive,7	CALL	OutputB_D10;	endif;MainLoop_1	mCall2To0	SyncBlkPwr	;kill old 0x00 block cmds	mCall2To0	SyncSMs	;kill Valid bits if Cmd = Ctrl;		mBank0	BTFSC	ServiceMode	GOTO	DoDMFEIO_RTN;;	mBank3	CALL	GETBTN	IORLW	0x00	; rgm: ?	SKPNZ	GOTO	GETEVNT1	GOTO	DoBtnDoBtn_RTN;GETEVNT1	mCall2To3	DETECT;;===================================;SET RDY LEDS;	MOVLW	low LocalReady		MOVWF	CurBlk	MOVLW	high LocalReady	MOVWF	CurBlk+1	CLRF	OActive	;Default to off	BTFSC	RSIP	;Route select in progress?	GOTO	ML4A	; Yes	BTFSC	LEDLocalReady	BSF	OActive,7ML4A	CALL	OutputB_D10;	MOVLW	low MainlineReady	MOVWF	CurBlk	MOVLW	high MainlineReady	MOVWF	CurBlk+1	CLRF	OActive	;Default to off	BTFSC	RSIP	;Route select in progress?	GOTO	ML5A	; Yes	BTFSC	LEDMainlineReady	BSF	OActive,7ML5A	CALL	OutputB_D10	GOTO	DoDMFEIO_RTN;;;====================================================================================; Test for a user button press;; Entry: none; Exit: W=0x00 or btn number; RAM Used:; Calls:() InputB_D10, CLICK;GETBTN	MOVFW	BtnTemp		MOVWF	CurBlk	MOVFW	BtnTemp+1	MOVWF	CurBlk+1GETBTN1	CALL	InputB_D10	BTFSS	IActive,7	;Active?	GOTO	GETBTN2	; no	MOVF	CurBlk,W	SUBWF	LastBtn,W	;debounce	SKPNZ	GOTO	GETBTN4		MOVF	CurBlk,W	MOVWF	LastBtn;	if UsesSpeaker	CALL	CLICK_D10	endif;	MOVF	LastBtn,W	IORLW	0x80	;good Btn set hi bit	MOVWF	Param78	RETURN;GETBTN2	MOVF	CurBlk,W	SUBWF	LastBtn,W	;clr debounce if that	SKPZ	GOTO	GETBTN4	; was it	MOVLW	0xFF	MOVWF	LastBtnGETBTN4	DECF	BtnTemp,F	;Next button	BTFSS	BtnTemp,7	GOTO	GETBTN3	MOVLW	0x3F	MOVWF	BtnTempGETBTN3	CLRF	Param78	RETLW	0x00;;=======================================================================================; Process a user button;; Entry: W=Btn number; Exit: none; RAM Used:; Calls:(1+7) StorBtn, SORTBTNS, FindRTNum, SetMLRoute, ClearRTBtns, DoMLUnable,;	SetLocalRoute(7), DoLocalUnable ;DoBtn	ANDLW	0x3F	MOVWF	Param78;tc;	MOVWF	Param7A;	CALL	Disp_Hex_Byte_D10;	mBank3;	MOVF	Param7A,W;	MOVWF	Param78;etc	SUBLW	MLEnterBtn	SKPZ	GOTO	DoBtn2;Enter (Main Line)	CALL	StorBtn	CALL	SORTBTNS	CALL	FindRTNum	IORLW	0x00	SKPNZ		;Valid route?	GOTO	DoBtn_1	; No	GOTO	SetMLRoute;DoBtn_1	CALL	DoMLUnable	GOTO	SetMLRoute_RTN;;ENTER (LOCAL)	DoBtn2	MOVF	Param78,W	SUBLW	LocalEnterBtn	SKPZ	GOTO	DoBtn3;	CALL	StorBtn	CALL	SORTBTNS	CALL	FindRTNum;tc;	MOVWF	Param7A;	CALL	Disp_Hex_Byte_D10;	mBank3;	MOVF	Param7A,W;	MOVWF	Param78;etc	IORLW	0x00	SKPNZ		;Valid route?	GOTO	DoBtn2_1	; No	GOTO	SetLocalRoute;DoBtn2_1	CALL	DoLocalUnableSetMLRoute_RTNSetLocalRoute_RTNDoBtn2_2	CALL	ClearRTBtns	GOTO	DoBtn_RTN;;;Clear (Main Line)DoBtn3	MOVF	Param78,W	SUBLW	MLClearBtn	SKPZ	GOTO	DoBtn4;	MOVLW	MLEnterBtn	CALL	StorBtn	CALL	SORTBTNS	CALL	FindRTNum	MOVWF	Param78	MOVF	Param78,F	SKPZ	GOTO	DoBtn3_1		MOVF	OML1,W		CALL	ClrRT	MOVFW	OML2		CALL	ClrRT	MOVF	OML3,W	CALL	ClrRT	CLRF	OML1	CLRF	OML2	CLRF	OML3;	if UsesSpeaker	CALL	Beep_D10	endif;	GOTO	DoBtn2_2;DoBtn3_1	CLRF	YReg	MOVF	Param78,W	SUBWF	OML3,W	SKPZ	GOTO	DoBtn3_2		MOVFW	YReg	MOVWF	OML3	CALL	ClrRT	GOTO	DoBtn2_2;DoBtn3_2	MOVF	Param78,W	SUBWF	OML2,W	SKPZ	GOTO	DoBtn3_3		MOVFW	YReg	MOVWF	OML2	CALL	ClrRT	GOTO	DoBtn2_2;DoBtn3_3	MOVF	Param78,W	SUBWF	OML1,W	SKPZ	GOTO	DoBtn3_4	MOVFW	YReg	MOVWF	OML1	CALL	ClrRT	GOTO	DoBtn2_2;DoBtn3_4	CALL	DoMLUnable	GOTO	DoBtn2_2;;Clear (Local)DoBtn4	MOVF	Param78,W		SUBLW	LocalClearBtn		SKPZ	GOTO	DoBtn5;	MOVF	OLOC,W	CLRF	OLOC	CALL	ClrRT	GOTO	DoBtn2_2;DoBtn5	MOVF	Param78,W	SUBLW	TestBtn	SKPNZ	GOTO	DoTest	CALL	StorBtn	GOTO	DoBtn_RTN	;	;;==================================================================================; Store the button number;; Entry: Param78=BtnNum; Exit:;StorBtn	MOVLW	RTBtn1-1	MOVWF	FSR	BSF	_IRP	CLRF	Param79StorBtn_1	INCF	FSR,F	BTFSC	INDF,7	GOTO	StorBtn1	INCF	Param79,F	MOVF	Param79,W	SUBLW	kLastRTBtn	SKPZ	GOTO	StorBtn_1;StorBtn1	MOVF	Param78,W	MOVWF	INDF	BSF	RSIP	;set route select in process flag;	BTFSS	LEDMainlineUnable	;kill unable LEDs	GOTO	StorBtn_2	MOVLW	low MainlineUnable	MOVWF	CurBlk	MOVLW	high MainlineUnable	MOVWF	CurBlk+1	CLRF	OActive	BCF	LEDMainlineUnable	CALL	OutputB_D10;	StorBtn_2	BTFSS	LEDLocalUnable	RETURN	MOVLW	low LocalUnable	MOVWF	CurBlk	MOVLW	high LocalUnable	MOVWF	CurBlk+1	CLRF	OActive	BCF	LEDLocalUnable	GOTO	OutputB_D10;;======================================================================================; Clear the Route buttons;; Calls:() FindAllUsedSMs, ClearSMLeds, SetSMLeds;ClearRTBtns	MOVLW	0x80	MOVWF	RTBtn1	MOVWF	RTBtn2	MOVWF	RTBtn3	MOVWF	RTBtn4	BCF	RSIP	CALL	FindAllUsedSMs	CALL	ClearSMLeds	mCall2To3	SetSMLeds	RETURN;======================================================================================;compare RTBtn1..5 with Rout Select Table;return Acc=0 or Acc=RtNum;FindRTNum	MOVLW	RTBtn1	MOVWF	FSR	BSF	_IRP	CLRF	YReg	MOVLW	low RouteSelectTable	MOVWF	RTTemp	MOVLW	high RouteSelectTable	MOVWF	RTTemp+1FindRTNum_L1	CALL	GetRTTempY	SUBWF	INDF,W	SKPZ	GOTO	FindRTNum3	;not IT	INCF	FSR,F	INCF	YReg,F	MOVF	YReg,W	SUBLW	kLastRTBtn	SKPZ	GOTO	FindRTNum_L1	CALL	GetRTTempY	;Found IT	RETURN;FindRTNum3	MOVLW	RTBtn1	MOVWF	FSR	CLRF	YReg	MOVLW	0x05	;bytes per table entry	ADDWF	RTTemp,F	ADDCF	RTTemp+1,F;	CALL	GetRTTempY	IORLW	0x00	SKPZ	GOTO	FindRTNum_L1	RETURN;;==========================================================================================; Turn off outputs 0/0/0..127 - 0/1/0..127;DoTest	CLRF	CurBlk	;IO Address 0x0000	CLRF	CurBlk+1	BSF	OActive,7	;Set outputDoTest_L1	CALL	OutputB_D10	INCF	CurBlk,F	BTFSS	CurBlk,7	;All of Slot 0 Bd X?	GOTO	DoTest_L1	; No	CLRF	CurBlk	INCF	CurBlk+1,F	;Board 1	BTFSS	CurBlk+1,1	;Board 2?	GOTO	DoTest_L1	; No;DoTest2	CALL	GETBTN	MOVF	Param78,W	SKPNZ	GOTO	DoTest2	ANDLW	0x3F	;Button mask	MOVWF	Param78	;may want to use later	SUBLW	TestBtn	;Compare w/ test button	SKPNZ		;TestBtn?	GOTO	DoTest3	; Yes	GOTO	DoTest2	;ALWAYS;DoTest3	GOTO	Main;;===================================================================================================; Sort the buttons RTBtn1..RTBtn4;SORTBTNS	BTFSC	RTBtn2,7	RETURN		;NO SORT IF ONE OR LESS BTNS;	BSF	_IRP	MOVLW	kLastRTBtn-1	;RTBtn4	MOVWF	XReg; Find last used buttonSBTNS_L1	CALL	Get_RTBtn1_X	BTFSS	INDF,7	GOTO	SBTNS2	DECF	XReg,F	GOTO	SBTNS_L1;SBTNS2	DECF	XReg,W	MOVWF	RTTemp	;0..2 OR RTBtn1..RTBtn3SBTNS5	CLRF	XRegSBTNS4	CALL	Get_RTBtn1_X	MOVWF	YReg	CALL	GetBST_Y	IORLW	0x00	SKPNZ	GOTO	SBTNS3	;IF RTBtnn = 0 THEN next;	MOVWF	Param79	; ELSE IF RTBtnn+1<RTBtnn	CALL	Get_RTBtn2_X	MOVWF	YReg	;RTBtn(XReg+1)	CALL	GetBST_Y	MOVWF	Param78	MOVF	Param79,W	SUBWF	Param78,W	;  W = RTBtn(XReg+1)-RTBtn(XReg)	BC	SBTNS3	;  if RTBtnn <= RTBtnn+1 don't swap;; Swap RTBtn(XReg)<>RTBtn(XReg+1)	CALL	Get_RTBtn1_X	MOVWF	Param78	;Param78=RTBtn(XReg)	INCF	FSR,F	MOVF	INDF,W	;W=RTBtn(XReg+1)	DECF	FSR,F	MOVWF	INDF	;RTBtn(XReg)=W	INCF	FSR,F	MOVF	Param78,W	MOVWF	INDF	;RTBtn(XReg+1)=Param78	GOTO	SBTNS5	; START OVER;; Next;SBTNS3	MOVF	XReg,W	SUBWF	RTTemp,W	SKPNZ	RETURN	INCF	XReg,F	GOTO	SBTNS4;;=====================;Get_RTBtn1_X	MOVF	XReg,W		ADDLW	RTBtn1Get_RTBtn1_X_1	MOVWF	FSR	MOVF	INDF,W	RETURN;Get_RTBtn2_X	MOVF	XReg,W		ADDLW	RTBtn2	GOTO	Get_RTBtn1_X_1;;====================================================================================================; Get a value from the Button Sort Table;GetBST_Y	MOVLW	high BST	ADDLW	low evDataROM	MOVWF	SRAM_Addr1	MOVLW	low BST	ADDWF	YReg,W	MOVWF	SRAM_Addr0	ADDCF	SRAM_Addr1,F	GOTO	GetGet_Read_D10;;;==================================================================================================;  SM FEEDBACK LEDS;SMBits was set by command interp.;ClearSMLeds	MOVLW	SMCount	;for SMTemp=47 downto 0 do	MOVWF	SMTempClearSMLeds_1	MOVFW	SMTemp	CALL	SMToPTR	CLRF	OActive	MOVLW	SMLEDA	MOVWF	YReg		CALL	OutputA_D10	MOVLW	SMLEDB	MOVWF	YReg		CALL	OutputA_D10	DECF	SMTemp,F	SKPZ	GOTO	ClearSMLeds_1	RETURN;;;;