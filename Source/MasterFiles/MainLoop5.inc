;===========================================================================================; Set SMs based on block power selections;; If Root Block and Normal Blocks are powered by the same cab turn SM's OFF; else if Root and Reverse Blocks are powered by the same cab turn SM's ON; else if Root is powered by a different cab than Reverse block turn SM's ON; else if neither Root or Reverce Blocks are powered and RevBlkRegFlag turn SM's OFF;; Entry:SMDispPtr>>MLSMData; Exit: SMDispPtr unchanged, (Param75,Param76,Param77 Cab#'s for Root, Norm, Rev blocks); RAM used: XReg, YReg, Param74, Param78, Param79, Param7A, Param7C; Calls:;MainLoop5	CLRF	Param75	;Root blk's cab	CLRF	Param76	;Normal blk's cab	CLRF	Param77	;Reverse blk's cab	MOVLW	Param75	MOVWF	FSR;	MOVLW	SMRootBlk	MOVWF	YRegML5_BlkCab_L1	CALL	GetSMDispPtrY_D10	BTFSC	Param78,7	;<128? Is there a Root?	GOTO	ML5_BlkCab_Next	; No	MOVWF	XReg	CALL	GetCabNumX_D10	;returns W=0..9, Z	MOVWF	INDF	BSF	INDF,7	; Yes, this block exists;ML5_BlkCab_Next	INCF	FSR,F	INCF	YReg,F	INCF	YReg,F	MOVLW	SMRevBlk+2	SUBWF	YReg,W	SKPZ	GOTO	ML5_BlkCab_L1;;	if UsesAutoSMCtrl; If we don't control this section then MainLoop5_SMLEDs;	MOVLW	SMEnable+1	MOVWF	YReg	;MSB of SMEnable	CALL	GetSMDispPtrY_D10	BTFSC	Param78,7	;Valid psuedo SM?	GOTO	MainLoop5_NoEnable	; No;	MOVWF	Param74	;Save for later	DECF	YReg,F	; SMEnable (LSB)	CALL	GetSMDispPtrY_D10	; a psuedo SM in SMTableHigh	MOVWF	XReg	CALL	GetSMTableHighX_D10	MOVLW	0x80	BTFSC	Param74,6	;Invert bit?	XORWF	Param78,F	; Yes	BTFSS	Param78,7	;We have this section?	GOTO	MainLoop5_SMLEDs	; No, Just do LEDs;;Check for a toggle switchMainLoop5_NoEnable	MOVLW	SMToggle+1	MOVWF	YReg	CALL	GetSMDispPtrY_D10	;MSB of Toggle input	MOVWF	Param74	;Save for later	BTFSC	Param78,7	;Has a toggle SW?	GOTO	MainLoop5_AutoSet	; No, no toggle sw			;High Byte of Toggle input			; decodes as:			; NotUsedFlag, InvertFlag, Slot1, Slot0,			; not used, Bd2, Bd1, Bd0	DECF	YReg,F	MOVF	SMDispPtr,W	MOVWF	CurSM	MOVF	SMDispPtr+1,W	MOVWF	CurSM+1	CALL	InputC_D10	;Read Toggle SW, (CurSM),Y;	MOVLW	0x80	BTFSC	Param74,6	;Invert Flag?	XORWF	IActive,F	;Invert Value as needed;		BTFSS	IActive,7	GOTO	MainLoop5_SMOFF	;disable this sm	GOTO	MainLoop5_SMON;;	;--------------------------------------------;MainLoop5_AutoSet	BTFSS	Param75,7	;Is there a Root?	GOTO	MainLoop5_SMLEDs	; No	MOVLW	0x0F	ANDWF	Param75,W	;SMRootBlk Cab	SKPNZ		;any cab on?	GOTO	MainLoop5_RNP	; No, root block not pwrd;; Get Normal Block's power;	MOVLW	0x0F	ANDWF	Param76,W	;NormBlk, returns W=0..9, Z	SKPNZ		;any cab on?	GOTO	MainLoop5_1	; No, Check the reverse block;; If Root and Normal Blocks share the same cab turn off SMs;	MOVF	Param76,W	;Normal block's cab	SUBWF	Param75,W	;Root block's cab	SKPNZ		;Same Cab On?	GOTO	MainLoop5_SMOFF	; Yes, turn off SMs;; Get Reverse Block's power;MainLoop5_1	MOVF	Param77,W	;Reverse Block, returns W=0..9, Z	ANDLW	0x0F	SKPNZ		;any cab on?	GOTO	MainLoop5_TRBR	; No, Skip it;; If Root and Reverse Blocks share the same cab turn on SMs;	MOVF	Param77,W	;Rev block's cab	SUBWF	Param75,W	;Root block's cab	SKPZ		;Same Cab On?	GOTO	MainLoop5_SMLEDs	; No;MainLoop5_SMON	MOVLW	SMCMDMask	;SM CMD Bit	GOTO	MainLoop5_SM_E2MainLoop5_SMOFF	CLRW		; No, SM CMD BitMainLoop5_SM_E2	MOVWF	Param7C	MOVLW	SMNumOff+1	; First SM	MOVWF	YReg;MainLoop5_SM_L1	CALL	GetSMDispPtrY_D10	;MSB of SM#	DECF	YReg,F	;YReg>>LSB of SM#	BTFSC	Param78,7	;Valid SM#?	GOTO	MainLoop5_SM_Next	; No	MOVWF	Param79	;Save MSB of SM#	CALL	GetSMDispPtrY_D10	;Get LSB of SM	CALL	DoSMSetMainLoop5_SM_Next	MOVLW	0x03	ADDWF	YReg,F	;point to MSB of next SM 	MOVLW	SMNum3Off+3	SUBWF	YReg,W	SKPZ	GOTO	MainLoop5_SM_L1;	endif		;UsesAutoSMCtrl=1;;======================================================================================================; Set SM LEDs;; Entry:SMDispPtr>>MLSMData (Param75,Param76,Param77 Cab#'s for Root, Norm, Rev blocks); Exit: SMDispPtr++, ; RAM used: XReg, YReg, Param74, Param75, Param78, Param79; Calls: GetSMDispPtrY, GetSMDataSMDispY, GetCabNumX;MainLoop5_SMLEDs	MOVLW	SMFlagsWord	MOVWF	YReg	CALL	GetSMDispPtrY_D10	MOVWF	Param74	;save flags for later;;	GOTO	MainLoop5_Next	;tc;	if LightUnusedSMLEDs	else;if any cab has any block (Root, Norm or Rev) light the lights	MOVF	Param75,W	;Root blk's cab	IORWF	Param76,W	;Norm blk's cab	IORWF	Param77,W	;Rev blk's cab	ANDLW	0x0F	SKPZ	GOTO	ML5_SMLEDs_LU_ON	CLRF	Param74	BCF	OActive,7	GOTO	MainLoop5_SMLEDs_5;ML5_SMLEDs_LU_ON	endif;	MOVLW	SMNumOff+1	;High Byte of Address	CALL	GetSMDataSMDispY	; Get SM Data	BCF	OActive,7	BTFSC	Param78,7	;SM is ON? Conrol Bit	BSF	OActive,7	; Yes, LEDs On;; The SM2InvFlag and SM2ReqFlag are only used for Zone control psuedo SMs;	BTFSS	Param74,SM2InvFlag	GOTO	MainLoop5_SMLEDs_3	BTFSC	Param74,SM2ReqFlag	GOTO	MainLoop5_SMLEDs_6; if 2nd SM is on invert the bit	MOVLW	SMNum2Off+1	;High Byte of Address	CALL	GetSMDataSMDispY	; Get SM Data	MOVLW	0x80	BTFSC	Param78,7	;SM2 is ON?	XORWF	OActive,F	; Yes, Invert the bit	GOTO	MainLoop5_SMLEDs_5;; 2nd SM also requiredMainLoop5_SMLEDs_3	BTFSS	Param74,SM2ReqFlag	;Second SM required?	GOTO	MainLoop5_SMLEDs_5	; No	MOVLW	SMNum2Off+1	;High Byte of Address	CALL	GetSMDataSMDispY	; Get SM Data	BTFSS	Param78,7	;SM2 is ON?	BCF	OActive,7	; No	GOTO	MainLoop5_SMLEDs_5;; Inverted 2nd SM RequiredMainLoop5_SMLEDs_6	MOVLW	SMNum2Off+1	;High Byte of Address	CALL	GetSMDataSMDispY	; Get SM Data	MOVLW	0x80	BTFSC	Param78,7	;SM2 is ON?	BSF	OActive,7	; No;MainLoop5_SMLEDs_5	MOVLW	SMLamp+1	;First SM LEDMainLoop5_SMLEDs_L1	MOVWF	YReg	CALL	GetSMDispPtrY_D10	;Block #	DECF	YReg,F	;point to output# SMLamp or SMLamp2	BTFSC	Param78,7	;Valid Block# or Output?	GOTO	MainLoop5_SMLEDs_4	; No;	BTFSC	Param74,SMLampIsOBFlag	;Output Board or Block Module?	GOTO	ML5_SMLEDs_OB	; Output Board;	MOVWF	XReg	;Put Block# in XReg	CALL	RestoreBlkModBits	;Move the block's LED bits into ram.	CALL	GetSMDispPtrY_D10	;Bit#	mCall2To3	SetBlockModuleLED;;	GOTO	MainLoop5_SMLEDs_4;; This SMs lamps are connected to an output boardML5_SMLEDs_OB	MOVF	SMDispPtr,W	MOVWF	CurSM	MOVF	SMDispPtr+1,W	MOVWF	CurSM+1	CALL	OutputC_D10	;(CurSM),Y;MainLoop5_SMLEDs_4	MOVLW	SMLamp2	SUBWF	YReg,W	SKPNZ	GOTO	MainLoop5_SMLEDs_2;	MOVLW	SMLamp2+1	BTFSS	Param74,SML2InvFlag	GOTO	MainLoop5_SMLEDs_L1	MOVLW	0x80	XORWF	OActive,F	MOVLW	SMLamp2+1	GOTO	MainLoop5_SMLEDs_L1;MainLoop5_SMLEDs_2	;;==================================================;MainLoop5_Next	CLRF	YReg	MOVLW	SMAddBlk	ADDWF	SMDispPtr,F	ADDCF	SMDispPtr+1,F	CALL	GetSMDispPtrY_D10	SUBLW	EOD	SKPZ	RETURN;	MOVLW	low MLSM1	MOVWF	SMDispPtr	MOVLW	high MLSM1	ADDLW	low evDataROM	MOVWF	SMDispPtr+1	RETURN;	if UsesAutoSMCtrl; Turn off SMs if Root and Reverse blocks are not used by any cabMainLoop5_RNP	MOVLW	SMFlagsWord	MOVWF	YReg	CALL	GetSMDispPtrY_D10	BTFSC	Param78,RootCabReqFlag	;Is the root blk req?	GOTO	MainLoop5_SMLEDs	; Yes, Skip it	MOVF	Param75,W	;Root	IORWF	Param77,W	;Rev	ANDLW	0x0F	SKPZ		;any cab on?	GOTO	MainLoop5_SMLEDs	; Yes, Skip it	GOTO	MainLoop5_SMOFF	; No, turn off SMs;MainLoop5_TRBR	MOVLW	SMFlagsWord	MOVWF	YReg	CALL	GetSMDispPtrY_D10	BTFSS	Param78,RevBlkReqFlag	GOTO	MainLoop5_SMLEDs	GOTO	MainLoop5_SMOFF;;=======================================================================================; Entry:W= SM #, Param79=MSB of SM#, Param7C=SMCMDMask or 0x00;DoSMSet	MOVWF	XReg	BTFSS	Param79,0	;High SM?	CALL	GetSMTableX_D10	; No	BTFSC	Param79,0	;High SM?	CALL	GetSMTableHighX_D10	; Yes	ANDLW	SMCnFMask	;Keep CMD and FB bits	IORWF	Param7C,W	;Combine w/ Ctrl bit	IORLW	b'00000001'	;Set Valid Data Flag	MOVWF	Param78	ANDLW	0xC0	;Ctrl and Cmd	SKPNZ		;Both off?	RETURN		; Yes	XORLW	0xC0	;Ctrl and Cmd	SKPNZ		;Both on?	RETURN		; Yes	MOVF	Param78,W	BTFSS	Param79,0	;High SM?	BSF	SMTableLowChngFlag	; No	BTFSC	Param79,0	;High SM?	BSF	SMTableHiChngFlag	; No	BTFSS	Param79,0	;High SM?	GOTO	SetSMTableX_D10	; No	GOTO	SetSMTableHighX_D10	; Yes;	endif;; Entry: W=ptr to MSB of SM#; Exit: W & Param78 SM Data or None(test Param78,1 = 1 if None);       Param79:XReg = SM#;GetSMDataSMDispY	MOVWF	YReg	CALL	GetSMDispPtrY_D10	;MSB of SM#	BTFSC	Param78,7	;None?	RETURN		; No It's not valid	MOVWF	Param79	DECF	YReg,F	CALL	GetSMDispPtrY_D10	;LSB of SM#	MOVWF	XReg	BTFSS	Param79,0	;High SM?	GOTO	GetSMTableX_D10	; No	GOTO	GetSMTableHighX_D10	; Yes;