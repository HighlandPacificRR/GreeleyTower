	subtitle	"BlockControl.asm"	page;============================================================================================;;  FileName: BlockControl.asm;  Date: 6/27/09;  File Version: 1.0.1;  ;  Author: David M. Flynn;  Company: HPRR;  Project: TCC;;============================================================================================;============================================================================================; Revision History;; 1.0.1 6/27/2009	Optimized some code.; 1.0   7/9/2006	Moved routines from main panel.;;============================================================================================; Conditional Assmbly;;;============================================================================================; Notes:;;kMaxRetry	EQU	0x05	;BlockPwr scan;BlockPwrTblPtr	RES	2;ScannerBlkNum	RES	1;BPTemp	RES	2;BPTemp2	RES	2;=========================================================================================; Name	(additional stack words required) Description;=========================================================================================;ScanBlockPwr	Test the next block in the sequence;SetBlockPwr	Look at Block Power Cmds and set relays for one block;=======================================================================================InputA_D00	mCall0To3	InputA	RETURNOutput_D00	mCall0To3	Output	RETURN;=======================================================================================;Test the next block in the sequence;; Entry: kMaxRetry,BlockPwrTblPtr,ScannerBlkNum; Exit: BlockPwrTblPtr++,ScannerBlkNum++; RAM Used: XReg, YReg, Param78, Param7A, BPTemp, BPTemp2; Calls: GetBlkOwnerX, GetCurBlkY, InputA_D00, GetBlockPwrTableX, SetBlockPwrTableX,;	GetBlockPwrTable2X, SetBlockPwrTable2X;ScanBlockPwr	MOVLW	kMaxRetry	MOVWF	Param77	;test 5 blocks;ScanBlockPwr_L1	MOVF	BlockPwrTblPtr,W	MOVWF	CurBlk	MOVF	BlockPwrTblPtr+1,W	MOVWF	CurBlk+1	MOVF	ScannerBlkNum,W	MOVWF	XReg	;Block number;	CALL	GetBlkOwnerX	BTFSS	Param78,7	;MyBlock?	GOTO	ScanBlockPwr_Next	; No;	CLRF	BPTemp	CLRF	BPTemp+1	CLRF	BPTemp2	CLRF	BPTemp2+1;	MOVLW	0x09	MOVWF	Param7A	;Do 9 cabs;	MOVLW	BPCab1	; starting with Cab1	MOVWF	YReg;ScanBlockPwr_L4	CLRF	IActive	;default unused cabs to off	CALL	GetCurBlkY	;cab bit number; set valid bit mask for this cab 0=cab not here	RLF	Param78,W	RLF	BPTemp2+1,F	RLF	BPTemp2,F	MOVLW	0x01	XORWF	BPTemp2+1,F;	BTFSS	Param78,7	;none?	CALL	InputA_D00	; No	RLF	IActive,W	;Read input	RLF	BPTemp+1,F	RLF	BPTemp,F	MOVLW	0x02	ADDWF	YReg,F	;next cab	DECFSZ	Param7A,F	;All 9 done?	GOTO	ScanBlockPwr_L4	; No;; BPTemp cabs 23456789 xxxxxxx1; Adjust bit positions	SWAPF	BPTemp,F	;23456789 00010000	SWAPF	BPTemp+1,W	;W=67892345	ANDLW	0x0F	IORWF	BPTemp,F	;23456789 00012345	MOVLW	0x0F	ANDWF	BPTemp+1,F	;00006789 00012345;	SWAPF	BPTemp2,F	SWAPF	BPTemp2+1,W	ANDLW	0x0F	IORWF	BPTemp2,F	MOVLW	0x0F	ANDWF	BPTemp2+1,F;	MOVF	BPTemp,W	IORWF	BPTemp+1,W	SKPZ		;Is any cab powered?	BSF	AnyCabOnFlag	; Yes;	CALL	GetBlockPwrTableX	MOVLW	b'10000000'	;Ignor detect bits	IORWF	BPTemp2,W	; and cabs not here	ANDWF	Param78,W	SUBWF	BPTemp,W	SKPNZ		;Changed?	GOTO	ScanBlockPwr_3	; No;	MOVF	BPTemp2,W	; Yes, Keep cabs not here	XORLW	0x1F	; cabs 1..5	IORLW	b'01100000'	; and detect bits;	ANDWF	Param78,W	IORWF	BPTemp,W	CALL	SetBlockPwrTableX	BSF	BlockDataChngFlag;	ScanBlockPwr_3	CALL	GetBlockPwrTable2X	MOVF	BPTemp2+1,W	;Ignor reserved bits	ANDWF	Param78,W	; and cabs not here	SUBWF	BPTemp+1,W	SKPNZ		;Changed?	GOTO	ScanBlockPwr_Next	; No;	MOVF	BPTemp2+1,W	; Yes, Keep cabs not here	XORLW	0x0F	; cabs 6..9	IORLW	b'11110000'	; and reserved bits;	ANDWF	Param78,W	IORWF	BPTemp+1,W	CALL	SetBlockPwrTable2X	BSF	BlockDataChngFlag2;ScanBlockPwr_Next	MOVLW	BPAddBlk	ADDWF	BlockPwrTblPtr,F	ADDCF	BlockPwrTblPtr+1,F;	MOVLW	kMaxBlockNum	SUBWF	ScannerBlkNum,W	SKPZ		;All blocks done?	INCF	ScannerBlkNum,W	;No	MOVWF	ScannerBlkNum;			MOVF	ScannerBlkNum,F	SKPZ	GOTO	ScanBlockPwr_5;	MOVLW	low BlkPwrRDY1	;Setup to scan the first	MOVWF	BlockPwrTblPtr	; block next time we are	MOVLW	high BlkPwrRDY1	; called.	ADDLW	low evDataROM	MOVWF	BlockPwrTblPtr+1;ScanBlockPwr_5	DECFSZ	Param77,F	GOTO	ScanBlockPwr_L1	RETURN;;=============================================================================================; Look at Block Power Cmds and set relays for one block;; Entry: BlockNum; Exit: BlockNum++; RAM Used: Param78, Param79, Param7A, BPTemp, BPTemp2, CurBlk; Calls: GetBlockCmdTableX, GetBlockPwrTableX, GetBlockCmdTable2X, GetBlockPwrTable2X;SetBlockPwr	MOVF	BlockNum,W	MOVWF	XReg;	CALL	GetBlkOwnerX	BTFSS	Param78,7	;Is this one of mine?	GOTO	SetBlockPwr_NextBlk	; No;	CALL	GetBlockCmdTableX	MOVWF	BPTemp	CALL	GetBlockCmdTable2X	MOVWF	BPTemp+1;	CALL	GetBlockPwrTableX	MOVWF	BPTemp2	CALL	GetBlockPwrTable2X	MOVWF	BPTemp2+1;;in BlockPwrTable each Byte represents one block; bit0 = Cab5; bit1 = Cab4; bit2 = Cab3; bit3 = Cab2; bit4 = Cab1; bit5 = Detect West; bit6 = Detect East; bit7 = Set if any cab is powerd;  if bit 7 is set but bits 0..4 are cleared then look at BlockPwrTable2;  for additional cab bits;;in BlockPwrTable2 each byte represents one block; bit0 = Cab9; bit1 = Cab8; bit2 = Cab7; bit3 = Cab6; bit4 = not used; bit5 = not used; bit6 = not used; bit7 = not used; align bits to go cabs 1..9 sequentially BPTemp:7..0 BPTemp+1:7	 C   BP+1     BP	SWAPF	BPTemp+1,F	;x 6789xxxx xxx12345	RLF	BPTemp+1,F	;6 789xxxxx xxx12345	RLF	BPTemp,F	;x 789xxxxx xx123456	RLF	BPTemp+1,F	;7 89xxxxxx xx123456	RLF	BPTemp,F	;x 89xxxxxx x1234567	RLF	BPTemp+1,F	;8 9xxxxxxx x1234567	RLF	BPTemp,F	;x 9xxxxxxx 12345678; align bits to go cabs 1..9 sequentially BPTemp2:7..0 BPTemp2+1:7	SWAPF	BPTemp2+1,F	;x 6789xxxx xxx12345	RLF	BPTemp2+1,F	;6 789xxxxx xxx12345	RLF	BPTemp2,F	;x 789xxxxx xx123456	RLF	BPTemp2+1,F	;7 89xxxxxx xx123456	RLF	BPTemp2,F	;x 89xxxxxx x1234567	RLF	BPTemp2+1,F	;8 9xxxxxxx x1234567	RLF	BPTemp2,F	;x 9xxxxxxx 12345678;; CurBlk := evDataROM + BlkPwrRDY1	MOVLW	low BlkPwrRDY1	MOVWF	CurBlk,F	MOVLW	high BlkPwrRDY1	ADDLW	low evDataROM	MOVWF	CurBlk+1,F;; CurBlk := CurBlk + (BPAddBlk * BlockNum)	MOVLW	BPAddBlk	MOVWF	Param79SetBlockPwr_L2	MOVF	BlockNum,W	ADDWF	CurBlk,F	ADDCF	CurBlk+1,F	DECFSZ	Param79,F	GOTO	SetBlockPwr_L2;;; Set outputs to drive cab power relays;	MOVLW	BPCab1	;0x00	MOVWF	YReg	MOVLW	0x09	MOVWF	Param7A	;Do 9 cabs;SetBlockPwr_L3	CLRF	OActive	RLF	BPTemp+1,F	;Get ThrFlag from BlkCmd table into C	RLF	BPTemp,F	RRF	OActive,F	;from blk Cmd;	CLRF	Param78	RLF	BPTemp2+1,F	RLF	BPTemp2,F	RRF	Param78,W	;Get ThrFlag from blk Pwr table into C;; Compare power with command. Is this a change?	SUBWF	OActive,W	SKPZ		;Same?	GOTO	SetBlockPwr_1	; NoSetBlockPwr_DoNext	INCF	YReg,F	; Yes	INCF	YReg,F	GOTO	SetBlockPwr_Next;SetBlockPwr_1	CALL	GetCurBlkY	BTFSC	Param78,7	;None?	GOTO	SetBlockPwr_DoNext	; Yes, we're done with this block;; Add 0x0400 to the output bit number; Output bits for blocks are the input bit + 0x400; example: Cab1 RDY1 Input=0x2042 Output=0x2442;	MOVWF	OBit	INCF	YReg,F	CALL	GetCurBlkY	INCF	YReg,F	ANDLW	0x03	ADDLW	0x04	MOVWF	OBoard;	SWAPF	Param78,W	ANDLW	0x03	MOVWF	OSlot	CALL	Output_D00;SetBlockPwr_Next	DECFSZ	Param7A,F	GOTO	SetBlockPwr_L3;	; Advance block numberSetBlockPwr_NextBlk	MOVLW	kMaxBlockNum	SUBWF	BlockNum,W	;W=BlockNum-kMaxBlockNum	SKPZ		;W=0?	INCF	BlockNum,W	; No	MOVWF	BlockNum	RETURN;;======================================================================================;