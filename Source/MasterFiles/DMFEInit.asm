	subtitle	"DMFEInit.asm"	page;*******************************************************************************;;    Filename: DMFEInit.asm;    Date:7/11/2009;    File Revision:1.1;;    Author:David M. Flynn;    Company:Oxford V.U.E., Inc.;    Project: HPRR Panels;; ;**********************************************************************;;    Notes:;;**********************************************************************; Revision History;;1.1  7/11/2009	Made into standard file;1.0  6/25/2005	Copied from Block Power KB;1.0  9/6/2004	first reved Version;;===============================================================================; Turn off all the outputs of the current OSlot,OBoard starting w/ OBit;OutsOff	CALL	Output	INCF	OBit,F	BTFSS	OBit,7	;skip if high bit = 1	GOTO	OutsOff	;last bit is 127 0x7F	CLRF	OBit	RETURN;;===============================================================================; Entry: none; Exit: none, Bank0 is selected;; turn off all outputsSetupDMFEIO	Call	DMFE_Inft_Init	if UsesBlockModules	LCALL	AllOutsOff	;All bolck module outputs	endif	mBank3;	MOVLW	0x00	MOVWF	OBit	MOVWF	OActive	MOVLW	kFirstOB	;Start with BD1	MOVWF	OBoard	MOVLW	0x00	;Start with Slot0	MOVWF	OSlotRLoop1	CALL	OutsOff	MOVF	OBoard,W	SUBLW	kLastOB	;End with BD1	BTFSC	_Z	GOTO	OutsOff_End	INCF	OBoard,F	GOTO	RLoop1;OutsOff_End;;		CLRF	XRegRLoop2	MOVLW	0x00	LCALL	SetSMTableX	LCALL	SetSMTableHighX	MOVLW	0x00	LCALL	SetBlockPwrTableX	LCALL	SetBlockPwrTable2X	DECFSZ	XReg,F	GOTO	RLoop2;;We don't need to send the block Commands either	CLRF	XRegRLoop3	MOVLW	0x00	LCALL	SetBlockCmdTableX	LCALL	SetBlockCmdTable2X	INCF	XReg,F	BTFSS	XReg,6	GOTO	RLoop3;	if HasBlockDetectors;===========================================================================================;Setup block scanner	CLRF	ScannerBlkNum	MOVLW	low BlkPwrRDY1	MOVWF	BlockPwrTblPtr	MOVLW	high BlkPwrRDY1	ADDLW	low evDataROM	MOVWF	BlockPwrTblPtr+1;	endif;	MOVLW	low MLSM1	MOVWF	SMDispPtr	MOVLW	high MLSM1	ADDLW	low evDataROM	MOVWF	SMDispPtr+1;	if CabCount>0	BSF	kDefaultCMF,CabEastFB	BSF	kDefaultCMF,CabSelectedFB	MOVLW	kDefaultCab	MOVWF	LastCabVal	endif;	if UsesDisableUHSelector	GOTO	DisableUHSelector;;=========================================================================;EnableUHSelector	MOVLW	b'00000000'	;SM 511 Off	GOTO	UHSelectEnable_E2DisableUHSelector	MOVLW	b'01000000'	;SM 511 OnUHSelectEnable_E2	MOVWF	Param79	MOVLW	low d'511'	MOVWF	XReg	LCALL	GetSMTableHighX	ANDLW	0xA0	;keep ctrl & FB bits;	IORWF	Param79,W	BSF	SMTableHiChngFlag	IORLW	b'00000001'	; + Valid	LCALL	SetSMTableHighX	;Disable Underhill selector;; Function=2 set SM500	MOVLW	low d'500'	MOVWF	XReg	MOVLW	b'01000000'	; Yes	IORLW	b'00000001'	; + Valid	mCall3To0	SetSMTableHighX	endif	RETURN;;===========================================================================;;HPRROnTheHalf	mBank3;	if HasBlockDetectors	CALL	ReadBlkDet	endif;; Flash power on LED	MOVLW	WDLED_Mask	XORWF	DispFlags,F	CLRF	OActive	BTFSC	WDLED_Flag	BSF	OActive,7	MOVLW	low WatchDogLED	MOVWF	CurBlk	MOVLW	high WatchDogLED	MOVWF	CurBlk+1	CALL	OutputB;	MOVF	UDPTimer,F	SKPZ	DECF	UDPTimer,F;	if Has_OB_OccLEDs	Call	LightOccLEDs	endif;	if UsesVistaSelect	BCF	PCLATH,3	GOTO	VistaSelectVistaSelect_RTN	endif	BCF	PCLATH,3	GOTO	HPRROnTheHalf_RTN;;=============================================================================;Do_UDP_DataXmit	mBank3	MOVF	UDPTimer,F	SKPZ	GOTO	UDP_DataXmit	MOVLW	kUDPTime	MOVWF	UDPTimer;	BSF	SMTableLowChngFlag	BSF	BlockCmdChngFlag	BSF	BlockCmdChngFlag2	BSF	SMTableHiChngFlag	if HasBlockDetectors	BSF	BlockDataChngFlag	BSF	BlockDataChngFlag2	endif;UDP_DataXmitUDP_DataSender_RTN	mBank3	BTFSS	SMTableLowChngFlag	GOTO	UDP_DataXmit_1;	BCF	SMTableLowChngFlag	MOVLW	UDP_RxIP_MP	mSendSRAM_UDPData	SMTable,kUDP_DataType_LoSM;UDP_DataXmit_1	BTFSS	SMTableHiChngFlag	GOTO	UDP_DataXmit_2;	BCF	SMTableHiChngFlag	MOVLW	UDP_RxIP_MP	mSendSRAM_UDPData	SMTableHigh,kUDP_DataType_HiSM	;UDP_DataXmit_2	BTFSS	BlockCmdChngFlag	GOTO	UDP_DataXmit_3;	BCF	BlockCmdChngFlag	MOVLW	UDP_RxIP_MP	mSendSRAM_UDPData	BlockCmdTable,kUDP_DataType_BlkCmd;UDP_DataXmit_3	BTFSS	BlockCmdChngFlag2	GOTO	UDP_DataXmit_4;	BCF	BlockCmdChngFlag2	MOVLW	UDP_RxIP_MP	mSendSRAM_UDPData	BlockCmdTable2,kUDP_DataType_BlkCmd2;UDP_DataXmit_4	BTFSS	BlockDataChngFlag	GOTO	UDP_DataXmit_5;	BCF	BlockDataChngFlag	MOVLW	UDP_RxIP_MP	mSendSRAM_UDPData	BlockPwrTable,kUDP_DataType_BkPwr;UDP_DataXmit_5	BTFSS	BlockDataChngFlag2	GOTO	UDP_DataXmit_6;	BCF	BlockDataChngFlag2	MOVLW	UDP_RxIP_MP	mSendSRAM_UDPData	BlockPwrTable2,kUDP_DataType_BkPwr2;UDP_DataXmit_6;	BCF	PCLATH,3	GOTO	Do_UDP_DataXmit_Rtn;;	if CabCount>0;===============================================================================================; Read the 1 cab button store in Param73:Param74ReadCabBtn	MOVWF	CurBlk	CALL	InputB	RLF	IActive,W	RLF	Param73,F	RLF	Param74,F	BTFSC	IActive,7	INCF	Param75,F	RETURN;;===============================================================================================; Read the cab select buttons;ScanCabBtns	CLRF	Param73	;Cab Btns	CLRF	Param74	; Cab Btns MSb	CLRF	Param75	;# of Btns down	MOVLW	ButtonIBoard	MOVWF	CurBlk+1;	MOVLW	Cab1Btn	CALL	ReadCabBtn	MOVLW	Cab2Btn	CALL	ReadCabBtn	MOVLW	Cab3Btn	CALL	ReadCabBtn	MOVLW	Cab4Btn	CALL	ReadCabBtn	MOVLW	Cab5Btn	CALL	ReadCabBtn	MOVLW	Cab6Btn	CALL	ReadCabBtn;	if CabCount>6	MOVLW	Cab7Btn	CALL	ReadCabBtn	MOVLW	Cab8Btn	CALL	ReadCabBtn	MOVLW	Cab9Btn	CALL	ReadCabBtn	else	RLF	Param73,F	;Cab 7	RLF	Param74,F	RLF	Param73,F	;Cab 8	RLF	Param74,F	RLF	Param73,F	;Cab 9	RLF	Param74,F		endif;	; Param[5-0] = Cab1-Cab9 Btn	MOVF	Param75,F	;# of Btns	SKPNZ		;> 0 Btns Down?	GOTO	ClearCabBtnDBFlag	; No	MOVLW	0x02	SUBWF	Param75,W	SKPNZ		;Buttons pressed = 2?	BSF	TestModeFlag	; Yes	BTFSC	CabBtnDB_Flag	;Is Debounced?	GOTO	LightEW_LEDs	; No;	BCF	TestModeFlag	CALL	LongClick	BSF	CabBtnDB_Flag	MOVLW	kLastCab	;Cab Count	MOVWF	Param7A	MOVLW	0x01	MOVWF	Param75	;Cab # 1	MOVLW	low Cab1ModeFlags	MOVWF	FSR	BSF	_IRP;ScanCabBtns_L2	BTFSS	Param74,0	;This Cab?	GOTO	ScanCabBtns_1	; No;	MOVF	Param75,W	MOVWF	LastCabVal	BTFSS	INDF,CabSelectedFB	;This cab already selected?	GOTO	ScanCabBtns_C_Sel	; No	MOVLW	0x03	XORWF	INDF,F	;Flip E/W/Off	BTFSS	INDF,CabEastFB	GOTO	ScanCabBtns_Next	BCF	INDF,CabEastFB	BCF	INDF,CabSelectedFB	;Deselect this cab	CLRF	LastCabVal	GOTO	ScanCabBtns_Next;ScanCabBtns_C_Sel	MOVLW	0x03	ANDWF	INDF,W	SKPNZ		;Not (E or W)?	BSF	INDF,CabEastFB	; No, set east (C1East)	BSF	INDF,CabSelectedFB	;Select this cab	GOTO	ScanCabBtns_Next;ScanCabBtns_1	BCF	INDF,CabSelectedFB	;Deselect this cabScanCabBtns_Next	INCF	FSR,F	RLF	Param73,F	;Input bits	RLF	Param74,F	; MSb	INCF	Param75,F	;Cab #	DECFSZ	Param7A,F	;Cab Counter	GOTO	ScanCabBtns_L2;;;------------------------------------;LightEW_LEDs	MOVLW	high Cab1EastLED	ADDLW	low evDataROM	MOVWF	CurBlk+1	CLRF	Param7A	;first cab	MOVLW	low Cab1EastLED	MOVWF	CurBlk	CLRF	YReg;	MOVLW	low Cab1ModeFlags	MOVWF	FSR	BSF	_IRP;LightEW_LEDs_L1	CLRF	Param78	BTFSC	INDF,CabEastFB	;current cab east	BSF	Param78,7	BTFSS	INDF,CabSelectedFB	;Cab is Active	GOTO	LightEW_LEDs_1	; No	BTFSS	Param78,7	GOTO	LightEW_LEDs_1	mBank0	BTFSS	tickcount,3	;10/20th seconds	BCF	Param78,7	mBank3LightEW_LEDs_1	MOVF	Param78,W	MOVWF	OActive	CALL	OutputA	INCF	YReg,F	;Next LED	INCF	YReg,F;	CLRF	Param78	BTFSC	INDF,CabWestFB	BSF	Param78,7	BTFSS	INDF,CabSelectedFB	;Cab is Active	GOTO	LightEW_LEDs_2	; No	BTFSS	Param78,7	GOTO	LightEW_LEDs_2	mBank0	BTFSS	tickcount,3	;10/20th seconds	BCF	Param78,7	mBank3LightEW_LEDs_2	MOVF	Param78,W	MOVWF	OActive	CALL	OutputA	INCF	YReg,F	;Next LED	INCF	YReg,F	INCF	FSR,F	;Next cab's flags	MOVF	Param7A,W	INCF	Param7A,F	SUBLW	kLastCab-1	;last cab (0..n)	SKPZ	GOTO	LightEW_LEDs_L1	RETURN;;;ClearCabBtnDBFlag	BCF	CabBtnDB_Flag	GOTO	LightEW_LEDs;	endif;=========================================================================================	if UsesSeg0DataAccessGetCurBlkY_D18	mCall3To0	GetCurBlkY	RETURN	elseGetCurBlkY_D18	mCall3To2	GetCurBlkY	RETURN	endif	if CabCount>0;==============================================================================================; Translate a throttle # to my cab #;; Entry: Param78=Thr#; Exit: Param78=Cab#; RAM used: Param78, Param79;XlateThrToCab	MOVLW	0x06	SUBWF	Param78,W	SKPNB		;>=6?	RETURN		; No;	MOVF	Param78,W	;Throttle # 1..9	MOVWF	Param79;	CALL	Cab6ToThrottle	SUBWF	Param79,W	MOVLW	0x06	SKPNZ		;Cab 6?	GOTO	XlateThrToCab_End;	CALL	Cab7ToThrottle	SUBWF	Param79,W	MOVLW	0x07	SKPNZ		;Cab 7?	GOTO	XlateThrToCab_End;	CALL	Cab8ToThrottle	SUBWF	Param79,W	MOVLW	0x08	SKPNZ		;Cab 8?	GOTO	XlateThrToCab_End;	CALL	Cab9ToThrottle	SUBWF	Param79,W	MOVLW	0x09	SKPNZ		;Cab 9?	GOTO	XlateThrToCab_End;	XlateThrToCab_End	MOVWF	Param78	RETURN;;==============================================================================================; Translate my cab number to a throttle#; Entry: Param78=Cab#, XReg=Block#; Exit: Param78=Thr#;XlateCabToThr	MOVLW	0x06	SUBWF	Param78,W	SKPNB		;>=6?	RETURN		; No;	MOVLW	0x09	SUBWF	Param78,W	SKPNZ		;Cab 9?	GOTO	Cab9ToThrottle	; Yes;	MOVLW	0x08	SUBWF	Param78,W	SKPNZ	GOTO	Cab8ToThrottle;	MOVLW	0x07	SUBWF	Param78,W	SKPNZ		;Cab 7?	GOTO	Cab7ToThrottle	; Yes;			  No, must be 6Cab6ToThrottle	MOVLW	High BlkCab6ToThr	MOVWF	SRAM_Addr1	MOVLW	low BlkCab6ToThr	GOTO	CabToThrottle;Cab7ToThrottle	MOVLW	High BlkCab7ToThr	MOVWF	SRAM_Addr1	MOVLW	low BlkCab7ToThr	GOTO	CabToThrottle;Cab8ToThrottle	MOVLW	High BlkCab8ToThr	MOVWF	SRAM_Addr1	MOVLW	low BlkCab8ToThr	GOTO	CabToThrottle;Cab9ToThrottle	MOVLW	High BlkCab9ToThr	MOVWF	SRAM_Addr1	MOVLW	low BlkCab9ToThr;CabToThrottle	ADDWF	XReg,W	;BlkNum	MOVWF	SRAM_Addr0	ADDCF	SRAM_Addr1,F	MOVLW	low evDataROM	ADDWF	SRAM_Addr1,F	if GetCurBlkY_D18	mCall3To0	GetGet_Read	else	mCall3To2	GetGet_Read	endif	RETURN;;===================================================================; Entry: BPTemp; Exit: Param78=Thr#RlyBitsToThr	CLRF	Param78;	MOVLW	0x01	BTFSC	BPTemp,4	MOVWF	Param78;	MOVLW	0x02	BTFSC	BPTemp,3	MOVWF	Param78;	MOVLW	0x03	BTFSC	BPTemp,2	MOVWF	Param78;	MOVLW	0x04	BTFSC	BPTemp,1	MOVWF	Param78;	MOVLW	0x05	BTFSC	BPTemp,0	MOVWF	Param78;	MOVLW	0x06	BTFSC	BPTemp+1,3	MOVWF	Param78;	MOVLW	0x07	BTFSC	BPTemp+1,2	MOVWF	Param78;	MOVLW	0x08	BTFSC	BPTemp+1,1	MOVWF	Param78;	MOVLW	0x09	BTFSC	BPTemp+1,0	MOVWF	Param78;	RETURN;=======================================================================; Translate a throttle number to block power relay bit pattern;; Entry: Param78=Thr#; Exit: BPTemp2=Block Pwr Data;ThrToRlyBits	MOVLW	0x80	;Default to any cab Selected	DECF	Param78,F	SKPNZ	MOVLW	0x90	;Cab 1, Selected+Cab1;	DECF	Param78,F	SKPNZ	MOVLW	0x88	;Cab 2, Selected+Cab2;	DECF	Param78,F	SKPNZ	MOVLW	0x84	;Cab 3, Selected+Cab3;	DECF	Param78,F	SKPNZ	MOVLW	0x82	;Cab 4, Selected+Cab4;	DECF	Param78,F	SKPNZ	MOVLW	0x81	;Cab 5, Selected+Cab5	MOVWF	BPTemp2	;BlockCmdTable;	MOVLW	0x80	;Default to any cab Selected	DECF	Param78,F	SKPNZ	MOVLW	0x88	;Cab 6, Selected+AT and Selected+CT;	DECF	Param78,F	SKPNZ	MOVLW	0x84	;Cab 7, VY, Selected+BT and Selected+DT;	DECF	Param78,F	SKPNZ	MOVLW	0x82	;Cab 8, WY, HI;	DECF	Param78,F	SKPNZ	MOVLW	0x81	;Cab 9, GY	MOVWF	BPTemp2+1	;BlockCmdTable2	RETURN;	endif	if UsesBlockModules;===========================================================================================; Entry: OActive:7, W=Bit Number, Bank3; Exit: Bank3; RAM used:; Calls: () StoreBlkModBits;SetBlockModuleLED	BTFSS	OActive,7	GOTO	DoLEDOff;	MOVLW	0x0C	;Top Left  0x0C	SUBWF	Param78,W	SKPNZ	BSF	BlkModBits1,4	MOVLW	0x0A	;Bot Left  0x0A	SUBWF	Param78,W	SKPNZ	BSF	BlkModBits1,2	MOVLW	0x00	;Top Right 0x00	SUBWF	Param78,W	SKPNZ	BSF	BlkModBits0,0	MOVLW	0x02	;Bot Right 0x02	SUBWF	Param78,W	SKPNZ	BSF	BlkModBits0,2	GOTO	SetBlockModuleLED_1;DoLEDOff	MOVLW	0x0C	;Top Left  0x0C	SUBWF	Param78,W	SKPNZ	BCF	BlkModBits1,4	MOVLW	0x0A	;Bot Left  0x0A	SUBWF	Param78,W	SKPNZ	BCF	BlkModBits1,2	MOVLW	0x00	;Top Right 0x00	SUBWF	Param78,W	SKPNZ	BCF	BlkModBits0,0	MOVLW	0x02	;Bot Right 0x02	SUBWF	Param78,W	SKPNZ	BCF	BlkModBits0,2SetBlockModuleLED_1	mCall3To2	StoreBlkModBits	RETURN;	endif;	if UsesSpeaker;===================================================================================================;LongClick	MOVLW	0x02	GOTO	Beep_E2CLICK	MOVLW	0x01	GOTO	Beep_E2;Beep	MOVLW	kBeepTimeBeep_E2	BTFSC	BeepOn	;Beep in progress?	RETURN		; Yes	MOVWF	BeepTimer	BSF	BeepOn	MOVLW	low SPKR	;#<SPKR or / =Low byte	MOVWF	CurBlk	MOVLW	high SPKR	;#>SPKR or mod =Hi byte	MOVWF	CurBlk+1	BSF	OActive,7	GOTO	OutputB	endif;