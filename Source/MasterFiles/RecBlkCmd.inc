;================================================================; Block Commands cabs 1..5; bit 7 is the valid data flag, only copy cab bits from bytes with bit 7 set.;	MOVF	SRAM_UDP_Rx_DT,W	;W=Data Type	SUBLW	kUDP_DataType_BlkCmd	SKPZ		;Block Command?	GOTO	Not_BlkCMD	;  No;	MOVF	SRAM_DestAddr1_Rx,W	;Dest Address	SUBLW	low evUDP_BlockPwrCmdTbl	SKPZ		;Block Command Table Address Matches?	GOTO	Not_BlkCMD	;  No;; Copy the block pwr Data from evUDP_BlockPwrCmdTbl(0x0205) to BlockCmdTable(0x0005);	CLRF	XReg	;Block Zero;Receive_BlockCmd_L1	CALL	GetBlkOwnerX_D10	MOVWF	Param7A	;MSb is owner flag set if me;	MOVLW	kUDP_SRAM_Page	MOVWF	SRAM_Addr2	MOVLW	low BlockCmdTable	MOVWF	SRAM_Addr1	MOVF	XReg,W	MOVWF	SRAM_Addr0	CALL	SRAM_Read_D10	;bank0	mBank3	CLRF	SRAM_Addr2	;Point to my local data tables.;	ANDLW	b'10011111'	;Valid bit and cabs 1..5	MOVWF	Param78	ANDLW	b'00011111'	;keep cab bits, cabs 1..5	MOVWF	Param77	;SRAM_Write uses Param78;	BTFSS	Param78,7	;valid block?	GOTO	ClearOrphinBlkCmd	; No			; Yes, save blk cmd	BTFSC	Param7A,7	;Is this blk mine?	BCF	Param78,7	; Yes, kill valid bit, so we don't			; forward command we should handle.;	CALL	SRAM_Read_D10	;Compare to the old cmd	mBank3	ANDLW	b'10011111'	SUBWF	Param78,W	SKPNZ	GOTO	Receive_BlockCmd_1	; don't update if no change.;	MOVF	Param78,W	CALL	SRAM_Write_D10	; forward command we should handle.	mBank3	BSF	BlockCmdChngFlag;Receive_BlockCmd_1	MOVF	Param77,F	SKPNZ		;Any cab bits set?	GOTO	Receive_BlockCmd_Nxt	; No;	MOVLW	low BlockOwnerTable	MOVWF	SRAM_Addr1	MOVF	SRAM_UDP_Rx_IP,W	;The guy who sent me this blk cmd.	CALL	SRAM_Write_D10	;bank0	GOTO	Receive_BlockCmd_Nxt;; Entry: Param77 is cab data, Valid bit = 0;ClearOrphinBlkCmd	MOVF	Param77,F	;Rec'd Blk Cmd = 0?	SKPZ	GOTO	Receive_BlockCmd_Nxt	; No;	MOVLW	low BlockOwnerTable	MOVWF	SRAM_Addr1	CALL	SRAM_Read_D10	mBank3	SUBWF	SRAM_UDP_Rx_IP,W	;This guy owns the block?	SKPZ	GOTO	Receive_BlockCmd_Nxt	; No;	MOVLW	low BlockCmdTable	MOVWF	SRAM_Addr1	MOVLW	0x00	CALL	SRAM_Write_D10;Receive_BlockCmd_Nxt	mBank3	MOVLW	kMaxBlockNum	SUBWF	XReg,W	SKPNZ	GOTO	MainLoop_E2	INCF	XReg,F	GOTO	Receive_BlockCmd_L1	;;Not_BlkCMD;===============================================================; Block Commands Cabs 6..9; bit 7 is the valid data flag, only copy cab bits from bytes with bit 7 set.;	MOVF	SRAM_UDP_Rx_DT,W	;W=Data Type	SUBLW	kUDP_DataType_BlkCmd2	SKPZ		;Block Command?	GOTO	Not_BlkCMD2	;  No;	MOVF	SRAM_DestAddr1_Rx,W	;Dest Address	SUBLW	low evUDP_BlockPwrCmdTbl2	SKPZ		;Block Command Table Address Matches?	GOTO	Not_BlkCMD2	;  No;; Copy the block pwr Data from evUDP_BlockPwrCmdTbl2(0x0207) to BlockCmdTable2(0x0007);;;	CLRF	XReg	;Block Zero;Receive_BlockCmd2_L1	CALL	GetBlkOwnerX_D10	MOVWF	Param7A	;MSb is owner flag set if me;	MOVLW	kUDP_SRAM_Page	MOVWF	SRAM_Addr2	MOVLW	low BlockCmdTable2	MOVWF	SRAM_Addr1	MOVF	XReg,W	MOVWF	SRAM_Addr0	CALL	SRAM_Read_D10	;bank0	mBank3	CLRF	SRAM_Addr2	;Point to my local data tables.;	ANDLW	b'10001111'	;Valid bit and cabs 6..9	MOVWF	Param78	ANDLW	b'00001111'	;keep cab bits	MOVWF	Param77	;SRAM_Write uses Param78;	BTFSS	Param78,7	;valid block?	GOTO	ClearOrphinBlkCmd2	; No			; Yes, save blk cmd	BTFSC	Param7A,7	;Is this blk mine?	BCF	Param78,7	; Yes, kill valid bit, so we don't			; forward command we should handle.;	CALL	SRAM_Read_D10	;Compare to the old cmd	mBank3	ANDLW	b'10001111'	SUBWF	Param78,W	SKPNZ	GOTO	Receive_BlockCmd2_1	; don't update if no change.;	MOVF	Param78,W	CALL	SRAM_Write_D10		mBank3	BSF	BlockCmdChngFlag2;Receive_BlockCmd2_1	MOVF	Param77,F	SKPNZ	GOTO	Receive_BlockCmd2_Nxt;	MOVLW	low BlockOwnerTable	MOVWF	SRAM_Addr1	MOVF	SRAM_UDP_Rx_IP,W	;The guy who sent me this blk cmd.	CALL	SRAM_Write_D10	;bank0	GOTO	Receive_BlockCmd2_Nxt;; Entry: Param77 is cab data, Valid bit = 0;ClearOrphinBlkCmd2	MOVF	Param77,F	;Rec'd Blk Cmd = 0?	SKPZ	GOTO	Receive_BlockCmd2_Nxt	; No;	MOVLW	low BlockOwnerTable	MOVWF	SRAM_Addr1	CALL	SRAM_Read_D10	mBank3	SUBWF	SRAM_UDP_Rx_IP,W	;This guy owns the block?	SKPZ	GOTO	Receive_BlockCmd2_Nxt	; No;	MOVLW	low BlockCmdTable2	MOVWF	SRAM_Addr1	MOVLW	0x00	CALL	SRAM_Write_D10;Receive_BlockCmd2_Nxt	mBank3	MOVLW	kMaxBlockNum	SUBWF	XReg,W	SKPNZ	GOTO	MainLoop_E2	INCF	XReg,F	GOTO	Receive_BlockCmd2_L1;;Not_BlkCMD2