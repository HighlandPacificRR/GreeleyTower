	SUBTITLE	IO_Echo.asm	page;===========================================================================================;;  FileName: IO_Echo.asm;  Date: 8/23/03;  File Version: 1.0d1;  ;  Author: David M. Flynn;  Company: Highland Pacific;;============================================================================================; Revision History;; 1.0d1  8/23/2003	First Code;;============================================================================================; Notes:;     This file has the routines which handle I/O echoing.;  In SRAM and IO_Echo are 512 bytes for IO boards 0..3. Slot zero is asumed.;  SRAM_Addr2 = high IO_Echo;  SRAM_Addr1 = low IO_Echo + (ASR OBoard >>1);  SRAM_Addr0 = OBit + (ASL OBoard <<7);;  Bit usage;  7 Command;  6 Current Value;  5..0 not used;============================================================================================; Conctants;FirstBoard	EQU	0x01LastBoard	EQU	0x02	;past endCtrlBitMask	EQU	b'01000000'CtrlBitInvtMask	EQU	b'10111111';;============================================================================================;============================================================================================; Name	(additional stack words required) Description;============================================================================================;StoreEchoBit	(1+1) Save OActive, CurBlk (OutputB form) to SRAM;DoEchoBitOut	(1+1) Set or Clr one output so Cmd bit matches Ctrl bit;IO_EchoInit	(0)   Initialization Routine;;============================================================================================; Save OActive, CurBlk (OutputB form) to SRAM;; Entry: OActive, CurBlk, Bank3 selected; Exit: Bank3 selected; RAM used: Param78; Calls: (1+1) SRAM_Read, SRAM_Write;StoreEchoBit	MOVLW	high IO_Echo	MOVWF	SRAM_Addr2	MOVFW	CurBlk+1	ANDLW	0x07	;keep board number	MOVWF	Param78	BCF	STATUS,C	RRF	Param78,W	ADDLW	low IO_Echo	MOVWF	SRAM_Addr1	RRF	Param78,F	RRF	Param78,W	ANDLW	0x80	;keep low bit of board#	IORWF	CurBlk,W	MOVWF	SRAM_Addr0	LCALL	SRAM_Read	mBank3	ANDLW	0x7F	;clr Cmd bit	MOVWF	Param78	MOVWF	OActive	ANDLW	0x80	IORWF	Param78,W	LCALL	SRAM_Write	mBank3	RETURN;	;;============================================================================================; Set or Clr one output so Cmd bit matches Ctrl bit;; Entry: none; Exit: none; RAM used: Param78, Param79; Calls:(1+1) SRAM_Read, SRAM_Write;DoEchoBitOut	mBank3	MOVLW	high IO_Echo	MOVWF	SRAM_Addr2	MOVLW	low IO_Echo	ADDWF	EchoPtr+1,W	MOVWF	SRAM_Addr1	MOVFW	EchoPtr	MOVWF	SRAM_Addr0	LCALL	SRAM_Read; Does Cmd = Ctrl?	MOVWF	Param78	BTFSS	Param78,7	;Cmd is set?	GOTO	DoEchoBitOut_1	;No	BTFSS	Param78,6	;Ctrl is set?	GOTO	DoEchoBitOut_3	;No, It's not a match	GOTO	DoEchoBitOut_4;DoEchoBitOut_1	BTFSS	Param78,6	;Ctrl is clr?	GOTO	DoEchoBitOut_4	;Yes;; No match, copy Cmd bit to Ctrl BitDoEchoBitOut_3	RRF	Param78,W	ANDLW	CtrlBitMask	MOVWF	Param79	MOVLW	CtrlBitInvtMask	ANDWF	Param78,W	;clr Ctrl bit	IORWF	Param79,F	;Save for later	MOVFW	Param79	LCall	SRAM_Write; Set or Clr output	mBank3	MOVLW	0x80	ANDWF	Param79,W	MOVWF	OActive	MOVFW	SRAM_Addr0	MOVWF	CurBlk	RLF	SRAM_Addr0,W	RLF	SRAM_Addr1,W	ANDLW	0x07	;slot 0, boards 0..7	MOVWF	CurBlk+1	mCall2To3	OutputB; Increment EchoPtrDoEchoBitOut_4	mBank3	INCFSZ	EchoPtr,F	GOTO	DoEchoBitOut_4	INCF	EchoPtr+1,F	RLF	EchoPtr,W	RLF	EchoPtr+1,W	ANDLW	0x07	;slot 0, boards 0..7	SUBLW	LastBoard	;board=LastBoard?	SKPZ	GOTO	EchoRtn	;No, not done yet	GOTO	IO_EchoInit	;yes, start over;	;;============================================================================================; Initialization RoutineIO_EchoInit	mBank3	MOVLW	FirstBoard	MOVWF	EchoPtr+1	CLRF	EchoPtrEchoRtn	mBank0	RETURN;;;;;;;;;;;;;;;;;