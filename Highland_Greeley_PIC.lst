Highland Greeley PIC.asm                                              Page: 1500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm00001 0000 	;**********************************************************************00002 0000 	;00003 0000 	;    Filename: Highland Greeley PIC.asm00004 0000 	;    Date:9/18/200400005 0000 	;    File Version:1.0b100006 0000 	;00007 0000 	;    Author:David M. Flynn00008 0000 	;    Company:Highland Pacific RR, Inc.00009 0000 	;    Project:Highland Greeley computer00010 0000 	; 00011 0000 	;**********************************************************************00012 0000 	;00013 0000 	;    Files required:	Highland Greeley PIC.asm	this file00014 0000 	;	P16F877.INC	! processor equ's00015 0000 	;	SerialNo.inc	serialization00016 0000 	;	BrainEQUs.inc	! Standard EQUs00017 0000 	;	BMacros.asm	! macro definitions00018 0000 	;	Strings.inc	# string data00019 0000 	;	Data.inc	other data00020 0000 	;	 HPRRMenuData.inc	# TCC Menus Data00021 0000 	;	 HIGY.SMData.inc	Switch machine data00022 0000 	;	 HIGY.RouteData.inc	Route selection data00023 0000 	;	 HIGY.RtSelTbl.inc	Route selection table00024 0000 	;	LowStuff.asm	! mostly I/O routines00025 0000 	;	DataAccessSeg0.asm	# Quick 'n easy access to SRAM Data00026 0000 	;	BlockControlSeg0.asm	# Block Power and Control00027 0000 	;	NICStuff.asm	! 10baseT Network I/O00028 0000 	;	Main.asm	# Main event loop00029 0000 	;	Highland Greeley.ASM	Communications Loop00030 0000 	;	RecBlkPwr.inc	# UDP receiver of Blk Pwr and SM Data00031 0000 	;	HIGY.Routes.asm	Highland Greeley Route selection00032 0000 	;	HIGY.TTProg.asm	Turn Table routines00033 0000 	;	Dispatch.asm	! User Button Cmd Inturpeter00034 0000 	;	DispatchHPRR.asm	# custom part of Cmd Inturpeter00035 0000 	;	Ether.asm	# TCC Custom HTTP I/O00036 0000 	;	HTTPServer.asm	! HTTP Sever00037 0000 	;	UDP_DataInOut.asm	! UDP Support00038 0000 	;	DMFE_Intf.asm	! Low Level I/O00039 0000 	;	DMFEInit.asm	Initialization for Com IO00040 0000 	;	Bootloader.asm	! Boot Loader to do software updates00041 0000 	;00042 0000 	;  ! These are standard files used in multiple projects, there are no00043 0000 	;    custom routines in these files.00044 0000 	;  # These files are common to HPRR TCC projects. 00045 0000 	;00046 0000 	;**********************************************************************00047 0000 	;00048 0000 	;    Notes:00049 0000 	;00050 0000 	; Highland Greeley Control Computer00051 0000 	; This computer is located in the cabnet at the north end of Highland/Greeley.00052 0000 	; It communicates with the MP SM & BP computer.00053 0000 	;00054 0000 	; Unless specified All routines exit with ram bank zero selected.00055 0000 	;00056 0000 	; CGI:Common Gateway Interface00057 0000 	;  Data is received via http requests in the form "GET /index.html?a=6&b=23"00058 0000 	;  These requests are generated when a browser processes a POST form's SEND command00059 0000 	;00060 0000 	; EGI:Embedded Gateway Interface00061 0000 	;  The a two types of EGI00062 0000 	;   Value repacement where "@1" or "@g" are replaced with a string00063 0000 	;     example: @1 is replaced with the ADC1 voltage "2.3"00064 0000 	;              @g is replaced with ADC7's value "00980" 0..1023 posible with 10bit A/D00065 0000 	;   There can be a different set of EGI's @1..@z for each file based on fileidx00066 0000 	;   The second type is # value substitution00067 0000 	;    this is where a tag like <!--#A--> is replaced with the tag00068 0000 	;       <img src='ledoff.gif'> or <img src='ledon.gif'> depending on the value of the var $led100069 0000 	;00070 0000 	;**********************************************************************00071 0000 	; Revision History00072 0000 	;00073 0000 	; 1.0b1    9/18/2004	Copied from Com IO00074 0000 	; HPRR TCC Com IO00075 0000 	; 1.0b1    9/5/2004	Added Dispatch, Bootloader, and standard HTTP server00076 0000 	; 1.0d1    12/15/2002  Copied from Resist v1.0d300077 0000 	;	Removed resist specific code00078 0000 	;00079 0000 	; 1.0b3    10/29/2002  All non-standard code has been moved from LowStuff.asm00080 0000 	;	Standard NIC suport routines have all been moved to NICStuff.asm00081 0000 	;	Added suport for CGI's00082 0000 	; 1.0b2    10/25/2002  Moved OnTheHalfSecond to segment 2 (Main.asm)00083 0000 	;	Moved serial and other unused routines back into LowStuff.asm00084 0000 	; 1.0b1    10/21/2002  Fixed pH Up/Down Speed and Water Flow Error.00085 0000 	;	Added "Filling... 00016"00086 0000 	; 1.0d4    10/9/2002   Added Error display on 4th line, Panel count down00087 0000 	;	 causes water add, Sump lvl Sw opens spent valve,00088 0000 	;	 auto and manual adds.00089 0000 	; 1.0d3    10/2/2002	pH data is good, Front panel setup routines work.00090 0000 	; 1.0d2    10/1/2002	Created BMacros.asm, Strings moved to Main.asm00091 0000 	;	Added Service routines.00092 0000 	; 1.0d1    8/29/2002	Copied Flow 1.0b5  Begin of change to Resist.asm00093 0000 	;00094 0000 	;**********************************************************************00095 0000 	; Technical Stuff00096 0000 	;00097 0000 	; Assumptions:00098 0000 	;	The subnet mask is 255.255.255.000099 0000 	;	This subnet is 192.168.1 (from eeprom) and must be correct00100 0000 	;	  as we don't do RARP, BOOTP, or DHCP.Highland Greeley PIC.asm                                              Page: 2500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm00101 0000 	;	The routers IP Address is 192.168.1.1 (this subnet.1)00102 0000 	;	My IP address is in eeprom (192.168.1.123)00103 0000 	;	00104 0000 	; Ethernet frame:00105 0000 	;	Preamble (8 bytes) added by NIC00106 0000 	;	Destination Address (6 bytes)00107 0000 	;	Source Address (6 bytes)00108 0000 	;	Frame Type (pcol) (2 bytes)00109 0000 	;	  (PCOL_ARP, PCOL_IP)00110 0000 	;	The Data (46 to 1500 bytes)00111 0000 	;	CRC code (4 bytes) added by NIC00112 0000 	;00113 0000 	; ARP/RARP message format: this all goes into the Data field in the Ethernet Frame (type PCOL_ARP)00114 0000 	;	Hardware Type (2 bytes) ethernet=1, HTYPE00115 0000 	;	Proticol Type (2 bytes) IP type=800, ARPPRO00116 0000 	;	Hardware Address Length (HLEN) (1 byte) ethernet=6, MACLEN00117 0000 	;	Proticol Addres Length (PLEN) (1 byte) IPv4=4, IPAddrLEN00118 0000 	;	Operation (2 bytes) 1 ARPREQ or 2 ARPRESP00119 0000 	;	Sender's Hardware Address (MAC)00120 0000 	;	Sender's IP Address00121 0000 	;	Target's Hardware Address (MAC)00122 0000 	;	Target's IP Address (MAC)00123 0000 	;00124 0000 	; IP Datagram message format: this all goes into the Data field in the Ethernet Frame (type PCOL_IP)00125 0000 	;	Vers and Header Length (1 nibble each), hardcoded as 0x45, IPv4, 5 long words00126 0000 	;	Servive Type (1 byte) hardcoded as 0x0000127 0000 	;	Total Length of datagram in bytes (2 bytes), 46..1500, iplen00128 0000 	;	Identification (2 bytes) ++IPDatagramID (high byte is hardcoded as 0x00)00129 0000 	;	Flags (3 bits) and Fragment offset (13 bits) hardcoded as 0x000000130 0000 	;	Time to Live (1 byte) hardcoded as 0x6400131 0000 	;	Proticol (1 byte) ipcol00132 0000 	;	Header Checksum (2 bytes) checkhi:checklo00133 0000 	;	Source IP Address (4 bytes) myip00134 0000 	;	Destination IP Address (4 bytes) remip00135 0000 	;	Data 0..1480 bytes00136 0000 	;00137 0000 	; ICMP Message format for "PING": this all goes into the data field in an IP Datagram00138 0000 	;	Type (1 byte) 0 ICMP_EReply, or 8 ICMP_ERequest00139 0000 	;	Code (1 byte) 000140 0000 	;	ICMP Checksum (2 bytes)	We only read down to here00141 0000 	;	Identifier (2 bytes)		 the rest gets send back as is.00142 0000 	;	Sequence Number (2 bytes)00143 0000 	;	Optional Data 0..1472 bytes00144 0000 	;00145 0000 	; UDP User Datagram Protocol "user datagram" (ipcol from IP Datagram = PUDP):00146 0000 	;    this all goes into the data field in an IP Datagram00147 0000 	;00148 0000 	;	pseudo header (8 bytes) not send with the data00149 0000 	;	    Source IP Address from IP Datagram (4 bytes)00150 0000 	;	    Dest IP Address from IP Datagram (4 bytes)00151 0000 	;	    0x00 byte00152 0000 	;	    ipcol byte from IP Datagram (PUDP=17)00153 0000 	;	    UDP message length (2 bytes) including header,00154 0000 	;	     not including the pseudo header (8..1480)00155 0000 	;00156 0000 	;	Source port (2 bytes) 0 or where to send replies00157 0000 	;	Destination port (2 bytes) application port00158 0000 	;	Message length (2 bytes) including header (8..1480)00159 0000 	;	Checksum (2 bytes) (optional 0 of csum value 0=FFFF)00160 0000 	;	    if used the pseudo-header must be included in the csum00161 0000 	;	Data (0..1472 bytes)00162 0000 	;00163 0000 	; TCP  Transmission Control Protocol (ipcol from IP Datagram = PTCP):00164 0000 	;     this all goes into the data field in an IP Datagram00165 0000 	;00166 0000 	;	pseudo header (8 bytes) not send with the data00167 0000 	;	    Source IP Address from IP Datagram (4 bytes)00168 0000 	;	    Dest IP Address from IP Datagram (4 bytes)00169 0000 	;	    0x00 byte00170 0000 	;	    ipcol byte from IP Datagram (PUDP=17)00171 0000 	;	    Message length (2 bytes) including header,00172 0000 	;	     not including the pseudo header (8..1480)00173 0000 	;00174 0000 	;	Source Port (2 bytes)00175 0000 	;	Destination Port (2 bytes)00176 0000 	;	Sequence Number (4 bytes) location in the senders byte stream this data fits00177 0000 	;	Acknowledgment Number (4 bytes) byte number the source expects next,00178 0000 	;		 for bi-directional transfer.00179 0000 	;	Header length (4 bits) length of header in 32 bit words (5)00180 0000 	;	Reserved (6 bits)00181 0000 	;	Code Bits (6 bits)00182 0000 	;	Window (2 bytes) aka buffer size of source, mine is 32 bytes, their's is ignored.00183 0000 	;	Checksum (2 bytes) (optional 0 of csum value 0=FFFF)00184 0000 	;	    if used the pseudo-header must be included in the csum00185 0000 	;	Urgent Pointer (2 bytes) incoming ones are ignored00186 0000 	;	Options (if used must be in 32 bit chuncks), MSS sent, incoming ones are ignored00187 0000 	;	Data (1480-header length)00188 0000 	;00189 0000 	;00190 0000 	; TTFTP Tiny Trivial File Transport Protocol (this all goes in the Data field of a TCP segment00191 0000 	;  uses the TFTPPort00192 0000 	;  incoming data on this port is written to the eeROM (serial eeproms)00193 0000 	;00194 0000 	;	Length (1 byte) 1..3200195 0000 	;	Address (3 bytes) big endian 0..00196 0000 	;	Data (Length bytes)00197 0000 	;00198 0000 	;**********************************************************************00199 0000 	;00200 0000 	;Constants for conditional assemblyHighland Greeley PIC.asm                                              Page: 3500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm00201 0000 	;00202 0000 		constant	ARPsNeverDie=100203 0000 		constant	TTFTPtoSRAM=1	;TTFTP to SRAM00204 0000 		constant	TTFTPtoEEROM=1	;TTFTP to eeRom00205 0000 		constant	EnableEEROMCopy=0	;Allow EEROM to be copied to SRAM00206 0000 	;00207 0000 		constant	SRAM_Strings=1	;Strings are stored in SRAM00208 0000 		constant	CodeMemStrings=0	;Strings are stored in Code Memory00209 0000 		constant	ISR_Timers=0	;# of Timers used 0..600210 0000 		constant	UsesTimerFinished=000211 0000 		constant	testing=0	;NIC/ether status chars to Disp00212 0000 		constant	ErrMsgsToLCD=1	;NIC/ether errors to Disp00213 0000 		constant	testingRTC=0	;set_rtc at powerup00214 0000 		constant	ARPtesting=0	;Show arp msgs on LCD00215 0000 		constant	UDPtesting=0	;Show UDP msgs on LCD00216 0000 		constant	TFTPtesting=0	;Show TFTP msgs on LCD00217 0000 		constant	ShowSplashScrn=1	;Show the splash screen at startup00218 0000 		constant	UsesTCPIPDataPort=000219 0000 		constant	UsesUDP=100220 0000 		constant	UseUCEGIs=0	;Uses upper case EGI's00221 0000 		constant	UsesHashEGIs=000222 0000 		constant	oldCode=0	;kills old code without deleting it00223 0000 	;  analog IO00224 0000 		constant	UsesMAX110=0	;MAXIM MAX110 14bit ADC00225 0000 		constant	MAXANA0=0	; pH probe00226 0000 		constant	MAXANA1=0	; not used00227 0000 		constant	AnyANAUsed=0	;Set 0 if no Analog IO to save memory00228 0000 		constant	StdANA0=0	;Standard Analog00229 0000 		constant	StdANA1=0	;Analog 1 is active?00230 0000 		constant	StdANA2=0	;Analog 2 is active?00231 0000 		constant	StdANA3=0	;Analog 3 is active?00232 0000 		constant	StdANA4=0	;Analog 4 is active?00233 0000 		constant	StdANA5=0	;Analog 5 is active?00234 0000 		constant	StdANA6=0	;Analog 6 is active?00235 0000 		constant	StdANA7=0	;Analog 7 is active?00236 0000 		constant	ANATest=0	;Display the first 3 Analog values?00237 0000 	;00238 0000 	; features control...00239 0000 		constant	UsesNIC=100240 0000 		constant	AllowReceiveBroadcast=000241 0000 		constant	UsesSRAM=100242 0000 		constant	UsesDataROM=1	;Uses Data ROM image from d.d file00243 0000 				; Requires SRAM_Strings00244 0000 		constant	UsesISR=000245 0000 		constant	UsesBootloader=1	;Tell LowStuff to call PwrUpTest00246 0000 		constant	UsesPushPop=000247 0000 		constant	UsesSRamPushPop=100248 0000 		constant	UsesSpeedTrap=0	;Travel Time, Speed and Acceleration00249 0000 				; Requires: (HasISR=0x80)00250 0000 		constant	UsesLCD=1	;Uses the 4x20 Optrix LCD00251 0000 0014 	LCD_ChrsPerLine	EQU	d'20'00252 0000 		constant	Useslcd_ReadData=100253 0000 		constant	UsesScrollMenu=000254 0000 		constant	UsesI2C=100255 0000 		constant	UsesEEROMFiles=100256 0000 		constant	UsesDataLogging=0	;Data logging to eeRom 0x008000-0x00FFFF00257 0000 		constant	UsesRS232BufIO=000258 0000 		constant	UsesRS232=0	;if 0 don't assm the RS232 code00259 0000 		constant	RS232Active=0	;RS232 port is enabled for output?00260 0000 		constant	RS232Config=0	;Get IP and data (xmodem)00261 0000 		constant	xmodemEEROM=0	;xmodem_recv00262 0000 		constant	HasRTC=0	;Has a Real Time Clock?00263 0000 		constant	UsesLDI0=1	;Latched data inputs 0..700264 0000 		constant	UsesLDI1=0	;Latched data inputs 8..1500265 0000 		constant	UsesLDI2=0	;Latched data inputs 16..2300266 0000 		constant	UsesLDI3=0	;Latched data inputs 24..3100267 0000 		constant	UsesLDO0=1	;Reset,LEDs, and LDO_700268 0000 		constant	UsesLDO1=1	;latched data outputs 8..1500269 0000 		constant	UsesLDO2=000270 0000 		constant	UsesLDO3=000271 0000 		constant	UsesDiv24x0A=000272 0000 		constant	UsesDiv16x16=000273 0000 	; the tests...00274 0000 		constant	RTCTest=0	;Display the RTC?00275 0000 		constant	Do_LD_Test=0	;run the LED and Button test00276 0000 		constant	Do_SRAM_Test=0	;run the SRAM (512KB) test00277 0000 		constant	Do_ZeroRAM=1	;Load 0x00 into SRAM00278 0000 		constant	Do_eeROM_Test=0	;run the eeROM test00279 0000 		constant	Do_RS232_Test=0	;run the RS232 test00280 0000 	;00281 0000 	; Optional feature overides00282 0000 		constant	Use_display_rtc=000283 0000 	;00284 0000 	;**********************************************************************00285 0000 	;00286 0000 		list	p=16f877,r=hex,W=0	;list directive to define processor00287 0000 		include	p16f877.inc	; processor specific variable definitions00001 0000 		LIST00002 0000 	; P16F877.INC  Standard Header File, Version 1.16    Microchip Technology, Inc.00391 0000 		NOLIST00392 0000 	;00288 0000 	;	00289 2007 3F72 		__CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _LVP_OFF & _DEBUG_OFF & _CPD_OFF 00290 0000 	;00291 0000 	; Code Protection Off, Watch Dog Off, Brown-Out Reset On, Power-Up Timer On,00292 0000 	; High-Speed Crystal, Write Enable Program Memory On, Low-Voltage Programming Off,00293 0000 	; In-Circuit Debugger Mode Off, Code Protect EEPROM Off00294 0000 	;00295 0000 	; '__CONFIG' directive is used to embed configuration data within .asm file.00296 0000 	; The lables following the directive are located in the respective .inc file.Highland Greeley PIC.asm                                              Page: 4500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm00297 0000 	; See respective data sheet for additional information on configuration word.00298 0000 	;00299 0000 	;00300 0000 	;=========================================================================================00301 0000 	;=========================================================================================00302 0000 	;Constants00303 0000 		include	SerialNo.inc00001 0000 	;*******************************************************************************00002 0000 	;00003 0000 	;    Filename: SerialNo.inc00004 0000 	;    Date:9/5/200400005 0000 	;    File Revision:1.000006 0000 	;00007 0000 	;    Author:David M. Flynn00008 0000 	;    Company:Oxford V.U.E., Inc.00009 0000 	;    Project: HPRR Highland Greeley00010 0000 	;    MAC:00 04 A3 00 00 1100011 0000 	;    IP:192.168.2.12400012 0000 	;    S/N:799900013 0000 	;00014 0000 	; 00015 0000 	;**********************************************************************00016 0000 	;00017 0000 	;    Notes:00018 0000 	;	There is no code in this file,00019 0000 	;	only Data and EQU's00020 0000 	;00021 0000 	;00022 0000 	;  Output boards (Slot/Board):00023 0000 	;    0/0, 0/1, 1/0, 1/1, 1/300024 0000 	;00025 0000 	;  Input boards (Slot/Board):00026 0000 	;00027 0000 	;00028 0000 	;**********************************************************************00029 0000 	; Revision History00030 0000 	;00031 0000 	; 1.0    9/5/2004	First created00032 0000 	;00033 0000 	;**********************************************************************00034 0000 	;00035 0000 		constant SaveStatusRecords=000036 0000 		constant UsesBlockCmdTable=100037 0000 		constant UsesSyncBP=100038 0000 		constant UsesSpeaker=0		;doesn't have one00039 0000 		constant UsePsuedoReset=000040 0000 		constant UsesBlockModules=000041 0000 		constant HasAThrottle=100042 0000 0006 	MyCabNum	EQU	0x0600043 0000 		constant UsesInputTester=100044 0000 		constant UsesOutputTester=100045 0000 		constant StartupInSvsMode=100046 0000 		constant BlockToBrainBds=100047 0000 		constant UsesGetCabNumX=100048 0000 		constant UsesShowInputs=100049 0000 		constant UsesBlockCmdTest=100050 0000 		constant UsesAutoSMCtrl=100051 0000 		constant LightUnusedSMLEDs=100052 0000 		constant HasBlkRelays=100053 0000 		constant HasBlockDetectors=100054 0000 		constant Has_OB_OccLEDs=000055 0000 		constant UsesDisableUHSelector=000056 0000 		constant CabCount=600057 0000 		constant UsesSeg0DataAccess=100058 0000 		constant UsesVistaSelect=000059 0000 		constant UsesInOutC=100060 0000 	;00061 0000 004B 	kMaxBlockNum	EQU	d'75'	;0..75 (76 blocks)00062 0000 	;00063 0000 	;00064 0000 0048 	#Define	SignonString	'HI/GY v1.0b1'00065 0000 	;00066 0000 1F3F 	kSerialNumber	EQU	d'7999'	; Serial Number <<<<<<< fix00067 0000 	;00068 0000 0001 	EndOfEEROM	EQU	0x01	;0x010000 is the first address past the end00069 0000 	; EEPROMs must be installed in 64KB increments 1=64KB, 2=128KB, 3=192KB, 4=256KB...8=512KB00070 0000 		constant	Using64KBEEPROM=0	;EEPROM addressing 0:15+3, 1:16+300071 0000 	;00072 0000 	;00073 0000 0000 	kDefaultIOCtrl	EQU	b'00000000'00074 0000 	;00075 0000 0000 	MAC_Addr0	EQU	0x00	;MSB of MAC Address (48 bit number)00076 0000 0004 	MAC_Addr1	EQU	0x04	; first 3 bytes are assigned by00077 0000 00A3 	MAC_Addr2	EQU	0xA3	; IEEE00078 0000 0000 	MAC_Addr3	EQU	0x00	;low 2 bytes are in eprom 0 and 100079 0000 	;00080 0000 0011 	kMAClsw	EQU	0x0011	;low 16 bits of MAC address00081 0000 00C0 	kIPmsb	EQU	d'192'00082 0000 00A8 	kIPb2	EQU	d'168'00083 0000 0002 	kIPb3	EQU	d'2'00084 0000 007C 	kIPlsb	EQU	d'124'00085 0000 0008 	kCSum	EQU	d'8'	;csum of last 6 bytes00086 0000 				; all 7 bytes must add up to xxFF00087 0000 	;00088 0000 	;00089 0000 	;00304 0000 	;00305 0000 		include	BrainEQUs.inc00001 0000 		subtitle	"BrainEQUs.inc"Highland Greeley PIC.asm   "BrainEQUs.inc"                               Page: 5500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BrainEQUs.inc00002 0000 		page00003 0000 	;===========================================================================================00004 0000 	;00005 0000 	;  FileName: BrainEQUs.inc00006 0000 	;  Date: 5/6/0600007 0000 	;  File Version: 1.1.100008 0000 	;  00009 0000 	;  Author: David M. Flynn00010 0000 	;  Company: Oxford V.U.E., Inc.00011 0000 	;00012 0000 	;============================================================================================00013 0000 	; Notes:00014 0000 	;  This file contains only EQU's.00015 0000 	;  These EQU's are common to most Brain (GP CPU) projects.00016 0000 	;00017 0000 	;============================================================================================00018 0000 	; Revision History00019 0000 	;00020 0000 	; 1.1.1 5/6/2006	Added ADC EQUs, Baud3840000021 0000 	; 1.1   12/2/2004	Added Param70... and HasISR to this file.00022 0000 	; 1.0   10/29/2004	Copied EQU's from Vis-U-Etch7.asm00023 0000 	;00024 0000 	;============================================================================================00025 0000 	;00026 0000 00FF 	All_In	EQU	0xFF00027 0000 0000 	All_Out	EQU	0x0000028 0000 	;00029 0000 	;=========================================================================================00030 0000 	;Conditions00031 0000 		if UsesISR00033 0000 		else00034 0000 0000 	HasISR	EQU	0x00	;used to enable interupts 0x80=true 0x00=false00035 0000 		endif00036 0000 	;00037 0000 	;---------------------------------------------------------00038 0000 	; Baud rates for Fosc= 19.6608MHz00039 0000 	; Low speed async (Baud Fosc/(64(X+1)))00040 0000 00FF 	Baud1200	EQU	0xFF	;1200 0% Error00041 0000 007F 	Baud2400	EQU	0x7F	;2400 0% Error00042 0000 003F 	Baud4800	EQU	0x3F	;4800 0% Error00043 0000 001F 	Baud9600	EQU	0x1F	;9600 0% Error00044 0000 000F 	Baud19200	EQU	0x0F	;19200 0% Error00045 0000 0009 	Baud28800	EQU	0x09	;30720 Tx with 2 stop bits00046 0000 0008 	Baud33600	EQU	0x08	;3413300047 0000 0007 	Baud38400	EQU	0X07	;38400 0% Error00048 0000 0004 	Baud57600	EQU	0x04	;6144000049 0000 	;Baud115200	EQU	0x02	;102.4 12% Error00050 0000 	; Low speed async (Baud=Fosc/(16(X+1)))00051 0000 	;Baud115200	EQU	0x0A	;111.709 3% Error00052 0000 	;00053 0000 	;----------------------------00054 0000 	; Timer 2 stuff00055 0000 	;00056 0000 007E 	T2CON_Value	EQU	b'01111110'	;preS 1:16 postS 1:1600057 0000 004B 	PR2_Value	EQU	d'75'	;3.90625 miliseconds00058 0000 	;00059 0000 0078 	TIMER1_DIV	EQU	d'120'	;Fosc/4/8/(120*256)=2000060 0000 	;bit 0 is used for R/W 1/0, bits 3:1 are the device # 0..7, each device can hold 32k bytes00061 0000 00A0 	EEROM_ADDR	EQU	0xA0	;i2c addr for eerom 000062 0000 0020 	ROMPAGE_LEN	EQU	d'32'	; eerom buffer size00063 0000 0080 	XBLOCK_LEN	EQU	d'128'	;xmodem block length00064 0000 0006 	MACLEN	EQU	0x0600065 0000 0004 	IPAddrLEN	EQU	0x0400066 0000 000C 	ROM_FNAMELEN	EQU	0x0C	;Maximum filename size00067 0000 0064 	MAXFILES	EQU	d'100'	;Maximum files in dir00068 0000 	;00069 0000 	;ADCON0 stuff00070 0000 0081 	ADCON0Val	EQU	0x81	;div32,CH0,ON00071 0000 0080 	ADC_CLOCK_DIV_32	EQU	0x8000072 0000 0038 	ADC_CLOCK_DIV_Mask	EQU	0x3800073 0000 00C7 	CHS_NoneMask	EQU	0xC7	;Channel select none aka zero00074 0000 0000 	CHS0Mask	EQU	0x00	; bits for ch 000075 0000 0008 	CHS1Mask	EQU	0x08	; bits for ch 100076 0000 0010 	CHS2Mask	EQU	0x10	; bits for ch 200077 0000 0018 	CHS3Mask	EQU	0x18	; bits for ch 300078 0000 0020 	CHS4Mask	EQU	0x20	; bits for ch 400079 0000 0028 	CHS5Mask	EQU	0x28	; bits for ch 500080 0000 0030 	CHS6Mask	EQU	0x30	; bits for ch 600081 0000 0038 	CHS7Mask	EQU	0x38	; bits for ch 700082 0000 	;00083 0000 	;00084 0000 	;ADCON1 stuff00085 0000 0080 	All_Analog	EQU	0x80	;AN0..AN7 w/ Right Justified00086 0000 0000 	All_AnalogLeft	EQU	0x00	;AN0..AN7 w/ Left Justified00087 0000 0081 	MaxAnaWVref	EQU	0x81	;AN0..AN2,Vref+,AN4..AN700088 0000 0082 	Analog5Chnls	EQU	0x82	;AN0..AN400089 0000 0002 	Analog5ChnlsLeft	EQU	0x02	;AN0..AN400090 0000 0083 	Analog4ChnlsWVref	EQU	0x83	;AN0..AN2,Vref+,AN400091 0000 0084 	RA0_RA1_RA3_ANALOG	EQU	0x84	;AN0,AN1,AN3 w/ Right Justified00092 0000 0085 	Analog2ChnlsWVref	EQU	0x85	;AN0,AN1,Vref+00093 0000 0087 	All_Digital	EQU	0x87	;No AN w/ Right Justified of ADRESH00094 0000 0088 	Analog6ChnlsWVref	EQU	0x88	;AN0,AN1,Vref-,Vref+,AN4..AN700095 0000 0089 	Analog6Chnls	EQU	0x89	;AN0..AN500096 0000 008A 	Analog5ChnlsWVref	EQU	0x8A	;AN0..AN2,Vref+,AN4,AN500097 0000 008B 	Analog4ChnlsW2Vref	EQU	0x8B	;AN0,AN1,Vref-,Vref+,AN4,AN500098 0000 008C 	Analog3ChnlsW2Vref	EQU	0x8C	;AN0,AN1,Vref-,Vref+,AN400099 0000 008D 	Analog2ChnlsW2Vref	EQU	0x8D	;AN0,AN1,Vref-,Vref+00100 0000 008E 	RA0_ANALOG	EQU	0x8E	;RA0 w/ Right Justified00101 0000 008F 	Analog1ChnlW2Vref	EQU	0x8F	;AN0,Vref-,Vref+00102 0000 	;Highland Greeley PIC.asm   "BrainEQUs.inc"                               Page: 6500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BrainEQUs.inc00103 0000 000A 	LEDTIME	EQU	d'10'	;Interval for toggling system LED 10 ticks00104 0000 0040 	TXBUFFLEN	EQU	d'64'	;64 byte buffer A0..DF00105 0000 	;00106 0000 	;1:8 prescale,Osc Enabled, Timer on, etc see page 5100107 0000 0035 	TIMER1_SET	EQU	0x35	;1:8 Prescale, Osc Off,Internal Fosc/4 clock, Enabled00108 0000 	;00109 0000 	;ascii00110 0000 0001 	SOH	EQU	0x0100111 0000 0004 	EOT	EQU	0x0400112 0000 0006 	ACK	EQU	0x0600113 0000 000A 	LF	EQU	0x0A00114 0000 000D 	CR	EQU	0x0D00115 0000 0015 	NAK	EQU	0x1500116 0000 0018 	CAN	EQU	0x1800117 0000 001B 	ESC	EQU	d'27'00118 0000 	;00119 0000 0806 	PCOL_ARP	EQU	0x0806	;Protocol type: ARP 00120 0000 0800 	PCOL_IP	EQU	0x0800	;IP00121 0000 0800 	ARPPRO	EQU	0x0800	00122 0000 	; 00123 0000 0001 	HTYPE	EQU	0x000100124 0000 0001 	ARPREQ	EQU	0x0001	;ARP request & response IDs 00125 0000 0002 	ARPRESP	EQU	0x0002 00126 0000 0003 	RARPREQ	EQU	0x0003	;RARP request & response IDs 00127 0000 0004 	RARPRESP	EQU	0x000400128 0000 	; 00129 0000 0001 	PICMP	EQU	1	;IP protocol values: ICMP 00130 0000 0000 	ICMP_EReply	EQU	0	;ICMP type echo reply00131 0000 0008 	ICMP_ERequest	EQU	8	;ICMP type echo request00132 0000 	;00133 0000 	; IP ipcol values00134 0000 0006 	PTCP	EQU	6	;TCP 00135 0000 0011 	PUDP	EQU	d'17'	;UDP 00136 0000 	; 00137 0000 000E 	ETHHDR_LEN	EQU	MACLEN+MACLEN+2	;Ethernet frame header length 00138 0000 0014 	IPHDR_LEN	EQU	d'20'	;IP, TCP and ICMP header lengths 00139 0000 0014 	TCPHDR_LEN	EQU	d'20' 00140 0000 0008 	UDPHDR_LEN	EQU	d'8'00141 0000 0004 	ICMPHDR_LEN	EQU	4	;(only include type, code & csum in ICMP hdr) 00142 0000 0004 	TCPOPT_LEN	EQU	4	;Length of TCP MSS option 00143 0000 0018 	TCPSYN_LEN	EQU	d'24'	;TCP header length including MSS option	00144 0000 00D4 	MAXPING_LEN	EQU	d'212'	;Max length of Ping data 00145 0000 0012 	NICETHERHEADER_LEN	EQU	0x12	;NIC hardware packet header length00146 0000 000E 	ETHERHEADER_LEN	EQU	0x0E00147 0000 0020 	eeROMBuffLen	EQU	0x20	; size of eeROM buffer in RAM00148 0000 	; 00149 0000 	;TCP segment code bits00150 0000 0001 	TFIN	EQU	0x01	;Option flags: no more data (sender is done)00151 0000 0002 	TSYN	EQU	0x02	;synchronize sequence numbers 00152 0000 0004 	TRST	EQU	0x04	;reset connection 00153 0000 0008 	TPUSH	EQU	0x08	;this segment requests a push of buffered data 00154 0000 0010 	TACK	EQU	0x10	;acknowledgement field is valid00155 0000 0020 	TURGE	EQU	0x20	;urgent pointer field is valid00156 0000 	; 00157 0000 05B4 	TCP_MSS	EQU	d'1460'	;Max Segment Size for TCP 00158 0000 0BB8 	TCP_WDWSize	EQU	d'3000'	;Max Window size for buffer fit00159 0000 	;00160 0000 	;TCP/UDP Ports00161 0000 0007 	ECHOPORT	EQU	d'7'	;udp/tcp Port numbers: echo 00162 0000 000D 	DAYPORT	EQU	d'13'	;udp/tcp daytime 00163 0000 0025 	TimePort	EQU	d'37'	;udp/tcp time00164 0000 0039 	TermPort	EQU	d'57'	;udp/tcp any private terminal access00165 0000 003B 	FilePort	EQU	d'59'	;udp/tcp any private file service00166 0000 0043 	BOOTPSPort	EQU	d'67'	;udp/tcp BOOTP or DHCP server00167 0000 0044 	BOOTPCPort	EQU	d'68'	;udp/tcp BOOTP or DHCP client00168 0000 0045 	TFTPPort	EQU	d'69'	;udp/tcp Trivial File Transfer Protocol00169 0000 0050 	HTTPORT	EQU	d'80'	;udp/tcp World Wide Web HTTP00170 0000 0052 	xferPort	EQU	d'82'	;udp/tcp XFER Utility00171 0000 0057 	IPDATAPORT	EQU	d'87'	;udp/tcp any private terminal link00172 0000 	;00173 0000 003B 	TTFTPtoSRAMPort	EQU	FilePort00174 0000 0045 	TTFTPtoEEROMPort	EQU	TFTPPort00175 0000 0039 	TCPRS232Port	EQU	TermPort00176 0000 	;00177 0000 	;PCLATH values for the diferent segments00178 0000 0000 	Seg0Val	EQU	0x0000179 0000 0008 	Seg1Val	EQU	0x0800180 0000 0010 	Seg2Val	EQU	0x1000181 0000 0018 	Seg3Val	EQU	0x1800182 0000 	;00183 0000 	;PortA bits00184 0000 0004 	SystemLED	EQU	400185 0000 	;00186 0000 0010 	SystemLEDMask	EQU	0x1000187 0000 	;00188 0000 	;PortB bits00189 0000 0070 	PORTB_Value	EQU	0x70	;init value for B00190 0000 0000 	Select0	EQU	0x00	;low 8 address bits00191 0000 0001 	Select1	EQU	0x01	;middle 8 address bits00192 0000 0002 	Select2	EQU	0x02	;high 8 address bits00193 0000 0003 	SelectSRAM	EQU	0x03	;Static Ram CS pin00194 0000 0004 	SelectNIC	EQU	0x04	;NIC chip select00195 0000 0005 	SelectRTC	EQU	0x05	;RTC chip select00196 0000 0006 	Select6	EQU	0x06	;J2-31 Quad DAC00197 0000 0007 	Select7	EQU	0x07	;J2-32 Latched Data In 200198 0000 0008 	SelectLDO0	EQU	0x08	;Latched Data Out 000199 0000 0009 	SelectLDO1	EQU	0x09	;Latched Data Out 100200 0000 000A 	SelectLDI0	EQU	0x0A	;Latched Data In 000201 0000 000B 	SelectLDI1	EQU	0x0B	;Latched Data In 100202 0000 000C 	Select12	EQU	0x0C	;J1-33Highland Greeley PIC.asm   "BrainEQUs.inc"                               Page: 7500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BrainEQUs.inc00203 0000 000D 	Select13	EQU	0x0D	;J1-34 Latched Data Out 200204 0000 000E 	Select14	EQU	0x0E	;Oxidider Pulse accumulator J1-3500205 0000 000F 	Select15	EQU	0x0F	;Acid Pulse accumulator J1-3600206 0000 0004 	SelectEnable	EQU	4	;active low enables 1 of 16 select lines00207 0000 0005 	IORead	EQU	500208 0000 0006 	IOWrite	EQU	600209 0000 0007 	LCD_E	EQU	700210 0000 00F0 	AddressMask	EQU	0xF000211 0000 	;00212 0000 	;PortC bits00213 0000 0002 	CCP1	EQU	200214 0000 0001 	CCP2	EQU	100215 0000 0002 	RTS	EQU	200216 0000 0003 	SCL	EQU	300217 0000 0004 	SDA	EQU	400218 0000 0005 	CTS	EQU	500219 0000 	;00220 0000 	;PortD bits00221 0000 0004 	LCD_AS	EQU	400222 0000 0005 	LCD_RW	EQU	500223 0000 	;00224 0000 	;=======================================================================================================00225 0000 	;  Common Ram 70-7F same for all banks00226 0000 	;      except for ISR_W_Temp these are used for paramiter passing and temp vars00227 0000 	;=======================================================================================================00228 0000 0070 	Param70	EQU	0x7000229 0000 0071 	Param71	EQU	0x7100230 0000 0072 	Param72	EQU	0x7200231 0000 0073 	Param73	EQU	0x7300232 0000 0074 	Param74	EQU	0x7400233 0000 0075 	Param75	EQU	0x7500234 0000 0076 	Param76	EQU	0x76	;PushParams76..7D 00235 0000 0077 	Param77	EQU	0x77	;scratch pad byte00236 0000 0078 	Param78	EQU	0x78	;return value & scratch pad byte00237 0000 0079 	Param79	EQU	0x79	;return value & scratch pad byte00238 0000 007A 	Param7A	EQU	0x7A	;return value & scratch pad byte00239 0000 007B 	Param7B	EQU	0x7B00240 0000 007C 	Param7C	EQU	0x7C00241 0000 007D 	Param7D	EQU	0x7D00242 0000 007E 	ISR_W_Temp	EQU	0x7E	;used by ISR00243 0000 007F 	Param7F	EQU	0x7F	;String Ptr and W_Temp for Push/Pop00244 0000 	;00306 0000 	;00307 0000 00FF 	BaudRate	EQU	Baud120000308 0000 	;00309 0000 007F 	LDO_0_InitVal	EQU	0x7F00310 0000 0000 	LDO_1_InitVal	EQU	0x0000311 0000 0000 	LDO_2_InitVal	EQU	0x0000312 0000 	;00313 0000 002F 	TRISAValue	EQU	0x2F	;low 4 bits in System LED out00314 0000 0000 	TRISBValue	EQU	0x00	;All Output00315 0000 0007 	TRISEValue	EQU	0x07	;aka all in PSP off00316 0000 	;00317 0000 		if AnyANAUsed00319 0000 		else00320 0000 0087 	ADCON1_Value	EQU	All_Digital00321 0000 		endif00322 0000 	;00323 0000 	;================================================================================================00324 0000 	;  Bank0 Ram 020h-06Fh00325 0000 	;00326 0000 	;  Note: there are x bytes free00327 0000 	;  The fisrt bytes in this bank must be maintained, however bytes after nicin.nic.stat00328 0000 	;   may be reused as temp vars in modal routines which don't use NICStuff routines.00329 0000 	;00330 0000 	;================================================================================================00331 0000 		ORG	0x2000332 0020 	lastc	RES	1	;part of tickcount timmer00333 0021 	tickcount	RES	1	;Timer tick count00334 0022 	ledticks	RES	1	;LED tick count00335 0023 	;00336 0023 	ScrnNumber	RES	100337 0024 	Flags24	RES	100338 0025 	Flags25	RES	100339 0026 	Flags26	RES	100340 0027 	Flags27	RES	100341 0028 	Flags28	RES	100342 0029 	; additional flag bytes go here...00343 0029 	CGI_BtnQueued	RES	1	; 1 Queued Btn from CGI00344 002A 	;00345 002A 	myeth0	RES	1	;My MAC Address 6 bytes  msb00346 002B 	myeth1	RES	100347 002C 	myeth2	RES	100348 002D 	myeth3	RES	100349 002E 	myeth4	RES	100350 002F 	myeth5	RES	1	;  lsb00351 0030 	myip_b3	RES	1	; 4 bytes  My IP adress  MSB00352 0031 	myip_b2	RES	100353 0032 	myip_b1	RES	100354 0033 	myip_b0	RES	1	;LSB00355 0034 	next_page	RES	1	; NIC page number00356 0035 	curr_rx_page	RES	1	; Current NIC Rx page00357 0036 	concount_b0	RES	1	;WORD Connection count (for high word of my seq num) 00358 0037 	concount_b1	RES	100359 0038 	; NIC hardware packet header NICETHERHEADER00360 0038 	nicin.nic.stat	RES	1	;Error status00361 0039 	nicin.nic.next	RES	1	;Pointer to next block00362 003A 	nicin.nic.len	RES	2	;Length of this frame incl. CRC 2 bytes00363 003C 	; Ethernet frame header ETHERHEADER00364 003C 	nicin.eth.dest	RES	6	;Destination MAC addresses (6 bytes) Should be mineHighland Greeley PIC.asm   "BrainEQUs.inc"                               Page: 8500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm00365 0042 	nicin.eth.srce	RES	6	;Source MAC addresses (6 bytes) Where this datagram is from00366 0048 	nicin.eth.pcol	RES	2	;Protocol (PCOL_ARP or PCOL_IP) (2 bytes MSB first)00367 004A 	tpxdlen	RES	2	;Length of external data in Tx frame (2 bytes)00368 004C 	checkhi	RES	1	;The working checksum, may include d_checkhi00369 004D 	checklo	RES	100370 004E 	d_checkhi	RES	1	;Checksum value for data 00371 004F 	d_checklo	RES	100372 0050 	rxin	RES	2	;Length of data found in ethernet frame 46..1500 (NIC RAM is buffer)00373 0052 	rxout	RES	2	;Offset into Rx buffer. Done reading when rxout=rxin.00374 0054 	txin	RES	1	;Offset to txbuff. txbuff+txin=RAM address of next byte.00375 0055 	ipcol	RES	1	;ipcol  IP protocol byte (PICMP, PTCP or PUDP)		00376 0056 	remip_b3	RES	1	;remote IP address (4 bytes) MSB00377 0057 	remip_b2	RES	100378 0058 	remip_b1	RES	100379 0059 	remip_b0	RES	1	;LSB00380 005A 	locport_b0	RES	1	;locport WORD ..and TCP/UDP port numbers00381 005B 	locport_b1	RES	100382 005C 	remport_b0	RES	1	;remport WORD00383 005D 	remport_b1	RES	1 00384 005E 	rseq_b3	RES	1	;rseq LWORD  TCP sequence & acknowledge values00385 005F 	rseq_b2	RES	100386 0060 	rseq_b1	RES	100387 0061 	rseq_b0	RES	100388 0062 	rack_b3	RES	1	;rack LWORD00389 0063 	rack_b2	RES	100390 0064 	rack_b1	RES	100391 0065 	rack_b0	RES	100392 0066 	rflags	RES	1	; Rx flags00393 0067 	tflags	RES	1	; Tx flags00394 0068 	rpdlen_b0	RES	1	;Length of data in Rx buffer 00395 0069 	rpdlen_b1	RES	100396 006A 	iplen_b0	RES	1	;iplen 2 bytes low>high  Incoming/outgoing IP length word00397 006B 	iplen_b1	RES	100398 006C 	;00399 006C 	;00400 006C 		if AnyANAUsed00402 006C 		endif00403 006C 	;00404 006C 	PWAccessCode	RES	1	;is 0 or a password code from IPDatagramID00405 006D 	;00406 006D 	;******************************************************************00407 006D 	;CAUTION: these (52 bytes) are volitile locations00408 006D 	; DO NOT USE if NIC is active00409 006D 	; Check to ensure not to overwrite data past iplen_b100410 006D 	;00411 006D 		ORG	nicin.nic.stat00412 0038 	PM_Addr_Lo	RES	1	;Prog mem dest address00413 0039 	PM_Addr_Hi	RES	100414 003A 	PM_Data_Lo	RES	1	;Current data00415 003B 	PM_Data_Hi	RES	100416 003C 	PM_StopAddrL	RES	1	;Last address + 100417 003D 	PM_StopAddrH	RES	100418 003E 	PM_CSumL	RES	1	;Checksum00419 003F 	PM_CSumH	RES	100420 0040 	PM_FileNum	RES	1	;File number 0=b.b, 1=b1.b, etc.00421 0041 	;00422 0041 	;******************************************************************00423 0041 	;00424 0041 	;Flags24 bits00425 0041 	;00426 0041 	;Flags25 bits00427 0041 0025 	#Define	DispDec2pl	Flags25,000428 0041 0025 	#Define	DispDec3pl	Flags25,100429 0041 0025 	#Define	BtnDebounce	Flags25,2	;set when any button is found00430 0041 	;00431 0041 0025 	#Define	PWGood	Flags25,3	;Set wen a password is good00432 0041 0025 	#Define	ClrLine	Flags25,400433 0041 	;00434 0041 0025 	#Define	DispLSpaces	Flags25,7	;Show leading spaces00435 0041 	;00436 0041 	;Flags26 bits00437 0041 0026 	#Define	atend	Flags26,100438 0041 0026 	#Define	checkflag	Flags26,200439 0041 0004 	checkflagMask	EQU	0x0400440 0041 0026 	CheckFlagFileReg	EQU	Flags2600441 0041 0026 	#Define	SendToLCD	Flags26,400442 0041 0026 	#Define	SendRS232	Flags26,500443 0041 0026 	#Define	escaped	Flags26,600444 0041 	;00445 0041 	;Flags27 bits00446 0041 0027 	#Define	NumsToRam	Flags27,000447 0041 0027 	#Define	Disp_LZO	Flags27,100448 0041 0027 	#Define	DispDec1pl	Flags27,200449 0041 0027 	#Define	Disp_NLS	Flags27,300450 0041 0027 	#Define	NumsToNic	Flags27,4	;divert numbers from DisplaysW to putnic_checkbyte00451 0041 	;00452 0041 	;Flags28 bits00453 0041 0028 	#Define	ServiceMode	Flags28,0	;allow eerom erase and stuff00454 0041 	;00455 0041 	;========================================================================================================00456 0041 	;  Bank1 Ram A0h-DFh 80 bytes00457 0041 	;   used as I/O buffer, keyboard buffer00458 0041 	;========================================================================================================00459 0041 		ORG	0xA000460 00A0 	txbuff	RES	0x40	;Tx buffer TXBUFFLEN 0A0..0DF00461 00E0 	;00462 00E0 	; temp arp record00463 00E0 	;  This struct overlaps the end of txbuff, but since this data is used at the beginning an arp message00464 00E0 	;  any message large enough to overwrite these arp structures would be done with this data early on.00465 00E0 	;  The bytes (ar_op..ar_tpa) are an arp message the bytes (ae_state..ar_spa) are cache table fieldsHighland Greeley PIC.asm   "BrainEQUs.inc"                               Page: 9500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm00466 00E0 	;  stored in the cache table. They are overlapped like this to save ram00467 00E0 		ORG	0xD000468 00D0 	ae_state	RES	1	; state of this AR cache entry00469 00D1 0000 	AS_FREE	EQU	0	; this arp cache entry is free00470 00D1 0001 	AS_PENDING	EQU	1	; entry is used but incomplete00471 00D1 0002 	AS_RESOLVED	EQU	2	; entry has been resolved00472 00D1 	;00473 00D1 	ae_attempts	RES	1	; number of retries so far00474 00D2 	ae_ttl	RES	1	; time to live00475 00D3 000A 	ATTL_Max	EQU	d'10'	; re-ARP every ATTL_Max datagrams00476 00D3 	;00477 00D3 	; These next fields are hard coded to save ram00478 00D3 	;  ar_hwtype	RES	2	; hardware type (HTYPE)00479 00D3 	;  ar_prtype	RES	2	; protocol type (ARPPRO)00480 00D3 	;  ar_hwlen	RES	1	; hardware address len (MACLEN)00481 00D3 	;  ar_prlen	RES	1	; protocol address len (IPAddrLEN)00482 00D3 	ar_op	RES	2	; operation (1 ARPREQ, 2 ARPRESP, 3 RARPREQ, or 4 RARPSESP)00483 00D5 	ar_sha	RES	MACLEN	; sender's hardware address00484 00DB 	ar_spa	RES	IPAddrLEN	; sender's protocol address00485 00DF 	ar_tha	RES	MACLEN	; target's hardware address00486 00E5 	ar_tpa	RES	IPAddrLEN	; target's protocol address00487 00E9 	;00488 00E9 	; The cache table used ARP_TSIZE * ARP_TELEN bytes at 00489 00E9 0020 	ARP_TSIZE	EQU	d'32'	; cache table entries 00490 00E9 0010 	ARP_TELEN	EQU	d'16'	; cache entry length00491 00E9 00F0 	ARP_TELEN_mask	EQU	0xF0	; anded with SRAM address to get back to00492 00E9 				;  the beginning of an entry00493 00E9 	;00494 00E9 	;========================================================================================================00495 00E9 	;========================================================================================================00496 00E9 	;  Bank2 Ram 110h-16Fh (96 bytes)00497 00E9 	;  There are x Bytes free00498 00E9 	;   everything in this bank except IPDatagramID is scratch pad space for various routines00499 00E9 	;   and in most cases serves more than perpose00500 00E9 	;========================================================================================================00501 00E9 		ORG	0x11000502 0110 	;Filename block structure (19 bytes)00503 0110 	romdir.f.len	RES	2	;word Length of file in bytes00504 0112 	romdir.f.start	RES	2	;word Start address of file data in ROM00505 0114 	romdir.f.check	RES	2	;word TCP checksum of file00506 0116 	romdir.f.flags	RES	1	;byte Embedded Gateway Interface (EGI) flags00507 0117 	; Embedded Gateway Interface (EGI) flag values00508 0117 0001 	EGI_ATVARS	EQU	0x01	;'@' variable substitution scheme00509 0117 0116 	#DEFINE	EGI_ATVARS_bit	romdir.f.flags,000510 0117 0002 	EGI_HASHVARS	EQU	0x02	;'#' and '|' boolean variables00511 0117 0116 	#DEFINE	EGI_HASHVARS_bit	romdir.f.flags,100512 0117 0116 	#DEFINE	End_Of_File	romdir.f.flags,7	;bit is set when last byte is read00513 0117 	;00514 0117 	romdir.f.name	RES	d'12'	;(ROM_FNAMELEN)12 bytes Lower-case filename with extension00515 0123 	;00516 0123 	;TTFTP data (36 bytes) (coexists with file block)00517 0123 	eeROMbuff.len	RES	1	;bytes received00518 0124 	eeROMbuff.Addr	RES	3	; 3 bytes (big endian)00519 0127 	eeROMbuff.Data	RES	d'32'	; 32 bytes of data 114..13300520 0147 	;00521 0147 		ORG	0x137	;Rewind00522 0137 	RAM137	RES	100523 0138 	RAM138	RES	100524 0139 	RAM139	RES	100525 013A 	RAM13A	RES	100526 013B 	RAM13B	RES	100527 013C 	RAM13C	RES	1	; used by Div16x1600528 013D 	RAM13D	RES	100529 013E 	RAM13E	RES	100530 013F 	RAM13F	RES	100531 0140 	RAM140	RES	100532 0141 	RAM141	RES	100533 0142 	RAM142	RES	100534 0143 	RAM143	RES	100535 0144 	RAM144	RES	100536 0145 	RAM145	RES	100537 0146 	RAM146	RES	100538 0147 	;00539 0147 		if HasRTC00547 0147 		endif00548 0147 	;00549 0147 		if AnyANAUsed00566 0147 		endif00567 0147 	;00568 0147 	eeROMFDataA0	RES	1	; Ptr to last byte saved00569 0148 	eeROMFDataA1	RES	1	;  loops FFFF>>8000..FFFF>>800000570 0149 	eeROMFDataA2	RES	100571 014A 	;00572 014A 	IPDatagramID	RES	1	;only used in put_ip00573 014B 	;00574 014B 	SMBits	RES	d'12'00575 0157 	SMBits2	RES	d'12'00576 0163 	;========================================================================================================00577 0163 	;  Bank3 Ram 190h-1EFh (96 Bytes) 00578 0163 	;========================================================================================================00579 0163 		ORG	0x19000580 0190 	;00581 0190 		if UsesISR00589 0190 		endif00590 0190 	;00591 0190 		if UsesSRamPushPop00592 0190 	SaveStatus	RES	100593 0191 	StackPtr	RES	100594 0192 		endif00595 0192 	;Highland Greeley PIC.asm   "BrainEQUs.inc"                               Page: 10500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm00596 0192 	SRAM_UDP_Tx_DT	RES	1	;Transmited data type00597 0193 	SRAM_Len	RES	1	; 2 bytes Bigendian00598 0194 	SRAM_Len_Lo	RES	100599 0195 	SRAM_DestAddr2	RES	1	; 3 bytes Bigendian00600 0196 	SRAM_DestAddr1	RES	100601 0197 	SRAM_DestAddr0	RES	100602 0198 	SRAM_UDP_Rx_IP	RES	1	;Low byte of IP address00603 0199 	SRAM_UDP_Rx_DT	RES	1	;Received data type00604 019A 	SRAM_Len_Rx	RES	1	; 2 bytes Bigendian00605 019B 	SRAM_Len_Lo_Rx	RES	100606 019C 	SRAM_DestAddr1_Rx	RES	1	; 2 bytes Bigendian00607 019D 	SRAM_DestAddr0_Rx	RES	100608 019E 	TTFTP_Flags	RES	100609 019F 019E 	#Define	UDP_DataReceived	TTFTP_Flags,000610 019F 019E 	#Define	UDP_DataSent	TTFTP_Flags,100611 019F 	;00612 019F 	;SRAM addresses are 000000..07FFFF (512KB)00613 019F 	SRAM_Addr0	RES	1	;low byte of SRAM sddress00614 01A0 	SRAM_Addr1	RES	100615 01A1 	SRAM_Addr2	RES	1	;high byte of SRAM sddress00616 01A2 	;00617 01A2 	;The Current address00618 01A2 	CurrentAddr0	RES	1	;low byte of address00619 01A3 	CurrentAddr1	RES	100620 01A4 	CurrentAddr2	RES	1	;high byte of address00621 01A5 	;The last data written00622 01A5 	CurrentLDO_0	RES	1	; last data sent00623 01A6 	CurrentLDO_1	RES	100624 01A7 	;00625 01A7 	;The last data read00626 01A7 		if UsesLDI000627 01A7 	CurrentLDI_0	RES	1	; last data read00628 01A8 	;LDI_0 bits00629 01A8 0000 	SW2	EQU	0	;SW2 is lower left under LCD00630 01A8 0001 	SW3	EQU	100631 01A8 0002 	SW4	EQU	200632 01A8 0003 	SW5	EQU	300633 01A8 0004 	SW6	EQU	4	;SW6 is upper left00634 01A8 0005 	SW7	EQU	500635 01A8 0006 	LDI_0_6	EQU	6	;J2-28 not used00636 01A8 0007 	LDI_0_7	EQU	7	;J2-29 not used00637 01A8 		endif00638 01A8 	;00639 01A8 		if UsesLDI100650 01A8 		endif00651 01A8 	;00652 01A8 	;00653 01A8 	CMD_LDO_0	RES	1	; value to set next time00654 01A9 	;LDO_0 bits00655 01A9 0000 	NIC_Reset	EQU	000656 01A9 0001 	LED1	EQU	1	;D6 LEDs are active low00657 01A9 0002 	LED2	EQU	200658 01A9 0003 	LED3	EQU	300659 01A9 0004 	LED4	EQU	400660 01A9 0005 	LED5	EQU	500661 01A9 0006 	LED6	EQU	6	;D1100662 01A9 0040 	LED6_Mask	EQU	b'01000000'00663 01A9 0010 	LED4_Mask	EQU	b'00010000'00664 01A9 	;00665 01A9 	CMD_LDO_1	RES	1	;  through the loop00666 01AA 	;LDO_1 bits00667 01AA 	;00668 01AA 	;00669 01AA 		if ISR_Timers>000684 01AA 		else00685 01AA 0002 	BtnDebounceTime	EQU	d'2'	;2/20th sec00686 01AA 000A 	CGIBtnDebounceTime	EQU	d'10'	;1/2th sec00687 01AA 	BtnDeBounceTimer	RES	100688 01AB 		endif00689 01AB 		if ISR_Timers>100693 01AB 		endif00694 01AB 		if ISR_Timers>200697 01AB 		endif00698 01AB 		if ISR_Timers>300701 01AB 		endif00702 01AB 		if ISR_Timers>400705 01AB 		endif00706 01AB 		if ISR_Timers>500709 01AB 		endif00710 01AB 	;00711 01AB 	UDPTimer	RES	100712 01AC 0010 	kUDPTime	EQU	10	;half secs00713 01AC 	;00714 01AC 	BeepTimer	RES	100715 01AD 0020 	kBeepTime	EQU	0x20	;Ticks 1/20's00716 01AD 	;00717 01AD 	;00718 01AD 	OSlot	RES	1	;SLOT #0..3 00719 01AE 	OBit	RES	1	;BIT #0..127 00720 01AF 	OActive	RES	1	;0x80=ON 0x00=OFF 00721 01B0 	OBoard	RES	1	;BOARD #0..700722 01B1 	;00723 01B1 	ISlot	RES	1	;SLOT #0..3 00724 01B2 	IBit	RES	1	;BIT #0..127 00725 01B3 	IActive	RES	1	;0x80=ON 0x00=OFF 00726 01B4 	IBoard	RES	1	;BOARD #0..700727 01B5 	;00728 01B5 	;scratch pad vars00729 01B5 	DETTemp	RES	200730 01B7 	CurBlk	RES	2	;ptr to SRAM location with Bit,Slot and BoardHighland Greeley PIC.asm   "BrainEQUs.inc"                               Page: 11500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm00731 01B9 	SMDispPtr	RES	200732 01BB 	SMSvsPtr	RES	100733 01BC 	CurSM	RES	200734 01BE 	SvsBlkNum	RES	100735 01BF 	SvsCabNum	RES	100736 01C0 	BlockPwrTblPtr	RES	200737 01C2 	BPTemp	RES	200738 01C4 01C2 	#Define	AnyCabOnFlag	BPTemp,700739 01C4 01C2 	#Define	Cab1IsPwrdFlag	BPTemp,400740 01C4 01C2 	#Define	Cab2IsPwrdFlag	BPTemp,300741 01C4 01C2 	#Define	Cab3IsPwrdFlag	BPTemp,200742 01C4 01C2 	#Define	Cab4IsPwrdFlag	BPTemp,100743 01C4 01C2 	#Define	Cab5IsPwrdFlag	BPTemp,000744 01C4 01C3 	#Define	Cab6IsPwrdFlag	BPTemp+1,300745 01C4 01C3 	#Define	Cab7IsPwrdFlag	BPTemp+1,200746 01C4 01C3 	#Define	Cab8IsPwrdFlag	BPTemp+1,100747 01C4 01C3 	#Define	Cab9IsPwrdFlag	BPTemp+1,000748 01C4 	;00749 01C4 	BPTemp2	RES	200750 01C6 	BlockNum	RES	100751 01C7 	ScannerBlkNum	RES	100752 01C8 	;00753 01C8 	;00754 01C8 	BLKOCC	RES	100755 01C9 	RTTemp	RES	200756 01CB 	SaveOldLocal	RES	100757 01CC 	SaveOldML1	RES	100758 01CD 	SaveOldML2	RES	100759 01CE 	SaveOldML3	RES	100760 01CF 	;00761 01CF 	SvsInSlotBoard	RES	100762 01D0 	SMHighSvsPtr	RES	100763 01D1 	SvsCurBlk	RES	200764 01D3 	SvsBMdlNum	RES	1	;Block modle # 0..9500765 01D4 	SvsBMdlVal	RES	1	;LED to light 0..24 00766 01D5 	;00767 01D5 	SMScanFlags	RES	100768 01D6 01D5 	#Define	SMLowNumRecvd	SMScanFlags,000769 01D6 01D5 	#Define	SMHiNumRecvd	SMScanFlags,100770 01D6 01D5 	#Define	BlkNumRecvd	SMScanFlags,200771 01D6 01D5 	#Define	SMTableLowChngFlag	SMScanFlags,300772 01D6 01D5 	#Define	SMTableHiChngFlag	SMScanFlags,400773 01D6 01D5 	#Define	BlockCmdChngFlag	SMScanFlags,500774 01D6 01D5 	#Define	BlockCmdChngFlag2	SMScanFlags,600775 01D6 01D5 	#Define	IsMyCabFlag	SMScanFlags,700776 01D6 	;00777 01D6 	SMScanFlags2	RES	100778 01D7 01D6 	#Define	BlockDataChngFlag	SMScanFlags2,000779 01D7 01D6 	#Define	BlockDataChngFlag2	SMScanFlags2,100780 01D7 	;00781 01D7 	;00782 01D7 	;00783 01D7 	;ROUTE BTNS Button Offset or 0x8000784 01D7 	RTBtn1	RES	100785 01D8 	RTBtn2	RES	1	00786 01D9 	RTBtn3	RES	1	00787 01DA 	RTBtn4	RES	1	00788 01DB 0004 	kLastRTBtn	EQU	0x0400789 01DB 	;00790 01DB 	RT_Flags	RES	100791 01DC 01DB 	#Define	RSIP	RT_Flags,0	;RoutSelectInProgress00792 01DC 	;LEDS temp vars00793 01DC 01DB 	#Define	LEDMainlineUnable	RT_Flags,100794 01DC 01DB 	#Define	LEDLocalReady	RT_Flags,200795 01DC 01DB 	#Define	LEDMainlineReady	RT_Flags,300796 01DC 01DB 	#Define	LEDLocalUnable	RT_Flags,400797 01DC 	;00798 01DC 	;OLD ROUTES00799 01DC 	OML1	RES	100800 01DD 	OML2	RES	100801 01DE 	OML3	RES	100802 01DF 	OLOC	RES	100803 01E0 	LastCabVal	RES	1	;Current Cab if any 0..900804 01E1 	;00805 01E1 0000 	CabEastFB	EQU	000806 01E1 0001 	CabWestFB	EQU	100807 01E1 0006 	CabDetEastFB	EQU	600808 01E1 0005 	CabDetWestFB	EQU	500809 01E1 0007 	CabSelectedFB	EQU	700810 01E1 	;00811 01E1 		if oldCode00849 01E1 		endif00850 01E1 	;  Input Board  0x0000..0x007F00851 01E1 	;  Output Board 0x0400..0x047F00852 01E1 0004 	kFirstOB	EQU	0x0400853 01E1 0004 	kLastOB	EQU	0x0400854 01E1 	;kDefaultCab	EQU	0x0600855 01E1 	;kLastCab	EQU	0x06	;Cab Count00856 01E1 	;kDefaultCMF	EQU	Cab6ModeFlags00857 01E1 	;00858 01E1 	;00859 01E1 	LastBtn	RES	100860 01E2 	BtnTemp	RES	200861 01E4 	SMTemp	RES	100862 01E5 	;00863 01E5 	PtrTemp	RES	2	;2 bytes (ptr)00864 01E7 	;00865 01E7 	TTFlags	RES	100866 01E8 01E7 	#Define	CCWFLAG	TTFlags,0	;0 OR #SDIR 00867 01E8 01E7 	#Define	SMFound	TTFlags,1Highland Greeley PIC.asm   "BrainEQUs.inc"                               Page: 12500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm00868 01E8 01E7 	#Define	SMFound2	TTFlags,200869 01E8 01E7 	#Define	BeepOn	TTFlags,300870 01E8 	;00871 01E8 	SCount	RES	2	;STEPS REMAINING 00872 01EA 	;MASTERC	RES	2	;2 BYTE MASTER COUNTER00873 01EA 	;StepVar	RES	100874 01EA 	;PHAFLAG	RES	100875 01EA 	;00876 01EA 	UDP_Flags	RES	100877 01EB 01D5 	#Define	SMTableLowChngFlag	UDP_Flags,000878 01EB 01D5 	#Define	BlockCmdChngFlag	UDP_Flags,100879 01EB 01D5 	#Define	SMTableHiChngFlag	UDP_Flags,200880 01EB 	;00881 01EB 	SyncBlkNum	RES	1	;A blk num that is SyncBlkNum++00882 01EC 				; each time through the main loop00883 01EC 	SyncSMNum	RES	1	;A sm num that is SyncSMNum++00884 01ED 				; each time through the main loop00885 01ED 	;00886 01ED 	;========================================================================================================00887 01ED 	; Constants for HPRR stuff00888 01ED 	;00889 01ED 0078 	NOSlot	EQU	0x78	;BITS TO DEACTIVATE ALL DEV'S 00890 01ED 	;00891 01ED 	;Block Power Table Bits00892 01ED 0060 	DetectMask	EQU	0x60	;Detect bits E/W00893 01ED 009F 	DetectInvertMask	EQU	0x9F	;Not Detect bits E/W00894 01ED 0000 	DetectFlashFlag	EQU	0x00	;set to 0x80 to flash00895 01ED 	;00896 01ED 	;00897 01ED 	;========================================================================================================00898 01ED 	;========================================================================================================00899 01ED 	; Storage locations "Page Numbers" in the serial eproms (000..3FF) (256KB)00900 01ED 	;00901 01ED 0000 	seFiles	EQU	0x0000	;Start of file storage00902 01ED 007F 	seParamSets	EQU	0x007F	;8 sets 256 bytes 0x007F00 to 0x007FFF00903 01ED 0080 	seFlowData	EQU	0x0080	;32KB 0x008000 to 0x00FFFF00904 01ED 	; serial eproms 3..8 are not installed.00905 01ED 	;00906 01ED 	;========================================================================================================00907 01ED 	;========================================================================================================00908 01ED 	; SRAM locations "Page Numbers" they are 0000..07FF (512KB) (256 bytes/page)00909 01ED 	;00910 01ED 0002 	SMTable	EQU	0x0002	;one byte for each SM00911 01ED 0003 	SMTableHigh	EQU	0x000300912 01ED 0004 	BlockPwrTable	EQU	0x0004	;one byte for each Block00913 01ED 0005 	BlockCmdTable	EQU	0x0005	;one byte for each Block00914 01ED 0006 	BlockPwrTable2	EQU	0x0006	;one byte for each Block00915 01ED 0007 	BlockCmdTable2	EQU	0x0007	;one byte for each Block00916 01ED 0008 	InputsTable	EQU	0x0008	;one byte for each input00917 01ED 0009 	BlockOwnerTable	EQU	0x0009	;one byte for each Block00918 01ED 	;00919 01ED 000A 	BlockModuleBitsL	EQU	0x000A	;One Byte for each block00920 01ED 000B 	BlockModuleBitsH	EQU	0x000B	; storage for LED bits00921 01ED 	;00922 01ED 0010 	evDataROM	EQU	0x0010	;start of data00923 01ED 	;00924 01ED 00F0 	evParamStack	EQU	0x00F0	;256 bytes = 32 deep stack00925 01ED 00F2 	evStrings	EQU	0x00F2	;start of strings00926 01ED 00F8 	evARPcache	EQU	0x00F8	;ARP cache 0x00F800..0x00F9FF (512 bytes)00927 01ED 017F 	evStatSaveBuffer	EQU	0x017F	;Buffer for status saving00928 01ED 0180 	evBuff32KB	EQU	0x0180	;32KB Buffer for data tx, rx, etc.00929 01ED 	;00930 01ED 0002 	kUDP_SRAM_Page	EQU	0x0200931 01ED 0200 	evUDPDest	EQU	0x0200	;64KB00932 01ED 0202 	evUDP_SMTable	EQU	0x0202	;from MPSMBP00933 01ED 0203 	evUDP_SMTableHigh	EQU	0x0203	;from MPSMBP00934 01ED 0204 	evUDP_BlockPwrTable	EQU	0x0204	;from MPSMBP00935 01ED 0205 	evUDP_BlockPwrCmdTbl	EQU	0x020500936 01ED 0206 	evUDP_BlockPwrTable2	EQU	0x020600937 01ED 0207 	evUDP_BlockPwrCmdTbl2	EQU	0x020700938 01ED 	;00939 01ED 0206 	evEndOfSRAM	EQU	0x0206	;shortens boot time00940 01ED 	;00941 01ED 	;========================================================================================================00942 01ED 	;========================================================================================================00943 01ED 	; EEPROM locations 256 bytes of EEPROM in F87700944 01ED 		ORG	0x000000945 0000 	;00946 0000 	eMACAddr4	RES	1	; 5th byte of MAC Address00947 0001 	eMACAddr5	RES	100948 0002 	eIPAddr3	RES	1	; MSB of IP Address00949 0003 	eIPAddr2	RES	100950 0004 	eIPAddr1	RES	100951 0005 	eIPAddr0	RES	100952 0006 	eCSum	RES	1	; csum for first 6 bytes00953 0007 	eROMFDA0	RES	1	; LSB of eeROM Flow Data address00954 0008 	eROMFDA1	RES	100955 0009 	eROMFDA2	RES	100956 000A 	eSN0	RES	1	; LSB of Vis-U-Etch serial number00957 000B 	eSN1	RES	100958 000C 	;00959 000C 	eScrnNumber	RES	1	;0..kLastNormScrn00960 000D 	eSvsScrnNumber	RES	1	;0..kLastSvsScrn00961 000E 	eParamSetNumber	RES	1	;0..700962 000F 	ePM_Flags	RES	100963 0010 	;00964 0010 00D8 	eSRAMErrStr	EQU	0xD8	;'SRAM Err'00965 0010 00E0 	eSplashText	EQU	0xE0	;See SerialNo.asm for data00966 0010 00F0 	eSplashText2	EQU	0xF0	; 0x10 bytes each00967 0010 	;Highland Greeley PIC.asm   "BrainEQUs.inc"                               Page: 13500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm00968 0010 	;========================================================================================================00969 0010 	; Initialize EEPROM memory00970 0010 		ORG	0x2100	;eeprom00971 2100 0000 		DE	high kMAClsw	; 2 lower bytes of MAC address00972 2101 0011 		DE	low kMAClsw00973 2102 00C0 00A8 0002 		DE	kIPmsb,kIPb2,kIPb3	;IP address (i.e. 192.168.1.)00974 2105 007C 		DE	kIPlsb	;IP address (i.e. 124)00975 2106 0008 		DE	kCSum	;checksum00976 2107 	;00977 2107 00FF 007F 		DE	0xFF,0x7F	;placeholder for flow data pointer00978 2109 0000 		DE	0x0000979 210A 003F 		DE	low kSerialNumber	;S/N lsb,msb00980 210B 001F 		DE	high kSerialNumber00981 210C 	;00982 210C 0000 		DE	0x00	;ScrnNumber00983 210D 0000 		DE	0x00	;SvsScrnNumber00984 210E 0000 		DE	0x00	;eParamSetNumber 0..700985 210F 0000 		DE	0x00	;ePM_Flags00986 2110 	;00987 2110 		ORG	0x21D800988 21D8 0053 0052 0041 004D 0045 0072 0072 		DE	'S','R','A','M','E','r','r'00989 21DF 0000 		DE	0x0000990 21E0 	;00991 21E0 	; Initialize ID locations00992 21E0 		ORG	0x200000993 2000 0031 0030 0042 0031 		DE	'1','0','B','1'00994 2004 	;00995 2004 		ORG	0x21E0	;eeprom last 32 bytes00996 21E0 	;Splash screen text (must be 15 chars)00997 21E0 0020 004F 0078 0066 006F 0072 0064 0020 		DE	' ','O','x','f','o','r','d',' '00998 21E8 0056 002E 0055 002E 0045 002E 0020 		DE	'V','.','U','.','E','.',' '00999 21EF 0000 		DE	0x0001000 21F0 0020 0020 0047 0050 0020 0043 0050 		DE	' ',' ','G','P',' ','C','P'01001 21F7 0055 0020 0042 0049 004F 0053 0020 0020 		DE	'U',' ','B','I','O','S',' ',' '01002 21FF 0000 		DE	0x0001003 2200 	;01004 2200 	;============================================================================================01005 2200 	;01006 2200 		include	BMacros.asm	;common macros for the brain GP computer00001 2200 		subtitle	"Brain Macros"00002 2200 		page00003 2200 	;===================================================================================00004 2200 	;00005 2200 	;  FileName: BMacros.asm00006 2200 	;  Date: 4/5/200800007 2200 	;  File Version: 1.3.100008 2200 	;  00009 2200 	;  Author: David M. Flynn00010 2200 	;  Company: Oxford V.U.E., Inc.00011 2200 	;00012 2200 	;============================================================================================00013 2200 	; Notes:00014 2200 	;00015 2200 	;  These are generic macros for the Brain computer00016 2200 	;00017 2200 	;============================================================================================00018 2200 	; Revision History00019 2200 	;00020 2200 	; 1.3.1  4/5/2008	Added UsesVUE8LEDs00021 2200 	; 1.3    4/28/04	Added mBankISel00022 2200 	; 1.2.4  5/19/03	Added BNE, BEQ00023 2200 	; 1.2.3  5/16/03	Added CMP, BMI and BPL.00024 2200 	; 1.2.2  4/23/03	Changed LCALL to be just CALL when same segment.00025 2200 	; 1.2.1  4/15/03	Added SKPB, SKPNB00026 2200 	; 1.2    2/26/03	Added Instruction set extentions for 14 bit core (16F###) (27 of them)00027 2200 	; 1.1    2/21/03	Added mLED_On, mLED_Off, mPCLGoto00028 2200 	;	Added 18F452 version of mCall#To#00029 2200 	; 1.0.1  2/12/03	Fixed mCallxTox so a return from a segment other than the one00030 2200 	;	called will not cause PCLATH,3/PCLATH,4 problems.00031 2200 	; 1.0    10/1/02	Moved macros to this file00032 2200 	;00033 2200 	;============================================================================================00034 2200 	; Conditionals00035 2200 		Constant	Using18F452=0	;Set to 0 for 16F87700036 2200 		ifndef UsesVUE8LEDs00038 2200 		endif00039 2200 	;00040 2200 	;============================================================================================00041 2200 	; Name	(additional stack words required), (Return Bank) Description00042 2200 	;============================================================================================00043 2200 	;TestTimerIsZero	(0),(0) pass Timer1Lo,Timer2Lo, etc. returns STATUS,Z set if zero00044 2200 	;00045 2200 	;mLED_On	(0) Macro. Macro for turning LEDs ON. exits w/ bank0 Selected00046 2200 	;mLED_Off	(0) Macro. Macro for turning LEDs OFF. exits w/ bank0 Selected00047 2200 	;mLED1_ON	(0),(0) LED macro00048 2200 	;mLED1_OFF	(0),(0) LED macro00049 2200 	;mLED2_ON	(0),(0) LED macro00050 2200 	;mLED2_OFF	(0),(0) LED macro00051 2200 	;mLED3_ON	(0),(0) LED macro00052 2200 	;mLED3_OFF	(0),(0) LED macro00053 2200 	;mLED4_ON	(0),(0) LED macro00054 2200 	;mLED4_OFF	(0),(0) LED macro00055 2200 	;mLED5_ON	(0),(0) LED macro00056 2200 	;mLED5_OFF	(0),(0) LED macro00057 2200 	;mLED6_ON	(0),(0) LED macro00058 2200 	;mLED6_OFF	(0),(0) LED macro00059 2200 	;00060 2200 	;mBank0	(0),(0) Macro to set STATUS,RP0 and RP1 bits for ram access to bank000061 2200 	;mBank1	(0),(1) Macro to set STATUS,RP0 and RP1 bits for ram access to bank1Highland Greeley PIC.asm   "Brain Macros"                                Page: 14500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BMacros.asm00062 2200 	;mBank2	(0),(2) Macro to set STATUS,RP0 and RP1 bits for ram access to bank200063 2200 	;mBank3	(0),(3) Macro to set STATUS,RP0 and RP1 bits for ram access to bank300064 2200 	;00065 2200 	;mCall0To1	(1+n),(n/a) used to set/clr PCLATH bits00066 2200 	;mCall0To2	(1+n),(n/a) used to set/clr PCLATH bits00067 2200 	;mCall0To3	(1+n),(n/a) used to set/clr PCLATH bits00068 2200 	;00069 2200 	;mCall1To0	(1+n),(n/a) used to set/clr PCLATH bits00070 2200 	;mCall1To2	(1+n),(n/a) used to set/clr PCLATH bits00071 2200 	;mCall1To3	(1+n),(n/a) used to set/clr PCLATH bits00072 2200 	;00073 2200 	;mCall2To0	(1+n),(n/a) used to set/clr PCLATH bits00074 2200 	;mCall2To1	(1+n),(n/a) used to set/clr PCLATH bits00075 2200 	;mCall2To3	(1+n),(n/a) used to set/clr PCLATH bits00076 2200 	;00077 2200 	;mCall3To0	(1+n),(n/a) used to set/clr PCLATH bits00078 2200 	;mCall3To1	(1+n),(n/a) used to set/clr PCLATH bits00079 2200 	;mCall3To2	(1+n),(n/a) used to set/clr PCLATH bits00080 2200 	;00081 2200 	;mReadData	(0),(0) Read Data macro, arg1 is the select value (Select0,SelectSRAM, etc.)00082 2200 	;mWriteData	(0),(0) Write Data macro, Data is the location of the Data (Param71, etc.)00083 2200 	;mSet8bitAddr	(0),(0) Set the low 8 address bits to the value in the W00084 2200 	;mPCLGoto	(0),(n/a) Set PCLATH:0..2 then add W to PCL00085 2200 	;mBankISel	(0),(n/a) Set Status,IRP bit corect for the operand passed.00086 2200 	;00087 2200 	;===================================================================00088 2200 	; Instruction set extentions for 14 bit core (16F###)00089 2200 	;00090 2200 	; opcode	operand	description00091 2200 	;---------------------------------------------------------------00092 2200 	;ADDCF	f,d	Add Carry to File00093 2200 	;ADDDCF	f,d	Add Digit Carry to File00094 2200 	;BC	k	Branch on Carry00095 2200 	;BDC	k	Branch on Digit Carry00096 2200 	;BEQ	k	Branch on Equal to Zero aka BZ00097 2200 	;BMI	k	Branch on W minus (bit 7 set) (W bits 0..6 are zerroed)00098 2200 	;BNC	k	Branch on No Carry00099 2200 	;BNDC	k	Branch on No Digit Carry00100 2200 	;BNE	k	Branch on Not Equal to Zero aka BNZ00101 2200 	;BNZ	k	Branch on No Zero00102 2200 	;BPL	k	Branch on W plus (bit 7 clr) (W bits 0..6 are zerroed)00103 2200 	;BZ	k	Branch on Zero00104 2200 	;CLRC		Clear Carry00105 2200 	;CLRDC		Clear Digit Carry00106 2200 	;CLRZ		Clear Zero flag00107 2200 	;CMP	f	Compare F to W (F-W)00108 2200 	;LCALL	k	Long Call00109 2200 	;LGOTO	k	Long GOTO00110 2200 	;MOVFW	f	Move File to W00111 2200 	;NEGF	f,d	Negate File00112 2200 	;SETC		Set Carry00113 2200 	;SETDC		Set Digit Carry00114 2200 	;SETZ		Set Zero00115 2200 	;SKPB		Skip on Borrow00116 2200 	;SKPC		Skip on Carry00117 2200 	;SKPDC		Skip on Digit Carry00118 2200 	;SKPNB		Skip on Not Borrow00119 2200 	;SKPNC		Skip on No Carry00120 2200 	;SKPNDC		Skip on No Digit Carry00121 2200 	;SKPNZ		Skip on Not Zero00122 2200 	;SKPZ		Skip on Zero00123 2200 	;SUBBF	f,d	Subtract Borrow from File (used after SUBWF)00124 2200 	;SUBCF	f,d	Subtract Carry from File00125 2200 	;SUBDCF	f,d	Subtract Digit Carry from File00126 2200 	;TSTF	f	Test File00127 2200 	;00128 2200 	;======================================================================================00129 2200 	; pass Timer1Lo,Timer2Lo, etc.00130 2200 	; returns STATUS,Z set if zero00131 2200 	;00132 2200      	TestTimerIsZero	macro	T_Number00133 2200      		BSF	STATUS,RP0	;Bank300134 2200      		BSF	STATUS,RP100135 2200      		MOVF	T_Number,W00136 2200      		IORWF	T_Number+1,W00137 2200      		BCF	STATUS,RP0	;Bank000138 2200      		BCF	STATUS,RP100132 2200 		endm	00140 2200 	;00141 2200 	;=================================================================================00142 2200 	; LED macros00143 2200 	;=================================================================================00144 2200 	; Macro for turning LEDs ON00145 2200      	mLED_On	macro	LED_Num00146 2200      		BSF	STATUS,RP100147 2200      		BSF	STATUS,RP0	; Bank300148 2200      		BCF	CMD_LDO_0,LED_Num00149 2200      		BCF	STATUS,RP100150 2200      		BCF	STATUS,RP0	; Bank000145 2200 		endm00152 2200 	;00153 2200 	;=================================================================================00154 2200 	; Macro for turning LEDs OFF00155 2200      	mLED_Off	macro	LED_Num00156 2200      		BSF	STATUS,RP100157 2200      		BSF	STATUS,RP0	; Bank300158 2200      		BSF	CMD_LDO_0,LED_Num00159 2200      		BCF	STATUS,RP100160 2200      		BCF	STATUS,RP0	; Bank000155 2200 		endmHighland Greeley PIC.asm   "Brain Macros"                                Page: 15500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BMacros.asm00162 2200 	;00163 2200 	;00164 2200      	mLED1_ON	macro00165 2200      		BSF	STATUS,RP100166 2200      		BSF	STATUS,RP000167 2200      		BCF	CMD_LDO_0,LED100168 2200      		if UsesVUE8LEDs00169 2200      		BCF	CMD_LDO_2,LED1A00170 2200      		endif00171 2200      		BCF	STATUS,RP100172 2200      		BCF	STATUS,RP000164 2200 		endm00174 2200 	;00175 2200      	mLED1_OFF	macro00176 2200      		BSF	STATUS,RP100177 2200      		BSF	STATUS,RP000178 2200      		BSF	CMD_LDO_0,LED100179 2200      		if UsesVUE8LEDs00180 2200      		BSF	CMD_LDO_2,LED1A00181 2200      		endif00182 2200      		BCF	STATUS,RP100183 2200      		BCF	STATUS,RP000175 2200 		endm00185 2200 	;00186 2200      	mLED2_ON	macro00187 2200      		BSF	STATUS,RP100188 2200      		BSF	STATUS,RP000189 2200      		BCF	CMD_LDO_0,LED200190 2200      		if UsesVUE8LEDs00191 2200      		BCF	CMD_LDO_2,LED2A00192 2200      		endif00193 2200      		BCF	STATUS,RP100194 2200      		BCF	STATUS,RP000186 2200 		endm00196 2200 	;00197 2200      	mLED2_OFF	macro00198 2200      		BSF	STATUS,RP100199 2200      		BSF	STATUS,RP000200 2200      		BSF	CMD_LDO_0,LED200201 2200      		if UsesVUE8LEDs00202 2200      		BSF	CMD_LDO_2,LED2A00203 2200      		endif00204 2200      		BCF	STATUS,RP100205 2200      		BCF	STATUS,RP000197 2200 		endm00207 2200 	;00208 2200      	mLED3_ON	macro00209 2200      		BSF	STATUS,RP100210 2200      		BSF	STATUS,RP000211 2200      		BCF	CMD_LDO_0,LED300212 2200      		if UsesVUE8LEDs00213 2200      		BCF	CMD_LDO_2,LED3A00214 2200      		endif00215 2200      		BCF	STATUS,RP100216 2200      		BCF	STATUS,RP000208 2200 		endm00218 2200 	;00219 2200      	mLED3_OFF	macro00220 2200      		BSF	STATUS,RP100221 2200      		BSF	STATUS,RP000222 2200      		BSF	CMD_LDO_0,LED300223 2200      		if UsesVUE8LEDs00224 2200      		BSF	CMD_LDO_2,LED3A00225 2200      		endif00226 2200      		BCF	STATUS,RP100227 2200      		BCF	STATUS,RP000219 2200 		endm00229 2200 	;00230 2200      	mLED4_ON	macro00231 2200      		BSF	STATUS,RP100232 2200      		BSF	STATUS,RP000233 2200      		BCF	CMD_LDO_0,LED400234 2200      		if UsesVUE8LEDs00235 2200      		BCF	CMD_LDO_2,LED4A00236 2200      		endif00237 2200      		BCF	STATUS,RP100238 2200      		BCF	STATUS,RP000230 2200 		endm00240 2200 	;00241 2200      	mLED4_OFF	macro00242 2200      		BSF	STATUS,RP100243 2200      		BSF	STATUS,RP000244 2200      		BSF	CMD_LDO_0,LED400245 2200      		if UsesVUE8LEDs00246 2200      		BSF	CMD_LDO_2,LED4A00247 2200      		endif00248 2200      		BCF	STATUS,RP100249 2200      		BCF	STATUS,RP000241 2200 		endm00251 2200 	;00252 2200      	mLED5_ON	macro00253 2200      		BSF	STATUS,RP100254 2200      		BSF	STATUS,RP000255 2200      		BCF	CMD_LDO_0,LED500256 2200      		if UsesVUE8LEDs00257 2200      		BCF	CMD_LDO_2,LED5A00258 2200      		endif00259 2200      		BCF	STATUS,RP100260 2200      		BCF	STATUS,RP000252 2200 		endmHighland Greeley PIC.asm   "Brain Macros"                                Page: 16500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BMacros.asm00262 2200 	;00263 2200      	mLED5_OFF	macro00264 2200      		BSF	STATUS,RP100265 2200      		BSF	STATUS,RP000266 2200      		BSF	CMD_LDO_0,LED500267 2200      		if UsesVUE8LEDs00268 2200      		BSF	CMD_LDO_2,LED5A00269 2200      		endif00270 2200      		BCF	STATUS,RP100271 2200      		BCF	STATUS,RP000263 2200 		endm00273 2200 	;00274 2200      	mLED6_ON	macro00275 2200      		BSF	STATUS,RP100276 2200      		BSF	STATUS,RP000277 2200      		BCF	CMD_LDO_0,LED600278 2200      		if UsesVUE8LEDs00279 2200      		BCF	CMD_LDO_2,LED6A00280 2200      		endif00281 2200      		BCF	STATUS,RP100282 2200      		BCF	STATUS,RP000274 2200 		endm00284 2200 	;00285 2200      	mLED6_OFF	macro00286 2200      		BSF	STATUS,RP100287 2200      		BSF	STATUS,RP000288 2200      		BSF	CMD_LDO_0,LED600289 2200      		if UsesVUE8LEDs00290 2200      		BSF	CMD_LDO_2,LED6A00291 2200      		endif00292 2200      		BCF	STATUS,RP100293 2200      		BCF	STATUS,RP000285 2200 		endm00295 2200 	;00296 2200 	;=================================================================================00297 2200 	; Macros to setup RP0/RP100298 2200      	mBank0	macro00299 2200      		BCF	STATUS,RP000300 2200      		BCF	STATUS,RP100298 2200 		endm00302 2200 	;00303 2200      	mBank0	macro00304 2200      		BCF	STATUS,RP000305 2200      		BCF	STATUS,RP100303 2200 		endm00307 2200 	;00308 2200      	mBank1	macro00309 2200      		BSF	STATUS,RP000310 2200      		BCF	STATUS,RP100308 2200 		endm00312 2200 	;00313 2200      	mBank2	macro00314 2200      		BCF	STATUS,RP000315 2200      		BSF	STATUS,RP100313 2200 		endm00317 2200 	;00318 2200      	mBank3	macro00319 2200      		BSF	STATUS,RP000320 2200      		BSF	STATUS,RP100318 2200 		endm00322 2200 	;00323 2200 		if Using18F45200400 2200 		else00401 2200 	;=================================================================================00402 2200 	; Call macros, use only when stack space is short 16F877 version00403 2200 	;00404 2200 	;Call from segment 0 to segment 100405 2200 	;00406 2200 		if oldCode00433 2200 		endif00434 2200 	;00435 2200      	mCall0To1	macro	Destination00436 2200      		BSF	PCLATH,300437 2200      		CALL	Destination00438 2200      		CLRF	PCLATH00435 2200 		endm00440 2200 	;00441 2200 	;Call from segment 0 to segment 200442 2200 	;00443 2200      	mCall0To2	macro	Destination00444 2200      		BSF	PCLATH,400445 2200      		CALL	Destination00446 2200      		CLRF	PCLATH00443 2200 		endm00448 2200 	;00449 2200 	;Call from segment 0 to segment 300450 2200 	;00451 2200      	mCall0To3	macro	Destination00452 2200      		BSF	PCLATH,300453 2200      		BSF	PCLATH,400454 2200      		CALL	Destination00455 2200      		CLRF	PCLATH00451 2200 		endm00457 2200 	;00458 2200 	;Call from segment 1 to segment 000459 2200 	;00460 2200      	mCall1To0	macro	Destination00461 2200      		BCF	PCLATH,300462 2200      		CALL	Destination00463 2200      		BSF	PCLATH,3Highland Greeley PIC.asm   "Brain Macros"                                Page: 17500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BMacros.asm00464 2200      		BCF	PCLATH,400460 2200 		endm00466 2200 	;00467 2200 	;Call from segment 1 to segment 200468 2200 	;00469 2200      	mCall1To2	macro	Destination00470 2200      		BSF	PCLATH,400471 2200      		BCF	PCLATH,300472 2200      		CALL	Destination00473 2200      		BCF	PCLATH,400474 2200      		BSF	PCLATH,300469 2200 		endm00476 2200 	;00477 2200 	;Call from segment 1 to segment 300478 2200 	;00479 2200      	mCall1To3	macro	Destination00480 2200      		BSF	PCLATH,400481 2200      		CALL	Destination00482 2200      		BSF	PCLATH,300483 2200      		BCF	PCLATH,400479 2200 		endm00485 2200 	;00486 2200 	;Call from segment 2 to segment 000487 2200 	;00488 2200      	mCall2To0	macro	Destination00489 2200      		BCF	PCLATH,400490 2200      		CALL	Destination00491 2200      		BCF	PCLATH,300492 2200      		BSF	PCLATH,400488 2200 		endm00494 2200 	;00495 2200 	;Call from segment 2 to segment 100496 2200 	;00497 2200      	mCall2To1	macro	Destination00498 2200      		BSF	PCLATH,300499 2200      		BCF	PCLATH,400500 2200      		CALL	Destination00501 2200      		BCF	PCLATH,300502 2200      		BSF	PCLATH,400497 2200 		endm00504 2200 	;00505 2200 	;Call from segment 2 to segment 300506 2200 	;00507 2200      	mCall2To3	macro	Destination00508 2200      		BSF	PCLATH,300509 2200      		CALL	Destination00510 2200      		BCF	PCLATH,300511 2200      		BSF	PCLATH,400507 2200 		endm00513 2200 	;00514 2200 	;Call from segment 3 to segment 000515 2200 	;00516 2200      	mCall3To0	macro	Destination00517 2200      		BCF	PCLATH,300518 2200      		BCF	PCLATH,400519 2200      		CALL	Destination00520 2200      		BSF	PCLATH,300521 2200      		BSF	PCLATH,400516 2200 		endm00523 2200 	;00524 2200 	;Call from segment 3 to segment 100525 2200 	;00526 2200      	mCall3To1	macro	Destination00527 2200      		BCF	PCLATH,400528 2200      		CALL	Destination00529 2200      		BSF	PCLATH,300530 2200      		BSF	PCLATH,400526 2200 		endm00532 2200 	;00533 2200 	;Call from segment 3 to segment 200534 2200 	;00535 2200      	mCall3To2	macro	Destination00536 2200      		BCF	PCLATH,300537 2200      		CALL	Destination00538 2200      		BSF	PCLATH,300539 2200      		BSF	PCLATH,400535 2200 		endm00541 2200 	;00542 2200 		endif00543 2200 	;=================================================================================00544 2200 	; Read Data macro00545 2200 	;00546 2200 	;  Note: Address Enable ON, IORead ON, Get Data, IORead OFF, Address Enable OFF00547 2200 	; arg1 is the select value (Select0,SelectSRAM, etc.)00548 2200 	; Entry: None00549 2200 	; Exit: W = data from port00550 2200 	; Ram used:none00551 2200 	; Calls: (0) none00552 2200      	mReadData	macro	arg100553 2200      		BSF	STATUS,RP0	;Bank100554 2200      		BCF	STATUS,RP100555 2200      		MOVLW	All_In00556 2200      		MOVWF	TRISD00557 2200      		BCF	STATUS,RP0	;Bank000558 2200      		MOVF	PORTB,W00559 2200      		ANDLW	AddressMask00560 2200      		IORLW	arg100561 2200      		MOVWF	PORTB00562 2200      		BCF	PORTB,SelectEnable00563 2200      		BCF	PORTB,IOReadHighland Greeley PIC.asm   "Brain Macros"                                Page: 18500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BMacros.asm00564 2200      		NOP		;wait 200nS00565 2200      		MOVF	PORTD,W00566 2200      		BSF	PORTB,IORead00567 2200      		BSF	PORTB,SelectEnable00552 2200 		endm	00569 2200 	;00570 2200 	;=================================================================================00571 2200 	; Write Data macro00572 2200 	;00573 2200 	;  Note: Address Enable ON, IOWrite ON, IOWrite OFF, Address Enable OFF00574 2200 	; arg1 is the select value (Select0,SelectSRAM, etc.)00575 2200 	; Data is the location of the Data (Param71, etc.)00576 2200 	;00577 2200 	; Entry: Data=Data, TRISD must be All_Out, Bank 0 must be delected, Data must be in bank 000578 2200 	; Exit: none00579 2200 	; Ram used:"Data"00580 2200 	; Calls: (0) none00581 2200 	;00582 2200      	mWriteData	macro	arg1,Data00583 2200      		MOVF	Data,W00584 2200      		MOVWF	PORTD00585 2200      	;00586 2200      		MOVF	PORTB,W00587 2200      		ANDLW	AddressMask00588 2200      		IORLW	arg100589 2200      		MOVWF	PORTB00590 2200      		BCF	PORTB,SelectEnable00591 2200      		BCF	PORTB,IOWrite00592 2200      		BSF	PORTB,IOWrite	00593 2200      		BSF	PORTB,SelectEnable00582 2200 		endm00595 2200 	;00596 2200 	;=================================================================================00597 2200 	; Set the low 8 address bits to the value in the W00598 2200 	;00599 2200 	; Entry: W= and 8 bit address, any bank OK00600 2200 	; Exit: CurrentAddr0 is changed, Bank 0 selected00601 2200 	; RAM used:none00602 2200 	; Calls:(0) none00603 2200 	;00604 2200      	mSet8bitAddr	macro00605 2200      		BCF	STATUS,RP100606 2200      		BCF	STATUS,RP0	;Bank000607 2200      		MOVWF	PORTD00608 2200      		BSF	STATUS,RP1	;Bank300609 2200      		BSF	STATUS,RP000610 2200      		MOVWF	CurrentAddr000611 2200      		BCF	STATUS,RP1	;Bank100612 2200      		MOVLW	All_Out00613 2200      		MOVWF	TRISD00614 2200      		BCF	STATUS,RP0	;Bank000615 2200      		MOVF	PORTB,W00616 2200      		ANDLW	AddressMask00617 2200      		IORLW	Select000618 2200      		MOVWF	PORTB00619 2200      		BCF	PORTB,SelectEnable00620 2200      		BSF	PORTB,SelectEnable00604 2200 		endm00622 2200 	;00623 2200 	;=================================================================================00624 2200 	; Set PCLATH:0..2 then add W to PCL00625 2200 	; CAUTION:The first BSF/BCF instruction and the location of the 00626 2200 	;  last branched to instruction must be in the same page00627 2200 	;00628 2200 	; Entry: W= and 8 bit offset for PCL00629 2200 	; Exit: branches forward W locations00630 2200 	; RAM used:none00631 2200 	; Calls:(0) none00632 2200 	;00633 2200      	mPCLGoto	macro	00634 2200      		if $ & 0x010000635 2200      		BSF	PCLATH,000636 2200      		else00637 2200      		BCF	PCLATH,000638 2200      		endif00639 2200      		if $ & 0x020000640 2200      		BSF	PCLATH,100641 2200      		else00642 2200      		BCF	PCLATH,100643 2200      		endif00644 2200      		if $ & 0x040000645 2200      		BSF	PCLATH,200646 2200      		else00647 2200      		BCF	PCLATH,200648 2200      		endif00649 2200      	;00650 2200      		ADDWF	PCL,F00633 2200 		endm00652 2200 	;00653 2200 	;=======================================================================================00654 2200 	;Set Status,IRP bit corect for the operand passed00655 2200 	;00656 2200      	mBankISel	macro	dest00657 2200      		if dest & 0x010000658 2200      		BSF	STATUS,IRP00659 2200      		else00660 2200      		BCF	STATUS,IRP00661 2200      		endif00656 2200 		endm00663 2200 	;Highland Greeley PIC.asm   "Brain Macros"                                Page: 19500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BMacros.asm00664 2200 	;=======================================================================================00665 2200 	; Instruction set extentions for 14 bit core (16F###)00666 2200 	;=======================================================================================00667 2200 	; Add Carry to File00668 2200 	;00669 2200      	ADDCF	macro	dest,W_or_F00670 2200      		BTFSC	STATUS,C00671 2200      		INCF	dest,W_or_F00669 2200 		endm00673 2200 	;00674 2200 	;==============================================================00675 2200 	; Add Digit Carry to File00676 2200 	;00677 2200      	ADDDCF	macro	dest,W_or_F00678 2200      		BTFSC	STATUS,DC00679 2200      		INCF	dest,W_or_F00677 2200 		endm00681 2200 	;00682 2200 	;==============================================================00683 2200 	; Branch on Carry00684 2200 	;00685 2200      	BC	macro	dest00686 2200      		BTFSC	STATUS,C00687 2200      		GOTO	dest00685 2200 		endm00689 2200 	;00690 2200 	;==============================================================00691 2200 	; Branch on Digit Carry00692 2200 	;00693 2200      	BDC	macro	dest00694 2200      		BTFSC	STATUS,DC00695 2200      		GOTO	dest00693 2200 		endm00697 2200 	;00698 2200 	;==============================================================00699 2200 	; Branch on Equal to Zero aka BZ00700 2200 	;00701 2200      	BEQ	macro	dest00702 2200      		BTFSC	STATUS,Z00703 2200      		GOTO	dest00701 2200 		endm00705 2200 	;00706 2200 	;==============================================================00707 2200 	; Branch on W minus (bit 7 set) (W bits 0..6 are zerroed)00708 2200 	;00709 2200      	BMI	macro	dest00710 2200      		ANDLW	0x8000711 2200      		BTFSC	STATUS,Z	;skip if Z00712 2200      		GOTO	dest00709 2200 		endm00714 2200 	;00715 2200 	;==============================================================00716 2200 	; Branch on No Carry00717 2200 	;00718 2200      	BNC	macro	dest00719 2200      		BTFSS	STATUS,C00720 2200      		GOTO	dest00718 2200 		endm00722 2200 	;00723 2200 	;==============================================================00724 2200 	; Branch on No Digit Carry00725 2200 	;00726 2200      	BNDC	macro	dest00727 2200      		BTFSS	STATUS,DC00728 2200      		GOTO	dest00726 2200 		endm00730 2200 	;00731 2200 	;==============================================================00732 2200 	; Branch on Not Equal to Zero aka BNZ00733 2200 	;00734 2200      	BNE	macro	dest00735 2200      		BTFSS	STATUS,Z00736 2200      		GOTO	dest00734 2200 		endm00738 2200 	;00739 2200 	;==============================================================00740 2200 	; Branch on No Zero00741 2200 	;00742 2200      	BNZ	macro	dest00743 2200      		BTFSS	STATUS,Z00744 2200      		GOTO	dest00742 2200 		endm00746 2200 	;00747 2200 	;==============================================================00748 2200 	; Branch on W plus (bit 7 clr) (W bits 0..6 are zerroed)00749 2200 	;00750 2200      	BPL	macro	dest00751 2200      		ANDLW	0x8000752 2200      		BTFSS	STATUS,Z	;skip if not Z00753 2200      		GOTO	dest00750 2200 		endm00755 2200 	;00756 2200 	;==============================================================00757 2200 	; Branch on Zero00758 2200 	;00759 2200      	BZ	macro	dest00760 2200      		BTFSC	STATUS,Z00761 2200      		GOTO	dest00759 2200 		endm00763 2200 	;Highland Greeley PIC.asm   "Brain Macros"                                Page: 20500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BMacros.asm00764 2200 	;==============================================================00765 2200 	; Clear Carry00766 2200 	;00767 2200      	CLRC	macro00768 2200      		BCF	STATUS,C00767 2200 		endm00770 2200 	;00771 2200 	;==============================================================00772 2200 	; Clear Digit Carry00773 2200 	;00774 2200      	CLRDC	macro00775 2200      		BCF	STATUS,DC00774 2200 		endm00777 2200 	;00778 2200 	;==============================================================00779 2200 	; Clear Zero flag00780 2200 	;00781 2200      	CLRZ	macro00782 2200      		BCF	STATUS,Z00781 2200 		endm00784 2200 	;00785 2200 	;==============================================================00786 2200 	; Compare F to W (F-W)00787 2200 	;00788 2200      	CMP	macro	f00789 2200      		SUBWF	f,W00788 2200 		endm00791 2200 	;00792 2200 	;==============================================================00793 2200 	; Long Call00794 2200 	;00795 2200      	LCALL	macro	dest00796 2200      		if ($ & 0x0800) <> (dest & 0x0800)00797 2200      		if dest & 0x080000798 2200      		BSF	PCLATH,300799 2200      		else00800 2200      		BCF	PCLATH,300801 2200      		endif00802 2200      		endif00803 2200      			00804 2200      		if ($ & 0x1000) <> (dest & 0x1000)00805 2200      		if dest & 0x100000806 2200      		BSF	PCLATH,400807 2200      		else00808 2200      		BCF	PCLATH,400809 2200      		endif00810 2200      		endif	00811 2200      		endif	00812 2200      		CALL	dest00813 2200      		if (($ & 0x0800) <> (dest & 0x0800)) | (($ & 0x1000) <> (dest & 0x1000))00814 2200      		if $ & 0x080000815 2200      		BSF	PCLATH,300816 2200      		else00817 2200      		BCF	PCLATH,300818 2200      		endif00819 2200      		00820 2200      		if $ & 0x100000821 2200      		BSF	PCLATH,400822 2200      		else00823 2200      		BCF	PCLATH,400824 2200      		endif00825 2200      		endif00795 2200 		endm00827 2200 	;00828 2200 	;==============================================================00829 2200 	; Long GOTO00830 2200 	;00831 2200      	LGOTO	macro	dest00832 2200      		if ($ & 0x0800) <> (dest & 0x0800)00833 2200      		if dest & 0x080000834 2200      		BSF	PCLATH,300835 2200      		else00836 2200      		BCF	PCLATH,300837 2200      		endif00838 2200      		endif00839 2200      			00840 2200      		if ($ & 0x1000) <> (dest & 0x1000)00841 2200      		if dest & 0x100000842 2200      		BSF	PCLATH,400843 2200      		else00844 2200      		BCF	PCLATH,400845 2200      		endif00846 2200      		endif	00847 2200      		endif	00848 2200      		GOTO	dest00831 2200 		endm00850 2200 	;00851 2200 	;==============================================================00852 2200 	; Move File to W00853 2200 	;00854 2200      	MOVFW	macro	src00855 2200      		MOVF	src,W00854 2200 		endm00857 2200 	;00858 2200 	;==============================================================00859 2200 	; Negate File00860 2200 	;00861 2200      	NEGF	macro	dest,W_or_F00862 2200      		COMF	dest,F00863 2200      		INCF	dest,W_or_FHighland Greeley PIC.asm   "Brain Macros"                                Page: 21500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BMacros.asm00861 2200 		endm00865 2200 	;00866 2200 	;==============================================================00867 2200 	; Set Carry00868 2200 	;00869 2200      	SETC	macro00870 2200      		BSF	STATUS,C00869 2200 		endm00872 2200 	;00873 2200 	;==============================================================00874 2200 	; Set Digit Carry00875 2200 	;00876 2200      	SETDC	macro00877 2200      		BSF	STATUS,DC00876 2200 		endm00879 2200 	;00880 2200 	;==============================================================00881 2200 	; Set Zero00882 2200 	;00883 2200      	SETZ	macro00884 2200      		BSF	STATUS,Z00883 2200 		endm00886 2200 	;00887 2200 	;==============================================================00888 2200 	; Skip on Borrow00889 2200 	;00890 2200      	SKPB	macro00891 2200      		BTFSC	STATUS,C00890 2200 		endm00893 2200 	;00894 2200 	;==============================================================00895 2200 	; Skip on Carry00896 2200 	;00897 2200      	SKPC	macro00898 2200      		BTFSS	STATUS,C00897 2200 		endm00900 2200 	;00901 2200 	;==============================================================00902 2200 	; Skip on Digit Carry00903 2200 	;00904 2200      	SKPDC	macro00905 2200      		BTFSS	STATUS,DC00904 2200 		endm00907 2200 	;00908 2200 	;==============================================================00909 2200 	; Skip on Not Borrow00910 2200 	;00911 2200      	SKPNB	macro00912 2200      		BTFSS	STATUS,C00911 2200 		endm00914 2200 	;00915 2200 	;==============================================================00916 2200 	; Skip on No Carry00917 2200 	;00918 2200      	SKPNC	macro00919 2200      		BTFSC	STATUS,C00918 2200 		endm00921 2200 	;00922 2200 	;==============================================================00923 2200 	; Skip on No Digit Carry00924 2200 	;00925 2200      	SKPNDC	macro00926 2200      		BTFSC	STATUS,DC00925 2200 		endm00928 2200 	;00929 2200 	;==============================================================00930 2200 	; Skip on Not Zero00931 2200 	;00932 2200      	SKPNZ	macro00933 2200      		BTFSC	STATUS,Z00932 2200 		endm00935 2200 	;00936 2200 	;==============================================================00937 2200 	; Skip on Zero00938 2200 	;00939 2200      	SKPZ	macro00940 2200      		BTFSS	STATUS,Z00939 2200 		endm00942 2200 	;00943 2200 	;==============================================================00944 2200 	; Subtract Borrow from File00945 2200 	;00946 2200      	SUBBF	macro	dest,W_or_F00947 2200      		BTFSS	STATUS,C00948 2200      		DECF	dest,W_or_F00946 2200 		endm00950 2200 	;00951 2200 	;==============================================================00952 2200 	; Subtract Carry from File00953 2200 	;00954 2200      	SUBCF	macro	dest,W_or_F00955 2200      		BTFSC	STATUS,C00956 2200      		DECF	dest,W_or_F00954 2200 		endm00958 2200 	;00959 2200 	;==============================================================00960 2200 	; Subtract Digit Carry from File00961 2200 	;00962 2200      	SUBDCF	macro	dest,W_or_F00963 2200      		BTFSC	STATUS,DCHighland Greeley PIC.asm   "Brain Macros"                                Page: 22500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:BMacros.asm00964 2200      		DECF	dest,W_or_F00962 2200 		endm00966 2200 	;00967 2200 	;==============================================================00968 2200 	; Test File00969 2200 	;00970 2200      	TSTF	macro	src00971 2200      		MOVF	src,F00970 2200 		endm00973 2200 	;00974 2200 	;00975 2200 	;00976 2200 	;00977 2200 	;00978 2200 	;00979 2200 	;00980 2200 	;00981 2200 	;00982 2200 	;00983 2200 	;00984 2200 	;00985 2200 	;00986 2200 	;00987 2200 	;00988 2200 	;00989 2200 	;00990 2200 	;00991 2200 	;00992 2200 	;00993 2200 	;00994 2200 	;00995 2200 	;01007 2200 		include	Strings.inc	;string definitions00001 2200 		subtitle	"Strings.inc"00002 2200 		page00003 2200 	;===========================================================================================00004 2200 	;00005 2200 	;  FileName: Strings.inc00006 2200 	;  Date: 8/16/0400007 2200 	;  File Version: 1.2.1000008 2200 	;  00009 2200 	;  Author: David M. Flynn00010 2200 	;  Company: HPRR00011 2200 	;  Project: HPRR Common Strings00012 2200 	;00013 2200 	;============================================================================================00014 2200 	;00015 2200 	; String Numbers00016 2200 	; 8 bytes per number00017 2200 	; add 1 byte for terminator (0x00)00018 2200 	;00019 2200 	; The STR command is related to the RES command.00020 2200 	; The label is stored with the currnt PC value then00021 2200 	;  the PC is incremented by the string length + 1 (0x00 terminator byte is added)00022 2200 	;  rounded up to the next 8 byte block.00023 2200 	; An "s.s" file is created containing the string data for the eerom file00024 2200 	;00025 2200 	;============================================================================================00026 2200 	; Revision History00027 2200 	;00028 2200 	; 1.0  9/5/2004	First reved version00029 2200 	;============================================================================================00030 2200 		ORG	0x000000031 0000 0000 	NICinitErrStrPtr	STR	'\nNIC init err '00032 0000 0002 	NICoverrunStrPtr	STR	' NIC Rx overrun '00033 0000 0005 	NICpktErrStrPtr	STR	' NIC pkt err '00034 0000 0007 	NICptrErrStrPtr	STR	' NIC ptr err '00035 0000 0009 	SerNumStrPtr	STR	'\r\nSerial num? '00036 0000 000B 	IPAddrStrPtr	STR	'\r\nIP addr? '00037 0000 000D 	XmodemStrPtr	STR	'\r\nXmodem? '00038 0000 000F 	SIGNONStrPtr	STR	SignonString00039 0000 	;00040 0000 0011 	ConfigStrPtr	STR	'Config '00041 0000 0012 	Str_DAYMSGPtr	STR	'No daytime msg\r\n'00042 0000 0015 	Str_HTTP_FAILPtr	STR	'HTTP/ 200 OK\r\n\r\nNo Web pages!\r\n'00043 0000 0019 	SvsModeStrPtr	STR	'Service Mode '00044 0000 001B 	Str_NextPtr	STR	'Next '00045 0000 001C 	Str_UpDownPtr	STR	'Down  Up  Fact'00046 0000 001E 	Str_OnOffPtr	STR	' On   OFF'00047 0000 0020 	Str_YesNoPtr	STR	' Yes  No'00048 0000 0022 	Str_ErrorPtr	STR	'Error!'00049 0000 0023 	Str_AddrPtr	STR	'Addr:'00050 0000 0024 	Str_ClrHardErrPtr	STR	'Cancel'00051 0000 0025 	Str_SNPtr	STR	'S/N:'00052 0000 0026 	Str_LoadSavePtr	STR	' Load Save Next'00053 0000 0028 	Str_YesPtr	STR	'Yes'00054 0000 0029 	Str_NoPtr	STR	'No '00055 0000 002A 	Str_n/aPtr	STR	'n/a'00056 0000 002B 	Str_LowPtr	STR	'Low'00057 0000 002C 	Str_OKPtr	STR	'OK'00058 0000 002D 	StrNotAvailiblePtr	STR	'Not Availible'00059 0000 	;00060 0000 002F 	StrResetNowPtr	STR	'Press Reset Now'00061 0000 0031 	StrLoadRIPtr	STR	'Loading ROM Image'00062 0000 0034 	Str_DUCPtr	STR	'Down  Up  Chng'00063 0000 	;00064 0000 000C 	kLastSvsScrn	EQU	d'12'00065 0000 0001 	kLastNormScrn	EQU	d'1'00066 0000 0003 	kErrorScrn	EQU	d'3'Highland Greeley PIC.asm   "Strings.inc"                                 Page: 23500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:Strings.inc00067 0000 	;00068 0000 	; Service Mode Titles and Info Lines00069 0000 				;'Service Mode '0000070 0000 0036 	Str_SvsMd00ttlPtr	STR	'Switch Machine'	;'Switch Machine'00071 0000 0038 	Str_SvsMd00InfoPtr	STR	'Num=     Value='	;'Num=     Value='00072 0000 				;'Next ''Down  Up  Chng'00073 0000 	;00074 0000 				;'Service Mode '0100075 0000 003A 	Str_SvsMd01ttlPtr	STR	'High Switch Machine'	;'High Switch Machine'00076 0000 0038 	Str_SvsMd01InfoPtr	EQU	Str_SvsMd00InfoPtr	;'Num=     Value='00077 0000 				;'Next ''Down  Up  Chng'00078 0000 	;00079 0000 				;'Service Mode '0200080 0000 003D 	Str_SvsMd02ttlPtr	STR	'Block Data'	;'Block Data'00081 0000 003F 	Str_SvsMd02InfoPtr	STR	'Num=     V='	;'Num=     Value='00082 0000 				;'Next ''Down  Up  Chng'00083 0000 	;00084 0000 				;'Service Mode '0300085 0000 0041 	Str_SvsMd03ttlPtr	STR	'MAC Address'	;'MAC Address'00086 0000 0000 	Str_SvsMd03InfoPtr	EQU	0x00	; 00 00 00 00 00 0000087 0000 				;'Next ''Down  Up  Fact'00088 0000 	;00089 0000 				;'Service Mode '0400090 0000 0043 	Str_SvsMd04ttlPtr	STR	'IP Address'	;'IP Address'00091 0000 0000 	Str_SvsMd04InfoPtr	EQU	0x00	; 192.168.1.12400092 0000 				;'Next ''Down  Up  Fact'00093 0000 	;00094 0000 				;'Service Mode '0500095 0000 0045 	Str_SvsMd05ttlPtr	STR	'Input '	;'Input '00096 0000 0000 	Str_SvsMd05InfoPtr	EQU	0x00	; 00 00 0000097 0000 				;'Next '00098 0000 	;00099 0000 				;'Service Mode '0600100 0000 0046 	Str_SvsMd06ttlPtr	STR	'Bootloader'	;'Bootloader'00101 0000 0048 	Str_SvsMd06InfoPtr	STR	'Load Image Now?'	;'Load Image Now?'00102 0000 				;'Next '' Yes  No'00103 0000 	;00104 0000 				;'Service Mode '0700105 0000 004A 	Str_SvsMd07ttlPtr	STR	'Remote Reset'	;'Remote Reset'00106 0000 004C 	Str_SvsMd07InfoPtr	STR	'Reset Now?'	;'Reset Now?'00107 0000 				;'Next '' Yes  No'00108 0000 	;00109 0000 				;'Service Mode '0800110 0000 004E 	Str_SvsMd08ttlPtr	STR	'Test Scanner'	;'Test Scanner'00111 0000 0050 	Str_SvsMd08InfoPtr	STR	'Slot/Board='	;'Slot/Board='00112 0000 				;'Next ''Down  Up  Fact'00113 0000 	;00114 0000 				;'Service Mode '0900115 0000 004A 	Str_SvsMd09ttlPtr	EQU	Str_SvsMd07ttlPtr	;'Test Scanner'00116 0000 0000 	Str_SvsMd09InfoPtr	EQU	0x00	;SB:00000000 0000000000117 0000 				;'Next '00118 0000 	;00119 0000 				;'Service Mode '1000120 0000 0052 	Str_SvsMd10ttlPtr	STR	'Block Data Cab#'	;'Block Data Cab#'00121 0000 0054 	Str_SvsMd10InfoPtr	STR	'Cab# to change='	;'Cab# to change='00122 0000 				;'Next ''Down  Up  Fact'00123 0000 	;00124 0000 				;'Service Mode '1100125 0000 0056 	Str_SvsMd11ttlPtr	STR	'Block Module Tester'	;'Block Module Tester'00126 0000 0038 	Str_SvsMd11InfoPtr	EQU	Str_SvsMd00InfoPtr	;'Num=     Value='00127 0000 				;'Next ''Down  Up  Chng'00128 0000 	;00129 0000 				;'Service Mode '1200130 0000 0059 	Str_SvsMd12ttlPtr	STR	'Output Board Tester'	;'Output Board Tester'00131 0000 0038 	Str_SvsMd12InfoPtr	EQU	Str_SvsMd00InfoPtr	;'Num=     Value='00132 0000 				;'Next ''Down  Up  Chng'00133 0000 	;01008 0000 		include	Data.inc00001 0000 		subtitle	"Data.inc"00002 0000 	;00003 0000 	;===========================================================================================00004 0000 	;00005 0000 	;  FileName: Data.inc00006 0000 	;  Date: 3/27/0300007 0000 	;  File Version: 1.000008 0000 	;  00009 0000 	;  Author: David M. Flynn00010 0000 	;  Company: HPRR00011 0000 	;00012 0000 	;===========================================================================================00013 0000 	; Revision History00014 0000 	;00015 0000 	; 1.0    3/27/03	File first created.00016 0000 	;00017 0000 	;============================================================================================00018 0000 	; Notes:00019 0000 	;00020 0000 	;  This file has data that is loaded from the eeROM to SRAM00021 0000 	;  evDataROM*256 is added to the PC here to get the SRAM address00022 0000 	;00023 0000 	;  The BD and DW commands are related to the STR and RES commands.00024 0000 	;  The label is stored with the currnt PC value then00025 0000 	;   the PC is incremented by the data length00026 0000 	;  A "d.d" file is created containing the data for the eerom file.00027 0000 	;  Copy the "d.d" file to the WWW page subdirectory then run eeROM 00028 0000 	;   to make an eeROM.binary file.00029 0000 	;  Then run eeROM Uploader to upload the eeROM.binary file into the00030 0000 	;   first 24LC256 at U2.00031 0000 	;00032 0000 	;============================================================================================Highland Greeley PIC.asm   "Data.inc"                                    Page: 24500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc00033 0000 		DataFileOn LE00034 0000 		ORG	0x000000035 0000 	;00036 0000 		include HPRRMenuData.inc00001 0000 	;Service Mode Title string pointers00002 0000 36 	SvsModeTitles	DB	Str_SvsMd00ttlPtr	;00'Switch Machine'00003 0001 3A 		DB	Str_SvsMd01ttlPtr	;01'High Switch Machine'00004 0002 3D 		DB	Str_SvsMd02ttlPtr	;02'Block Data'00005 0003 41 		DB	Str_SvsMd03ttlPtr	;03'MAC Address'00006 0004 43 		DB	Str_SvsMd04ttlPtr	;04'IP Address'00007 0005 45 		DB	Str_SvsMd05ttlPtr	;05'Input '00008 0006 46 		DB	Str_SvsMd06ttlPtr	;06'Bootloader'00009 0007 4A 		DB	Str_SvsMd07ttlPtr	;07'Remote Reset'00010 0008 4E 		DB	Str_SvsMd08ttlPtr	;08'Test Scanner'00011 0009 4A 		DB	Str_SvsMd09ttlPtr	;09'Test Scanner'00012 000A 52 		DB	Str_SvsMd10ttlPtr	;'Block Data Cab#'00013 000B 56 		DB	Str_SvsMd11ttlPtr	;'Block Module Tester'00014 000C 59 		DB	Str_SvsMd12ttlPtr	;'Output Board Tester'00015 000D 	;00016 000D 	;Service Mode Information lines00017 000D 38 	SvsModeInfoLines	DB	Str_SvsMd00InfoPtr	;00'Num=     Value='00018 000E 38 		DB	Str_SvsMd01InfoPtr	;01'Num=     Value='00019 000F 3F 		DB	Str_SvsMd02InfoPtr	;02'Num=     V='00020 0010 00 		DB	Str_SvsMd03InfoPtr	;03''00021 0011 00 		DB	Str_SvsMd04InfoPtr	;04''00022 0012 00 		DB	Str_SvsMd05InfoPtr	;05''00023 0013 48 		DB	Str_SvsMd06InfoPtr	;06'Load Image Now?'00024 0014 4C 		DB	Str_SvsMd07InfoPtr	;07'Reset Now?00025 0015 50 		DB	Str_SvsMd08InfoPtr	;08'Slot/Board='00026 0016 00 		DB	Str_SvsMd09InfoPtr	;09 SB:00000000 0000000000027 0017 54 		DB	Str_SvsMd10InfoPtr	;10 'Cab# to change='00028 0018 38 		DB	Str_SvsMd11InfoPtr	;'Module#=    Data='00029 0019 38 		DB	Str_SvsMd12InfoPtr	;'Module#=    Data='00030 001A 	;00031 001A 	;Service Mode Command Lines00032 001A 34 	SvsModeCmdLines	DB	Str_DUCPtr	;00 'Next ''Down  Up  Chng'00033 001B 34 		DB	Str_DUCPtr	;01 'Next ''Down  Up  Chng'00034 001C 34 		DB	Str_DUCPtr	;02 'Next ''Down  Up  Chng'00035 001D 1C 		DB	Str_UpDownPtr	;03 'Next ''Down  Up  Fact'00036 001E 1C 		DB	Str_UpDownPtr	;04 'Next ''Down  Up  Fact'00037 001F 00 		DB	0x00	;05 'Next '00038 0020 20 		DB	Str_YesNoPtr	;06 'Next '' Yes  No'00039 0021 20 		DB	Str_YesNoPtr	;07 'Next '' Yes  No'00040 0022 1C 		DB	Str_UpDownPtr	;08 'Next ''Down  Up  Fact'00041 0023 00 		DB	0x00	;09 'Next '00042 0024 1C 		DB	Str_UpDownPtr	;10 'Next ''Down  Up  Fact'00043 0025 34 		DB	Str_DUCPtr	;02 'Next ''Down  Up  Chng'00044 0026 34 		DB	Str_DUCPtr	;02 'Next ''Down  Up  Chng'00045 0027 	;00037 0027 	;00038 0027 	;00039 0027 0001 	kNumDefaultValues	EQU	d'1'	;FactoryDefaults list00040 0027 	;  see BytesToMvFrmEE00041 0027 00 	FactoryDefaults	DB	kDefaultIOCtrl00042 0028 	;00043 0028 	;00044 0028 		PAGE00045 0028 	;00046 0028 	;SPECIAL ROUT COMMANDS00047 0028 000F 	gosub	EQU	0x0F00048 0028 000E 	gosubLong	EQU	0x000E00049 0028 00FE 	gotoCmd	EQU	0xFE00050 0028 00FD 	gotoLong	EQU	0x00FD00051 0028 00FC 	RotateTT	EQU	0x00FC00052 0028 0081 	SetSM	EQU	0x8100053 0028 0001 	ClrSM	EQU	0x0100054 0028 0083 	SetSMNU	EQU	0x83	;Set/Cleared for crossing power00055 0028 0003 	ClrSMNU	EQU	0x03	; but Not Used in route00056 0028 0080 	SetRly	EQU	0x8000057 0028 0082 	SetRlyNC	EQU	0x82	;Not Cleared00058 0028 0000 	ClrRly	EQU	0x0000059 0028 0002 	ClrRlyNS	EQU	0x02	;Normaly Set00060 0028 00FF 	ReturnCmd	EQU	0xFF00061 0028 	;00062 0028 	;RelayName EQU Output# if >7F then add 0x8000063 0028 	;Outputs range 1000..107F, 1100..111F00064 0028 	;HI=Highland Throttle, GY=Greeley Throttle,00065 0028 	;DT=Dauson Tower Throttle, THR=a Throttle00066 0028 	;CAT=Catenary, SRC=South Rail Catenary00067 0028 0007 	Rly300Local	EQU	0x0700068 0028 0006 	Rly300HI	EQU	0x0600069 0028 0005 	Rly300GY	EQU	0x0500070 0028 	;00071 0028 0004 	RlyGYL_THR	EQU	0x0400072 0028 0003 	RlyGYL_CAT	EQU	0x0300073 0028 0002 	RlyGYL_SRC	EQU	0x0200074 0028 0001 	RlyGYL_GY	EQU	0x0100075 0028 	;00076 0028 0000 	Rly312_1THR	EQU	0x0000077 0028 000E 	Rly312_1Local	EQU	0x0E00078 0028 000F 	Rly312_1GY	EQU	0x0F00079 0028 	;00080 0028 0008 	Rly310_1Local	EQU	0x0800081 0028 0009 	Rly310_1GY	EQU	0x0900082 0028 000A 	Rly310_1THR	EQU	0x0A00083 0028 	;00084 0028 000B 	Rly311_2Local	EQU	0x0B00085 0028 000C 	Rly311_2GY	EQU	0x0C00086 0028 000D 	Rly311_2THR	EQU	0x0DHighland Greeley PIC.asm   "Data.inc"                                    Page: 25500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc00087 0028 	;00088 0028 0017 	Rly313_2Local	EQU	0x1700089 0028 0016 	Rly313_2GY	EQU	0x1600090 0028 0015 	Rly313_2THR	EQU	0x1500091 0028 	;00092 0028 0014 	Rly310_2LocalorDT	EQU	0x1400093 0028 0013 	Rly310_2CAT	EQU	0x1300094 0028 0012 	Rly310_2GY	EQU	0x1200095 0028 0011 	Rly310_2DT	EQU	0x1100096 0028 0010 	Rly310_2SRC	EQU	0x1000097 0028 001F 	Rly310_2Local	EQU	0x1F00098 0028 	;00099 0028 0018 	Rly311_1LocalorDT	EQU	0x1800100 0028 0019 	Rly311_1CAT	EQU	0x1900101 0028 001A 	Rly311_1GY	EQU	0x1A00102 0028 001B 	Rly311_1DT	EQU	0x1B00103 0028 001C 	Rly311_1SRC	EQU	0x1C00104 0028 001D 	Rly311_1Local	EQU	0x1D00105 0028 	;00106 0028 001E 	RlyMZR_Blk300	EQU	0x1E00107 0028 	;00108 0028 0027 	RlyG1THR	EQU	0x2700109 0028 0026 	RlyG1CAT	EQU	0x2600110 0028 0025 	RlyG1GY	EQU	0x2500111 0028 002E 	RlyG1SRC	EQU	0x2E00112 0028 	;00113 0028 0024 	Rly312_2LocalorDT	EQU	0x2400114 0028 0023 	Rly312_2CAT	EQU	0x2300115 0028 0022 	Rly312_2GY	EQU	0x2200116 0028 0021 	Rly312_2DT	EQU	0x2100117 0028 0020 	Rly312_2SRC	EQU	0x2000118 0028 002F 	Rly312_2Local	EQU	0x2F00119 0028 	;00120 0028 0028 	Rly313_1LocalorDT	EQU	0x2800121 0028 0029 	Rly313_1CAT	EQU	0x2900122 0028 002A 	Rly313_1GY	EQU	0x2A00123 0028 002B 	Rly313_1DT	EQU	0x2B00124 0028 002C 	Rly313_1SRC	EQU	0x2C00125 0028 002D 	Rly313_1Local	EQU	0x2D00126 0028 	;00127 0028 0037 	Rly320LocalorDT	EQU	0x3700128 0028 0036 	Rly320CAT	EQU	0x3600129 0028 0035 	Rly320GY	EQU	0x3500130 0028 0034 	Rly320DT	EQU	0x3400131 0028 0033 	Rly320SRC	EQU	0x3300132 0028 	;00133 0028 0032 	RlyG2THR	EQU	0x3200134 0028 0031 	RlyG2HI	EQU	0x3100135 0028 0030 	RlyG2GY	EQU	0x3000136 0028 	;00137 0028 0038 	Rly321LocalorDT	EQU	0x3800138 0028 0039 	Rly321CAT	EQU	0x3900139 0028 003A 	Rly321GY	EQU	0x3A00140 0028 003B 	Rly321DT	EQU	0x3B00141 0028 003C 	Rly321SRC	EQU	0x3C00142 0028 	;00143 0028 003D 	RlyG3THR	EQU	0x3D00144 0028 003E 	RlyG3HI	EQU	0x3E00145 0028 003F 	RlyG3GY	EQU	0x3F00146 0028 	;00147 0028 0047 	RlyG4THR	EQU	0x4700148 0028 0046 	RlyG4HI	EQU	0x4600149 0028 0045 	RlyG4GY	EQU	0x4500150 0028 	;00151 0028 0044 	RlyG5THR	EQU	0x4400152 0028 0043 	RlyG5HI	EQU	0x4300153 0028 0042 	RlyG5GY	EQU	0x4200154 0028 	;00155 0028 0048 	RlyG6THR	EQU	0x4800156 0028 0049 	RlyG6HI	EQU	0x4900157 0028 004A 	RlyG6GY	EQU	0x4A00158 0028 	;00159 0028 004B 	RlyG7THR	EQU	0x4B00160 0028 004C 	RlyG7HI	EQU	0x4C00161 0028 004D 	RlyG7GY	EQU	0x4D00162 0028 	;00163 0028 0041 	RlyG8THR	EQU	0x4100164 0028 0040 	RlyG8HI	EQU	0x4000165 0028 004E 	RlyG8GY	EQU	0x4E00166 0028 	;00167 0028 0057 	RlyG9THR	EQU	0x5700168 0028 0056 	RlyG9HI	EQU	0x5600169 0028 0055 	RlyG9GY	EQU	0x5500170 0028 0054 	RlyG9DisableBCD	EQU	0x5400171 0028 0053 	RlyG9DisableCD	EQU	0x5300172 0028 0052 	RlyG9DisableD	EQU	0x5200173 0028 	;00174 0028 0058 	RlyG10THR	EQU	0x5800175 0028 0059 	RlyG10HI	EQU	0x5900176 0028 005A 	RlyG10GY	EQU	0x5A00177 0028 005B 	RlyG10DisableBCD	EQU	0x5B00178 0028 005C 	RlyG10DisableCD	EQU	0x5C00179 0028 005D 	RlyG10DisableD	EQU	0x5D00180 0028 	;00181 0028 0051 	RlyG13THR	EQU	0x5100182 0028 0050 	RlyG13HI	EQU	0x5000183 0028 005E 	RlyG13GY	EQU	0x5E00184 0028 	;00185 0028 0067 	RlyG11THR	EQU	0x6700186 0028 0066 	RlyG11CAT	EQU	0x66Highland Greeley PIC.asm   "Data.inc"                                    Page: 26500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc00187 0028 0065 	RlyG11_2RorSRC	EQU	0x6500188 0028 0064 	RlyG11GY	EQU	0x6400189 0028 0063 	RlyG11DisableBC	EQU	0x6300190 0028 0062 	RlyG11DisableC	EQU	0x6200191 0028 	;00192 0028 0068 	RlyG12THR	EQU	0x6800193 0028 0069 	RlyG12CAT	EQU	0x6900194 0028 006A 	RlyG12_2RorSRC	EQU	0x6A00195 0028 006B 	RlyG12GY	EQU	0x6B00196 0028 006C 	RlyG12DisableBC	EQU	0x6C00197 0028 006D 	RlyG12DisableC	EQU	0x6D00198 0028 	;00199 0028 0061 	RlyG19THR	EQU	0x61	;TT Bridge00200 0028 0060 	RlyG19HI	EQU	0x6000201 0028 006E 	RlyG19GY	EQU	0x6E00202 0028 006F 	RlyG19Reverse	EQU	0x6F00203 0028 	;00204 0028 0077 	RlyG14THR	EQU	0x7700205 0028 0076 	RlyG14HI	EQU	0x7600206 0028 0075 	RlyG14GY	EQU	0x7500207 0028 	;00208 0028 0074 	RlyG15THR	EQU	0x7400209 0028 0073 	RlyG15HI	EQU	0x7300210 0028 0072 	RlyG15GY	EQU	0x7200211 0028 	;00212 0028 0078 	RlyG16THR	EQU	0x7800213 0028 0079 	RlyG16HI	EQU	0x7900214 0028 007A 	RlyG16GY	EQU	0x7A00215 0028 	;00216 0028 007B 	RlyG17THR	EQU	0x7B00217 0028 007C 	RlyG17HI	EQU	0x7C00218 0028 007D 	RlyG17GY	EQU	0x7D00219 0028 007E 	RlyG17DisableBC	EQU	0x7E00220 0028 007F 	RlyG17DisableC	EQU	0x7F00221 0028 	;00222 0028 0087 	RlyG18THR	EQU	0x8700223 0028 0086 	RlyG18HI	EQU	0x8600224 0028 0085 	RlyG18GY	EQU	0x8500225 0028 0084 	RlyG18DisableBC	EQU	0x8400226 0028 0083 	RlyG18DisableC	EQU	0x8300227 0028 	;00228 0028 0082 	RlyG20THR	EQU	0x8200229 0028 0081 	RlyG20HI	EQU	0x8100230 0028 0080 	RlyG20GY	EQU	0x8000231 0028 	;00232 0028 0088 	RlyH1THR	EQU	0x8800233 0028 0089 	RlyH1CAT	EQU	0x8900234 0028 008A 	RlyH1_2RorSRC	EQU	0x8A00235 0028 008B 	RlyH1GY	EQU	0x8B00236 0028 	;00237 0028 008C 	RlyH2THR	EQU	0x8C00238 0028 008D 	RlyH2HI	EQU	0x8D00239 0028 008E 	RlyH2GY	EQU	0x8E00240 0028 	;00241 0028 0097 	RlyH3THR	EQU	0x9700242 0028 0096 	RlyH3HI	EQU	0x9600243 0028 0095 	RlyH3GY	EQU	0x9500244 0028 	;00245 0028 0094 	RlyH4THR	EQU	0x9400246 0028 0093 	RlyH4HI	EQU	0x9300247 0028 0092 	RlyH4GY	EQU	0x9200248 0028 	;00249 0028 0098 	RlyH5THR	EQU	0x9800250 0028 0099 	RlyH5HI	EQU	0x9900251 0028 009A 	RlyH5GY	EQU	0x9A00252 0028 	;00253 0028 	;Block Alocation 7 seg. displays00254 0028 0C00 0200 0100 0000 0D00 0300 0E00 0F00 	Blk300AlocLed	dw	0x000C,0x0002,0x0001,0x0000,0x000D,0x0003,0x000E,0x000F00255 0038 7000 7E00 7D00 7C00 7100 7F00 7200 7300 	Blk310_1AlocLed	dw	0x0070,0x007E,0x007D,0x007C,0x0071,0x007F,0x0072,0x007300256 0048 7400 7A00 7900 7800 7500 7B00 7600 7700 	Blk310_2AlocLed	dw	0x0074,0x007A,0x0079,0x0078,0x0075,0x007B,0x0076,0x007700257 0058 4800 4600 4500 4400 4900 4700 4A00 4B00 	Blk311_1AlocLed	dw	0x0048,0x0046,0x0045,0x0044,0x0049,0x0047,0x004A,0x004B00258 0068 4C00 4200 4100 4000 4D00 4300 4E00 4F00 	Blk311_2AlocLed	dw	0x004C,0x0042,0x0041,0x0040,0x004D,0x0043,0x004E,0x004F00259 0078 2400 2A00 2900 2800 2500 2B00 2600 2700 	Blk312_1AlocLed	dw	0x0024,0x002A,0x0029,0x0028,0x0025,0x002B,0x0026,0x002700260 0088 3000 3E00 3D00 3C00 3100 3F00 3200 3300 	Blk312_2AlocLed	dw	0x0030,0x003E,0x003D,0x003C,0x0031,0x003F,0x0032,0x003300261 0098 6800 6600 6500 6400 6900 6700 6A00 6B00 	Blk313_1AlocLed	dw	0x0068,0x0066,0x0065,0x0064,0x0069,0x0067,0x006A,0x006B00262 00A8 6C00 6200 6100 6000 6D00 6300 6E00 6F00 	Blk313_2AlocLed	dw	0x006C,0x0062,0x0061,0x0060,0x006D,0x0063,0x006E,0x006F00263 00B8 3801 3601 3501 3401 3901 3701 3A01 3B01 	Blk320AlocLed	dw	0x0138,0x0136,0x0135,0x0134,0x0139,0x0137,0x013A,0x013B00264 00C8 3C01 3201 3101 3001 3D01 3301 3E01 3F01 	Blk321AlocLed	dw	0x013C,0x0132,0x0131,0x0130,0x013D,0x0133,0x013E,0x013F00265 00D8 	;00266 00D8 	;	STTL	Block Data00267 00D8 	; Highland Greeley BLOCK DATA 00268 00D8 FEFE 	None	EQU	0xFEFE00269 00D8 0000 	DETWEST	EQU	0x0000270 00D8 0002 	DETEAST	EQU	0x0200271 00D8 0004 	TrkPwr	EQU	0x0400272 00D8 0006 	OCCLED	EQU	0x0600273 00D8 	;00274 00D8 	;BLOCK NUMBERS00275 00D8 	;00276 00D8 	FirstBlksData00277 00D8 0014 	BLK01	DW	0x1400	;DET WEST00278 00DA 0114 		DW	0x1401	;DET EAST00279 00DC FEFE 		DW	None	;TRK PWR Rly00280 00DE FEFE 		DW	None	;OCC LED00281 00E0 	;00282 00E0 		Page00283 00E0 		subtitle	Routes:RouteName EQU RouteNum00284 00E0 	;RouteName EQU RouteNum00285 00E0 	;RouteNum*2 is an offset into the route pointer tableHighland Greeley PIC.asm   Routes:RouteName EQU RouteNum                 Page: 27500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc00286 00E0 0001 	ML300	EQU	d'01'00287 00E0 0002 	ML300_MZR	EQU	d'02'00288 00E0 0003 	ML300_310_1	EQU	d'03'00289 00E0 0004 	ML300_310_2	EQU	d'04'00290 00E0 0005 	ML300_311_1	EQU	d'05'00291 00E0 0006 	ML300_311_2	EQU	d'06'00292 00E0 0007 	ML300_312_1	EQU	d'07'00293 00E0 0008 	ML300_312_2	EQU	d'08'00294 00E0 0009 	ML300_313_1	EQU	d'09'00295 00E0 000A 	ML300_313_2	EQU	d'10'00296 00E0 000B 	ML300_310_1_320	EQU	d'11'00297 00E0 000C 	ML300_310_2_320	EQU	d'12'00298 00E0 000D 	ML300_312_1_320	EQU	d'13'00299 00E0 000E 	ML300_312_2_320	EQU	d'14'00300 00E0 000F 	ML300_311_1_321	EQU	d'15'00301 00E0 0010 	ML300_311_2_321	EQU	d'16'00302 00E0 0011 	ML300_312_1_321	EQU	d'17'00303 00E0 0012 	ML300_312_2_321	EQU	d'18'00304 00E0 0013 	ML300_313_1_321	EQU	d'19'00305 00E0 0014 	ML300_313_2_321	EQU	d'20'00306 00E0 0015 	GYH5	EQU	d'21'00307 00E0 0016 	GY300	EQU	d'22'00308 00E0 0017 	GY300_MZR	EQU	d'23'00309 00E0 0018 	GY300_310_1	EQU	d'24'00310 00E0 0019 	GY300_310_2	EQU	d'25'00311 00E0 001A 	GY300_311_1	EQU	d'26'00312 00E0 001B 	GY300_311_2	EQU	d'27'00313 00E0 001C 	GY300_312_1	EQU	d'28'00314 00E0 001D 	GY300_312_2	EQU	d'29'00315 00E0 001E 	GY300_313_1	EQU	d'30'00316 00E0 001F 	GY300_313_2	EQU	d'31'00317 00E0 0020 	GYH2	EQU	d'32'00318 00E0 0021 	GYH3	EQU	d'33'00319 00E0 0022 	GYH4	EQU	d'34'00320 00E0 0023 	GY300_310_1_H2	EQU	d'35'00321 00E0 0024 	GY300_310_1_H3	EQU	d'36'00322 00E0 0025 	GY300_310_1_H4	EQU	d'37'00323 00E0 0026 	GY300_310_1_320	EQU	d'38'00324 00E0 0027 	GY300_310_2_320	EQU	d'39'00325 00E0 0028 	GY300_312_1_320	EQU	d'40'00326 00E0 0029 	GY300_312_2_320	EQU	d'41'00327 00E0 002A 	GY300_311_1_321	EQU	d'42'00328 00E0 002B 	GY300_311_2_321	EQU	d'43'00329 00E0 002C 	GY300_312_1_321	EQU	d'44'00330 00E0 002D 	GY300_312_2_321	EQU	d'45'00331 00E0 002E 	GY300_313_1_321	EQU	d'46'00332 00E0 002F 	GY300_313_2_321	EQU	d'47'00333 00E0 0030 	ML320_310_1	EQU	d'48'00334 00E0 0031 	ML320_310_2	EQU	d'49'00335 00E0 0032 	ML320_312_1	EQU	d'50'00336 00E0 0033 	ML320_312_2	EQU	d'51'00337 00E0 0034 	GY320_310_1	EQU	d'52'00338 00E0 0035 	GY320_310_2	EQU	d'53'00339 00E0 0036 	GY320_312_1	EQU	d'54'00340 00E0 0037 	GY320_312_2	EQU	d'55'00341 00E0 0038 	GY320_G1	EQU	d'56'00342 00E0 0039 	GY320_G1_GYL	EQU	d'57'00343 00E0 003A 	GY320_G2	EQU	d'58'00344 00E0 003B 	GY320_G2_GYL	EQU	d'59'00345 00E0 003C 	GY320_H1	EQU	d'60'00346 00E0 003D 	GY320_H1_GYL	EQU	d'61'00347 00E0 003E 	GY320_310_1_H5	EQU	d'62'00348 00E0 003F 	GY320_310_2_H5	EQU	d'63'00349 00E0 0040 	ML321_311_1	EQU	d'64'00350 00E0 0041 	ML321_311_2	EQU	d'65'00351 00E0 0042 	ML321_312_1	EQU	d'66'00352 00E0 0043 	ML321_312_2	EQU	d'67'00353 00E0 0044 	ML321_313_1	EQU	d'68'00354 00E0 0045 	ML321_313_2	EQU	d'69'00355 00E0 0046 	GY321_311_1	EQU	d'70'00356 00E0 0047 	GY321_311_2	EQU	d'71'00357 00E0 0048 	GY321_312_1	EQU	d'72'00358 00E0 0049 	GY321_312_2	EQU	d'73'00359 00E0 004A 	GY321_313_1	EQU	d'74'00360 00E0 004B 	GY321_313_2	EQU	d'75'00361 00E0 004C 	GY321_G1	EQU	d'76'00362 00E0 004D 	GY321_G2	EQU	d'77'00363 00E0 004E 	GY321_313_1_GYL	EQU	d'78'00364 00E0 004F 	GY321_G1_GYL	EQU	d'79'00365 00E0 0050 	GY321_G2_GYL	EQU	d'80'  00366 00E0 0052 	GY321_G6	EQU	d'82'00367 00E0 0053 	GY321_G7	EQU	d'83'00368 00E0 0054 	GY321_G8	EQU	d'84'00369 00E0 0055 	GY321_G9A	EQU	d'85'00370 00E0 0056 	GY321_G9B	EQU	d'86'00371 00E0 0057 	GY321_G9C	EQU	d'87'00372 00E0 0058 	GY321_G9D	EQU	d'88'00373 00E0 0059 	GY321_G10A	EQU	d'89'00374 00E0 005A 	GY321_G10B	EQU	d'90'00375 00E0 005B 	GY321_G10C	EQU	d'91'00376 00E0 005C 	GY321_G10D	EQU	d'92'00377 00E0 005D 	GY321_G17A	EQU	d'93'00378 00E0 005E 	GY321_G17B	EQU	d'94'00379 00E0 005F 	GY321_G17C	EQU	d'95'00380 00E0 0060 	GY321_G18A	EQU	d'96'00381 00E0 0061 	GY321_G18B	EQU	d'97'00382 00E0 0062 	GY321_G18C	EQU	d'98'00383 00E0 0064 	GY313_2_G6	EQU	d'100'00384 00E0 0065 	GY313_2_G7	EQU	d'101'00385 00E0 0066 	GY313_2_G8	EQU	d'102'Highland Greeley PIC.asm   Routes:RouteName EQU RouteNum                 Page: 28500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc00386 00E0 0067 	GY313_2_G9A	EQU	d'103'00387 00E0 0068 	GY313_2_G9B	EQU	d'104'00388 00E0 0069 	GY313_2_G9C	EQU	d'105'00389 00E0 006A 	GY313_2_G9D	EQU	d'106'00390 00E0 006B 	GY313_2_G10A	EQU	d'107'00391 00E0 006C 	GY313_2_G10B	EQU	d'108'00392 00E0 006D 	GY313_2_G10C	EQU	d'109'00393 00E0 006E 	GY313_2_G10D	EQU	d'110'00394 00E0 006F 	GY313_2_G17A	EQU	d'111'00395 00E0 0070 	GY313_2_G17B	EQU	d'112'00396 00E0 0071 	GY313_2_G17C	EQU	d'113'00397 00E0 0072 	GY313_2_G18A	EQU	d'114'00398 00E0 0073 	GY313_2_G18B	EQU	d'115'00399 00E0 0074 	GY313_2_G18C	EQU	d'116'00400 00E0 0075 	ML320	EQU	d'117'00401 00E0 0076 	ML321	EQU	d'118'00402 00E0 0077 	ML310_1	EQU	d'119'00403 00E0 0078 	ML310_2	EQU	d'120'00404 00E0 0079 	ML311_1	EQU	d'121'00405 00E0 007A 	ML311_2	EQU	d'122'00406 00E0 007B 	ML312_1	EQU	d'123'00407 00E0 007C 	ML312_2	EQU	d'124'00408 00E0 007D 	ML313_1	EQU	d'125'00409 00E0 007E 	ML313_2	EQU	d'126'00410 00E0 007F 	GY320	EQU	d'127'00411 00E0 0080 	GY321	EQU	d'128'00412 00E0 0081 	GY310_1	EQU	d'129'00413 00E0 0082 	GY310_2	EQU	d'130'00414 00E0 0083 	GY311_1	EQU	d'131'00415 00E0 0084 	GY311_2	EQU	d'132'00416 00E0 0085 	GY312_1	EQU	d'133'00417 00E0 0086 	GY312_2	EQU	d'134'00418 00E0 0087 	GY313_1	EQU	d'135'00419 00E0 0088 	GY313_2	EQU	d'136'00420 00E0 0089 	GY300_G4	EQU	d'137'00421 00E0 008A 	GY310_1_H2	EQU	d'138'00422 00E0 008B 	GY310_1_H3	EQU	d'139'00423 00E0 008C 	GY310_1_H4	EQU	d'140'00424 00E0 008D 	GY310_1_H5	EQU	d'141'00425 00E0 008E 	GY310_2_H5	EQU	d'142'00426 00E0 008F 	GYG1	EQU	d'143'00427 00E0 0090 	ClrMZR	EQU	d'144'00428 00E0 0091 	GYG2	EQU	d'145'00429 00E0 0092 	GYGYL_G1	EQU	d'146'00430 00E0 0093 	GYGYL	EQU	d'147'00431 00E0 0094 	GYGYL_G2	EQU	d'148'00432 00E0 0095 	GYH1	EQU	d'149'00433 00E0 0096 	GYG5	EQU	d'150'00434 00E0 0097 	GYG6	EQU	d'151'00435 00E0 0098 	GYG7	EQU	d'152'00436 00E0 0099 	GYG8	EQU	d'153'00437 00E0 009A 	GYG9A	EQU	d'154'00438 00E0 009B 	GYG10A	EQU	d'155'00439 00E0 009C 	GYGYL_G13	EQU	d'156'00440 00E0 009D 	GYGYL_G19A	EQU	d'157'00441 00E0 009E 	GYGYL_G19B	EQU	d'158'00442 00E0 009F 	GYGYL_G11A	EQU	d'159'00443 00E0 00A0 	GYGYL_G11B	EQU	d'160'00444 00E0 00A1 	GYGYL_G11C	EQU	d'161'00445 00E0 00A2 	GYGYL_G12A	EQU	d'162'00446 00E0 00A3 	GYGYL_G12B	EQU	d'163'00447 00E0 00A4 	GYGYL_G12C	EQU	d'164'00448 00E0 00A5 	GYGYL_G3	EQU	d'165'00449 00E0 00A6 	GYGYL_G4	EQU	d'166'00450 00E0 00A7 	GYGYL_313_1	EQU	d'167'00451 00E0 00A8 	GYGYL_H1	EQU	d'168'00452 00E0 00A9 	GYGYL_311_1	EQU	d'169'00453 00E0 00AA 	GYG19A_G14	EQU	d'170'00454 00E0 00AB 	GYG19B_G14	EQU	d'171'00455 00E0 00AC 	GYG19A_G15	EQU	d'172'00456 00E0 00AD 	GYG19B_G15	EQU	d'173'00457 00E0 00AE 	GYG19A_G16	EQU	d'174'00458 00E0 00AF 	GYG19B_G16	EQU	d'175'00459 00E0 00B0 	GYG13_G19A	EQU	d'176'00460 00E0 00B1 	GYG13_G19B	EQU	d'177'00461 00E0 00B2 	GYG19A_G20	EQU	d'178'00462 00E0 00B3 	GYG19B_G20	EQU	d'179'00463 00E0 00B4 	GYG19A_G17A	EQU	d'180'00464 00E0 00B5 	GYG19B_G17A	EQU	d'181'00465 00E0 00B6 	GYG19A_G17B	EQU	d'182'00466 00E0 00B7 	GYG19B_G17B	EQU	d'183'00467 00E0 00B8 	GYG19A_G17C	EQU	d'184'00468 00E0 00B9 	GYG19B_G17C	EQU	d'185'00469 00E0 00BA 	GYG19A_G18A	EQU	d'186'00470 00E0 00BB 	GYG19B_G18A	EQU	d'187'00471 00E0 00BC 	GYG19A_G18B	EQU	d'188'00472 00E0 00BD 	GYG19B_G18B	EQU	d'189'00473 00E0 00BE 	GYG19A_G18C	EQU	d'190'00474 00E0 00BF 	GYG19B_G18C	EQU	d'191'00475 00E0 00C0 	GYH2_H5	EQU	d'192'00476 00E0 00C1 	GYH3_H5	EQU	d'193'00477 00E0 00C2 	GYH4_H5	EQU	d'194'00478 00E0 00C3 	GY313_2_G19A	EQU	d'195'00479 00E0 00C4 	GY313_2_G19B	EQU	d'196'00480 00E0 00C5 	GY321_311_1_GYL	EQU	d'197'00481 00E0 00C6 	GY311_1_H1	EQU	d'198'00482 00E0 00C7 	GY311_1_GYL_H1	EQU	d'199'00483 00E0 00C8 	GY310_2_H1	EQU	d'200'00484 00E0 	;00485 00E0 	;BUTTONS  add 0x0200 to get Input#Highland Greeley PIC.asm   Routes:RouteName EQU RouteNum                 Page: 29500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc00486 00E0 0000 	G8Btn	EQU	0x0000487 00E0 0001 	G10CBtn	EQU	0x0100488 00E0 0002 	G10DBtn	EQU	0x0200489 00E0 0003 	G9DBtn	EQU	0x0300490 00E0 0004 	G9BBtn	EQU	0x0400491 00E0 0005 	G10BBtn	EQU	0x0500492 00E0 0006 	G10ABtn	EQU	0x0600493 00E0 0007 	G17ABtn	EQU	0x0700494 00E0 0008 	G9ABtn	EQU	0x0800495 00E0 0009 	G18ABtn	EQU	0x0900496 00E0 000A 	G17CBtn	EQU	0x0A00497 00E0 000B 	G18CBtn	EQU	0x0B00498 00E0 000C 	G18BBtn	EQU	0x0C00499 00E0 000D 	G17BBtn	EQU	0x0D00500 00E0 000E 	G9CBtn	EQU	0x0E00501 00E0 000F 	G7Btn	EQU	0x0F00502 00E0 0010 	G6Btn	EQU	0x1000503 00E0 0011 	G19BBtn	EQU	0x1100504 00E0 0012 	G16Btn	EQU	0x1200505 00E0 0013 	G13Btn	EQU	0x1300506 00E0 0014 	G11ABtn	EQU	0x1400507 00E0 0015 	G11BBtn	EQU	0x1500508 00E0 0016 	G11CBtn	EQU	0x1600509 00E0 0017 	G5Btn	EQU	0x1700510 00E0 0018 	ManzinarBtn	EQU	0x1800511 00E0 0019 	G12CBtn	EQU	0x1900512 00E0 001A 	G12BBtn	EQU	0x1A00513 00E0 001B 	G12ABtn	EQU	0x1B00514 00E0 001C 	G14Btn	EQU	0x1C00515 00E0 001D 	G15Btn	EQU	0x1D00516 00E0 001E 	G20Btn	EQU	0x1E00517 00E0 001F 	G19ABtn	EQU	0x1F00518 00E0 0020 	Blk313_2Btn	EQU	0x2000519 00E0 0021 	G4Btn	EQU	0x2100520 00E0 0022 	G2Btn	EQU	0x2200521 00E0 0023 	Blk312_2Btn	EQU	0x2300522 00E0 0024 	Blk311_2Btn	EQU	0x2400523 00E0 0025 	Blk310_2Btn	EQU	0x2500524 00E0 0026 	Blk310_1Btn	EQU	0x2600525 00E0 0027 	GYLBtn	EQU	0x2700526 00E0 0028 	Blk300Btn	EQU	0x2800527 00E0 0029 	H5Btn	EQU	0x2900528 00E0 002A 	H1Btn	EQU	0x2A00529 00E0 002B 	Blk311_1Btn	EQU	0x2B00530 00E0 002C 	Blk312_1Btn	EQU	0x2C00531 00E0 002D 	G1Btn	EQU	0x2D00532 00E0 002E 	G3Btn	EQU	0x2E00533 00E0 002F 	Blk313_1Btn	EQU	0x2F00534 00E0 0030 	MLClearBtn	EQU	0x3000535 00E0 0031 	LocalClearBtn	EQU	0x3100536 00E0 0032 	TestBtn	EQU	0x3200537 00E0 0033 	Blk321Btn	EQU	0x3300538 00E0 0034 	H3Btn	EQU	0x3400539 00E0 003B 	H2Btn	EQU	0x3B00540 00E0 003C 	Blk320Btn	EQU	0x3C00541 00E0 003D 	H4Btn	EQU	0x3D00542 00E0 003E 	LocalEnterBtn	EQU	0x3E00543 00E0 003F 	MLEnterBtn	EQU	0x3F00544 00E0 	;00545 00E0 	;LEDS Output BITS00546 00E0 012F 	LocalReady	EQU	0x012F00547 00E0 012E 	MainlineReady	EQU	0x012E00548 00E0 0120 	LocalUnable	EQU	0x012000549 00E0 0121 	MainlineUnable	EQU	0x012100550 00E0 0140 	SPKR	EQU	0x0140	;OutputNum00551 00E0 	;00552 00E0 1260 	THRDIR	EQU	0x1260	;Input#00553 00E0 	;00554 00E0 		page00555 00E0 		subtitle	BUTTON SORT TABLE00556 00E0 	;BUTTON SORT TABLE unused or non-route buttons 0x80=skip00557 00E0 	;00558 00E0 	;G8Btn	0x0000559 00E0 05 	BST	DB	0x0500560 00E1 	;00561 00E1 	;G10CBtn	0x0100562 00E1 05 		DB	0x0500563 00E2 	;00564 00E2 	;G10DBtn	0x0200565 00E2 05 		DB	0x0500566 00E3 	;00567 00E3 	;G9DBtn	0x0300568 00E3 05 		DB	0x0500569 00E4 	;00570 00E4 	;G9BBtn	0x0400571 00E4 05 		DB	0x0500572 00E5 	;00573 00E5 	;G10BBtn	0x0500574 00E5 05 		DB	0x0500575 00E6 	;00576 00E6 	;G10ABtn	0x0600577 00E6 05 		DB	0x0500578 00E7 	;00579 00E7 	;G17ABtn	0x0700580 00E7 08 		DB	0x0800581 00E8 	;00582 00E8 	;G9ABtn	0x0800583 00E8 05 		DB	0x0500584 00E9 	;Highland Greeley PIC.asm   BUTTON SORT TABLE                             Page: 30500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc00585 00E9 	;G18ABtn	0x0900586 00E9 08 		DB	0x0800587 00EA 	;00588 00EA 	;G17CBtn	0x0A00589 00EA 08 		DB	0x0800590 00EB 	;00591 00EB 	;G18CBtn	0x0B00592 00EB 08 		DB	0x0800593 00EC 	;00594 00EC 	;G18BBtn	0x0C00595 00EC 08 		DB	0x0800596 00ED 	;00597 00ED 	;G17BBtn	0x0D00598 00ED 08 		DB	0x0800599 00EE 	;00600 00EE 	;G9CBtn	0x0E00601 00EE 05 		DB	0x0500602 00EF 	;00603 00EF 	;G7Btn	0x0F00604 00EF 05 		DB	0x0500605 00F0 	;00606 00F0 	;G6Btn	0x1000607 00F0 05 		DB	0x0500608 00F1 	;00609 00F1 	;G19BBtn	0x1100610 00F1 06 		DB	0x0600611 00F2 	;00612 00F2 	;G16Btn	0x1200613 00F2 07 		DB	0x0700614 00F3 	;00615 00F3 	;G13Btn	0x1300616 00F3 05 		DB	0x0500617 00F4 	;00618 00F4 	;G11ABtn	0x1400619 00F4 05 		DB	0x0500620 00F5 	;00621 00F5 	;G11BBtn	0x1500622 00F5 05 		DB	0x0500623 00F6 	;00624 00F6 	;G11CBtn	0x1600625 00F6 05 		DB	0x0500626 00F7 	;00627 00F7 	;G5Btn	0x1700628 00F7 04 		DB	0x0400629 00F8 	;00630 00F8 	;ManzinarBtn	0x1800631 00F8 02 		DB	0x0200632 00F9 	;00633 00F9 	;G12CBtn	0x1900634 00F9 05 		DB	0x0500635 00FA 	;00636 00FA 	;G12BBtn	0x1A00637 00FA 05 		DB	0x0500638 00FB 	;00639 00FB 	;G12ABtn	0x1B00640 00FB 05 		DB	0x0500641 00FC 	;00642 00FC 	;G14Btn	0x1C00643 00FC 07 		DB	0x0700644 00FD 	;00645 00FD 	;G15Btn	0x1D00646 00FD 07 		DB	0x0700647 00FE 	;00648 00FE 	;G20Btn	0x1E00649 00FE 07 		DB	0x0700650 00FF 	;00651 00FF 	;G19ABtn	0x1F00652 00FF 06 		DB	0x0600653 0100 	;00654 0100 	;313_2Btn	0x2000655 0100 03 		DB	0x0300656 0101 	;00657 0101 	;G4Btn	0x2100658 0101 05 		DB	0x0500659 0102 	;00660 0102 	;G2Btn	0x2200661 0102 05 		DB	0x0500662 0103 	;00663 0103 	;312_2Btn	0x2300664 0103 03 		DB	0x0300665 0104 	;00666 0104 	;311_2Btn	0x2400667 0104 03 		DB	0x0300668 0105 	;00669 0105 	;310_2Btn	0x2500670 0105 03 		DB	0x0300671 0106 	;00672 0106 	;310_1Btn	0x2600673 0106 03 		DB	0x0300674 0107 	;00675 0107 	;GYLBtn	0x2700676 0107 04 		DB	0x0400677 0108 	;00678 0108 	;300Btn	0x2800679 0108 01 		DB	0x0100680 0109 	;00681 0109 	;H5Btn	0x2900682 0109 05 		DB	0x0500683 010A 	;00684 010A 	;H1Btn	0x2AHighland Greeley PIC.asm   BUTTON SORT TABLE                             Page: 31500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc00685 010A 05 		DB	0x0500686 010B 	;00687 010B 	;311_1Btn	0x2B00688 010B 03 		DB	0x0300689 010C 	;00690 010C 	;312_1Btn	0x2C00691 010C 03 		DB	0x0300692 010D 	;00693 010D 	;G1Btn	0x2D00694 010D 05 		DB	0x0500695 010E 	;00696 010E 	;G3Btn	0x2E00697 010E 05 		DB	0x0500698 010F 	;00699 010F 	;313_1Btn	0x2F00700 010F 03 		DB	0x0300701 0110 	;00702 0110 	;MLClearBtn	0x3000703 0110 80 		DB	0x8000704 0111 	;00705 0111 	;LocalClearBtn	0x3100706 0111 80 		DB	0x8000707 0112 	;00708 0112 	;TestBtn	0x3200709 0112 80 		DB	0x8000710 0113 	;00711 0113 	;321Btn	0x3300712 0113 02 		DB	0x0200713 0114 	;00714 0114 	;H3Btn	0x3400715 0114 04 		DB	0x0400716 0115 	;00717 0115 	;unused Inputs00718 0115 80 80 80 80 80 80 		DB	0x80,0x80,0x80,0x80,0x80,0x8000719 011B 	;00720 011B 	;H2Btn	0x3B00721 011B 04 		DB	0x0400722 011C 	;00723 011C 	;320Btn	0x3C00724 011C 02 		DB	0x0200725 011D 	;00726 011D 	;H4Btn	0x3D00727 011D 04 		DB	0x0400728 011E 	;00729 011E 	;LocalEnterBtn	0x3E00730 011E 00 		DB	0x00	;Highest Priority00731 011F 	;00732 011F 	;MLEnterBtn	0x3F00733 011F 00 		DB	0x0000734 0120 	;00735 0120 		Page00736 0120 		subtitle	TurnTable Data00737 0120 	;00738 0120 	; OFFSET ADDED TO ALL TRACKS 00739 0120 FFF4 	TTTrkOffset	EQU	0xFFF4	;0xFFFA00740 0120 	;00741 0120 14670 	TrkG6A	EQU	14670	;733500742 0120 38736 	TrkG6B	EQU	38736	;1936800743 0120 45622 	TrkG13A	EQU	45622	;2281100744 0120 21660 	TrkG13B	EQU	21660	;1083000745 0120 43150 	TrkG14A	EQU	43150	;2157500746 0120 19170 	TrkG14B	EQU	19170	;958500747 0120 41780 	TrkG15A	EQU	41780	;2089000748 0120 17794 	TrkG15B	EQU	17794	;889700749 0120 40432 	TrkG16A	EQU	40432	;2021600750 0120 16430 	TrkG16B	EQU	16430	;821500751 0120 38736 	TrkG20A	EQU	38736	;1936800752 0120 14700 	TrkG20B	EQU	14700	;735000753 0120 	; 00754 0120 	; 00755 0120 	;00756 0120 		include	BlockData.inc00001 0120 		PAGE00002 0120 		subtitle	BlockData.inc00003 0120 	;============================================================================================00004 0120 	;00005 0120 	;  FileName: BlockData.inc00006 0120 	;  Date: 7/26/0600007 0120 	;  File Version: 1.000008 0120 	;  00009 0120 	;  Author: David M. Flynn00010 0120 	;  Company: HPRR00011 0120 	;  Project: TCC, Casper Tower00012 0120 	;00013 0120 	;============================================================================================00014 0120 	; Notes:00015 0120 	;00016 0120 	;in BlockPwrTable each Byte represents one block00017 0120 	; bit0 = Cab500018 0120 	; bit1 = Cab400019 0120 	; bit2 = Cab300020 0120 	; bit3 = Cab200021 0120 	; bit4 = Cab100022 0120 	; bit5 = Detect West00023 0120 	; bit6 = Detect East00024 0120 	; bit7 = Set if any cab is powerd00025 0120 	;  if bit 7 is set but bits 0..4 are cleared then look at BlockPwrTable200026 0120 	;  for additional cab bitsHighland Greeley PIC.asm   BlockData.inc                                 Page: 32500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc00027 0120 	;00028 0120 	;in BlockPwrTable2 each byte represents one block00029 0120 	; bit0 = Cab900030 0120 	; bit1 = Cab800031 0120 	; bit2 = Cab700032 0120 	; bit3 = Cab6	Casper Tower (me)00033 0120 	; bit4 = not used00034 0120 	; bit5 = not used00035 0120 	; bit6 = not used00036 0120 	; bit7 = not used00037 0120 	;00038 0120 	;00039 0120 	;============================================================================================00040 0120 	; Revision History00041 0120 	;00042 0120 	; 1.0   7/26/06	Customized for Casper Tower00043 0120 	; 1.0   1/1/2005	First Reved version.00044 0120 	;	Converted bit numbers to fix wiring errer's need for00045 0120 	;	BitFlipData.00046 0120 	;00047 0120 	;============================================================================================00048 0120 	; Cabs must be used in order, the first "None" encountered stops the scanner.00049 0120 	;00050 0120 0000 	BPCab1	EQU	0x0000051 0120 0002 	BPCab2	EQU	0x0200052 0120 0004 	BPCab3	EQU	0x0400053 0120 0006 	BPCab4	EQU	0x0600054 0120 0008 	BPCab5	EQU	0x0800055 0120 000A 	BPCab6	EQU	0x0A00056 0120 000C 	BPCab7	EQU	0x0C00057 0120 000E 	BPCab8	EQU	0x0E00058 0120 0010 	BPCab9	EQU	0x1000059 0120 	;00060 0120 	;None	EQU	0xFEFE00061 0120 00FF 	EOD	EQU	0xFF00062 0120 FDFD 	kSkipThr	EQU	0xFDFD00063 0120 	;00064 0120 0012 	BPAddBlk	EQU	0x1200065 0120 	;00066 0120 	; 1 bit for each block 1="I control this block."00067 0120 	;00068 0120 	BlockOwner00069 0120 0080 	MyBlock	EQU	0x8000070 0120 0000 	NotMine	EQU	0x0000071 0120 	;00072 0120 	;00073 0120 	; Block Numbers 77 blks 0..7600074 0120 	;Use as index into block power table LDX #BlkNumRDY100075 0120 0000 	BlkNumRDY1	EQU	0x0000076 0120 00 		DB	NotMine00077 0121 0001 	BlkNumRDY2	EQU	0x0100078 0121 00 		DB	NotMine00079 0122 0002 	BlkNumFYL	EQU	0x0200080 0122 00 		DB	NotMine00081 0123 0003 	BlkNum100	EQU	0x0300082 0123 00 		DB	NotMine00083 0124 0004 	BlkNum101	EQU	0x0400084 0124 00 		DB	NotMine00085 0125 0005 	BlkNum110	EQU	0x0500086 0125 00 		DB	NotMine00087 0126 0006 	BlkNum111	EQU	0x0600088 0126 00 		DB	NotMine00089 0127 0007 	BlkNum120	EQU	0x0700090 0127 00 		DB	NotMine00091 0128 0008 	BlkNum121	EQU	0x0800092 0128 00 		DB	NotMine00093 0129 0009 	BlkNum130	EQU	0x0900094 0129 00 		DB	NotMine00095 012A 000A 	BlkNum131	EQU	0x0A00096 012A 00 		DB	NotMine00097 012B 000B 	BlkNum140	EQU	0x0B00098 012B 00 		DB	NotMine00099 012C 000C 	BlkNum141	EQU	0x0C00100 012C 00 		DB	NotMine00101 012D 000D 	BlkNumPT1	EQU	0x0D00102 012D 00 		DB	NotMine00103 012E 000E 	BlkNumPT2	EQU	0x0E00104 012E 00 		DB	NotMine00105 012F 000F 	BlkNum150	EQU	0x0F00106 012F 00 		DB	NotMine00107 0130 0010 	BlkNum151	EQU	0x1000108 0130 00 		DB	NotMine00109 0131 0011 	BlkNum160	EQU	0x1100110 0131 00 		DB	NotMine00111 0132 0012 	BlkNum170	EQU	0x1200112 0132 00 		DB	NotMine00113 0133 0013 	BlkNum171	EQU	0x1300114 0133 00 		DB	NotMine00115 0134 0014 	BlkNumSYL	EQU	0x1400116 0134 00 		DB	NotMine00117 0135 0015 	BlkNum180	EQU	0x1500118 0135 00 		DB	NotMine00119 0136 0016 	BlkNum190	EQU	0x1600120 0136 00 		DB	NotMine00121 0137 0017 	BlkNum191	EQU	0x1700122 0137 00 		DB	NotMine00123 0138 0018 	BlkNum200	EQU	0x1800124 0138 00 		DB	NotMine00125 0139 0019 	BlkNum201	EQU	0x1900126 0139 00 		DB	NotMineHighland Greeley PIC.asm   BlockData.inc                                 Page: 33500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc00127 013A 001A 	BlkNum202	EQU	0x1A00128 013A 00 		DB	NotMine00129 013B 001B 	BlkNum210	EQU	0x1B00130 013B 00 		DB	NotMine00131 013C 001C 	BlkNum220	EQU	0x1C00132 013C 00 		DB	NotMine00133 013D 001D 	BlkNum221	EQU	0x1D00134 013D 00 		DB	NotMine00135 013E 001E 	BlkNum222	EQU	0x1E00136 013E 00 		DB	NotMine00137 013F 001F 	BlkNum230	EQU	0x1F00138 013F 00 		DB	NotMine00139 0140 0020 	BlkNum240	EQU	0x2000140 0140 00 		DB	NotMine00141 0141 0021 	BlkNum250	EQU	0x2100142 0141 00 		DB	NotMine00143 0142 0022 	BlkNum251	EQU	0x22	;3400144 0142 00 		DB	NotMine00145 0143 0023 	BlkNum260	EQU	0x2300146 0143 00 		DB	NotMine00147 0144 0024 	BlkNum270	EQU	0x2400148 0144 00 		DB	NotMine00149 0145 0025 	BlkNum271	EQU	0x25	;3700150 0145 00 		DB	NotMine00151 0146 0026 	BlkNum280	EQU	0x2600152 0146 00 		DB	NotMine00153 0147 0027 	BlkNum290	EQU	0x2700154 0147 00 		DB	NotMine00155 0148 0028 	BlkNum291	EQU	0x2800156 0148 00 		DB	NotMine00157 0149 0029 	BlkNum300	EQU	0x2900158 0149 00 		DB	NotMine00159 014A 002A 	BlkNum3101	EQU	0x2A00160 014A 00 		DB	NotMine00161 014B 002B 	BlkNum3102	EQU	0x2B00162 014B 00 		DB	NotMine00163 014C 002C 	BlkNum3111	EQU	0x2C00164 014C 00 		DB	NotMine00165 014D 002D 	BlkNum3112	EQU	0x2D00166 014D 00 		DB	NotMine00167 014E 002E 	BlkNum3121	EQU	0x2E00168 014E 00 		DB	NotMine00169 014F 002F 	BlkNum3122	EQU	0x2F00170 014F 00 		DB	NotMine00171 0150 0030 	BlkNum3131	EQU	0x3000172 0150 00 		DB	NotMine00173 0151 0031 	BlkNum3132	EQU	0x3100174 0151 00 		DB	NotMine00175 0152 0032 	BlkNum320	EQU	0x3200176 0152 00 		DB	NotMine00177 0153 0033 	BlkNum390	EQU	0x33	;aka 32100178 0153 00 		DB	NotMine00179 0154 0034 	BlkNum330	EQU	0x3400180 0154 00 		DB	NotMine00181 0155 0035 	BlkNum380	EQU	0x35	;aka 33100182 0155 00 		DB	NotMine00183 0156 0036 	BlkNum340	EQU	0x3600184 0156 00 		DB	NotMine00185 0157 0037 	BlkNum370	EQU	0x37	;aka 34100186 0157 00 		DB	NotMine00187 0158 0038 	BlkNum350	EQU	0x38	;aka 340 part200188 0158 00 		DB	NotMine00189 0159 0039 	BlkNum351	EQU	0x39	;aka 34200190 0159 00 		DB	NotMine00191 015A 003A 	BlkNum360	EQU	0x3A	;aka 35000192 015A 00 		DB	NotMine00193 015B 003B 	BlkNum361	EQU	0x3B	;aka 35100194 015B 00 		DB	NotMine00195 015C 003C 	BlkNum362	EQU	0x3C	;aka 35200196 015C 00 		DB	NotMine00197 015D 003D 	BlkNum363	EQU	0x3D	;aka 35300198 015D 00 		DB	NotMine00199 015E 003E 	BlkNum364	EQU	0x3E	;aka 35400200 015E 00 		DB	NotMine00201 015F 003F 	BlkNum365	EQU	0x3F	;aka 35500202 015F 00 		DB	NotMine00203 0160 0040 	BlkNumVY1	EQU	0x40	;upper vista00204 0160 00 		DB	NotMine00205 0161 0041 	BlkNumVY2	EQU	0x4100206 0161 00 		DB	NotMine00207 0162 0042 	BlkNumVY3	EQU	0x4200208 0162 00 		DB	NotMine00209 0163 0043 	BlkNumVY4	EQU	0x4300210 0163 00 		DB	NotMine00211 0164 0044 	BlkNumVY5	EQU	0x4400212 0164 00 		DB	NotMine00213 0165 0045 	BlkNumVY6	EQU	0x4500214 0165 00 		DB	NotMine00215 0166 0046 	BlkNumEYF	EQU	0x4600216 0166 00 		DB	NotMine00217 0167 0047 	BlkNumPHL	EQU	0x47	;71,Pinehurst Lead00218 0167 00 		DB	NotMine00219 0168 0048 	BlkNumPH1	EQU	0x48	;72,Pinehurst 100220 0168 00 		DB	NotMine00221 0169 0049 	BlkNumPH2	EQU	0x49	;7300222 0169 00 		DB	NotMine00223 016A 004A 	BlkNumPH3	EQU	0x4A	;7400224 016A 00 		DB	NotMine00225 016B 004B 	BlkNumPH4	EQU	0x4B	;7500226 016B 00 		DB	NotMineHighland Greeley PIC.asm   BlockData.inc                                 Page: 34500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc00227 016C 004C 	BlkNumMZR	EQU	0x4C	;7600228 016C 00 		DB	NotMine00229 016D 	;00230 016D 	; Block Power relay data 64 blks 0..6300231 016D 	; Numbers shown are Inputs Add 0x0400 to find the Output00232 016D 	; Note: Cabs must be assigned sequencially, first (None) ends scan.00233 016D FEFE 	BlkPwrRDY1	DW	None	;Cab1 BLK0000234 016F FEFE 		DW	None	;Cab200235 0171 FEFE 		DW	None	;Cab300236 0173 FEFE 		DW	None	;Cab400237 0175 FEFE 		DW	None	;Cab500238 0177 FEFE 		DW	None	;Cab600239 0179 FEFE 		DW	None	;Cab700240 017B FEFE 		DW	None	;Cab800241 017D FEFE 		DW	None	;Cab900242 017F 	;00243 017F FEFE 	BlkPwrRDY2	DW	None	;Cab1 BLK0100244 0181 FEFE 		DW	None	;Cab200245 0183 FEFE 		DW	None	;Cab300246 0185 FEFE 		DW	None	;Cab400247 0187 FEFE 		DW	None	;Cab500248 0189 FEFE 		DW	None	;Cab600249 018B FEFE 		DW	None	;Cab700250 018D FEFE 		DW	None	;Cab800251 018F FEFE 		DW	None	;Cab900252 0191 	;00253 0191 FEFE 	BlkPwrFYL	DW	None	;Cab1 BLK0200254 0193 FEFE 		DW	None	;Cab200255 0195 FEFE 		DW	None	;Cab300256 0197 FEFE 		DW	None	;Cab400257 0199 FEFE 		DW	None	;Cab500258 019B FEFE 		DW	None	;Cab6 AT00259 019D FEFE 		DW	None	;Cab7 VY00260 019F FEFE 		DW	None	;Cab8 WY00261 01A1 FEFE 		DW	None	;Cab9 DO00262 01A3 	;00263 01A3 FEFE 	BlkPwr100	DW	None	;Cab1 BLK0300264 01A5 FEFE 		DW	None	;Cab200265 01A7 FEFE 		DW	None	;Cab300266 01A9 FEFE 		DW	None	;Cab400267 01AB FEFE 		DW	None	;Cab500268 01AD FEFE 		DW	None	;Cab600269 01AF FEFE 		DW	None	;Cab700270 01B1 FEFE 		DW	None	;Cab800271 01B3 FEFE 		DW	None	;Cab900272 01B5 	;00273 01B5 FEFE 	BlkPwr101	DW	None	;Cab1 BLK0400274 01B7 FEFE 		DW	None	;Cab200275 01B9 FEFE 		DW	None	;Cab300276 01BB FEFE 		DW	None	;Cab400277 01BD FEFE 		DW	None	;Cab500278 01BF FEFE 		DW	None	;Cab600279 01C1 FEFE 		DW	None	;Cab700280 01C3 FEFE 		DW	None	;Cab800281 01C5 FEFE 		DW	None	;Cab900282 01C7 	;00283 01C7 FEFE 	BlkPwr110	DW	None	;Cab1 BLK0500284 01C9 FEFE 		DW	None	;Cab200285 01CB FEFE 		DW	None	;Cab300286 01CD FEFE 		DW	None	;Cab400287 01CF FEFE 		DW	None	;Cab500288 01D1 FEFE 		DW	None	;Cab600289 01D3 FEFE 		DW	None	;Cab700290 01D5 FEFE 		DW	None	;Cab800291 01D7 FEFE 		DW	None	;Cab900292 01D9 	;00293 01D9 FEFE 	BlkPwr111	DW	None	;Cab1 BLK0600294 01DB FEFE 		DW	None	;Cab200295 01DD FEFE 		DW	None	;Cab300296 01DF FEFE 		DW	None	;Cab400297 01E1 FEFE 		DW	None	;Cab500298 01E3 FEFE 		DW	None	;Cab600299 01E5 FEFE 		DW	None	;Cab700300 01E7 FEFE 		DW	None	;Cab800301 01E9 FEFE 		DW	None	;Cab900302 01EB 	;00303 01EB FEFE 	BlkPwr120	DW	None	;Cab1 BLK0700304 01ED FEFE 		DW	None	;Cab200305 01EF FEFE 		DW	None	;Cab300306 01F1 FEFE 		DW	None	;Cab400307 01F3 FEFE 		DW	None	;Cab500308 01F5 FEFE 		DW	None	;Cab600309 01F7 FEFE 		DW	None	;Cab700310 01F9 FEFE 		DW	None	;Cab800311 01FB FEFE 		DW	None	;Cab900312 01FD 	;00313 01FD FEFE 	BlkPwr121	DW	None	;Cab1 BLK0800314 01FF FEFE 		DW	None	;Cab200315 0201 FEFE 		DW	None	;Cab300316 0203 FEFE 		DW	None	;Cab400317 0205 FEFE 		DW	None	;Cab500318 0207 FEFE 		DW	None	;Cab600319 0209 FEFE 		DW	None	;Cab700320 020B FEFE 		DW	None	;Cab800321 020D FEFE 		DW	None	;Cab900322 020F 	;00323 020F FEFE 	BlkPwr130	DW	None	;Cab1 BLK0900324 0211 FEFE 		DW	None	;Cab200325 0213 FEFE 		DW	None	;Cab300326 0215 FEFE 		DW	None	;Cab4Highland Greeley PIC.asm   BlockData.inc                                 Page: 35500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc00327 0217 FEFE 		DW	None	;Cab500328 0219 FEFE 		DW	None	;Cab600329 021B FEFE 		DW	None	;Cab700330 021D FEFE 		DW	None	;Cab800331 021F FEFE 		DW	None	;Cab900332 0221 	;00333 0221 FEFE 	BlkPwr131	DW	None	;Cab1 BLK1000334 0223 FEFE 		DW	None	;Cab200335 0225 FEFE 		DW	None	;Cab300336 0227 FEFE 		DW	None	;Cab400337 0229 FEFE 		DW	None	;Cab500338 022B FEFE 		DW	None	;Cab600339 022D FEFE 		DW	None	;Cab700340 022F FEFE 		DW	None	;Cab800341 0231 FEFE 		DW	None	;Cab900342 0233 	;00343 0233 FEFE 	BlkPwr140	DW	None	;Cab1 BLK1100344 0235 FEFE 		DW	None	;Cab200345 0237 FEFE 		DW	None	;Cab300346 0239 FEFE 		DW	None	;Cab400347 023B FEFE 		DW	None	;Cab500348 023D FEFE 		DW	None	;Cab600349 023F FEFE 		DW	None	;Cab700350 0241 FEFE 		DW	None	;Cab800351 0243 FEFE 		DW	None	;Cab900352 0245 	;00353 0245 FEFE 	BlkPwr141	DW	None	;Cab1 BLK1200354 0247 FEFE 		DW	None	;Cab200355 0249 FEFE 		DW	None	;Cab300356 024B FEFE 		DW	None	;Cab400357 024D FEFE 		DW	None	;Cab500358 024F FEFE 		DW	None	;Cab600359 0251 FEFE 		DW	None	;Cab700360 0253 FEFE 		DW	None	;Cab800361 0255 FEFE 		DW	None	;Cab900362 0257 	;00363 0257 FEFE 	BlkPwrPT1	DW	None	;Cab1 BLK1300364 0259 FEFE 		DW	None	;Cab200365 025B FEFE 		DW	None	;Cab300366 025D FEFE 		DW	None	;Cab400367 025F FEFE 		DW	None	;Cab500368 0261 FEFE 		DW	None	;Cab600369 0263 FEFE 		DW	None	;Cab700370 0265 FEFE 		DW	None	;Cab800371 0267 FEFE 		DW	None	;Cab900372 0269 	;00373 0269 FEFE 	BlkPwrPT2	DW	None	;Cab1 BLK1400374 026B FEFE 		DW	None	;Cab200375 026D FEFE 		DW	None	;Cab300376 026F FEFE 		DW	None	;Cab400377 0271 FEFE 		DW	None	;Cab500378 0273 FEFE 		DW	None	;Cab600379 0275 FEFE 		DW	None	;Cab700380 0277 FEFE 		DW	None	;Cab800381 0279 FEFE 		DW	None	;Cab900382 027B 	;00383 027B FEFE 	BlkPwr150	DW	None	;Cab100384 027D FEFE 		DW	None	;Cab200385 027F FEFE 		DW	None	;Cab300386 0281 FEFE 		DW	None	;Cab400387 0283 FEFE 		DW	None	;Cab500388 0285 FEFE 		DW	None	;Cab600389 0287 FEFE 		DW	None	;Cab700390 0289 FEFE 		DW	None	;Cab800391 028B FEFE 		DW	None	;Cab900392 028D 	;00393 028D FEFE 	BlkPwr151	DW	None	;Cab100394 028F FEFE 		DW	None	;Cab200395 0291 FEFE 		DW	None	;Cab300396 0293 FEFE 		DW	None	;Cab400397 0295 FEFE 		DW	None	;Cab500398 0297 FEFE 		DW	None	;Cab600399 0299 FEFE 		DW	None	;Cab700400 029B FEFE 		DW	None	;Cab800401 029D FEFE 		DW	None	;Cab900402 029F 	;00403 029F FEFE 	BlkPwr160	DW	None	;Cab100404 02A1 FEFE 		DW	None	;Cab200405 02A3 FEFE 		DW	None	;Cab300406 02A5 FEFE 		DW	None	;Cab400407 02A7 FEFE 		DW	None	;Cab500408 02A9 FEFE 		DW	None	;Cab600409 02AB FEFE 		DW	None	;Cab700410 02AD FEFE 		DW	None	;Cab800411 02AF FEFE 		DW	None	;Cab900412 02B1 	;00413 02B1 FEFE 	BlkPwr170	DW	None	;Cab100414 02B3 FEFE 		DW	None	;Cab200415 02B5 FEFE 		DW	None	;Cab300416 02B7 FEFE 		DW	None	;Cab400417 02B9 FEFE 		DW	None	;Cab500418 02BB FEFE 		DW	None	;Cab600419 02BD FEFE 		DW	None	;Cab700420 02BF FEFE 		DW	None	;Cab800421 02C1 FEFE 		DW	None	;Cab900422 02C3 	;00423 02C3 FEFE 	BlkPwr171	DW	None	;Cab100424 02C5 FEFE 		DW	None	;Cab200425 02C7 FEFE 		DW	None	;Cab300426 02C9 FEFE 		DW	None	;Cab4Highland Greeley PIC.asm   BlockData.inc                                 Page: 36500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc00427 02CB FEFE 		DW	None	;Cab500428 02CD FEFE 		DW	None	;Cab600429 02CF FEFE 		DW	None	;Cab700430 02D1 FEFE 		DW	None	;Cab800431 02D3 FEFE 		DW	None	;Cab900432 02D5 	;00433 02D5 FEFE 	BlkPwrSYL	DW	None	;0x204E	;Cab100434 02D7 FEFE 		DW	None	;0x2021	;Cab200435 02D9 FEFE 		DW	None	;0x213F	;Cab300436 02DB FEFE 		DW	None	;0x2133	;Cab400437 02DD FEFE 		DW	None	;0x2178	;Cab500438 02DF FEFE 		DW	None	;Cab600439 02E1 FEFE 		DW	None	;Cab700440 02E3 FEFE 		DW	None	;Cab800441 02E5 FEFE 		DW	None	;Cab900442 02E7 	;00443 02E7 FEFE 	BlkPwr180	DW	None	;Cab100444 02E9 FEFE 		DW	None	;Cab200445 02EB FEFE 		DW	None	;Cab300446 02ED FEFE 		DW	None	;Cab400447 02EF FEFE 		DW	None	;Cab500448 02F1 FEFE 		DW	None	;Cab600449 02F3 FEFE 		DW	None	;Cab700450 02F5 FEFE 		DW	None	;Cab800451 02F7 FEFE 		DW	None	;Cab900452 02F9 	;00453 02F9 FEFE 	BlkPwr190	DW	None	;Cab100454 02FB FEFE 		DW	None	;Cab200455 02FD FEFE 		DW	None	;Cab300456 02FF FEFE 		DW	None	;Cab400457 0301 FEFE 		DW	None	;Cab500458 0303 FEFE 		DW	None	;Cab600459 0305 FEFE 		DW	None	;Cab700460 0307 FEFE 		DW	None	;Cab800461 0309 FEFE 		DW	None	;Cab900462 030B 	;00463 030B FEFE 	BlkPwr191	DW	None	;Cab100464 030D FEFE 		DW	None	;Cab200465 030F FEFE 		DW	None	;Cab300466 0311 FEFE 		DW	None	;Cab400467 0313 FEFE 		DW	None	;Cab500468 0315 FEFE 		DW	None	;Cab600469 0317 FEFE 		DW	None	;Cab700470 0319 FEFE 		DW	None	;Cab800471 031B FEFE 		DW	None	;Cab900472 031D 	;00473 031D FEFE 	BlkPwr200	DW	None	;Cab100474 031F FEFE 		DW	None	;Cab200475 0321 FEFE 		DW	None	;Cab300476 0323 FEFE 		DW	None	;Cab400477 0325 FEFE 		DW	None	;Cab500478 0327 FEFE 		DW	None	;Cab600479 0329 FEFE 		DW	None	;Cab700480 032B FEFE 		DW	None	;Cab800481 032D FEFE 		DW	None	;Cab900482 032F 	;00483 032F FEFE 	BlkPwr201	DW	None	;Cab100484 0331 FEFE 		DW	None	;Cab200485 0333 FEFE 		DW	None	;Cab300486 0335 FEFE 		DW	None	;Cab400487 0337 FEFE 		DW	None	;Cab500488 0339 FEFE 		DW	None	;Cab600489 033B FEFE 		DW	None	;Cab700490 033D FEFE 		DW	None	;Cab800491 033F FEFE 		DW	None	;Cab900492 0341 	;00493 0341 FEFE 	BlkPwr202	DW	None	;Cab100494 0343 FEFE 		DW	None	;Cab200495 0345 FEFE 		DW	None	;Cab300496 0347 FEFE 		DW	None	;Cab400497 0349 FEFE 		DW	None	;Cab500498 034B FEFE 		DW	None	;Cab600499 034D FEFE 		DW	None	;Cab700500 034F FEFE 		DW	None	;Cab800501 0351 FEFE 		DW	None	;Cab900502 0353 	;00503 0353 FEFE 	BlkPwr210	DW	None	;Cab100504 0355 FEFE 		DW	None	;Cab200505 0357 FEFE 		DW	None	;Cab300506 0359 FEFE 		DW	None	;Cab400507 035B FEFE 		DW	None	;Cab500508 035D FEFE 		DW	None	;Cab600509 035F FEFE 		DW	None	;Cab700510 0361 FEFE 		DW	None	;Cab800511 0363 FEFE 		DW	None	;Cab900512 0365 	;00513 0365 FEFE 	BlkPwr220	DW	None	;Cab100514 0367 FEFE 		DW	None	;Cab200515 0369 FEFE 		DW	None	;Cab300516 036B FEFE 		DW	None	;Cab400517 036D FEFE 		DW	None	;Cab500518 036F FEFE 		DW	None	;Cab600519 0371 FEFE 		DW	None	;Cab700520 0373 FEFE 		DW	None	;Cab800521 0375 FEFE 		DW	None	;Cab900522 0377 	;00523 0377 FEFE 	BlkPwr221	DW	None	;Cab100524 0379 FEFE 		DW	None	;Cab200525 037B FEFE 		DW	None	;Cab300526 037D FEFE 		DW	None	;Cab4Highland Greeley PIC.asm   BlockData.inc                                 Page: 37500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc00527 037F FEFE 		DW	None	;Cab500528 0381 FEFE 		DW	None	;Cab600529 0383 FEFE 		DW	None	;Cab700530 0385 FEFE 		DW	None	;Cab800531 0387 FEFE 		DW	None	;Cab900532 0389 	;00533 0389 FEFE 	BlkPwr222	DW	None	;Cab100534 038B FEFE 		DW	None	;Cab200535 038D FEFE 		DW	None	;Cab300536 038F FEFE 		DW	None	;Cab400537 0391 FEFE 		DW	None	;Cab500538 0393 FEFE 		DW	None	;Cab600539 0395 FEFE 		DW	None	;Cab700540 0397 FEFE 		DW	None	;Cab800541 0399 FEFE 		DW	None	;Cab900542 039B 	;00543 039B FEFE 	BlkPwr230	DW	None	;Cab100544 039D FEFE 		DW	None	;Cab200545 039F FEFE 		DW	None	;Cab300546 03A1 FEFE 		DW	None	;Cab400547 03A3 FEFE 		DW	None	;Cab500548 03A5 FEFE 		DW	None	;Cab600549 03A7 FEFE 		DW	None	;Cab700550 03A9 FEFE 		DW	None	;Cab800551 03AB FEFE 		DW	None	;Cab900552 03AD 	;00553 03AD FEFE 	BlkPwr240	DW	None	;Cab100554 03AF FEFE 		DW	None	;Cab200555 03B1 FEFE 		DW	None	;Cab300556 03B3 FEFE 		DW	None	;Cab400557 03B5 FEFE 		DW	None	;Cab500558 03B7 FEFE 		DW	None	;Cab600559 03B9 FEFE 		DW	None	;Cab700560 03BB FEFE 		DW	None	;Cab800561 03BD FEFE 		DW	None	;Cab900562 03BF 	;00563 03BF FEFE 	BlkPwr250	DW	None	;Cab100564 03C1 FEFE 		DW	None	;Cab200565 03C3 FEFE 		DW	None	;Cab300566 03C5 FEFE 		DW	None	;Cab400567 03C7 FEFE 		DW	None	;Cab500568 03C9 FEFE 		DW	None	;Cab600569 03CB FEFE 		DW	None	;Cab700570 03CD FEFE 		DW	None	;Cab800571 03CF FEFE 		DW	None	;Cab900572 03D1 	;00573 03D1 FEFE 	BlkPwr251	DW	None	;Cab100574 03D3 FEFE 		DW	None	;Cab200575 03D5 FEFE 		DW	None	;Cab300576 03D7 FEFE 		DW	None	;Cab400577 03D9 FEFE 		DW	None	;Cab500578 03DB FEFE 		DW	None	;Cab600579 03DD FEFE 		DW	None	;Cab700580 03DF FEFE 		DW	None	;Cab800581 03E1 FEFE 		DW	None	;Cab900582 03E3 	;00583 03E3 FEFE 	BlkPwr260	DW	None	;Cab100584 03E5 FEFE 		DW	None	;Cab200585 03E7 FEFE 		DW	None	;Cab300586 03E9 FEFE 		DW	None	;Cab400587 03EB FEFE 		DW	None	;Cab500588 03ED FEFE 		DW	None	;Cab600589 03EF FEFE 		DW	None	;Cab700590 03F1 FEFE 		DW	None	;Cab800591 03F3 FEFE 		DW	None	;Cab900592 03F5 	;00593 03F5 FEFE 	BlkPwr270	DW	None	;Cab100594 03F7 FEFE 		DW	None	;Cab200595 03F9 FEFE 		DW	None	;Cab300596 03FB FEFE 		DW	None	;Cab400597 03FD FEFE 		DW	None	;Cab500598 03FF FEFE 		DW	None	;Cab600599 0401 FEFE 		DW	None	;Cab700600 0403 FEFE 		DW	None	;Cab800601 0405 FEFE 		DW	None	;Cab900602 0407 	;00603 0407 FEFE 	BlkPwr271	DW	None	;Cab100604 0409 FEFE 		DW	None	;Cab200605 040B FEFE 		DW	None	;Cab300606 040D FEFE 		DW	None	;Cab400607 040F FEFE 		DW	None	;Cab500608 0411 FEFE 		DW	None	;Cab600609 0413 FEFE 		DW	None	;Cab700610 0415 FEFE 		DW	None	;Cab800611 0417 FEFE 		DW	None	;Cab900612 0419 	;00613 0419 FEFE 	BlkPwr280	DW	None	;Cab100614 041B FEFE 		DW	None	;Cab200615 041D FEFE 		DW	None	;Cab300616 041F FEFE 		DW	None	;Cab400617 0421 FEFE 		DW	None	;Cab500618 0423 FEFE 		DW	None	;Cab600619 0425 FEFE 		DW	None	;Cab700620 0427 FEFE 		DW	None	;Cab800621 0429 FEFE 		DW	None	;Cab900622 042B 	;00623 042B FEFE 	BlkPwr290	DW	None	;Cab100624 042D FEFE 		DW	None	;Cab200625 042F FEFE 		DW	None	;Cab300626 0431 FEFE 		DW	None	;Cab4Highland Greeley PIC.asm   BlockData.inc                                 Page: 38500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc00627 0433 FEFE 		DW	None	;Cab500628 0435 FEFE 		DW	None	;Cab600629 0437 FEFE 		DW	None	;Cab700630 0439 FEFE 		DW	None	;Cab800631 043B FEFE 		DW	None	;Cab900632 043D 	;00633 043D FEFE 	BlkPwr291	DW	None	;Cab100634 043F FEFE 		DW	None	;Cab200635 0441 FEFE 		DW	None	;Cab300636 0443 FEFE 		DW	None	;Cab400637 0445 FEFE 		DW	None	;Cab500638 0447 FEFE 		DW	None	;Cab600639 0449 FEFE 		DW	None	;Cab700640 044B FEFE 		DW	None	;Cab800641 044D FEFE 		DW	None	;Cab900642 044F 	;00643 044F FEFE 	BlkPwr300	DW	None	;Cab100644 0451 FEFE 		DW	None	;Cab200645 0453 FEFE 		DW	None	;Cab300646 0455 FEFE 		DW	None	;Cab400647 0457 FEFE 		DW	None	;Cab500648 0459 FEFE 		DW	None	;Cab600649 045B FEFE 		DW	None	;Cab700650 045D FEFE 		DW	None	;Cab800651 045F FEFE 		DW	None	;Cab900652 0461 	;00653 0461 FEFE 	BlkPwr3101	DW	None	;Cab100654 0463 FEFE 		DW	None	;Cab200655 0465 FEFE 		DW	None	;Cab300656 0467 FEFE 		DW	None	;Cab400657 0469 FEFE 		DW	None	;Cab500658 046B FEFE 		DW	None	;Cab600659 046D FEFE 		DW	None	;Cab700660 046F FEFE 		DW	None	;Cab800661 0471 FEFE 		DW	None	;Cab900662 0473 	;00663 0473 FEFE 	BlkPwr3102	DW	None	;Cab100664 0475 FEFE 		DW	None	;Cab200665 0477 FEFE 		DW	None	;Cab300666 0479 FEFE 		DW	None	;Cab400667 047B FEFE 		DW	None	;Cab500668 047D FEFE 		DW	None	;Cab600669 047F FEFE 		DW	None	;Cab700670 0481 FEFE 		DW	None	;Cab800671 0483 FEFE 		DW	None	;Cab900672 0485 	;00673 0485 FEFE 	BlkPwr3111	DW	None	;Cab100674 0487 FEFE 		DW	None	;Cab200675 0489 FEFE 		DW	None	;Cab300676 048B FEFE 		DW	None	;Cab400677 048D FEFE 		DW	None	;Cab500678 048F FEFE 		DW	None	;Cab600679 0491 FEFE 		DW	None	;Cab700680 0493 FEFE 		DW	None	;Cab800681 0495 FEFE 		DW	None	;Cab900682 0497 	;00683 0497 FEFE 	BlkPwr3112	DW	None	;Cab100684 0499 FEFE 		DW	None	;Cab200685 049B FEFE 		DW	None	;Cab300686 049D FEFE 		DW	None	;Cab400687 049F FEFE 		DW	None	;Cab500688 04A1 FEFE 		DW	None	;Cab600689 04A3 FEFE 		DW	None	;Cab700690 04A5 FEFE 		DW	None	;Cab800691 04A7 FEFE 		DW	None	;Cab900692 04A9 	;00693 04A9 FEFE 	BlkPwr3121	DW	None	;Cab100694 04AB FEFE 		DW	None	;Cab200695 04AD FEFE 		DW	None	;Cab300696 04AF FEFE 		DW	None	;Cab400697 04B1 FEFE 		DW	None	;Cab500698 04B3 FEFE 		DW	None	;Cab600699 04B5 FEFE 		DW	None	;Cab700700 04B7 FEFE 		DW	None	;Cab800701 04B9 FEFE 		DW	None	;Cab900702 04BB 	;00703 04BB FEFE 	BlkPwr3122	DW	None	;Cab100704 04BD FEFE 		DW	None	;Cab200705 04BF FEFE 		DW	None	;Cab300706 04C1 FEFE 		DW	None	;Cab400707 04C3 FEFE 		DW	None	;Cab500708 04C5 FEFE 		DW	None	;Cab600709 04C7 FEFE 		DW	None	;Cab700710 04C9 FEFE 		DW	None	;Cab800711 04CB FEFE 		DW	None	;Cab900712 04CD 	;00713 04CD FEFE 	BlkPwr3131	DW	None	;Cab100714 04CF FEFE 		DW	None	;Cab200715 04D1 FEFE 		DW	None	;Cab300716 04D3 FEFE 		DW	None	;Cab400717 04D5 FEFE 		DW	None	;Cab500718 04D7 FEFE 		DW	None	;Cab600719 04D9 FEFE 		DW	None	;Cab700720 04DB FEFE 		DW	None	;Cab800721 04DD FEFE 		DW	None	;Cab900722 04DF 	;00723 04DF FEFE 	BlkPwr3132	DW	None	;Cab100724 04E1 FEFE 		DW	None	;Cab200725 04E3 FEFE 		DW	None	;Cab300726 04E5 FEFE 		DW	None	;Cab4Highland Greeley PIC.asm   BlockData.inc                                 Page: 39500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc00727 04E7 FEFE 		DW	None	;Cab500728 04E9 FEFE 		DW	None	;Cab600729 04EB FEFE 		DW	None	;Cab700730 04ED FEFE 		DW	None	;Cab800731 04EF FEFE 		DW	None	;Cab900732 04F1 	;00733 04F1 FEFE 	BlkPwr320	DW	None	;Cab100734 04F3 FEFE 		DW	None	;Cab200735 04F5 FEFE 		DW	None	;Cab300736 04F7 FEFE 		DW	None	;Cab400737 04F9 FEFE 		DW	None	;Cab500738 04FB FEFE 		DW	None	;Cab600739 04FD FEFE 		DW	None	;Cab700740 04FF FEFE 		DW	None	;Cab800741 0501 FEFE 		DW	None	;Cab900742 0503 	;00743 0503 FEFE 	BlkPwr390	DW	None	;Cab1 aka 32100744 0505 FEFE 		DW	None	;Cab200745 0507 FEFE 		DW	None	;Cab300746 0509 FEFE 		DW	None	;Cab400747 050B FEFE 		DW	None	;Cab500748 050D FEFE 		DW	None	;Cab600749 050F FEFE 		DW	None	;Cab700750 0511 FEFE 		DW	None	;Cab800751 0513 FEFE 		DW	None	;Cab900752 0515 	;00753 0515 FEFE 	BlkPwr330	DW	None	;Cab100754 0517 FEFE 		DW	None	;Cab200755 0519 FEFE 		DW	None	;Cab300756 051B FEFE 		DW	None	;Cab400757 051D FEFE 		DW	None	;Cab500758 051F FEFE 		DW	None	;Cab600759 0521 FEFE 		DW	None	;Cab700760 0523 FEFE 		DW	None	;Cab800761 0525 FEFE 		DW	None	;Cab900762 0527 	;00763 0527 FEFE 	BlkPwr380	DW	None	;Cab1 aka 33100764 0529 FEFE 		DW	None	;Cab200765 052B FEFE 		DW	None	;Cab300766 052D FEFE 		DW	None	;Cab400767 052F FEFE 		DW	None	;Cab500768 0531 FEFE 		DW	None	;Cab600769 0533 FEFE 		DW	None	;Cab700770 0535 FEFE 		DW	None	;Cab800771 0537 FEFE 		DW	None	;Cab900772 0539 	;00773 0539 FEFE 	BlkPwr340	DW	None	;Cab100774 053B FEFE 		DW	None	;Cab200775 053D FEFE 		DW	None	;Cab300776 053F FEFE 		DW	None	;Cab400777 0541 FEFE 		DW	None	;Cab500778 0543 FEFE 		DW	None	;Cab600779 0545 FEFE 		DW	None	;Cab700780 0547 FEFE 		DW	None	;Cab800781 0549 FEFE 		DW	None	;Cab900782 054B 	;00783 054B FEFE 	BlkPwr370	DW	None	;Cab1 aka 34100784 054D FEFE 		DW	None	;Cab200785 054F FEFE 		DW	None	;Cab300786 0551 FEFE 		DW	None	;Cab400787 0553 FEFE 		DW	None	;Cab500788 0555 FEFE 		DW	None	;Cab600789 0557 FEFE 		DW	None	;Cab700790 0559 FEFE 		DW	None	;Cab800791 055B FEFE 		DW	None	;Cab900792 055D 	;00793 055D FEFE 	BlkPwr350	DW	None	;Cab1 aka 340 part200794 055F FEFE 		DW	None	;Cab200795 0561 FEFE 		DW	None	;Cab300796 0563 FEFE 		DW	None	;Cab400797 0565 FEFE 		DW	None	;Cab500798 0567 FEFE 		DW	None	;Cab6 Dawson Tower00799 0569 FEFE 		DW	None	;Cab700800 056B FEFE 		DW	None	;Cab800801 056D FEFE 		DW	None	;Cab900802 056F 	;00803 056F FEFE 	BlkPwr351	DW	None	;Cab1 aka 34200804 0571 FEFE 		DW	None	;Cab200805 0573 FEFE 		DW	None	;Cab300806 0575 FEFE 		DW	None	;Cab400807 0577 FEFE 		DW	None	;Cab500808 0579 FEFE 		DW	None	;Cab6 Dawson Tower00809 057B FEFE 		DW	None	;Cab700810 057D FEFE 		DW	None	;Cab800811 057F FEFE 		DW	None	;Cab900812 0581 	;00813 0581 FEFE 	BlkPwr360	DW	None	;Cab1 aka 35000814 0583 FEFE 		DW	None	;Cab200815 0585 FEFE 		DW	None	;Cab300816 0587 FEFE 		DW	None	;Cab400817 0589 FEFE 		DW	None	;Cab500818 058B FEFE 		DW	None	;Cab600819 058D FEFE 		DW	None	;Cab700820 058F FEFE 		DW	None	;Cab800821 0591 FEFE 		DW	None	;Cab900822 0593 	;00823 0593 FEFE 	BlkPwr361	DW	None	;Cab1 aka 35100824 0595 FEFE 		DW	None	;Cab200825 0597 FEFE 		DW	None	;Cab300826 0599 FEFE 		DW	None	;Cab4Highland Greeley PIC.asm   BlockData.inc                                 Page: 40500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc00827 059B FEFE 		DW	None	;Cab500828 059D FEFE 		DW	None	;Cab600829 059F FEFE 		DW	None	;Cab700830 05A1 FEFE 		DW	None	;Cab800831 05A3 FEFE 		DW	None	;Cab900832 05A5 	;00833 05A5 FEFE 	BlkPwr362	DW	None	;Cab1 aka 35200834 05A7 FEFE 		DW	None	;Cab200835 05A9 FEFE 		DW	None	;Cab300836 05AB FEFE 		DW	None	;Cab400837 05AD FEFE 		DW	None	;Cab500838 05AF FEFE 		DW	None	;Cab600839 05B1 FEFE 		DW	None	;Cab700840 05B3 FEFE 		DW	None	;Cab800841 05B5 FEFE 		DW	None	;Cab900842 05B7 	;00843 05B7 FEFE 	BlkPwr363	DW	None	;Cab1 aka 35300844 05B9 FEFE 		DW	None	;Cab200845 05BB FEFE 		DW	None	;Cab300846 05BD FEFE 		DW	None	;Cab400847 05BF FEFE 		DW	None	;Cab500848 05C1 FEFE 		DW	None	;Cab600849 05C3 FEFE 		DW	None	;Cab700850 05C5 FEFE 		DW	None	;Cab800851 05C7 FEFE 		DW	None	;Cab900852 05C9 	;00853 05C9 FEFE 	BlkPwr364	DW	None	;Cab1 aka 35400854 05CB FEFE 		DW	None	;Cab200855 05CD FEFE 		DW	None	;Cab300856 05CF FEFE 		DW	None	;Cab400857 05D1 FEFE 		DW	None	;Cab500858 05D3 FEFE 		DW	None	;Cab600859 05D5 FEFE 		DW	None	;Cab700860 05D7 FEFE 		DW	None	;Cab800861 05D9 FEFE 		DW	None	;Cab900862 05DB 	;00863 05DB FEFE 	BlkPwr365	DW	None	;Cab1 aka 35500864 05DD FEFE 		DW	None	;Cab200865 05DF FEFE 		DW	None	;Cab300866 05E1 FEFE 		DW	None	;Cab400867 05E3 FEFE 		DW	None	;Cab500868 05E5 FEFE 		DW	None	;Cab600869 05E7 FEFE 		DW	None	;Cab700870 05E9 FEFE 		DW	None	;Cab800871 05EB FEFE 		DW	None	;Cab900872 05ED 	;00873 05ED FEFE 	BlkPwrVY1	DW	None	;Cab1 Upper Vista00874 05EF FEFE 		DW	None	;Cab200875 05F1 FEFE 		DW	None	;Cab300876 05F3 FEFE 		DW	None	;Cab400877 05F5 FEFE 		DW	None	;Cab500878 05F7 FEFE 		DW	None	;Cab6 AT00879 05F9 FEFE 		DW	None	;Cab7 VY00880 05FB FEFE 		DW	None	;Cab8 WY00881 05FD FEFE 		DW	None	;Cab900882 05FF 	;00883 05FF FEFE 	BlkPwrVY2	DW	None	;Cab1 Upper Vista00884 0601 FEFE 		DW	None	;Cab200885 0603 FEFE 		DW	None	;Cab300886 0605 FEFE 		DW	None	;Cab400887 0607 FEFE 		DW	None	;Cab500888 0609 FEFE 		DW	None	;Cab6 AT00889 060B FEFE 		DW	None	;Cab7 VY00890 060D FEFE 		DW	None	;Cab8 WY00891 060F FEFE 		DW	None	;Cab900892 0611 	;00893 0611 FEFE 	BlkPwrVY3	DW	None	;Cab1 Upper Vista00894 0613 FEFE 		DW	None	;Cab200895 0615 FEFE 		DW	None	;Cab300896 0617 FEFE 		DW	None	;Cab400897 0619 FEFE 		DW	None	;Cab500898 061B FEFE 		DW	None	;Cab6 AT00899 061D FEFE 		DW	None	;Cab7 VY00900 061F FEFE 		DW	None	;Cab8 WY00901 0621 FEFE 		DW	None	;Cab900902 0623 	;00903 0623 FEFE 	BlkPwrVY4	DW	None	;Cab1 Upper Vista00904 0625 FEFE 		DW	None	;Cab200905 0627 FEFE 		DW	None	;Cab300906 0629 FEFE 		DW	None	;Cab400907 062B FEFE 		DW	None	;Cab500908 062D FEFE 		DW	None	;Cab6 AT00909 062F FEFE 		DW	None	;Cab7 VY00910 0631 FEFE 		DW	None	;Cab8 WY00911 0633 FEFE 		DW	None	;Cab900912 0635 	;00913 0635 FEFE 	BlkPwrVY5	DW	None	;Cab1 Upper Vista00914 0637 FEFE 		DW	None	;Cab200915 0639 FEFE 		DW	None	;Cab300916 063B FEFE 		DW	None	;Cab400917 063D FEFE 		DW	None	;Cab500918 063F FEFE 		DW	None	;Cab6 AT00919 0641 FEFE 		DW	None	;Cab7 VY00920 0643 FEFE 		DW	None	;Cab8 WY00921 0645 FEFE 		DW	None	;Cab900922 0647 	;00923 0647 FEFE 	BlkPwrVY6	DW	None	;Cab1 Upper Vista00924 0649 FEFE 		DW	None	;Cab200925 064B FEFE 		DW	None	;Cab300926 064D FEFE 		DW	None	;Cab4Highland Greeley PIC.asm   BlockData.inc                                 Page: 41500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc00927 064F FEFE 		DW	None	;Cab500928 0651 FEFE 		DW	None	;Cab6 AT00929 0653 FEFE 		DW	None	;Cab7 VY00930 0655 FEFE 		DW	None	;Cab8 WY00931 0657 FEFE 		DW	None	;Cab900932 0659 	;00933 0659 FEFE 	BlkPwrEYF	DW	None	;Cab1 BI00934 065B FEFE 		DW	None	;Cab2 DS00935 065D FEFE 		DW	None	;Cab3 RH00936 065F FEFE 		DW	None	;Cab4 DO00937 0661 FEFE 		DW	None	;Cab5 WY00938 0663 FEFE 		DW	None	;Cab6 VY00939 0665 FEFE 		DW	None	;Cab700940 0667 FEFE 		DW	None	;Cab800941 0669 FEFE 		DW	None	;Cab900942 066B 	;00943 066B FEFE 	BlkPwrPHL	DW	None	;Cab100944 066D FEFE 		DW	None	;Cab2 00945 066F FEFE 		DW	None	;Cab3 00946 0671 FEFE 		DW	None	;Cab4 00947 0673 FEFE 		DW	None	;Cab5 00948 0675 FEFE 		DW	None	;Cab6 CT00949 0677 FEFE 		DW	None	;Cab700950 0679 FEFE 		DW	None	;Cab800951 067B FEFE 		DW	None	;Cab900952 067D 	;00953 067D FEFE 	BlkPwrPH1	DW	None	;Cab100954 067F FEFE 		DW	None	;Cab2 00955 0681 FEFE 		DW	None	;Cab3 00956 0683 FEFE 		DW	None	;Cab4 00957 0685 FEFE 		DW	None	;Cab5 00958 0687 FEFE 		DW	None	;Cab6 CT00959 0689 FEFE 		DW	None	;Cab700960 068B FEFE 		DW	None	;Cab800961 068D FEFE 		DW	None	;Cab900962 068F 	;00963 068F FEFE 	BlkPwrPH2	DW	None	;Cab100964 0691 FEFE 		DW	None	;Cab2 00965 0693 FEFE 		DW	None	;Cab3 00966 0695 FEFE 		DW	None	;Cab4 00967 0697 FEFE 		DW	None	;Cab500968 0699 FEFE 		DW	None	;Cab6 CT00969 069B FEFE 		DW	None	;Cab700970 069D FEFE 		DW	None	;Cab800971 069F FEFE 		DW	None	;Cab900972 06A1 	;00973 06A1 FEFE 	BlkPwrPH3	DW	None	;Cab100974 06A3 FEFE 		DW	None	;Cab2 00975 06A5 FEFE 		DW	None	;Cab3 00976 06A7 FEFE 		DW	None	;Cab4 00977 06A9 FEFE 		DW	None	;Cab5 00978 06AB FEFE 		DW	None	;Cab6 CT00979 06AD FEFE 		DW	None	;Cab700980 06AF FEFE 		DW	None	;Cab800981 06B1 FEFE 		DW	None	;Cab900982 06B3 	;00983 06B3 FEFE 	BlkPwrPH4	DW	None	;Cab100984 06B5 FEFE 		DW	None	;Cab2 00985 06B7 FEFE 		DW	None	;Cab3 00986 06B9 FEFE 		DW	None	;Cab4 00987 06BB FEFE 		DW	None	;Cab5 00988 06BD FEFE 		DW	None	;Cab6 CT00989 06BF FEFE 		DW	None	;Cab700990 06C1 FEFE 		DW	None	;Cab800991 06C3 FEFE 		DW	None	;Cab900992 06C5 	;00993 06C5 FEFE 	BlkMZR	DW	None	;Cab100994 06C7 FEFE 		DW	None	;Cab2 00995 06C9 FEFE 		DW	None	;Cab3 00996 06CB FEFE 		DW	None	;Cab4 00997 06CD FEFE 		DW	None	;Cab5 00998 06CF FEFE 		DW	None	;Cab6 CT00999 06D1 FEFE 		DW	None	;Cab701000 06D3 FEFE 		DW	None	;Cab801001 06D5 FEFE 		DW	None	;Cab901002 06D7 	;01003 06D7 FFFF 		DW	0xFFFF01004 06D9 	;01005 06D9 	;01006 06D9 	; Block occupied LEDs not connected to block modules01007 06D9 	;01008 06D9 	BlockOccLEDs01009 06D9 	;	DB	BlkNumDM101010 06D9 	;	DW	0x8428	;Delmar trk 1 occ LED01011 06D9 	;01012 06D9 	;	DB	BlkNumMZR01013 06D9 	;	DW	0x2A0201014 06D9 FF 		DB	EOD01015 06DA 	;01016 06DA 	;--------------------------------------------------------01017 06DA 	; End of block detectors (psuedo SMs)01018 06DA 	;01019 06DA FE 	EOB_Detectors	DB	low None	;east end detector Blk# 0 (RDY1)01020 06DB FE 		DB	low None	;west end detector01021 06DC FE 		DB	low None	;east end detector01022 06DD FE 		DB	low None	;west end detector01023 06DE FE 		DB	low None	;east end detector01024 06DF FE 		DB	low None	;west end detector01025 06E0 FE 		DB	low None	;east end detector01026 06E1 FE 		DB	low None	;west end detectorHighland Greeley PIC.asm   BlockData.inc                                 Page: 42500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc01027 06E2 FE 		DB	low None	;east end detector01028 06E3 FE 		DB	low None	;west end detector01029 06E4 FE 		DB	low None	;east end detector01030 06E5 FE 		DB	low None	;west end detector01031 06E6 FE 		DB	low None	;east end detector01032 06E7 FE 		DB	low None	;west end detector01033 06E8 FE 		DB	low None	;east end detector01034 06E9 FE 		DB	low None	;west end detector01035 06EA FE 		DB	low None	;east end detector01036 06EB FE 		DB	low None	;west end detector01037 06EC FE 		DB	low None	;east end detector01038 06ED FE 		DB	low None	;west end detector01039 06EE FE 		DB	low None	;east end detector 10 (131)01040 06EF FE 		DB	low None	;west end detector01041 06F0 FE 		DB	low None	;east end detector01042 06F1 FE 		DB	low None	;west end detector01043 06F2 FE 		DB	low None	;east end detector01044 06F3 FE 		DB	low None	;west end detector01045 06F4 FE 		DB	low None	;east end detector01046 06F5 FE 		DB	low None	;west end detector01047 06F6 FE 		DB	low None	;east end detector01048 06F7 FE 		DB	low None	;west end detector01049 06F8 FE 		DB	low None	;east end detector01050 06F9 FE 		DB	low None	;west end detector01051 06FA FE 		DB	low None	;east end detector01052 06FB FE 		DB	low None	;west end detector01053 06FC FE 		DB	low None	;east end detector01054 06FD FE 		DB	low None	;west end detector01055 06FE FE 		DB	low None	;east end detector01056 06FF FE 		DB	low None	;west end detector01057 0700 FE 		DB	low None	;east end detector01058 0701 FE 		DB	low None	;west end detector01059 0702 FE 		DB	low None	;east end detector 20 (SYL)01060 0703 A5 		DB	low d'421'	;west end detector01061 0704 FE 		DB	low None	;east end detector01062 0705 FE 		DB	low None	;west end detector01063 0706 FE 		DB	low None	;east end detector01064 0707 FE 		DB	low None	;west end detector01065 0708 FE 		DB	low None	;east end detector01066 0709 FE 		DB	low None	;west end detector01067 070A FE 		DB	low None	;east end detector01068 070B FE 		DB	low None	;west end detector01069 070C FE 		DB	low None	;east end detector01070 070D FE 		DB	low None	;west end detector01071 070E FE 		DB	low None	;east end detector01072 070F FE 		DB	low None	;west end detector01073 0710 FE 		DB	low None	;east end detector01074 0711 FE 		DB	low None	;west end detector01075 0712 FE 		DB	low None	;east end detector01076 0713 FE 		DB	low None	;west end detector01077 0714 FE 		DB	low None	;east end detector01078 0715 FE 		DB	low None	;west end detector01079 0716 FE 		DB	low None	;east end detector 30 (230)01080 0717 FE 		DB	low None	;west end detector01081 0718 FE 		DB	low None	;east end detector01082 0719 FE 		DB	low None	;west end detector01083 071A FE 		DB	low None	;east end detector01084 071B FE 		DB	low None	;west end detector01085 071C A2 		DB	low d'418'	;east end detector 33 (250)01086 071D A0 		DB	low d'416'	;west end detector01087 071E A3 		DB	low d'419'	;east end detector 34 (251)01088 071F A1 		DB	low d'417'	;west end detector01089 0720 FE 		DB	low None	;east end detector01090 0721 FE 		DB	low None	;west end detector01091 0722 FE 		DB	low None	;east end detector01092 0723 FE 		DB	low None	;west end detector01093 0724 FE 		DB	low None	;east end detector01094 0725 FE 		DB	low None	;west end detector01095 0726 FE 		DB	low None	;east end detector01096 0727 FE 		DB	low None	;west end detector01097 0728 9E 		DB	low d'414'	;east end detector 39 (290)01098 0729 9C 		DB	low d'412'	;west end detector01099 072A 9F 		DB	low d'415'	;east end detector 40 (291)01100 072B 9D 		DB	low d'413	;west end detector01101 072C FE 		DB	low None	;east end detector01102 072D FE 		DB	low None	;west end detector01103 072E FE 		DB	low None	;east end detector01104 072F FE 		DB	low None	;west end detector01105 0730 FE 		DB	low None	;east end detector01106 0731 FE 		DB	low None	;west end detector01107 0732 FE 		DB	low None	;east end detector01108 0733 FE 		DB	low None	;west end detector01109 0734 FE 		DB	low None	;east end detector01110 0735 FE 		DB	low None	;west end detector01111 0736 FE 		DB	low None	;east end detector01112 0737 FE 		DB	low None	;west end detector01113 0738 FE 		DB	low None	;east end detector01114 0739 FE 		DB	low None	;west end detector01115 073A FE 		DB	low None	;east end detector01116 073B FE 		DB	low None	;west end detector01117 073C FE 		DB	low None	;east end detector01118 073D FE 		DB	low None	;west end detector01119 073E FE 		DB	low None	;east end detector 50 (320)01120 073F FE 		DB	low None	;west end detector01121 0740 FE 		DB	low None	;east end detector01122 0741 FE 		DB	low None	;west end detector01123 0742 FE 		DB	low None	;east end detector01124 0743 FE 		DB	low None	;west end detector01125 0744 FE 		DB	low None	;east end detector01126 0745 FE 		DB	low None	;west end detectorHighland Greeley PIC.asm   BlockData.inc                                 Page: 43500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc01127 0746 FE 		DB	low None	;east end detector01128 0747 FE 		DB	low None	;west end detector01129 0748 FE 		DB	low None	;east end detector01130 0749 FE 		DB	low None	;west end detector01131 074A FE 		DB	low None	;east end detector01132 074B FE 		DB	low None	;west end detector01133 074C FE 		DB	low None	;east end detector01134 074D FE 		DB	low None	;west end detector01135 074E 96 		DB	low d'406'	;east end detector 58 (360)01136 074F 90 		DB	low d'400'	;west end detector01137 0750 97 		DB	low d'407'	;east end detector 59 (361)01138 0751 91 		DB	low d'401'	;west end detector01139 0752 98 		DB	low d'408'	;east end detector 60 (362)01140 0753 92 		DB	low d'402'	;west end detector01141 0754 99 		DB	low d'409'	;east end detector 61 (363)01142 0755 93 		DB	low d'403'	;west end detector01143 0756 9A 		DB	low d'410'	;east end detector 62 (364)01144 0757 94 		DB	low d'404'	;west end detector01145 0758 9B 		DB	low d'411'	;east end detector 63 (365)01146 0759 95 		DB	low d'405	;west end detector01147 075A FE 		DB	low None	;east end detector 6401148 075B FE 		DB	low None	;west end detector01149 075C FE 		DB	low None	;east end detector 6501150 075D FE 		DB	low None	;west end detector01151 075E FE 		DB	low None	;east end detector 6601152 075F FE 		DB	low None	;west end detector01153 0760 FE 		DB	low None	;east end detector 6701154 0761 FE 		DB	low None	;west end detector01155 0762 FE 		DB	low None	;east end detector 6801156 0763 FE 		DB	low None	;west end detector01157 0764 FE 		DB	low None	;east end detector 6901158 0765 FE 		DB	low None	;west end detector01159 0766 FE 		DB	low None	;east end detector 7001160 0767 FE 		DB	low None	;west end detector01161 0768 FE 		DB	low None	;east end detector 7101162 0769 FE 		DB	low None	;west end detector01163 076A FE 		DB	low None	;east end detector 7201164 076B FE 		DB	low None	;west end detector01165 076C FE 		DB	low None	;east end detector 7301166 076D FE 		DB	low None	;west end detector01167 076E FE 		DB	low None	;east end detector 7401168 076F FE 		DB	low None	;west end detector01169 0770 FE 		DB	low None	;east end detector 7501170 0771 FE 		DB	low None	;west end detector01171 0772 FE 		DB	low None	;east end detector 7601172 0773 FE 		DB	low None	;west end detector01173 0774 FE 		DB	low None	;east end detector 7701174 0775 FE 		DB	low None	;west end detector01175 0776 FE 		DB	low None	;east end detector 7801176 0777 FE 		DB	low None	;west end detector01177 0778 	;01178 0778 	; Parallel block data table01179 0778 	;01180 0778 	; Use as index into block power table LDX #BlkNumRDY101181 0778 	;01182 0778 00 	ParallelBlks	DB	BlkNumRDY1	;BlkNumRDY1	;001183 0779 00 		DB	BlkNumRDY1	;BlkNumRDY2	;101184 077A FF 		DB	0xFF	;none BlkNumFYL	;201185 077B 03 		DB	BlkNum100	;BlkNum100 	;301186 077C 03 		DB	BlkNum100	;BlkNum101 	;401187 077D 05 		DB	BlkNum110	;BlkNum110	;501188 077E 05 		DB	BlkNum110	;BlkNum111	;601189 077F 07 		DB	BlkNum120	;BlkNum120	;701190 0780 07 		DB	BlkNum120	;BlkNum121	;801191 0781 09 		DB	BlkNum130	;BlkNum130	;901192 0782 09 		DB	BlkNum130	;BlkNum131	;1001193 0783 0B 		DB	BlkNum140	;BlkNum140	;1101194 0784 0B 		DB	BlkNum140	;BlkNum141	;1201195 0785 0D 		DB	BlkNumPT1	;BlkNumPT1	;1301196 0786 0D 		DB	BlkNumPT1	;BlkNumPT2	;1401197 0787 0F 		DB	BlkNum150	;BlkNum150	;1501198 0788 0F 		DB	BlkNum150	;BlkNum151	;1601199 0789 FF 		DB	0xFF	;BlkNum160	;1701200 078A 12 		DB	BlkNum170	;BlkNum170	;1801201 078B 12 		DB	BlkNum170	;BlkNum171	;1901202 078C FF 		DB	0xFF	;BlkNumSYL	;2001203 078D FF 		DB	0xFF	;BlkNum180	;2101204 078E 16 		DB	BlkNum190	;BlkNum190	;2201205 078F 16 		DB	BlkNum190	;BlkNum191	;2301206 0790 18 		DB	BlkNum200	;BlkNum200	;2401207 0791 18 		DB	BlkNum200	;BlkNum201	;2501208 0792 18 		DB	BlkNum200	;BlkNum202	;2601209 0793 FF 		DB	0xFF	;BlkNum210	;2701210 0794 1C 		DB	BlkNum220	;BlkNum220	;2801211 0795 1C 		DB	BlkNum220	;BlkNum221	;2901212 0796 1C 		DB	BlkNum220	;BlkNum222	;3001213 0797 FF 		DB	0xFF	;BlkNum230	;3001214 0798 FF 		DB	0xFF	;BlkNum240	;3201215 0799 21 		DB	BlkNum250	;BlkNum250	;3301216 079A 21 		DB	BlkNum250	;BlkNum251	;3401217 079B FF 		DB	0xFF	;BlkNum260	;3501218 079C 24 		DB	BlkNum270	;BlkNum270	;3601219 079D 24 		DB	BlkNum270	;BlkNum271	;3701220 079E FF 		DB	0xFF	;BlkNum280	;3801221 079F 27 		DB	BlkNum290	;BlkNum290	;3901222 07A0 27 		DB	BlkNum290	;BlkNum291	;4001223 07A1 FF 		DB	0xFF	;BlkNum300	;4101224 07A2 2A 		DB	BlkNum3101	;BlkNum3101	;4201225 07A3 2A 		DB	BlkNum3101	;BlkNum3102	;4301226 07A4 2A 		DB	BlkNum3101	;BlkNum3111	;44Highland Greeley PIC.asm   BlockData.inc                                 Page: 44500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:BlockData.inc01227 07A5 2A 		DB	BlkNum3101	;BlkNum3112	;4501228 07A6 2A 		DB	BlkNum3101	;BlkNum3121	;4601229 07A7 2A 		DB	BlkNum3101	;BlkNum3122	;4701230 07A8 2A 		DB	BlkNum3101	;BlkNum3131	;4801231 07A9 2A 		DB	BlkNum3101	;BlkNum3132	;4901232 07AA FF 		DB	0xFF	;BlkNum320	;5001233 07AB FF 		DB	0xFF	;BlkNum390	;51, aka 32101234 07AC FF 		DB	0xFF	;BlkNum330	;5201235 07AD FF 		DB	0xFF	;BlkNum380	;53, aka 33101236 07AE FF 		DB	0xFF	;BlkNum340	;5401237 07AF FF 		DB	0xFF	;BlkNum370	;55, aka 34101238 07B0 38 		DB	BlkNum350	;BlkNum350	;56, aka 340 part201239 07B1 38 		DB	BlkNum350	;BlkNum351	;57, aka 34201240 07B2 3A 		DB	BlkNum360	;BlkNum360	;58, aka 35001241 07B3 3A 		DB	BlkNum360	;BlkNum361	;59, aka 35101242 07B4 3A 		DB	BlkNum360	;BlkNum362	;60, aka 35201243 07B5 3A 		DB	BlkNum360	;BlkNum363	;61, aka 35301244 07B6 3A 		DB	BlkNum360	;BlkNum364	;62, aka 35401245 07B7 3A 		DB	BlkNum360	;BlkNum365	;63, aka 35501246 07B8 FF 		DB	0xFF	;BlkNumVY1	;upper vista01247 07B9 FF 		DB	0xFF	;BlkNumVY201248 07BA FF 		DB	0xFF	;BlkNumVY301249 07BB FF 		DB	0xFF	;BlkNumVY401250 07BC FF 		DB	0xFF	;BlkNumVY501251 07BD FF 		DB	0xFF	;BlkNumVY601252 07BE FF 		DB	0xFF	;BlkNumEYF01253 07BF FF 		DB	0xFF	;BlkNumPHL	;71,Pinehurst Lead01254 07C0 48 		DB	BlkNumPH1	;BlkNumPH1	;72,Pinehurst 101255 07C1 48 		DB	BlkNumPH1	;BlkNumPH2	;7301256 07C2 48 		DB	BlkNumPH1	;BlkNumPH3	;7401257 07C3 FF 		DB	0xFF	;BlkNumPH4	;7501258 07C4 FF 		DB	0xFF	;BlkNumMZR	;7601259 07C5 	;01260 07C5 	;;00757 07C5 		include	HIGY.SMData.inc00001 07C5 		Page00002 07C5 		subtitle	Switch Machine Data00003 07C5 	; Highland Greeley SWITCH MACHINE DATA00004 07C5 	;00005 07C5 	;OFFSETS00006 07C5 0000 	RealSMNum	EQU	0x0000007 07C5 	;unused	EQU	0x02	;unused spacer word00008 07C5 0004 	SMLEDA	EQU	0x04	;Normal LED00009 07C5 0006 	SMLEDB	EQU	0x06	;Reverse LED00010 07C5 002F 	SMCount	EQU	d'47'	;number of SMs 48 0..4700011 07C5 	;00012 07C5 	;Switch Machine Numbers00013 07C5 0001 	SM66	EQU	d'01'	;300 310 31200014 07C5 0002 	SM67	EQU	d'02'	;300 312 31300015 07C5 0003 	SM68	EQU	d'03'	;300 310 31100016 07C5 0004 	SM69	EQU	d'04'	;320 312 31000017 07C5 0005 	SM70	EQU	d'05'	;321 312 31100018 07C5 0006 	SM86	EQU	d'06'	;321 313 31200019 07C5 0007 	SM87	EQU	d'07'	;321 313-2 313-100020 07C5 0008 	SM88	EQU	d'08'	;312 320 32100021 07C5 0009 	SM89	EQU	d'09'	;32x 312-1 312-200022 07C5 000A 	SM90	EQU	d'10'	;32x 312-2 G200023 07C5 000B 	SM91	EQU	d'11'	;32x 312-2 G100024 07C5 000C 	SM92	EQU	d'12'	;321 311-2 311-100025 07C5 000D 	SM93	EQU	d'13'	;320 310-1 310-200026 07C5 000E 	SM94	EQU	d'14'	;320 310-2 H100027 07C5 000F 	SM95	EQU	d'15'	;310-1 310-1 H200028 07C5 0010 	SM96	EQU	d'16'	;310-1 H2 H3/H400029 07C5 0011 	SM97	EQU	d'17'	;310-1 H3 H400030 07C5 0012 	SM99	EQU	d'18'	;310-1 310-1 310-200031 07C5 0013 	SM100	EQU	d'19'	;310-2 310-2 310-100032 07C5 0014 	SM101	EQU	d'20'	;H1 H1 311-100033 07C5 0015 	SM102	EQU	d'21'	;311-1 311-1 H100034 07C5 0016 	SM103	EQU	d'22'	;310-1 310-1 H500035 07C5 0017 	SM104	EQU	d'23'	;300 310-1 310-200036 07C5 0018 	SM105	EQU	d'24'	;GYL H1 311-100037 07C5 0019 	SM106	EQU	d'25'	;311-1 300 GYL00038 07C5 001A 	SM107	EQU	d'26'	;300 311-2 311-100039 07C5 001B 	SM108	EQU	d'27'	;G4 G4 313-100040 07C5 001C 	SM109	EQU	d'28'	;313-1 313-1 G400041 07C5 001D 	SM110	EQU	d'29'	;313-2 313-2 G500042 07C5 001E 	SM111	EQU	d'30'	;G5 G5 G600043 07C5 001F 	SM112	EQU	d'31'	;G5 SM113 SM11400044 07C5 0020 	SM113	EQU	d'32'	;SM112 G8 G700045 07C5 0021 	SM114	EQU	d'33'	;SM112 G10 G900046 07C5 0022 	SM115	EQU	d'34'	;GYL G4 313-100047 07C5 0023 	SM116	EQU	d'35'	;313-1 300 GYL00048 07C5 0024 	SM117	EQU	d'36'	;300 313-2 313-100049 07C5 0025 	SM118	EQU	d'37'	;GYL G4 G300050 07C5 0026 	SM119	EQU	d'38'	;GYL G2 G100051 07C5 0027 	SM120	EQU	d'39'	;300 312-1 312-200052 07C5 0028 	SM121	EQU	d'40'	;GYL G12 G1100053 07C5 0029 	SM122	EQU	d'41'	;GYL SM121 G1300054 07C5 002A 	SM123	EQU	d'42'	;GYL SM125 SM12200055 07C5 002B 	SM124	EQU	d'43'	;GYL SM123 SM10500056 07C5 002C 	SM125	EQU	d'44'	;GYL G4 G100057 07C5 002D 	SM126	EQU	d'45'	;G19 G18 G1700058 07C5 002E 	SM183	EQU	d'46'	;300 300 MZR00059 07C5 002F 	SM70A	EQU	d'47'	;321 312 311 w/o LEDs00060 07C5 0030 	SM124A	EQU	d'48'	;GYL SM123 SM105 w/o LEDs00061 07C5 	;00062 07C5 	;Switch Machine Data00063 07C5 	FirstSMsData00064 07C5 4200 	SM66Data	dw	d'66'	;RealSMNumHighland Greeley PIC.asm   Switch Machine Data                           Page: 45500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.SMData.inc00065 07C7 0000 		dw	0x0000	;unused spacer word00066 07C9 1D00 		dw	0x001D	;Normal LED00067 07CB 1200 		dw	0x0012	;Reverse LED00068 07CD 	;00069 07CD 4300 	SM67Data	dw	d'67'	;RealSMNum00070 07CF 0000 		dw	0x0000	;unused spacer word00071 07D1 1B00 		dw	0x001B	;Normal LED00072 07D3 1400 		dw	0x0014	;Reverse LED00073 07D5 	;00074 07D5 4400 	SM68Data	dw	d'68'	;RealSMNum00075 07D7 0000 		dw	0x0000	;unused spacer word00076 07D9 1300 		dw	0x0013	;Normal LED00077 07DB 1C00 		dw	0x001C	;Reverse LED00078 07DD 	;00079 07DD 4500 	SM69Data	dw	d'69'	;RealSMNum00080 07DF 0000 		dw	0x0000	;unused spacer word00081 07E1 1401 		dw	0x0114	;Normal LED00082 07E3 1E01 		dw	0x011E	;Reverse LED00083 07E5 	;00084 07E5 4600 	SM70Data	dw	d'70'	;RealSMNum00085 07E7 0000 		dw	0x0000	;unused spacer word00086 07E9 1F01 		dw	0x011F	;Normal LED00087 07EB 1001 		dw	0x0110	;Reverse LED00088 07ED 	;00089 07ED 5600 	SM86Data	dw	d'86'	;RealSMNum00090 07EF 0000 		dw	0x0000	;unused spacer word00091 07F1 2D01 		dw	0x012D	;Normal LED00092 07F3 2701 		dw	0x0127	;Reverse LED00093 07F5 	;00094 07F5 5700 	SM87Data	dw	d'87'	;RealSMNum00095 07F7 0000 		dw	0x0000	;unused spacer word00096 07F9 2301 		dw	0x0123	;Normal LED00097 07FB 2C01 		dw	0x012C	;Reverse LED00098 07FD 	;00099 07FD 5800 	SM88Data	dw	d'88'	;RealSMNum00100 07FF 0000 		dw	0x0000	;unused spacer word00101 0801 2801 		dw	0x0128	;Normal LED00102 0803 2701 		dw	0x0127	;Reverse LED00103 0805 	;00104 0805 5900 	SM89Data	dw	d'89'	;RealSMNum00105 0807 0000 		dw	0x0000	;unused spacer word00106 0809 2901 		dw	0x0129	;Normal LED00107 080B 2601 		dw	0x0126	;Reverse LED00108 080D 	;00109 080D 5A00 	SM90Data	dw	d'90'	;RealSMNum00110 080F 0000 		dw	0x0000	;unused spacer word00111 0811 2A01 		dw	0x012A	;Normal LED00112 0813 2501 		dw	0x0125	;Reverse LED00113 0815 	;00114 0815 5B00 	SM91Data	dw	d'91'	;RealSMNum00115 0817 0000 		dw	0x0000	;unused spacer word00116 0819 2B01 		dw	0x012B	;Normal LED00117 081B 2401 		dw	0x0124	;Reverse LED00118 081D 	;00119 081D 5C00 	SM92Data	dw	d'92'	;RealSMNum00120 081F 0000 		dw	0x0000	;unused spacer word00121 0821 1301 		dw	0x0113	;Normal LED00122 0823 1C01 		dw	0x011C	;Reverse LED00123 0825 	;00124 0825 5D00 	SM93Data	dw	d'93'	;RealSMNum00125 0827 0000 		dw	0x0000	;unused spacer word00126 0829 1101 		dw	0x0111	;Normal LED00127 082B 1201 		dw	0x0112	;Reverse LED00128 082D 	;00129 082D 5E00 	SM94Data	dw	d'94'	;RealSMNum00130 082F 0000 		dw	0x0000	;unused spacer word00131 0831 0801 		dw	0x0108	;Normal LED00132 0833 0701 		dw	0x0107	;Reverse LED00133 0835 	;00134 0835 5F00 	SM95Data	dw	d'95'	;RealSMNum00135 0837 0000 		dw	0x0000	;unused spacer word00136 0839 0B01 		dw	0x010B	;Normal LED00137 083B 0401 		dw	0x0104	;Reverse LED00138 083D 	;00139 083D 6000 	SM96Data	dw	d'96'	;RealSMNum00140 083F 0000 		dw	0x0000	;unused spacer word00141 0841 0A01 		dw	0x010A	;Normal LED00142 0843 0501 		dw	0x0105	;Reverse LED00143 0845 	;00144 0845 6100 	SM97Data	dw	d'97'	;RealSMNum00145 0847 0000 		dw	0x0000	;unused spacer word00146 0849 0601 		dw	0x0106	;Normal LED00147 084B 0901 		dw	0x0109	;Reverse LED00148 084D 	;00149 084D 6300 	SM99Data	dw	d'99'	;RealSMNum00150 084F 0000 		dw	0x0000	;unused spacer word00151 0851 0001 		dw	0x0100	;Normal LED00152 0853 0E01 		dw	0x010E	;Reverse LED00153 0855 	;00154 0855 6400 	SM100Data	dw	d'100'	;RealSMNum00155 0857 0000 		dw	0x0000	;unused spacer word00156 0859 0101 		dw	0x0101	;Normal LED00157 085B 0E01 		dw	0x010E	;Reverse LED00158 085D 	;00159 085D 6500 	SM101Data	dw	d'101'	;RealSMNum00160 085F 0000 		dw	0x0000	;unused spacer word00161 0861 0D01 		dw	0x010D	;Normal LED00162 0863 0201 		dw	0x0102	;Reverse LED00163 0865 	;00164 0865 6600 	SM102Data	dw	d'102'	;RealSMNumHighland Greeley PIC.asm   Switch Machine Data                           Page: 46500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.SMData.inc00165 0867 0000 		dw	0x0000	;unused spacer word00166 0869 0C01 		dw	0x010C	;Normal LED00167 086B 0201 		dw	0x0102	;Reverse LED00168 086D 	;00169 086D 6700 	SM103Data	dw	d'103'	;RealSMNum00170 086F 0000 		dw	0x0000	;unused spacer word00171 0871 1700 		dw	0x0017	;Normal LED00172 0873 0F01 		dw	0x010F	;Reverse LED00173 0875 	;00174 0875 6800 	SM104Data	dw	d'104'	;RealSMNum00175 0877 0000 		dw	0x0000	;unused spacer word00176 0879 1700 		dw	0x0017	;Normal LED00177 087B 1800 		dw	0x0018	;Reverse LED00178 087D 	;00179 087D 6900 	SM105Data	dw	d'105'	;RealSMNum00180 087F 0000 		dw	0x0000	;unused spacer word00181 0881 1600 		dw	0x0016	;Normal LED00182 0883 1900 		dw	0x0019	;Reverse LED00183 0885 	;00184 0885 6A00 	SM106Data	dw	d'106'	;RealSMNum00185 0887 0000 		dw	0x0000	;unused spacer word00186 0889 FEFE 		dw	None	;Normal LED00187 088B FEFE 		dw	None	;Reverse LED00188 088D 	;00189 088D 6B00 	SM107Data	dw	d'107'	;RealSMNum00190 088F 0000 		dw	0x0000	;unused spacer word00191 0891 1A00 		dw	0x001A	;Normal LED00192 0893 1500 		dw	0x0015	;Reverse LED00193 0895 	;00194 0895 6C00 	SM108Data	dw	d'108'	;RealSMNum00195 0897 0000 		dw	0x0000	;unused spacer word00196 0899 5C00 		dw	0x005C	;Normal LED00197 089B 5300 		dw	0x0053	;Reverse LED00198 089D 	;00199 089D 6D00 	SM109Data	dw	d'109'	;RealSMNum00200 089F 0000 		dw	0x0000	;unused spacer word00201 08A1 5200 		dw	0x0052	;Normal LED00202 08A3 5300 		dw	0x0053	;Reverse LED00203 08A5 	;00204 08A5 6E00 	SM110Data	dw	d'110'	;RealSMNum00205 08A7 0000 		dw	0x0000	;unused spacer word00206 08A9 FEFE 		dw	None	;Normal LED00207 08AB 5000 		dw	0x0050	;Reverse LED00208 08AD 	;00209 08AD 6F00 	SM111Data	dw	d'111'	;RealSMNum00210 08AF 0000 		dw	0x0000	;unused spacer word00211 08B1 2000 		dw	0x0020	;Normal LED00212 08B3 2F00 		dw	0x002F	;Reverse LED00213 08B5 	;00214 08B5 7000 	SM112Data	dw	d'112'	;RealSMNum00215 08B7 0000 		dw	0x0000	;unused spacer word00216 08B9 2E00 		dw	0x002E	;Normal LED00217 08BB 2100 		dw	0x0021	;Reverse LED00218 08BD 	;00219 08BD 7100 	SM113Data	dw	d'113'	;RealSMNum00220 08BF 0000 		dw	0x0000	;unused spacer word00221 08C1 2D00 		dw	0x002D	;Normal LED00222 08C3 2200 		dw	0x0022	;Reverse LED00223 08C5 	;00224 08C5 7200 	SM114Data	dw	d'114'	;RealSMNum00225 08C7 0000 		dw	0x0000	;unused spacer word00226 08C9 2300 		dw	0x0023	;Normal LED00227 08CB 2C00 		dw	0x002C	;Reverse LED00228 08CD 	;00229 08CD 7300 	SM115Data	dw	d'115'	;RealSMNum00230 08CF 0000 		dw	0x0000	;unused spacer word00231 08D1 5D00 		dw	0x005D	;Normal LED00232 08D3 5E00 		dw	0x005E	;Reverse LED00233 08D5 	;00234 08D5 7400 	SM116Data	dw	d'116'	;RealSMNum00235 08D7 0000 		dw	0x0000	;unused spacer word00236 08D9 FEFE 		dw	None	;Normal LED00237 08DB FEFE 		dw	None	;Reverse LED00238 08DD 	;00239 08DD 7500 	SM117Data	dw	d'117'	;RealSMNum00240 08DF 0000 		dw	0x0000	;unused spacer word00241 08E1 5F00 		dw	0x005F	;Normal LED00242 08E3 5100 		dw	0x0051	;Reverse LED00243 08E5 	;00244 08E5 7600 	SM118Data	dw	d'118'	;RealSMNum00245 08E7 0000 		dw	0x0000	;unused spacer word00246 08E9 5400 		dw	0x0054	;Normal LED00247 08EB 5B00 		dw	0x005B	;Reverse LED00248 08ED 	;00249 08ED 7700 	SM119Data	dw	d'119'	;RealSMNum00250 08EF 0000 		dw	0x0000	;unused spacer word00251 08F1 5500 		dw	0x0055	;Normal LED00252 08F3 5A00 		dw	0x005A	;Reverse LED00253 08F5 	;00254 08F5 7800 	SM120Data	dw	d'120'	;RealSMNum00255 08F7 0000 		dw	0x0000	;unused spacer word00256 08F9 5700 		dw	0x0057	;Normal LED00257 08FB 5800 		dw	0x0058	;Reverse LED00258 08FD 	;00259 08FD 7900 	SM121Data	dw	d'121'	;RealSMNum00260 08FF 0000 		dw	0x0000	;unused spacer word00261 0901 2800 		dw	0x0028	;Normal LED00262 0903 2700 		dw	0x0027	;Reverse LED00263 0905 	;00264 0905 7A00 	SM122Data	dw	d'122'	;RealSMNumHighland Greeley PIC.asm   Switch Machine Data                           Page: 47500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.SMData.inc00265 0907 0000 		dw	0x0000	;unused spacer word00266 0909 2900 		dw	0x0029	;Normal LED00267 090B 2600 		dw	0x0026	;Reverse LED00268 090D 	;00269 090D 7B00 	SM123Data	dw	d'123'	;RealSMNum00270 090F 0000 		dw	0x0000	;unused spacer word00271 0911 2A00 		dw	0x002A	;Normal LED00272 0913 2500 		dw	0x0025	;Reverse LED00273 0915 	;00274 0915 7C00 	SM124Data	dw	d'124'	;RealSMNum00275 0917 0000 		dw	0x0000	;unused spacer word00276 0919 1E00 		dw	0x001E	;Normal LED00277 091B 1100 		dw	0x0011	;Reverse LED00278 091D 	;00279 091D 7D00 	SM125Data	dw	d'125'	;RealSMNum00280 091F 0000 		dw	0x0000	;unused spacer word00281 0921 5900 		dw	0x0059	;Normal LED00282 0923 5600 		dw	0x0056	;Reverse LED00283 0925 	;00284 0925 7E00 	SM126Data	dw	d'126'	;RealSMNum00285 0927 0000 		dw	0x0000	;unused spacer word00286 0929 2400 		dw	0x0024	;Normal LED00287 092B 2B00 		dw	0x002B	;Reverse LED00288 092D 	;00289 092D B700 	SM183Data	dw	d'183'	;RealSMNum00290 092F 0000 		dw	0x0000	;unused spacer word00291 0931 1F00 		dw	0x001F	;Normal LED00292 0933 1000 		dw	0x0010	;Reverse LED00293 0935 	;00294 0935 4600 	SM70AData	dw	d'70'	;RealSMNum00295 0937 0000 		dw	0x0000	;unused spacer word00296 0939 FEFE 		dw	None	;Normal LED00297 093B FEFE 		dw	None	;Reverse LED00298 093D 	;00299 093D 7C00 	SM124AData	dw	d'124'	;RealSMNum00300 093F 0000 		dw	0x0000	;unused spacer word00301 0941 FEFE 		dw	None	;Normal LED00302 0943 FEFE 		dw	None	;Reverse LED00303 0945 	;00758 0945 		include	HIGY.RouteData.inc00001 0945 	;	PAGE00002 0945 	;	STTL	RouteDATA00003 0945 	; Highland Greeley Route DATA 00004 0945 	;00005 0945 	;SETUP aka Route 000006 0945 80 07 	SetupRoute	DB	SetRly,Rly300Local00007 0947 80 08 		DB	SetRly,Rly310_1Local00008 0949 80 14 		DB	SetRly,Rly310_2LocalorDT00009 094B 80 18 		DB	SetRly,Rly311_1LocalorDT00010 094D 80 0B 		DB	SetRly,Rly311_2Local00011 094F 80 0E 		DB	SetRly,Rly312_1Local00012 0951 80 24 		DB	SetRly,Rly312_2LocalorDT00013 0953 80 28 		DB	SetRly,Rly313_1LocalorDT00014 0955 80 17 		DB	SetRly,Rly313_2Local00015 0957 80 37 		DB	SetRly,Rly320LocalorDT00016 0959 80 38 		DB	SetRly,Rly321LocalorDT00017 095B FF 		DB	ReturnCmd00018 095C 	;00019 095C 	RT01	;ML30000020 095C 0F 90 		DB	gosub,ClrMZR00021 095E 02 07 	RT01_1	DB	ClrRlyNS,Rly300Local00022 0960 00 06 		DB	ClrRly,Rly300HI00023 0962 00 05 		DB	ClrRly,Rly300GY00024 0964 FF 		DB	ReturnCmd00025 0965 	;00026 0965 	RT02	;ML300_MZR00027 0965 0E00 5E09 		DW	gosubLong,RT01_100028 0969 80 1E 	RT02_1	DB	SetRly,RlyMZR_Blk30000029 096B 81 2E 		DB	SetSM,SM183	00030 096D FF 		DB	ReturnCmd00031 096E 	;00032 096E 	RT03	;Ml300_310_100033 096E 0F 01 		DB	gosub,ML30000034 0970 0F 77 		DB	gosub,ML310_100035 0972 03 01 	RT03_1	DB	ClrSMNU,SM6600036 0974 83 03 		DB	SetSMNU,SM6800037 0976 01 17 		DB	ClrSM,SM10400038 0978 FF 		DB	ReturnCmd00039 0979 	;00040 0979 	RT04	;ML300_310_200041 0979 0F 01 		DB	gosub,ML30000042 097B 0F 78 		DB	gosub,ML310_200043 097D 03 01 	RT04_1	DB	ClrSMNU,SM6600044 097F 83 03 		DB	SetSMNU,SM6800045 0981 81 17 		DB	SetSM,SM10400046 0983 FF 		DB	ReturnCmd00047 0984 	;00048 0984 	RT05	;ML300_311_100049 0984 0F 01 		DB	gosub,ML30000050 0986 0F 79 		DB	gosub,ML311_100051 0988 03 01 	RT05_1	Db	ClrSMNU,SM6600052 098A 03 03 		DB	ClrSMNU,SM6800053 098C 01 30 		DB	ClrSM,SM124A00054 098E 81 1A 		DB	SetSM,SM10700055 0990 FF 		DB	ReturnCmd00056 0991 	;00057 0991 	RT06	;ML300_311_200058 0991 0F 01 		DB	gosub,ML30000059 0993 0F 7A 		DB	gosub,ML311_200060 0995 03 01 	RT06_1	DB	ClrSMNU,SM66Highland Greeley PIC.asm   TurnTable Data                                Page: 48500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc00061 0997 03 03 		DB	ClrSMNU,SM6800062 0999 01 30 		DB	ClrSM,SM124A00063 099B 01 1A 		DB	ClrSM,SM10700064 099D FF 		DB	ReturnCmd00065 099E 	;00066 099E 	RT07	;ML300_312_100067 099E 0F 01 		DB	gosub,ML30000068 09A0 0F 7B 		DB	gosub,ML312_100069 09A2 83 01 	RT07_1	DB	SetSMNU,SM6600070 09A4 03 02 		DB	ClrSMNU,SM6700071 09A6 01 27 		DB	ClrSM,SM12000072 09A8 FF 		DB	ReturnCmd00073 09A9 	;00074 09A9 	RT08	;ML300_312_200075 09A9 0F 01 		DB	gosub,ML30000076 09AB 0F 7C 		DB	gosub,ML312_200077 09AD 83 01 	RT08_1	DB	SetSMNU,SM6600078 09AF 03 02 		DB	ClrSMNU,SM6700079 09B1 81 27 		DB	SetSM,SM12000080 09B3 FF 		DB	ReturnCmd00081 09B4 	;00082 09B4 	RT09	;ML300_313_100083 09B4 0F 01 		DB	gosub,ML30000084 09B6 0F 7D 		DB	gosub,ML313_100085 09B8 83 01 	RT09_1	DB	SetSMNU,SM6600086 09BA 83 02 		DB	SetSMNU,SM6700087 09BC 81 24 		DB	SetSM,SM11700088 09BE FF 		DB	ReturnCmd00089 09BF 	;00090 09BF 	RT10	;ML300_313_200091 09BF 0F 01 		DB	gosub,ML30000092 09C1 0F 7E 		DB	gosub,ML313_200093 09C3 83 01 	RT10_1	DB	SetSMNU,SM6600094 09C5 83 02 		DB	SetSMNU,SM6700095 09C7 01 24 		DB	ClrSM,SM11700096 09C9 01 1D 		DB	ClrSM,SM11000097 09CB FF 		DB	ReturnCmd00098 09CC 	;00099 09CC 	RT11	;ML300_310_1_32000100 09CC 0F 03 		DB	gosub,ML300_310_100101 09CE 0F 75 	RT11_1	DB	gosub,ML32000102 09D0 81 04 	RT11_2	DB	SetSM,SM6900103 09D2 01 0D 		DB	ClrSM,SM9300104 09D4 FF 		DB	ReturnCmd00105 09D5 	;00106 09D5 	RT12	;ML300_310_2_32000107 09D5 0F 04 		DB	gosub,ML300_310_200108 09D7 0F 75 	RT12_1	DB	gosub,ML32000109 09D9 81 04 	RT12_2	DB	SetSM,SM6900110 09DB 81 0D 		DB	SetSM,SM9300111 09DD FF 		DB	ReturnCmd00112 09DE 	;00113 09DE 	RT13	;ML300_312_32000114 09DE 0F 07 		DB	gosub,ML300_312_100115 09E0 0F 75 	RT13_1	DB	gosub,ML32000116 09E2 01 04 	RT13_2	DB	ClrSM,SM6900117 09E4 01 08 		DB	ClrSM,SM8800118 09E6 01 09 		DB	ClrSM,SM8900119 09E8 01 2F 		DB	ClrSM,SM70A00120 09EA FF 		DB	ReturnCmd00121 09EB 	;00122 09EB 	RT14	;ML300_312_2_32000123 09EB 0F 08 		DB	gosub,ML300_312_200124 09ED 0F 75 	RT14_1	DB	gosub,ML32000125 09EF 01 0B 	RT14_2	DB	ClrSM,SM9100126 09F1 01 0A 	RT14_3	DB	ClrSM,SM9000127 09F3 81 09 	RT14_4	DB	SetSM,SM8900128 09F5 01 08 		DB	ClrSM,SM8800129 09F7 01 04 		DB	ClrSM,SM6900130 09F9 01 2F 		DB	ClrSM,SM70A00131 09FB FF 		DB	ReturnCmd00132 09FC 	;00133 09FC 	RT15	;ML300_311_1_32100134 09FC 0F 05 		DB	gosub,ML300_311_100135 09FE 0F 76 	RT15_1	DB	gosub,ML32100136 0A00 81 05 	RT15_2	DB	SetSM,SM7000137 0A02 81 2F 		DB	SetSM,SM70A00138 0A04 81 0C 		DB	SetSM,SM9200139 0A06 FF 		DB	ReturnCmd00140 0A07 	;00141 0A07 	RT16	;ML300_311_2_32100142 0A07 0F 06 		DB	gosub,ML300_311_200143 0A09 0F 76 	RT16_1	DB	gosub,ML32100144 0A0B 81 05 	RT16_2	DB	SetSM,SM7000145 0A0D 81 2F 		DB	SetSM,SM70A00146 0A0F 01 0C 		DB	ClrSM,SM9200147 0A11 FF 		DB	ReturnCmd00148 0A12 	;00149 0A12 	RT17	;ML300_312_1_32100150 0A12 0F 07 		DB	gosub,ML300_312_100151 0A14 0F 76 	RT17_1	DB	gosub,ML32100152 0A16 01 05 	RT17_2	DB	ClrSM,SM7000153 0A18 81 06 		DB	SetSM,SM8600154 0A1A 81 08 		DB	SetSM,SM8800155 0A1C 01 09 		DB	ClrSM,SM8900156 0A1E FF 		DB	ReturnCmd00157 0A1F 	;00158 0A1F 	RT18	;ML300_312_2_32100159 0A1F 0F 08 		DB	gosub,ML300_312_200160 0A21 0F 76 	RT18_1	DB	gosub,ML321Highland Greeley PIC.asm   TurnTable Data                                Page: 49500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc00161 0A23 01 0B 	RT18_2	DB	ClrSM,SM9100162 0A25 01 0A 	RT18_3	DB	ClrSM,SM9000163 0A27 81 09 	RT18_4	DB	SetSM,SM8900164 0A29 81 08 		DB	SetSM,SM8800165 0A2B 81 06 		DB	SetSM,SM8600166 0A2D 01 05 		DB	ClrSM,SM7000167 0A2F FF 		DB	ReturnCmd00168 0A30 	;00169 0A30 	RT19	;ML300_313_1_32100170 0A30 0F 09 		DB	gosub,ML300_313_100171 0A32 0F 76 	RT19_1	DB	gosub,ML32100172 0A34 01 05 	RT19_2	DB	ClrSM,SM7000173 0A36 01 06 		DB	ClrSM,SM8600174 0A38 81 07 		DB	SetSM,SM8700175 0A3A FF 		DB	ReturnCmd00176 0A3B 	;00177 0A3B 	RT20	;ML300_313_2_32100178 0A3B 0F 0A 		DB	gosub,ML300_313_200179 0A3D 0F 76 	RT20_1	DB	gosub,ML32100180 0A3F 01 05 	RT20_2	DB	ClrSM,SM7000181 0A41 01 06 		DB	ClrSM,SM8600182 0A43 01 07 		DB	ClrSM,SM8700183 0A45 FF 		DB	ReturnCmd00184 0A46 	;00185 0A46 	RT21	;GYH500186 0A46 00 99 		DB	ClrRly,RlyH5HI00187 0A48 80 9A 		DB	SetRly,RlyH5GY00188 0A4A 80 98 		DB	SetRly,RlyH5THR00189 0A4C FF 		DB	ReturnCmd00190 0A4D 	;00191 0A4D 	RT22	;GY30000192 0A4D 0F 90 		DB	gosub,ClrMZR00193 0A4F 80 07 	RT22_1	DB	SetRly,Rly300Local00194 0A51 00 06 		DB	ClrRly,Rly300HI00195 0A53 80 05 		DB	SetRly,Rly300GY00196 0A55 FF 		DB	ReturnCmd00197 0A56 	;00198 0A56 	RT23	;GY300_MZR00199 0A56 0E00 4F0A 		DW	gosubLong,RT22_100200 0A5A FD00 6909 		DW	gotoLong,RT02_100201 0A5E 	;00202 0A5E 	RT24	;GY300_310_100203 0A5E 0F 16 		DB	gosub,GY30000204 0A60 0F 81 		DB	gosub,GY310_100205 0A62 FD00 7209 		DW	gotoLong,RT03_100206 0A66 	;00207 0A66 	RT25	;GY300_310_200208 0A66 0F 16 		DB	gosub,GY30000209 0A68 0F 82 		DB	gosub,GY310_200210 0A6A FD00 7D09 		DW	gotoLong,RT04_100211 0A6E 	;00212 0A6E 	RT26	;GY300_311_100213 0A6E 0F 16 		DB	gosub,GY30000214 0A70 0F 83 		DB	gosub,GY311_100215 0A72 FD00 8809 		DW	gotoLong,RT05_100216 0A76 	;00217 0A76 	RT27	;GY300_311_200218 0A76 0F 16 		DB	gosub,GY30000219 0A78 0F 84 		DB	gosub,GY311_200220 0A7A FD00 9509 		DW	gotoLong,RT06_100221 0A7E 	;00222 0A7E 	RT28	;GY300_312_100223 0A7E 0F 16 		DB	gosub,GY30000224 0A80 0F 85 		DB	gosub,GY312_100225 0A82 FD00 A209 		DW	gotoLong,RT07_100226 0A86 	;00227 0A86 	RT29	;GY300_312_200228 0A86 0F 16 		DB	gosub,GY30000229 0A88 0F 86 		DB	gosub,GY312_200230 0A8A FD00 AD09 		DW	gotoLong,RT08_100231 0A8E 	;00232 0A8E 	RT30	;GY300_313_100233 0A8E 0F 16 		DB	gosub,GY30000234 0A90 0F 87 		DB	gosub,GY313_100235 0A92 FD00 B809 		DW	gotoLong,RT09_100236 0A96 	;00237 0A96 	RT31	;GY300_313_200238 0A96 0F 16 		DB	gosub,GY30000239 0A98 0F 88 		DB	gosub,GY313_200240 0A9A FD00 C309 		DW	gotoLong,RT10_100241 0A9E 	;00242 0A9E 	RT32	;GYH200243 0A9E 00 8D 		DB	ClrRly,RlyH2HI00244 0AA0 80 8E 		DB	SetRly,RlyH2GY00245 0AA2 80 8C 		DB	SetRly,RlyH2THR00246 0AA4 01 10 		DB	ClrSM,SM9600247 0AA6 FF 		DB	ReturnCmd00248 0AA7 	;00249 0AA7 	RT33	;GYH300250 0AA7 00 96 		DB	ClrRly,RlyH3HI00251 0AA9 80 95 		DB	SetRly,RlyH3GY00252 0AAB 80 97 	RT33_1	DB	SetRly,RlyH3THR00253 0AAD 81 10 		DB	SetSM,SM9600254 0AAF 81 11 		DB	SetSM,SM9700255 0AB1 FF 		DB	ReturnCmd00256 0AB2 	;00257 0AB2 	RT34	;GYH400258 0AB2 00 93 		DB	ClrRly,RlyH4HI00259 0AB4 80 92 		DB	SetRly,RlyH4GY00260 0AB6 80 94 	RT34_1	DB	SetRly,RlyH4THRHighland Greeley PIC.asm   TurnTable Data                                Page: 50500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc00261 0AB8 81 10 		DB	SetSM,SM9600262 0ABA 01 11 		DB	ClrSM,SM9700263 0ABC FF 		DB	ReturnCmd00264 0ABD 	;00265 0ABD 	RT119	;ML310_100266 0ABD 80 14 		DB	SetRly,Rly310_2LocalorDT00267 0ABF 02 08 		DB	ClrRlyNS,Rly310_1Local00268 0AC1 00 0A 		DB	ClrRly,Rly310_1THR00269 0AC3 01 0F 	RT119_1	DB	ClrSM,SM9500270 0AC5 01 16 	RT119_2	DB	ClrSM,SM10300271 0AC7 01 12 		DB	ClrSM,SM9900272 0AC9 FF 		DB	ReturnCmd00273 0ACA 	;00274 0ACA 	RT129	;GY310_100275 0ACA 0E00 C30A 		DW	gosubLong,RT119_100276 0ACE 80 08 	RT129_1	DB	SetRly,Rly310_1Local00277 0AD0 80 0A 		DB	SetRly,Rly310_1THR00278 0AD2 80 09 		DB	SetRly,Rly310_1GY00279 0AD4 FF 		DB	ReturnCmd00280 0AD5 	;00281 0AD5 	RT35	;GY300_310_1_H200282 0AD5 0F 20 		DB	gosub,GYH200283 0AD7 0F 16 	RT35_1	DB	gosub,GY30000284 0AD9 0E00 CE0A 		DW	gosubLong,RT129_100285 0ADD 0E00 C50A 		DW	gosubLong,RT119_200286 0AE1 81 0F 		DB	SetSM,SM9500287 0AE3 FD00 7209 		DW	gotoLong,RT03_100288 0AE7 	;00289 0AE7 	RT36	;GY300_310_1_H300290 0AE7 0F 21 		DB	gosub,GYH300291 0AE9 FD00 D70A 		DW	gotoLong,RT35_100292 0AED 	;00293 0AED 	RT37	;GY300_310_1_H400294 0AED 0F 22 		DB	gosub,GYH400295 0AEF FD00 D70A 		DW	gotoLong,RT35_100296 0AF3 	;00297 0AF3 	RT38	;GY300_310_1_32000298 0AF3 0F 18 		DB	gosub,GY300_310_100299 0AF5 0F 7F 	RT38_1	DB	gosub,GY32000300 0AF7 FD00 D009 		DW	gotoLong,RT11_200301 0AFB 	;00302 0AFB 	RT39	;GY300_310_2_32000303 0AFB 0F 19 		DB	gosub,GY300_310_200304 0AFD 0F 7F 	RT39_1	DB	gosub,GY32000305 0AFF FD00 D909 		DW	gotoLong,RT12_200306 0B03 	;00307 0B03 	RT40	;GY300_312_1_32000308 0B03 0F 1C 		DB	gosub,GY300_312_100309 0B05 0F 7F 	RT40_1	DB	gosub,GY32000310 0B07 FD00 E209 		DW	gotoLong,RT13_200311 0B0B 	;00312 0B0B 	RT41	;GY300_312_2_32000313 0B0B 0F 1D 		DB	gosub,GY300_312_200314 0B0D 0F 7F 	RT41_1	DB	gosub,GY32000315 0B0F FD00 EF09 		DW	gotoLong,RT14_200316 0B13 	;00317 0B13 	RT42	;GY300_311_1_32100318 0B13 0F 1A 		DB	gosub,GY300_311_100319 0B15 0F 80 	RT42_1	DB	gosub,GY32100320 0B17 FD00 000A 		DW	gotoLong,RT15_200321 0B1B 	;00322 0B1B 	RT43	;GY300_311_2_32100323 0B1B 0F 1B 		DB	gosub,GY300_311_200324 0B1D 0F 80 	RT43_1	DB	gosub,GY32100325 0B1F FD00 0B0A 		DW	gotoLong,RT16_200326 0B23 	;00327 0B23 	RT44	;GY300_312_1_32100328 0B23 0F 1C 		DB	gosub,GY300_312_100329 0B25 0F 80 	RT44_1	DB	gosub,GY32100330 0B27 FD00 160A 		DW	gotoLong,RT17_200331 0B2B 	;00332 0B2B 	RT45	;GY300_312_2_32100333 0B2B 0F 1D 		DB	gosub,GY300_312_200334 0B2D 0F 80 	RT45_1	DB	gosub,GY32100335 0B2F FD00 230A 		DW	gotoLong,RT18_200336 0B33 	;00337 0B33 	RT46	;GY300_313_1_32100338 0B33 0F 1E 		DB	gosub,GY300_313_100339 0B35 0F 80 	RT46_1	DB	gosub,GY32100340 0B37 FD00 340A 		DW	gotoLong,RT19_200341 0B3B 	;00342 0B3B 	RT47	;GY300_313_2_32100343 0B3B 0F 1F 		DB	gosub,GY300_313_200344 0B3D 0F 80 	RT47_1	DB	gosub,GY32100345 0B3F FD00 3F0A 		DW	gotoLong,RT20_200346 0B43 	;00347 0B43 	RT48	;ML320_310_100348 0B43 0F 77 		DB	gosub,ML310_100349 0B45 FD00 CE09 		DW	gotoLong,RT11_100350 0B49 	;00351 0B49 	RT49	;ML320_310_200352 0B49 0F 78 		DB	gosub,ML310_200353 0B4B FD00 D709 		DW	gotoLong,RT12_100354 0B4F 	;00355 0B4F 	RT50	;ML320_312_100356 0B4F 0F 7B 		DB	gosub,ML312_100357 0B51 FD00 E009 		DW	gotoLong,RT13_100358 0B55 	;00359 0B55 	RT51	;ML320_312_200360 0B55 0F 7E 		DB	gosub,ML313_2Highland Greeley PIC.asm   TurnTable Data                                Page: 51500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc00361 0B57 FD00 ED09 		DW	gotoLong,RT14_100362 0B5B 	;00363 0B5B 	RT52	;GY320_310_100364 0B5B 0F 81 		DB	gosub,GY310_100365 0B5D FD00 F50A 		DW	gotoLong,RT38_100366 0B61 	;00367 0B61 	RT53	;GY320_310_200368 0B61 0F 82 		DB	gosub,GY310_200369 0B63 FD00 FD0A 		DW	gotoLong,RT39_100370 0B67 	;00371 0B67 	RT54	;GY320_312_100372 0B67 0F 85 		DB	gosub,GY312_100373 0B69 FD00 050B 		DW	gotoLong,RT40_100374 0B6D 	;00375 0B6D 	RT55	;GY320_312_200376 0B6D 0F 86 		DB	gosub,GY312_200377 0B6F FD00 0D0B 		DW	gotoLong,RT41_100378 0B73 	;	00379 0B73 	RT56	;GY320_G100380 0B73 0F 7F 		DB	gosub,GY32000381 0B75 0F 8F 		DB	gosub,GYG100382 0B77 81 0B 		DB	SetSM,SM9100383 0B79 FD00 F109 		DW	gotoLong,RT14_300384 0B7D 	;00385 0B7D 	RT146	;GYGYL_G100386 0B7D 0F 8F 		DB	gosub,GYG100387 0B7F 81 26 	RT146_1	DB	SetSM,SM11900388 0B81 81 2C 	RT146_2	DB	SetSM,SM12500389 0B83 03 02 	RT146_3	DB	ClrSMNU,SM6700390 0B85 01 2B 		DB	ClrSM,SM12400391 0B87 01 2A 		DB	ClrSM,SM12300392 0B89 FE 93 		DB	gotoCmd,GYGYL00393 0B8B 	;00394 0B8B 	RT57	;GY320_G1_GYL00395 0B8B 0F 38 		DB	gosub,GY320_G100396 0B8D FD00 7F0B 		DW	gotoLong,RT146_100397 0B91 	;00398 0B91 	RT58	;GY320_G200399 0B91 0F 7F 		DB	gosub,GY32000400 0B93 0F 91 		DB	gosub,GYG200401 0B95 81 0A 		DB	SetSM,SM9000402 0B97 FD00 F309 		DW	gotoLong,RT14_400403 0B9B 	;00404 0B9B 	RT148	;GYGYL_G200405 0B9B 0F 91 		DB	gosub,GYG200406 0B9D 01 26 	RT148_1	DB	ClrSM,SM11900407 0B9F FD00 810B 		DW	gotoLong,RT146_200408 0BA3 	;00409 0BA3 	RT59	;GY320_G2_GYL00410 0BA3 0F 3A 		DB	gosub,GY320_G200411 0BA5 FD00 9D0B 		DW	gotoLong,RT148_100412 0BA9 	;00413 0BA9 	RT60	;GY320_H100414 0BA9 0F 95 		DB	gosub,GYH100415 0BAB 81 0E 		DB	SetSM,SM9400416 0BAD 0F 7F 		DB	gosub,GY32000417 0BAF FD00 D909 		DW	gotoLong,RT12_200418 0BB3 	;00419 0BB3 	RT61	;GY320_H1_GYL00420 0BB3 0F 3C 		DB	gosub,GY320_H100421 0BB5 01 18 		DB	ClrSM,SM10500422 0BB7 03 01 		DB	ClrSMNU,SM6600423 0BB9 81 2B 		DB	SetSM,SM12400424 0BBB 81 30 		DB	SetSM,SM124A00425 0BBD FE 93 		DB	gotoCmd,GYGYL00426 0BBF 	;00427 0BBF 	RT62	;GY320_310_1_H500428 0BBF 0F 8D 		DB	gosub,GY310_1_H500429 0BC1 FD00 F50A 		DW	gotoLong,RT38_100430 0BC5 	;00431 0BC5 	RT120	;ML310_200432 0BC5 82 08 		DB	SetRlyNC,Rly310_1Local00433 0BC7 02 14 		DB	ClrRlyNS,Rly310_2LocalorDT00434 0BC9 00 13 		DB	ClrRly,Rly310_2CAT00435 0BCB 00 12 		DB	ClrRly,Rly310_2GY00436 0BCD 00 11 		DB	ClrRly,Rly310_2DT00437 0BCF 00 10 		DB	ClrRly,Rly310_2SRC00438 0BD1 00 1F 		DB	ClrRly,Rly310_2Local00439 0BD3 01 0E 	RT120_1	DB	ClrSM,SM9400440 0BD5 01 13 		DB	ClrSM,SM10000441 0BD7 FF 		DB	ReturnCmd00442 0BD8 	;00443 0BD8 	RT130	;GY310_200444 0BD8 0E00 D30B 		DW	gosubLong,RT120_100445 0BDC 80 1F 	RT130_1	DB	SetRly,Rly310_2Local00446 0BDE 80 14 		DB	SetRly,Rly310_2LocalorDT00447 0BE0 00 13 		DB	ClrRly,Rly310_2CAT00448 0BE2 80 12 		DB	SetRly,Rly310_2GY00449 0BE4 00 11 		DB	ClrRly,Rly310_2DT00450 0BE6 00 10 		DB	ClrRly,Rly310_2SRC00451 0BE8 FF 		DB	ReturnCmd00452 0BE9 	;00453 0BE9 	RT63	;GY320_310_2_H500454 0BE9 0E00 D709 		DW	gosubLong,RT12_100455 0BED 01 0E 		DB	ClrSM,SM9400456 0BEF 0F 7F 		DB	gosub,GY32000457 0BF1 0E00 DC0B 	RT63_1	DW	gosubLong,RT130_100458 0BF5 0F 15 		DB	gosub,GYH500459 0BF7 81 13 		DB	SetSM,SM10000460 0BF9 81 12 		DB	SetSM,SM99Highland Greeley PIC.asm   TurnTable Data                                Page: 52500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc00461 0BFB 81 16 		DB	SetSM,SM10300462 0BFD FF 		DB	ReturnCmd00463 0BFE 	;00464 0BFE 	RT64	;ML321_311_100465 0BFE 0F 79 		DB	gosub,ML311_100466 0C00 FD00 FE09 		DW	gotoLong,RT15_100467 0C04 	;00468 0C04 	RT65	;ML321_311_200469 0C04 0F 7A 		DB	gosub,ML311_200470 0C06 FD00 090A 		DW	gotoLong,RT16_100471 0C0A 	;00472 0C0A 	RT66	;ML321_312_100473 0C0A 0F 7B 		DB	gosub,ML312_100474 0C0C FD00 140A 		DW	gotoLong,RT17_100475 0C10 	;00476 0C10 	RT67	;ML321_312_200477 0C10 0F 7C 		DB	gosub,ML312_200478 0C12 FD00 210A 		DW	gotoLong,RT18_100479 0C16 	;00480 0C16 	RT68	;ML321_313_100481 0C16 0F 7D 		DB	gosub,ML313_100482 0C18 FD00 320A 		DW	gotoLong,RT19_100483 0C1C 	;00484 0C1C 	RT69	;ML321_313_200485 0C1C 0F 7E 		DB	gosub,ML313_200486 0C1E FD00 3D0A 		DW	gotoLong,RT20_100487 0C22 	;00488 0C22 	RT70	;GY321_311_100489 0C22 0F 83 		DB	gosub,GY311_100490 0C24 FD00 150B 		DW	gotoLong,RT42_100491 0C28 	;00492 0C28 	RT71	;GY321_311_200493 0C28 0F 84 		DB	gosub,GY311_200494 0C2A FD00 1D0B 		DW	gotoLong,RT43_100495 0C2E 	;00496 0C2E 	RT72	;GY321_312_100497 0C2E 0F 85 		DB	gosub,GY312_100498 0C30 FD00 250B 		DW	gotoLong,RT44_100499 0C34 	;00500 0C34 	RT73	;GY321_312_200501 0C34 0F 86 		DB	gosub,GY312_200502 0C36 FD00 2D0B 		DW	gotoLong,RT45_100503 0C3A 	;00504 0C3A 	RT74	;GY321_313_100505 0C3A 0F 87 		DB	gosub,GY313_100506 0C3C FD00 350B 		DW	gotoLong,RT46_100507 0C40 	;00508 0C40 	RT75	;GY321_313_200509 0C40 0F 88 		DB	gosub,GY313_200510 0C42 FD00 3D0B 		DW	gotoLong,RT47_100511 0C46 	;00512 0C46 	RT76	;GY321_G100513 0C46 0F 80 		DB	gosub,GY32100514 0C48 0F 8F 		DB	gosub,GYG100515 0C4A 81 0B 		DB	SetSM,SM9100516 0C4C FD00 250A 		DW	gotoLong,RT18_300517 0C50 		DW	gotoLong,RT18_300518 0C50 	RT77	;GY321_G200519 0C50 0F 80 		DB	gosub,GY32100520 0C52 0F 91 		DB	gosub,GYG200521 0C54 81 0A 		DB	SetSM,SM9000522 0C56 FD00 270A 		DW	gotoLong,RT18_400523 0C5A 	;00524 0C5A 	RT78	;GY321_313_1_GYL00525 0C5A 0F 4A 		DB	gosub,GY321_313_100526 0C5C 81 23 		DB	SetSM,SM11600527 0C5E 81 22 		DB	SetSM,SM11500528 0C60 01 25 		DB	ClrSM,SM11800529 0C62 01 2C 		DB	ClrSM,SM12500530 0C64 FD00 830B 		DW	gotoLong,RT146_300531 0C68 	;00532 0C68 	RT79	;GY321_G1_GYL00533 0C68 0F 4C 		DB	gosub,GY321_G100534 0C6A FD00 7F0B 		DW	gotoLong,RT146_100535 0C6E 	;00536 0C6E 	RT80	;GY321_G2_GYL00537 0C6E 0F 4D 		DB	gosub,GY321_G200538 0C70 FD00 9D0B 		DW	gotoLong,RT148_100539 0C74 	;00540 0C74 	RT81	;unused00541 0C74 FF 		DB	ReturnCmd00542 0C75 	;00543 0C75 	RT82	;GY321_G600544 0C75 0F 4B 		DB	gosub,GY321_313_200545 0C77 0F 96 	RT82_1	DB	gosub,GYG500546 0C79 FE 97 		DB	gotoCmd,GYG600547 0C7B 	;00548 0C7B 	RT83	;GY321_G700549 0C7B 0F 4B 		DB	gosub,GY321_313_200550 0C7D 0F 98 	RT83_1	DB	gosub,GYG700551 0C7F FE 96 		DB	gotoCmd,GYG500552 0C81 	;00553 0C81 	RT84	;GY321_G800554 0C81 0F 4B 		DB	gosub,GY321_313_200555 0C83 0F 99 	RT84_1	DB	gosub,GYG800556 0C85 FE 96 		DB	gotoCmd,GYG500557 0C87 	;00558 0C87 	RT85	;GY321_G9A00559 0C87 0F 9A 		DB	gosub,GYG9A00560 0C89 0F 4B 	RT85_1	DB	gosub,GY321_313_2Highland Greeley PIC.asm   TurnTable Data                                Page: 53500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc00561 0C8B FE 96 		DB	gotoCmd,GYG500562 0C8D 	;00563 0C8D 	RT154	;GYG9A00564 0C8D 80 54 		DB	SetRly,RlyG9DisableBCD00565 0C8F 80 53 	RT154_1	DB	SetRly,RlyG9DisableCD00566 0C91 80 52 	RT154_2	DB	SetRly,RlyG9DisableD00567 0C93 00 56 	RT154_3	DB	ClrRly,RlyG9HI00568 0C95 80 55 		DB	SetRly,RlyG9GY00569 0C97 80 57 		DB	SetRly,RlyG9THR00570 0C99 81 21 		DB	SetSM,SM11400571 0C9B 01 1F 		DB	ClrSM,SM11200572 0C9D 01 1E 		DB	ClrSM,SM11100573 0C9F FF 		DB	ReturnCmd00574 0CA0 	;00575 0CA0 	RT86	;GY321_G9B00576 0CA0 0E00 8F0C 		DW	gosubLong,RT154_100577 0CA4 FD00 890C 		DW	gotoLong,RT85_100578 0CA8 	;00579 0CA8 	RT87	;GY321_G9C00580 0CA8 0E00 910C 		DW	gosubLong,RT154_200581 0CAC FD00 890C 		DW	gotoLong,RT85_100582 0CB0 	;00583 0CB0 	RT88	;GY321_G9D00584 0CB0 0E00 930C 		DW	gosubLong,RT154_300585 0CB4 FD00 890C 		DW	gotoLong,RT85_100586 0CB8 	;00587 0CB8 	RT89	;GY321_G10A00588 0CB8 0F 9B 		DB	gosub,GYG10A00589 0CBA FD00 890C 		DW	gotoLong,RT85_100590 0CBE 	;00591 0CBE 	RT155	;GYG10A00592 0CBE 80 5B 		DB	SetRly,RlyG10DisableBCD00593 0CC0 80 5C 	RT155_1	DB	SetRly,RlyG10DisableCD00594 0CC2 80 5D 	RT155_2	DB	SetRly,RlyG10DisableD00595 0CC4 00 59 	RT155_3	DB	ClrRly,RlyG10HI00596 0CC6 80 5A 		DB	SetRly,RlyG10GY00597 0CC8 80 58 		DB	SetRly,RlyG10THR00598 0CCA 01 21 		DB	ClrSM,SM11400599 0CCC 01 1F 		DB	ClrSM,SM11200600 0CCE 01 1E 		DB	ClrSM,SM11100601 0CD0 FF 		DB	ReturnCmd00602 0CD1 	;00603 0CD1 	RT90	;GY321_G10B00604 0CD1 0E00 C00C 		DW	gosubLong,RT155_100605 0CD5 FD00 890C 		DW	gotoLong,RT85_100606 0CD9 	;00607 0CD9 	RT91	;GY321_G10c00608 0CD9 0E00 C20C 		DW	gosubLong,RT155_200609 0CDD FD00 890C 		DW	gotoLong,RT85_100610 0CE1 	;00611 0CE1 	RT92	;GY321_G10D00612 0CE1 0E00 C40C 		DW	gosubLong,RT155_300613 0CE5 FD00 890C 		DW	gotoLong,RT85_100614 0CE9 	;00615 0CE9 	RT93	;GY321_G17A00616 0CE9 0F B4 		DB	gosub,GYG19A_G17A00617 0CEB FE 52 		DB	gotoCmd,GY321_G600618 0CED 	;00619 0CED 	RT94	;GY321_G17B00620 0CED 0F B6 		DB	gosub,GYG19A_G17B00621 0CEF FE 52 		DB	gotoCmd,GY321_G600622 0CF1 	;00623 0CF1 	RT95	;GY321_G17C00624 0CF1 0F B8 		DB	gosub,GYG19A_G17C00625 0CF3 FE 52 		DB	gotoCmd,GY321_G600626 0CF5 	;00627 0CF5 	RT96	;GY321_G18A00628 0CF5 0F BA 		DB	gosub,GYG19A_G18A00629 0CF7 FE 52 		DB	gotoCmd,GY321_G600630 0CF9 	;00631 0CF9 	RT97	;GY321_G18B00632 0CF9 0F BC 		DB	gosub,GYG19A_G18B00633 0CFB FE 52 		DB	gotoCmd,GY321_G600634 0CFD 	;00635 0CFD 	RT98	;GY321_G18C00636 0CFD 0F BE 		DB	gosub,GYG19A_G18C00637 0CFF FE 52 		DB	gotoCmd,GY321_G600638 0D01 	;00639 0D01 	RT99	;unused00640 0D01 FF 		DB	ReturnCmd00641 0D02 	;00642 0D02 	RT100	;GY313_2_G600643 0D02 0F 88 		DB	gosub,GY313_200644 0D04 FD00 770C 		DW	gotoLong,RT82_100645 0D08 	;00646 0D08 	RT101	;GY313_2_G700647 0D08 0F 88 		DB	gosub,GY313_200648 0D0A FD00 7D0C 		DW	gotoLong,RT83_100649 0D0E 	;00650 0D0E 	RT102	;GY313_2_G800651 0D0E 0F 88 		DB	gosub,GY313_200652 0D10 FD00 830C 		DW	gotoLong,RT84_100653 0D14 	;00654 0D14 	RT103	;GY313_2_G9A00655 0D14 0F 9A 		DB	gosub,GYG9A00656 0D16 0F 88 	RT103_1	DB	gosub,GY313_200657 0D18 FE 96 		DB	gotoCmd,GYG500658 0D1A 	;00659 0D1A 	RT104	;GY313_2_G9B00660 0D1A 0E00 8F0C 		DW	gosubLong,RT154_1Highland Greeley PIC.asm   TurnTable Data                                Page: 54500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc00661 0D1E FD00 160D 		DW	gotoLong,RT103_100662 0D22 	;00663 0D22 	RT105	;GY313_2_G9C00664 0D22 0E00 910C 		DW	gosubLong,RT154_200665 0D26 FD00 160D 		DW	gotoLong,RT103_100666 0D2A 	;00667 0D2A 	RT106	;GY313_2_G9D00668 0D2A 0E00 930C 		DW	gosubLong,RT154_300669 0D2E FD00 160D 		DW	gotoLong,RT103_100670 0D32 	;00671 0D32 	RT107	;GY313_2_G10A00672 0D32 0F 9B 		DB	gosub,GYG10A00673 0D34 FD00 160D 		DW	gotoLong,RT103_100674 0D38 	;00675 0D38 	RT108	;GY313_2_G10B00676 0D38 0E00 C00C 		DW	gosubLong,RT155_100677 0D3C FD00 160D 		DW	gotoLong,RT103_100678 0D40 	;00679 0D40 	RT109	;GY313_2_G10C00680 0D40 0E00 C20C 		DW	gosubLong,RT155_200681 0D44 FD00 160D 		DW	gotoLong,RT103_100682 0D48 	;00683 0D48 	RT110	;GY313_2_G10D00684 0D48 0E00 C40C 		DW	gosubLong,RT155_300685 0D4C FD00 160D 		DW	gotoLong,RT103_100686 0D50 	;00687 0D50 	RT111	;GY313_2_G17A00688 0D50 0F B4 		DB	gosub,GYG19A_G17A00689 0D52 FE 64 		DB	gotoCmd,GY313_2_G600690 0D54 	;00691 0D54 	RT112	;GY313_2_G17B00692 0D54 0F B6 		DB	gosub,GYG19A_G17B00693 0D56 FE 64 		DB	gotoCmd,GY313_2_G600694 0D58 	;00695 0D58 	RT113	;GY313_2_G17C00696 0D58 0F B8 		DB	gosub,GYG19A_G17C00697 0D5A FE 64 		DB	gotoCmd,GY313_2_G600698 0D5C 	;00699 0D5C 	RT114	;GY313_2_G18A00700 0D5C 0F BA 		DB	gosub,GYG19A_G18A00701 0D5E FE 64 		DB	gotoCmd,GY313_2_G600702 0D60 	;00703 0D60 	RT115	;GY313_2_G18B00704 0D60 0F BC 		DB	gosub,GYG19A_G18B00705 0D62 FE 64 		DB	gotoCmd,GY313_2_G600706 0D64 	;00707 0D64 	RT116	;GY313_2_G18C00708 0D64 0F BE 		DB	gosub,GYG19A_G18C00709 0D66 FE 64 		DB	gotoCmd,GY313_2_G600710 0D68 	;00711 0D68 	RT117	;ML32000712 0D68 02 37 		DB	ClrRlyNS,Rly320LocalorDT00713 0D6A 00 36 		DB	ClrRly,Rly320CAT00714 0D6C 00 35 		DB	ClrRly,Rly320GY00715 0D6E 00 34 		DB	ClrRly,Rly320DT00716 0D70 00 33 		DB	ClrRly,Rly320SRC00717 0D72 FF 		DB	ReturnCmd00718 0D73 	;00719 0D73 	RT118	;ML32100720 0D73 02 38 		DB	ClrRlyNS,Rly321LocalorDT00721 0D75 00 39 		DB	ClrRly,Rly321CAT00722 0D77 00 3A 		DB	ClrRly,Rly321GY00723 0D79 00 3B 		DB	ClrRly,Rly321DT00724 0D7B 00 3C 		DB	ClrRly,Rly321SRC00725 0D7D FF 		DB	ReturnCmd00726 0D7E 	;00727 0D7E 	RT121	;ML311_100728 0D7E 82 0B 		DB	SetRlyNC,Rly311_2Local00729 0D80 02 18 		DB	ClrRlyNS,Rly311_1LocalorDT00730 0D82 00 19 		DB	ClrRly,Rly311_1CAT00731 0D84 00 1A 		DB	ClrRly,Rly311_1GY00732 0D86 00 1B 		DB	ClrRly,Rly311_1DT00733 0D88 00 1C 		DB	ClrRly,Rly311_1SRC00734 0D8A 00 1D 		DB	ClrRly,Rly311_1Local00735 0D8C 01 19 	RT121_1	DB	ClrSM,SM10600736 0D8E 01 15 		DB	ClrSM,SM10200737 0D90 FF 		DB	ReturnCmd00738 0D91 	;00739 0D91 	RT122	;ML311_200740 0D91 82 18 		DB	SetRlyNC,Rly311_1LocalorDT00741 0D93 02 0B 		DB	ClrRlyNS,Rly311_2Local00742 0D95 00 0D 		DB	ClrRly,Rly311_2THR00743 0D97 FF 		DB	ReturnCmd00744 0D98 	;00745 0D98 	RT123	;ML312_100746 0D98 82 24 		DB	SetRlyNC,Rly312_2LocalorDT00747 0D9A 00 00 		DB	ClrRly,Rly312_1THR00748 0D9C 02 0E 		DB	ClrRlyNS,Rly312_1Local00749 0D9E FF 		DB	ReturnCmd00750 0D9F 	;00751 0D9F 	RT124	;ML312_200752 0D9F 82 0E 		DB	SetRlyNC,Rly312_1Local00753 0DA1 02 24 		DB	ClrRlyNS,Rly312_2LocalorDT00754 0DA3 00 23 		DB	ClrRly,Rly312_2CAT00755 0DA5 00 22 		DB	ClrRly,Rly312_2GY00756 0DA7 00 21 		DB	ClrRly,Rly312_2DT00757 0DA9 00 20 		DB	ClrRly,Rly312_2SRC00758 0DAB 00 2F 		DB	ClrRly,Rly312_2Local00759 0DAD FF 		DB	ReturnCmd00760 0DAE 	;Highland Greeley PIC.asm   TurnTable Data                                Page: 55500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc00761 0DAE 	RT125	;ML313_100762 0DAE 82 17 		DB	SetRlyNC,Rly313_2Local00763 0DB0 02 28 		DB	ClrRlyNS,Rly313_1LocalorDT00764 0DB2 00 29 		DB	ClrRly,Rly313_1CAT00765 0DB4 00 2A 		DB	ClrRly,Rly313_1GY00766 0DB6 00 2B 		DB	ClrRly,Rly313_1DT00767 0DB8 00 2C 		DB	ClrRly,Rly313_1SRC00768 0DBA 00 2D 		DB	ClrRly,Rly313_1Local00769 0DBC 01 23 	RT125_1	DB	ClrSM,SM11600770 0DBE 01 1C 		DB	ClrSM,SM10900771 0DC0 FF 		DB	ReturnCmd00772 0DC1 	;00773 0DC1 	RT126	;ML313_200774 0DC1 82 28 		DB	SetRlyNC,Rly313_1LocalorDT00775 0DC3 00 15 		DB	ClrRly,Rly313_2THR00776 0DC5 02 17 		DB	ClrRlyNS,Rly313_2Local00777 0DC7 FF 		DB	ReturnCmd00778 0DC8 	;00779 0DC8 	RT127	;GY32000780 0DC8 82 37 		DB	SetRlyNC,Rly320LocalorDT00781 0DCA 00 36 		DB	ClrRly,Rly320CAT00782 0DCC 80 35 		DB	SetRly,Rly320GY00783 0DCE 00 34 		DB	ClrRly,Rly320DT00784 0DD0 00 33 		DB	ClrRly,Rly320SRC00785 0DD2 FF 		DB	ReturnCmd00786 0DD3 	;	00787 0DD3 	RT128	;GY32100788 0DD3 82 38 		DB	SetRlyNC,Rly321LocalorDT00789 0DD5 00 39 		DB	ClrRly,Rly321CAT00790 0DD7 80 3A 		DB	SetRly,Rly321GY00791 0DD9 00 3B 		DB	ClrRly,Rly321DT00792 0DDB 00 3C 		DB	ClrRly,Rly321SRC00793 0DDD FF 		DB	ReturnCmd00794 0DDE 	;00795 0DDE 	RT131	;GY311_100796 0DDE 0E00 8C0D 		DW	gosubLong,RT121_100797 0DE2 80 1D 	RT131_1	DB	SetRly,Rly311_1Local00798 0DE4 82 18 		DB	SetRlyNC,Rly311_1LocalorDT00799 0DE6 00 19 		DB	ClrRly,Rly311_1CAT00800 0DE8 80 1A 		DB	SetRly,Rly311_1GY00801 0DEA 00 1B 		DB	ClrRly,Rly311_1DT00802 0DEC 00 1C 		DB	ClrRly,Rly311_1SRC00803 0DEE FF 		DB	ReturnCmd00804 0DEF 	;00805 0DEF 	RT132	;GY311_200806 0DEF 82 0B 		DB	SetRlyNC,Rly311_2Local00807 0DF1 80 0D 		DB	SetRly,Rly311_2THR00808 0DF3 80 0C 		DB	SetRly,Rly311_2GY00809 0DF5 FF 		DB	ReturnCmd00810 0DF6 	;00811 0DF6 	RT133	;GY312_100812 0DF6 82 0E 		DB	SetRlyNC,Rly312_1Local00813 0DF8 80 00 		DB	SetRly,Rly312_1THR00814 0DFA 80 0F 		DB	SetRly,Rly312_1GY00815 0DFC FF 		DB	ReturnCmd00816 0DFD 	;00817 0DFD 	RT134	;GY312_200818 0DFD 80 2F 		DB	SetRly,Rly312_2Local00819 0DFF 82 24 		DB	SetRlyNC,Rly312_2LocalorDT00820 0E01 00 23 		DB	ClrRly,Rly312_2CAT00821 0E03 80 22 		DB	SetRly,Rly312_2GY00822 0E05 00 21 		DB	ClrRly,Rly312_2DT00823 0E07 00 20 		DB	ClrRly,Rly312_2SRC00824 0E09 FF 		DB	ReturnCmd00825 0E0A 	;00826 0E0A 	RT135	;GY313_100827 0E0A 82 28 		DB	SetRlyNC,Rly313_1LocalorDT00828 0E0C 00 29 		DB	ClrRly,Rly313_1CAT00829 0E0E 80 2A 		DB	SetRly,Rly313_1GY00830 0E10 00 2B 		DB	ClrRly,Rly313_1DT00831 0E12 00 2C 		DB	ClrRly,Rly313_1SRC00832 0E14 80 2D 		DB	SetRly,Rly313_1Local00833 0E16 FD00 BC0D 		DW	gotoLong,RT125_100834 0E1A 	;00835 0E1A 	RT136	;GY313_200836 0E1A 82 17 		DB	SetRlyNC,Rly313_2Local00837 0E1C 80 15 		DB	SetRly,Rly313_2THR00838 0E1E 80 16 		DB	SetRly,Rly313_2GY00839 0E20 FF 		DB	ReturnCmd00840 0E21 	;00841 0E21 	RT137	;GY300_G400842 0E21 0F 16 		DB	gosub,GY30000843 0E23 0E00 B809 		DW	gosubLong,RT09_100844 0E27 81 1C 		DB	SetSM,SM10900845 0E29 81 1B 		DB	SetSM,SM10800846 0E2B 01 23 		DB	ClrSM,SM11600847 0E2D 80 47 		DB	SetRly,RlyG4THR00848 0E2F 00 46 		DB	ClrRly,RlyG4HI00849 0E31 80 45 		DB	SetRly,RlyG4GY00850 0E33 FF 		DB	ReturnCmd00851 0E34 	;00852 0E34 	RT138	;GY310_1_H200853 0E34 0F 20 		DB	gosub,GYH200854 0E36 0E00 C50A 	RT138_1	DW	gosubLong,RT119_200855 0E3A 0E00 CE0A 		DW	gosubLong,RT129_100856 0E3E 81 0F 		DB	SetSM,SM9500857 0E40 FF 		DB	ReturnCmd00858 0E41 	;00859 0E41 	RT139	;GY310_1_H300860 0E41 0F 21 		DB	gosub,GYH3Highland Greeley PIC.asm   TurnTable Data                                Page: 56500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc00861 0E43 FD00 360E 		DW	gotoLong,RT138_100862 0E47 	;00863 0E47 	RT140	;GY310_1_H400864 0E47 0F 22 		DB	gosub,GYH400865 0E49 FD00 360E 		DW	gotoLong,RT138_100866 0E4D 	;00867 0E4D 	RT141	;GY310_1_H500868 0E4D 0F 15 		DB	gosub,GYH500869 0E4F 0F 81 		DB	gosub,GY310_100870 0E51 81 16 		DB	SetSM,SM10300871 0E53 FF 		DB	ReturnCmd00872 0E54 	;00873 0E54 	RT142	;GY310_2_H500874 0E54 FD00 F10B 		DW	gotoLong,RT63_100875 0E58 	;00876 0E58 	RT143	;GYG100877 0E58 80 25 		DB	SetRly,RlyG1GY00878 0E5A 00 26 	RT143_1	DB	ClrRly,RlyG1CAT00879 0E5C 80 27 		DB	SetRly,RlyG1THR00880 0E5E 00 2E 		DB	ClrRly,RlyG1SRC00881 0E60 FF 		DB	ReturnCmd00882 0E61 	;00883 0E61 	RT144	;ClrMZR00884 0E61 01 2E 		DB	ClrSM,SM18300885 0E63 00 1E 		DB	ClrRly,RlyMZR_Blk30000886 0E65 FF 		DB	ReturnCmd00887 0E66 	;00888 0E66 	RT145	;GYG200889 0E66 80 30 		DB	SetRly,RlyG2GY00890 0E68 00 31 		DB	ClrRly,RlyG2HI00891 0E6A 80 32 		DB	SetRly,RlyG2THR00892 0E6C FF 		DB	ReturnCmd00893 0E6D 	;00894 0E6D 	RT147	;GYGYL00895 0E6D 80 01 		DB	SetRly,RlyGYL_GY00896 0E6F 00 03 		DB	ClrRly,RlyGYL_CAT00897 0E71 00 02 		DB	ClrRly,RlyGYL_SRC00898 0E73 80 04 		DB	SetRly,RlyGYL_THR00899 0E75 FF 		DB	ReturnCmd00900 0E76 	;00901 0E76 	RT149	;GYH100902 0E76 01 14 		DB	ClrSM,SM10100903 0E78 80 8B 	RT149_1	DB	SetRly,RlyH1GY00904 0E7A 00 89 		DB	ClrRly,RlyH1CAT00905 0E7C 80 8A 		DB	SetRly,RlyH1_2RorSRC00906 0E7E 80 88 		DB	SetRly,RlyH1THR00907 0E80 FF 		DB	ReturnCmd00908 0E81 	;00909 0E81 	RT150	;GYG500910 0E81 00 43 		DB	ClrRly,RlyG5HI00911 0E83 80 42 		DB	SetRly,RlyG5GY00912 0E85 80 44 		DB	SetRly,RlyG5THR00913 0E87 81 1D 		DB	SetSM,SM11000914 0E89 FF 		DB	ReturnCmd00915 0E8A 	;00916 0E8A 	RT151	;GYG600917 0E8A 00 49 		DB	ClrRly,RlyG6HI00918 0E8C 80 4A 		DB	SetRly,RlyG6GY00919 0E8E 80 48 		DB	SetRly,RlyG6THR00920 0E90 81 1E 		DB	SetSM,SM11100921 0E92 FF 		DB	ReturnCmd00922 0E93 	;00923 0E93 	RT152	;GYG700924 0E93 00 4C 		DB	ClrRly,RlyG7HI00925 0E95 80 4D 		DB	SetRly,RlyG7GY00926 0E97 80 4B 		DB	SetRly,RlyG7THR00927 0E99 01 20 		DB	ClrSM,SM11300928 0E9B 81 1F 	RT152_1	DB	SetSM,SM11200929 0E9D 01 1E 		DB	ClrSM,SM11100930 0E9F FF 		DB	ReturnCmd00931 0EA0 	;00932 0EA0 	RT153	;GYG800933 0EA0 00 40 		DB	ClrRly,RlyG8HI00934 0EA2 80 4E 		DB	SetRly,RlyG8GY00935 0EA4 80 41 		DB	SetRly,RlyG8THR00936 0EA6 81 20 		DB	SetSM,SM11300937 0EA8 FD00 9B0E 		DW	gotoLong,RT152_100938 0EAC 	;00939 0EAC 	RT156	;GYGYL_G1300940 0EAC 0F 93 		DB	gosub,GYGYL00941 0EAE 01 2B 		DB	ClrSM,SM12400942 0EB0 81 2A 		DB	SetSM,SM12300943 0EB2 81 29 		DB	SetSM,SM12200944 0EB4 80 51 	RT156_1	DB	SetRly,RlyG13THR00945 0EB6 00 50 		DB	ClrRly,RlyG13HI00946 0EB8 80 5E 		DB	SetRly,RlyG13GY00947 0EBA FF 		DB	ReturnCmd00948 0EBB 	;00949 0EBB 	RT157	;GYGYL_G19A00950 0EBB 0F 9C 		DB	gosub,GYGYL_G1300951 0EBD FC00 2656 	RT157_2	DW	RotateTT,TrkG13A00952 0EC1 80 61 	RT157_1	DB	SetRly,RlyG19THR00953 0EC3 00 60 		DB	ClrRly,RlyG19HI00954 0EC5 80 6E 		DB	SetRly,RlyG19GY00955 0EC7 00 6F 		DB	ClrRly,RlyG19Reverse00956 0EC9 FF 		DB	ReturnCmd00957 0ECA 	;00958 0ECA 	RT158	;GYGYL_G19B00959 0ECA 0F 9C 		DB	gosub,GYGYL_G1300960 0ECC FC00 6216 	RT158_2	DW	RotateTT,TrkG13BHighland Greeley PIC.asm   TurnTable Data                                Page: 57500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc00961 0ED0 80 61 	RT158_1	DB	SetRly,RlyG19THR00962 0ED2 00 60 		DB	ClrRly,RlyG19HI00963 0ED4 80 6E 		DB	SetRly,RlyG19GY00964 0ED6 80 6F 		DB	SetRly,RlyG19Reverse00965 0ED8 FF 		DB	ReturnCmd00966 0ED9 	;00967 0ED9 	RT159	;GYGYL_G11A00968 0ED9 80 63 		DB	SetRly,RlyG11DisableBC00969 0EDB 80 62 	RT160	DB	SetRly,RlyG11DisableC00970 0EDD 00 66 	RT161	DB	ClrRly,RlyG11CAT00971 0EDF 80 67 		DB	SetRly,RlyG11THR00972 0EE1 80 65 		DB	SetRly,RlyG11_2RorSRC00973 0EE3 80 64 		DB	SetRly,RlyG11GY00974 0EE5 81 28 		DB	SetSM,SM12100975 0EE7 01 29 	RT159_3	DB	ClrSM,SM12200976 0EE9 81 2A 		DB	SetSM,SM12300977 0EEB 01 2B 		DB	ClrSM,SM12400978 0EED FE 93 		DB	gotoCmd,GYGYL00979 0EEF 	;00980 0EEF 	RT162	;GYGYL_G12A00981 0EEF 80 6C 		DB	SetRly,RlyG12DisableBC00982 0EF1 80 6D 	RT163	DB	SetRly,RlyG12DisableC00983 0EF3 00 69 	RT164	DB	ClrRly,RlyG12CAT00984 0EF5 80 68 		DB	SetRly,RlyG12THR00985 0EF7 80 6A 		DB	SetRly,RlyG12_2RorSRC00986 0EF9 80 6B 		DB	SetRly,RlyG12GY00987 0EFB 01 28 		DB	ClrSM,SM12100988 0EFD FD00 E70E 		DW	gotoLong,RT159_300989 0F01 	;00990 0F01 	RT165	;GYGYL_G300991 0F01 80 3D 		DB	SetRly,RlyG3THR00992 0F03 00 3E 		DB	ClrRly,RlyG3HI00993 0F05 80 3F 		DB	SetRly,RlyG3GY00994 0F07 81 25 		DB	SetSM,SM11800995 0F09 01 2C 	RT165_1	DB	ClrSM,SM12500996 0F0B FD00 830B 		DW	gotoLong,RT146_300997 0F0F 	;00998 0F0F 	RT166	;GYGYL_G400999 0F0F 80 47 		DB	SetRly,RlyG4THR01000 0F11 00 46 		DB	ClrRly,RlyG4HI01001 0F13 80 45 		DB	SetRly,RlyG4GY01002 0F15 01 1B 		DB	ClrSM,SM10801003 0F17 01 22 		DB	ClrSM,SM11501004 0F19 01 25 	RT166_1	DB	ClrSM,SM11801005 0F1B FD00 090F 		DW	gotoLong,RT165_101006 0F1F 	;01007 0F1F 	RT167	;GYGYL_313_101008 0F1F 0F 87 		DB	gosub,GY313_101009 0F21 81 23 		DB	SetSM,SM11601010 0F23 81 22 		DB	SetSM,SM11501011 0F25 FD00 190F 		DW	gotoLong,RT166_101012 0F29 	;01013 0F29 	RT168	;GYGYL_H101014 0F29 0F 95 		DB	gosub,GYH101015 0F2B 0F 93 	RT168_1	DB	gosub,GYGYL01016 0F2D 01 18 		DB	ClrSM,SM10501017 0F2F 03 01 		DB	ClrSMNU,SM6601018 0F31 81 2B 		DB	SetSM,SM12401019 0F33 81 30 		DB	SetSM,SM124A01020 0F35 FF 		DB	ReturnCmd01021 0F36 	;01022 0F36 	RT169	;GYGYL_311_101023 0F36 0F 83 		DB	gosub,GY311_101024 0F38 81 19 		DB	SetSM,SM10601025 0F3A 81 18 		DB	SetSM,SM10501026 0F3C 0F 93 		DB	gosub,GYGYL01027 0F3E 03 01 		DB	ClrSMNU,SM6601028 0F40 81 2B 		DB	SetSM,SM12401029 0F42 81 30 		DB	SetSM,SM124A01030 0F44 FF 		DB	ReturnCmd01031 0F45 	;01032 0F45 	RT170	;GYG19A_G1401033 0F45 FC00 5431 		DW	RotateTT,TrkG14A01034 0F49 00 6F 		DB	ClrRly,RlyG19Reverse01035 0F4B 80 77 	RT170_1	DB	SetRly,RlyG14THR01036 0F4D 00 76 		DB	ClrRly,RlyG14HI01037 0F4F 80 75 		DB	SetRly,RlyG14GY01038 0F51 80 61 	RT170_2	DB	SetRly,RlyG19THR01039 0F53 00 60 		DB	ClrRly,RlyG19HI01040 0F55 80 6E 		DB	SetRly,RlyG19GY01041 0F57 FF 		DB	ReturnCmd01042 0F58 	;01043 0F58 	RT171	;GYG19B_G1401044 0F58 FC00 7191 		DW	RotateTT,TrkG14B01045 0F5C 80 6F 		DB	SetRly,RlyG19Reverse01046 0F5E FD00 4B0F 		DW	gotoLong,RT170_101047 0F62 	;01048 0F62 	RT172	;GYG19A_G1501049 0F62 FC00 8417 		DW	RotateTT,TrkG15A01050 0F66 00 6F 		DB	ClrRly,RlyG19Reverse01051 0F68 80 74 	RT172_1	DB	SetRly,RlyG15THR01052 0F6A 00 73 		DB	ClrRly,RlyG15HI01053 0F6C 80 72 		DB	SetRly,RlyG15GY01054 0F6E FD00 510F 		DW	gotoLong,RT170_201055 0F72 	;01056 0F72 	RT173	;GYG19B_G1501057 0F72 FC00 9577 		DW	RotateTT,TrkG15B01058 0F76 80 6F 		DB	SetRly,RlyG19Reverse01059 0F78 FD00 680F 		DW	gotoLong,RT172_101060 0F7C 	;Highland Greeley PIC.asm   TurnTable Data                                Page: 58500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc01061 0F7C 	RT174	;GYG19A_G1601062 0F7C FC00 3604 		DW	RotateTT,TrkG16A01063 0F80 00 6F 		DB	ClrRly,RlyG19Reverse01064 0F82 80 78 	RT174_1	DB	SetRly,RlyG16THR01065 0F84 00 79 		DB	ClrRly,RlyG16HI01066 0F86 80 7A 		DB	SetRly,RlyG16GY01067 0F88 FD00 510F 		DW	gotoLong,RT170_201068 0F8C 	;01069 0F8C 	RT175	;GYG19B_G1601070 0F8C FC00 3164 		DW	RotateTT,TrkG16B01071 0F90 80 6F 		DB	SetRly,RlyG19Reverse01072 0F92 FD00 820F 		DW	gotoLong,RT174_101073 0F96 	;01074 0F96 	RT176	;GYG13_G19A01075 0F96 0E00 BD0E 		DW	gosubLong,RT157_201076 0F9A FD00 B40E 		DW	gotoLong,RT156_101077 0F9E 	;01078 0F9E 	RT177	;GYG13_G19B01079 0F9E 0E00 CC0E 		DW	gosubLong,RT158_201080 0FA2 FD00 B40E 		DW	gotoLong,RT156_101081 0FA6 	;01082 0FA6 	RT180	;GYG19A_G17A01083 0FA6 80 7E 		DB	SetRly,RlyG17DisableBC01084 0FA8 80 7F 	RT182	DB	SetRly,RlyG17DisableC01085 0FAA 80 7B 	RT184	DB	SetRly,RlyG17THR01086 0FAC 00 7C 		DB	ClrRly,RlyG17HI01087 0FAE 80 7D 		DB	SetRly,RlyG17GY01088 0FB0 81 2D 		DB	SetSM,SM12601089 0FB2 	RT178	;GYG19A_G2001090 0FB2 FC00 3987 	RT180_1	DW	RotateTT,TrkG20A01091 0FB6 00 6F 		DB	ClrRly,RlyG19Reverse01092 0FB8 80 61 	RT180_2	DB	SetRly,RlyG19THR01093 0FBA 00 60 		DB	ClrRly,RlyG19HI01094 0FBC 80 6E 		DB	SetRly,RlyG19GY01095 0FBE 00 81 		DB	ClrRly,RlyG20HI01096 0FC0 80 80 		DB	SetRly,RlyG20GY01097 0FC2 80 82 		DB	SetRly,RlyG20THR01098 0FC4 FF 		DB	ReturnCmd01099 0FC5 	;01100 0FC5 	RT181	;GYG19B_G17A01101 0FC5 80 7E 		DB	SetRly,RlyG17DisableBC01102 0FC7 80 7F 	RT183	DB	SetRly,RlyG17DisableC01103 0FC9 80 7B 	RT185	DB	SetRly,RlyG17THR01104 0FCB 00 7C 		DB	ClrRly,RlyG17HI01105 0FCD 80 7D 		DB	SetRly,RlyG17GY01106 0FCF 81 2D 		DB	SetSM,SM12601107 0FD1 	RT179	;GYG19B_G2001108 0FD1 FC00 0147 	RT181_1	DW	RotateTT,TrkG20B01109 0FD5 80 6F 		DB	SetRly,RlyG19Reverse01110 0FD7 FD00 B80F 		DW	gotoLong,RT180_201111 0FDB 	;01112 0FDB 	RT186	;GYG19A_G18A01113 0FDB 80 84 		DB	SetRly,RlyG18DisableBC01114 0FDD 80 83 	RT188	DB	SetRly,RlyG18DisableC01115 0FDF 80 87 	RT190	DB	SetRly,RlyG18THR01116 0FE1 00 86 		DB	ClrRly,RlyG18HI01117 0FE3 80 85 		DB	SetRly,RlyG18GY01118 0FE5 01 2D 		DB	ClrSM,SM12601119 0FE7 FD00 B20F 		DW	gotoLong,RT180_101120 0FEB 	;01121 0FEB 	RT187	;GYG19B_G18A01122 0FEB 80 84 		DB	SetRly,RlyG18DisableBC01123 0FED 80 83 	RT189	DB	SetRly,RlyG18DisableC01124 0FEF 80 87 	RT191	DB	SetRly,RlyG18THR01125 0FF1 00 86 		DB	ClrRly,RlyG18HI01126 0FF3 80 85 		DB	SetRly,RlyG18GY01127 0FF5 01 2D 		DB	ClrSM,SM12601128 0FF7 FD00 D10F 		DW	gotoLong,RT181_101129 0FFB 	;01130 0FFB 	RT192	;GYH2_H501131 0FFB 0F 20 		DB	gosub,GYH201132 0FFD 0E00 CE0A 	RT192_1	DW	gosubLong,RT129_101133 1001 0F 15 		DB	gosub,GYH501134 1003 81 0F 		DB	SetSM,SM9501135 1005 01 12 		DB	ClrSM,SM9901136 1007 81 16 		DB	SetSM,SM10301137 1009 FF 		DB	ReturnCmd01138 100A 	;01139 100A 	RT193	;GYH3_H501140 100A 0F 21 		DB	gosub,GYH301141 100C FD00 FD0F 		DW	gotoLong,RT192_101142 1010 	;01143 1010 	RT194	;GYH4_H501144 1010 0F 22 		DB	gosub,GYH401145 1012 FD00 FD0F 		DW	gotoLong,RT192_101146 1016 	;01147 1016 	RT195	;GY313_2_G19A01148 1016 FC00 7146 		DW	RotateTT,TrkG6A01149 101A 80 6F 		DB	SetRly,RlyG19Reverse01150 101C 00 60 	RT195_1	DB	ClrRly,RlyG19HI01151 101E 80 6E 		DB	SetRly,RlyG19GY01152 1020 80 61 		DB	SetRly,RlyG19THR01153 1022 FE 64 		DB	gotoCmd,GY313_2_G601154 1024 	;01155 1024 	RT196	;GY313_2_G19B01156 1024 FC00 3987 		DW	RotateTT,TrkG6B01157 1028 00 6F 		DB	ClrRly,RlyG19Reverse01158 102A FD00 1C10 		DW	gotoLong,RT195_101159 102E 	;01160 102E 	RT197	;GY321_311_1_GYLHighland Greeley PIC.asm   TurnTable Data                                Page: 59500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RouteData.inc01161 102E 0E00 1D0B 		DW	gosubLong,RT43_101162 1032 FE A9 		DB	gotoCmd,GYGYL_311_101163 1034 	;01164 1034 	RT198	;GY311_1_H101165 1034 0E00 E20D 		DW	gosubLong,RT131_101166 1038 0E00 780E 		DW	gosubLong,RT149_101167 103C 81 14 		DB	SetSM,SM10101168 103E 81 15 		DB	SetSM,SM10201169 1040 FF 		DB	ReturnCmd01170 1041 	;01171 1041 	RT199	;GY311_1_GYL_H101172 1041 0F C6 		DB	gosub,GY311_1_H101173 1043 FD00 2B0F 		DW	gotoLong,RT168_101174 1047 	;01175 1047 	RT200	;GY310_2_H101176 1047 0F 95 		DB	gosub,GYH101177 1049 81 0E 		DB	SetSM,SM9401178 104B FF 		DB	ReturnCmd01179 104C 	;01180 104C 	RT201	;01181 104C 	RT202	;01182 104C 	RT203	;01183 104C 	RT204	;01184 104C 	RT205	;01185 104C 	RT206	;01186 104C 	RT207	;01187 104C 	RT208	;01188 104C 	RT209	;01189 104C 	;00759 104C 	;00760 104C 	;	Page00761 104C 	;	STTL	Routes:Route pointer table00762 104C 	;00763 104C 	;Route pointer table00764 104C 0000 	PRT00	DW	0x000000765 104E 5C09 6509 6E09 7909 8409 9109 9E09 A909 B409 	PRT01	DW	RT01,RT02,RT03,RT04,RT05,RT06,RT07,RT08,RT0900766 1060 BF09 CC09 D509 DE09 EB09 FC09 070A 120A 1F0A 300A 	PRT10	DW	RT10,RT11,RT12,RT13,RT14,RT15,RT16,RT17,RT18,RT1900767 1074 3B0A 460A 4D0A 560A 5E0A 660A 6E0A 760A 7E0A 860A 	PRT20	DW	RT20,RT21,RT22,RT23,RT24,RT25,RT26,RT27,RT28,RT2900768 1088 8E0A 960A 9E0A A70A B20A D50A E70A ED0A F30A FB0A 	PRT30	DW	RT30,RT31,RT32,RT33,RT34,RT35,RT36,RT37,RT38,RT3900769 109C 030B 0B0B 130B 1B0B 230B 2B0B 330B 3B0B 430B 490B 	PRT40	DW	RT40,RT41,RT42,RT43,RT44,RT45,RT46,RT47,RT48,RT4900770 10B0 4F0B 550B 5B0B 610B 670B 6D0B 730B 8B0B 910B A30B 	PRT50	DW	RT50,RT51,RT52,RT53,RT54,RT55,RT56,RT57,RT58,RT5900771 10C4 A90B B30B BF0B E90B FE0B 040C 0A0C 100C 160C 1C0C 	PRT60	DW	RT60,RT61,RT62,RT63,RT64,RT65,RT66,RT67,RT68,RT6900772 10D8 220C 280C 2E0C 340C 3A0C 400C 460C 500C 5A0C 680C 	PRT70	DW	RT70,RT71,RT72,RT73,RT74,RT75,RT76,RT77,RT78,RT7900773 10EC 6E0C 740C 750C 7B0C 810C 870C A00C A80C B00C B80C 	PRT80	DW	RT80,RT81,RT82,RT83,RT84,RT85,RT86,RT87,RT88,RT8900774 1100 D10C D90C E10C E90C ED0C F10C F50C F90C FD0C 010D 	PRT90	DW	RT90,RT91,RT92,RT93,RT94,RT95,RT96,RT97,RT98,RT9900775 1114 020D 080D 0E0D 140D 1A0D 220D 2A0D 320D 380D 400D 	PRT100	DW	RT100,RT101,RT102,RT103,RT104,RT105,RT106,RT107,RT108,RT10900776 1128 480D 500D 540D 580D 5C0D 600D 640D 680D 730D BD0A 	PRT110	DW	RT110,RT111,RT112,RT113,RT114,RT115,RT116,RT117,RT118,RT11900777 113C C50B 7E0D 910D 980D 9F0D AE0D C10D C80D D30D CA0A 	PRT120	DW	RT120,RT121,RT122,RT123,RT124,RT125,RT126,RT127,RT128,RT12900778 1150 D80B DE0D EF0D F60D FD0D 0A0E 1A0E 210E 340E 410E 	PRT130	DW	RT130,RT131,RT132,RT133,RT134,RT135,RT136,RT137,RT138,RT13900779 1164 470E 4D0E 540E 580E 610E 660E 7D0B 6D0E 9B0B 760E 	PRT140	DW	RT140,RT141,RT142,RT143,RT144,RT145,RT146,RT147,RT148,RT14900780 1178 810E 8A0E 930E A00E 8D0C BE0C AC0E BB0E CA0E D90E 	PRT150	DW	RT150,RT151,RT152,RT153,RT154,RT155,RT156,RT157,RT158,RT15900781 118C DB0E DD0E EF0E F10E F30E 010F 0F0F 1F0F 290F 360F 	PRT160	DW	RT160,RT161,RT162,RT163,RT164,RT165,RT166,RT167,RT168,RT16900782 11A0 450F 580F 620F 720F 7C0F 8C0F 960F 9E0F B20F D10F 	PRT170	DW	RT170,RT171,RT172,RT173,RT174,RT175,RT176,RT177,RT178,RT17900783 11B4 A60F C50F A80F C70F AA0F C90F DB0F EB0F DD0F ED0F 	PRT180	DW	RT180,RT181,RT182,RT183,RT184,RT185,RT186,RT187,RT188,RT18900784 11C8 DF0F EF0F FB0F 0A10 1010 1610 2410 2E10 3410 4110 	PRT190	DW	RT190,RT191,RT192,RT193,RT194,RT195,RT196,RT197,RT198,RT19900785 11DC 4710 4C10 4C10 4C10 4C10 4C10 4C10 4C10 4C10 4C10 	PRT200	DW	RT200,RT201,RT202,RT203,RT204,RT205,RT206,RT207,RT208,RT20900786 11F0 	;00787 11F0 	;00788 11F0 		include	HIGY.RtSelTbl.inc00001 11F0 		Page00002 11F0 		subtitle	"RoutSelectTable:MainLine"00003 11F0 	;00004 11F0 	;Roote Selection table00005 11F0 	;00006 11F0 3F 	RouteSelectTable	DB	MLEnterBtn	;Throutle Btn00007 11F1 28 		DB	Blk300Btn	;RtBtn100008 11F2 80 		DB	0x80	;RtBtn200009 11F3 80 		DB	0x80	;RtBtn300010 11F4 01 		DB	ML300	;Route Number00011 11F5 	;00012 11F5 3F 		DB	MLEnterBtn	;Throutle Btn00013 11F6 28 		DB	Blk300Btn	;RtBtn100014 11F7 18 		DB	ManzinarBtn	;RtBtn200015 11F8 80 		DB	0x80	;RtBtn300016 11F9 02 		DB	ML300_MZR	;Route Number00017 11FA 	;00018 11FA 3F 		DB	MLEnterBtn	;Throutle Btn00019 11FB 28 		DB	Blk300Btn	;RtBtn100020 11FC 3C 		DB	Blk320Btn	;RtBtn200021 11FD 26 		DB	Blk310_1Btn	;RtBtn300022 11FE 0B 		DB	ML300_310_1_320	;Route Number00023 11FF 	;00024 11FF 3F 		DB	MLEnterBtn	;Throutle Btn00025 1200 28 		DB	Blk300Btn	;RtBtn100026 1201 3C 		DB	Blk320Btn	;RtBtn200027 1202 25 		DB	Blk310_2Btn	;RtBtn300028 1203 0C 		DB	ML300_310_2_320	;Route Number00029 1204 	;00030 1204 3F 		DB	MLEnterBtn	;Throutle Btn00031 1205 28 		DB	Blk300Btn	;RtBtn100032 1206 3C 		DB	Blk320Btn	;RtBtn200033 1207 2C 		DB	Blk312_1Btn	;RtBtn300034 1208 0D 		DB	ML300_312_1_320	;Route Number00035 1209 	;00036 1209 3F 		DB	MLEnterBtn	;Throutle Btn00037 120A 28 		DB	Blk300Btn	;RtBtn100038 120B 3C 		DB	Blk320Btn	;RtBtn200039 120C 23 		DB	Blk312_2Btn	;RtBtn300040 120D 0E 		DB	ML300_312_2_320	;Route NumberHighland Greeley PIC.asm   "RoutSelectTable:MainLine"                    Page: 60500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc00041 120E 	;00042 120E 3F 		DB	MLEnterBtn	;Throutle Btn00043 120F 28 		DB	Blk300Btn	;RtBtn100044 1210 33 		DB	Blk321Btn	;RtBtn200045 1211 2B 		DB	Blk311_1Btn	;RtBtn300046 1212 0F 		DB	ML300_311_1_321	;Route Number00047 1213 	;00048 1213 3F 		DB	MLEnterBtn	;Throutle Btn00049 1214 28 		DB	Blk300Btn	;RtBtn100050 1215 33 		DB	Blk321Btn	;RtBtn200051 1216 24 		DB	Blk311_2Btn	;RtBtn300052 1217 10 		DB	ML300_311_2_321	;Route Number00053 1218 	;00054 1218 3F 		DB	MLEnterBtn	;Throutle Btn00055 1219 28 		DB	Blk300Btn	;RtBtn100056 121A 33 		DB	Blk321Btn	;RtBtn200057 121B 2C 		DB	Blk312_1Btn	;RtBtn300058 121C 11 		DB	ML300_312_1_321	;Route Number00059 121D 	;00060 121D 3F 		DB	MLEnterBtn	;Throutle Btn00061 121E 28 		DB	Blk300Btn	;RtBtn100062 121F 33 		DB	Blk321Btn	;RtBtn200063 1220 23 		DB	Blk312_2Btn	;RtBtn300064 1221 12 		DB	ML300_312_2_321	;Route Number00065 1222 	;00066 1222 3F 		DB	MLEnterBtn	;Throutle Btn00067 1223 28 		DB	Blk300Btn	;RtBtn100068 1224 33 		DB	Blk321Btn	;RtBtn200069 1225 2F 		DB	Blk313_1Btn	;RtBtn300070 1226 13 		DB	ML300_313_1_321	;Route Number00071 1227 	;00072 1227 3F 		DB	MLEnterBtn	;Throutle Btn00073 1228 28 		DB	Blk300Btn	;RtBtn100074 1229 33 		DB	Blk321Btn	;RtBtn200075 122A 20 		DB	Blk313_2Btn	;RtBtn300076 122B 14 		DB	ML300_313_2_321	;Route Number00077 122C 	;00078 122C 3F 		DB	MLEnterBtn	;Throutle Btn00079 122D 28 		DB	Blk300Btn	;RtBtn100080 122E 26 		DB	Blk310_1Btn	;RtBtn200081 122F 80 		DB	0x80	;RtBtn300082 1230 03 		DB	ML300_310_1	;Route Number00083 1231 	;00084 1231 3F 		DB	MLEnterBtn	;Throutle Btn00085 1232 28 		DB	Blk300Btn	;RtBtn100086 1233 25 		DB	Blk310_2Btn	;RtBtn200087 1234 80 		DB	0x80	;RtBtn300088 1235 04 		DB	ML300_310_2	;Route Number00089 1236 	;00090 1236 3F 		DB	MLEnterBtn	;Throutle Btn00091 1237 28 		DB	Blk300Btn	;RtBtn100092 1238 2B 		DB	Blk311_1Btn	;RtBtn200093 1239 80 		DB	0x80	;RtBtn300094 123A 05 		DB	ML300_311_1	;Route Number00095 123B 	;00096 123B 3F 		DB	MLEnterBtn	;Throutle Btn00097 123C 28 		DB	Blk300Btn	;RtBtn100098 123D 24 		DB	Blk311_2Btn	;RtBtn200099 123E 80 		DB	0x80	;RtBtn300100 123F 06 		DB	ML300_311_2	;Route Number00101 1240 	;00102 1240 3F 		DB	MLEnterBtn	;Throutle Btn00103 1241 28 		DB	Blk300Btn	;RtBtn100104 1242 2C 		DB	Blk312_1Btn	;RtBtn200105 1243 80 		DB	0x80	;RtBtn300106 1244 07 		DB	ML300_312_1	;Route Number00107 1245 	;00108 1245 3F 		DB	MLEnterBtn	;Throutle Btn00109 1246 28 		DB	Blk300Btn	;RtBtn100110 1247 23 		DB	Blk312_2Btn	;RtBtn200111 1248 80 		DB	0x80	;RtBtn300112 1249 08 		DB	ML300_312_2	;Route Number00113 124A 	;00114 124A 3F 		DB	MLEnterBtn	;Throutle Btn00115 124B 28 		DB	Blk300Btn	;RtBtn100116 124C 2F 		DB	Blk313_1Btn	;RtBtn200117 124D 80 		DB	0x80	;RtBtn300118 124E 09 		DB	ML300_313_1	;Route Number00119 124F 	;00120 124F 3F 		DB	MLEnterBtn	;Throutle Btn00121 1250 28 		DB	Blk300Btn	;RtBtn100122 1251 20 		DB	Blk313_2Btn	;RtBtn200123 1252 80 		DB	0x80	;RtBtn300124 1253 0A 		DB	ML300_313_2	;Route Number00125 1254 	;00126 1254 3F 		DB	MLEnterBtn	;Throutle Btn00127 1255 3C 		DB	Blk320Btn	;RtBtn100128 1256 80 		DB	0x80	;RtBtn200129 1257 80 		DB	0x80	;RtBtn300130 1258 75 		DB	ML320	;Route Number00131 1259 	;00132 1259 3F 		DB	MLEnterBtn	;Throutle Btn00133 125A 3C 		DB	Blk320Btn	;RtBtn100134 125B 26 		DB	Blk310_1Btn	;RtBtn200135 125C 80 		DB	0x80	;RtBtn300136 125D 30 		DB	ML320_310_1	;Route Number00137 125E 	;00138 125E 3F 		DB	MLEnterBtn	;Throutle Btn00139 125F 3C 		DB	Blk320Btn	;RtBtn100140 1260 25 		DB	Blk310_2Btn	;RtBtn2Highland Greeley PIC.asm   "RoutSelectTable:MainLine"                    Page: 61500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc00141 1261 80 		DB	0x80	;RtBtn300142 1262 31 		DB	ML320_310_2	;Route Number00143 1263 	;00144 1263 3F 		DB	MLEnterBtn	;Throutle Btn00145 1264 3C 		DB	Blk320Btn	;RtBtn100146 1265 2C 		DB	Blk312_1Btn	;RtBtn200147 1266 80 		DB	0x80	;RtBtn300148 1267 32 		DB	ML320_312_1	;Route Number00149 1268 	;00150 1268 3F 		DB	MLEnterBtn	;Throutle Btn00151 1269 3C 		DB	Blk320Btn	;RtBtn100152 126A 23 		DB	Blk312_2Btn	;RtBtn200153 126B 80 		DB	0x80	;RtBtn300154 126C 33 		DB	ML320_312_2	;Route Number00155 126D 	;00156 126D 3F 		DB	MLEnterBtn	;Throutle Btn00157 126E 33 		DB	Blk321Btn	;RtBtn100158 126F 80 		DB	0x80	;RtBtn200159 1270 80 		DB	0x80	;RtBtn300160 1271 76 		DB	ML321	;Route Number00161 1272 	;00162 1272 3F 		DB	MLEnterBtn	;Throutle Btn00163 1273 33 		DB	Blk321Btn	;RtBtn100164 1274 2B 		DB	Blk311_1Btn	;RtBtn200165 1275 80 		DB	0x80	;RtBtn300166 1276 40 		DB	ML321_311_1	;Route Number00167 1277 	;00168 1277 3F 		DB	MLEnterBtn	;Throutle Btn00169 1278 33 		DB	Blk321Btn	;RtBtn100170 1279 24 		DB	Blk311_2Btn	;RtBtn200171 127A 80 		DB	0x80	;RtBtn300172 127B 41 		DB	ML321_311_2	;Route Number00173 127C 	;00174 127C 3F 		DB	MLEnterBtn	;Throutle Btn00175 127D 33 		DB	Blk321Btn	;RtBtn100176 127E 2C 		DB	Blk312_1Btn	;RtBtn200177 127F 80 		DB	0x80	;RtBtn300178 1280 42 		DB	ML321_312_1	;Route Number00179 1281 	;00180 1281 3F 		DB	MLEnterBtn	;Throutle Btn00181 1282 33 		DB	Blk321Btn	;RtBtn100182 1283 23 		DB	Blk312_2Btn	;RtBtn200183 1284 80 		DB	0x80	;RtBtn300184 1285 43 		DB	ML321_312_2	;Route Number00185 1286 	;00186 1286 3F 		DB	MLEnterBtn	;Throutle Btn00187 1287 33 		DB	Blk321Btn	;RtBtn100188 1288 2F 		DB	Blk313_1Btn	;RtBtn200189 1289 80 		DB	0x80	;RtBtn300190 128A 44 		DB	ML321_313_1	;Route Number00191 128B 	;00192 128B 3F 		DB	MLEnterBtn	;Throutle Btn00193 128C 33 		DB	Blk321Btn	;RtBtn100194 128D 20 		DB	Blk313_2Btn	;RtBtn200195 128E 80 		DB	0x80	;RtBtn300196 128F 45 		DB	ML321_313_2	;Route Number00197 1290 	;00198 1290 3F 		DB	MLEnterBtn	;Throutle Btn00199 1291 26 		DB	Blk310_1Btn	;RtBtn100200 1292 80 		DB	0x80	;RtBtn200201 1293 80 		DB	0x80	;RtBtn300202 1294 77 		DB	ML310_1	;Route Number00203 1295 	;00204 1295 3F 		DB	MLEnterBtn	;Throutle Btn00205 1296 25 		DB	Blk310_2Btn	;RtBtn100206 1297 80 		DB	0x80	;RtBtn200207 1298 80 		DB	0x80	;RtBtn300208 1299 78 		DB	ML310_2	;Route Number00209 129A 	;00210 129A 3F 		DB	MLEnterBtn	;Throutle Btn00211 129B 2B 		DB	Blk311_1Btn	;RtBtn100212 129C 80 		DB	0x80	;RtBtn200213 129D 80 		DB	0x80	;RtBtn300214 129E 79 		DB	ML311_1	;Route Number00215 129F 	;00216 129F 3F 		DB	MLEnterBtn	;Throutle Btn00217 12A0 24 		DB	Blk311_2Btn	;RtBtn100218 12A1 80 		DB	0x80	;RtBtn200219 12A2 80 		DB	0x80	;RtBtn300220 12A3 7A 		DB	ML311_2	;Route Number00221 12A4 	;00222 12A4 3F 		DB	MLEnterBtn	;Throutle Btn00223 12A5 2C 		DB	Blk312_1Btn	;RtBtn100224 12A6 80 		DB	0x80	;RtBtn200225 12A7 80 		DB	0x80	;RtBtn300226 12A8 7B 		DB	ML312_1	;Route Number00227 12A9 	;00228 12A9 3F 		DB	MLEnterBtn	;Throutle Btn00229 12AA 23 		DB	Blk312_2Btn	;RtBtn100230 12AB 80 		DB	0x80	;RtBtn200231 12AC 80 		DB	0x80	;RtBtn300232 12AD 7C 		DB	ML312_2	;Route Number00233 12AE 	;00234 12AE 3F 		DB	MLEnterBtn	;Throutle Btn00235 12AF 2F 		DB	Blk313_1Btn	;RtBtn100236 12B0 80 		DB	0x80	;RtBtn200237 12B1 80 		DB	0x80	;RtBtn300238 12B2 7D 		DB	ML313_1	;Route Number00239 12B3 	;00240 12B3 3F 		DB	MLEnterBtn	;Throutle BtnHighland Greeley PIC.asm   "RoutSelectTable:MainLine"                    Page: 62500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc00241 12B4 20 		DB	Blk313_2Btn	;RtBtn100242 12B5 80 		DB	0x80	;RtBtn200243 12B6 80 		DB	0x80	;RtBtn300244 12B7 7E 		DB	ML313_2	;Route Number00245 12B8 	;00246 12B8 		subtitle	"RoutSelectTable:Greeley"00247 12B8 		Page00248 12B8 	;00249 12B8 	;Greely Routes Start Here.....00250 12B8 3E 		DB	LocalEnterBtn	;Throutle Btn00251 12B9 28 		DB	Blk300Btn	;RtBtn100252 12BA 80 		DB	0x80	;RtBtn200253 12BB 80 		DB	0x80	;RtBtn300254 12BC 16 		DB	GY300	;Route Number00255 12BD 	;00256 12BD 3E 		DB	LocalEnterBtn	;Throutle Btn00257 12BE 28 		DB	Blk300Btn	;RtBtn100258 12BF 3B 		DB	H2Btn	;RtBtn200259 12C0 80 		DB	0x80	;RtBtn300260 12C1 23 		DB	GY300_310_1_H2	;Route Number00261 12C2 	;00262 12C2 3E 		DB	LocalEnterBtn	;Throutle Btn00263 12C3 28 		DB	Blk300Btn	;RtBtn100264 12C4 34 		DB	H3Btn	;RtBtn200265 12C5 80 		DB	0x80	;RtBtn300266 12C6 24 		DB	GY300_310_1_H3	;Route Number00267 12C7 	;00268 12C7 3E 		DB	LocalEnterBtn	;Throutle Btn00269 12C8 28 		DB	Blk300Btn	;RtBtn100270 12C9 3D 		DB	H4Btn	;RtBtn200271 12CA 80 		DB	0x80	;RtBtn300272 12CB 25 		DB	GY300_310_1_H4	;Route Number00273 12CC 	;00274 12CC 3E 		DB	LocalEnterBtn	;Throutle Btn00275 12CD 28 		DB	Blk300Btn	;RtBtn100276 12CE 21 		DB	G4Btn	;RtBtn200277 12CF 80 		DB	0x80	;RtBtn300278 12D0 89 		DB	GY300_G4	;Route Number00279 12D1 	;00280 12D1 3E 		DB	LocalEnterBtn	;Throutle Btn00281 12D2 28 		DB	Blk300Btn	;RtBtn100282 12D3 2F 		DB	Blk313_1Btn	;RtBtn200283 12D4 21 		DB	G4Btn	;RtBtn300284 12D5 89 		DB	GY300_G4	;Route Number00285 12D6 	;00286 12D6 3E 		DB	LocalEnterBtn	;Throutle Btn00287 12D7 28 		DB	Blk300Btn	;RtBtn100288 12D8 18 		DB	ManzinarBtn	;RtBtn200289 12D9 80 		DB	0x80	;RtBtn300290 12DA 17 		DB	GY300_MZR	;Route Number00291 12DB 	;00292 12DB 3E 		DB	LocalEnterBtn	;Throutle Btn00293 12DC 28 		DB	Blk300Btn	;RtBtn100294 12DD 3C 		DB	Blk320Btn	;RtBtn200295 12DE 26 		DB	Blk310_1Btn	;RtBtn300296 12DF 26 		DB	GY300_310_1_320	;Route Number00297 12E0 	;00298 12E0 3E 		DB	LocalEnterBtn	;Throutle Btn00299 12E1 28 		DB	Blk300Btn	;RtBtn100300 12E2 3C 		DB	Blk320Btn	;RtBtn200301 12E3 25 		DB	Blk310_2Btn	;RtBtn300302 12E4 27 		DB	GY300_310_2_320	;Route Number00303 12E5 	;00304 12E5 3E 		DB	LocalEnterBtn	;Throutle Btn00305 12E6 28 		DB	Blk300Btn	;RtBtn100306 12E7 3C 		DB	Blk320Btn	;RtBtn200307 12E8 2C 		DB	Blk312_1Btn	;RtBtn300308 12E9 28 		DB	GY300_312_1_320	;Route Number00309 12EA 	;00310 12EA 3E 		DB	LocalEnterBtn	;Throutle Btn00311 12EB 28 		DB	Blk300Btn	;RtBtn100312 12EC 3C 		DB	Blk320Btn	;RtBtn200313 12ED 23 		DB	Blk312_2Btn	;RtBtn300314 12EE 29 		DB	GY300_312_2_320	;Route Number00315 12EF 	;00316 12EF 3E 		DB	LocalEnterBtn	;Throutle Btn00317 12F0 28 		DB	Blk300Btn	;RtBtn100318 12F1 33 		DB	Blk321Btn	;RtBtn200319 12F2 2B 		DB	Blk311_1Btn	;RtBtn300320 12F3 2A 		DB	GY300_311_1_321	;Route Number00321 12F4 	;00322 12F4 3E 		DB	LocalEnterBtn	;Throutle Btn00323 12F5 28 		DB	Blk300Btn	;RtBtn100324 12F6 33 		DB	Blk321Btn	;RtBtn200325 12F7 24 		DB	Blk311_2Btn	;RtBtn300326 12F8 2B 		DB	GY300_311_2_321	;Route Number00327 12F9 	;00328 12F9 3E 		DB	LocalEnterBtn	;Throutle Btn00329 12FA 28 		DB	Blk300Btn	;RtBtn100330 12FB 33 		DB	Blk321Btn	;RtBtn200331 12FC 2C 		DB	Blk312_1Btn	;RtBtn300332 12FD 2C 		DB	GY300_312_1_321	;Route Number00333 12FE 	;00334 12FE 3E 		DB	LocalEnterBtn	;Throutle Btn00335 12FF 28 		DB	Blk300Btn	;RtBtn100336 1300 33 		DB	Blk321Btn	;RtBtn200337 1301 23 		DB	Blk312_2Btn	;RtBtn300338 1302 2D 		DB	GY300_312_2_321	;Route Number00339 1303 	;Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 63500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc00340 1303 3E 		DB	LocalEnterBtn	;Throutle Btn00341 1304 28 		DB	Blk300Btn	;RtBtn100342 1305 33 		DB	Blk321Btn	;RtBtn200343 1306 2F 		DB	Blk313_1Btn	;RtBtn300344 1307 2E 		DB	GY300_313_1_321	;Route Number00345 1308 	;00346 1308 3E 		DB	LocalEnterBtn	;Throutle Btn00347 1309 28 		DB	Blk300Btn	;RtBtn100348 130A 33 		DB	Blk321Btn	;RtBtn200349 130B 20 		DB	Blk313_2Btn	;RtBtn300350 130C 2F 		DB	GY300_313_2_321	;Route Number00351 130D 	;00352 130D 3E 		DB	LocalEnterBtn	;Throutle Btn00353 130E 28 		DB	Blk300Btn	;RtBtn100354 130F 26 		DB	Blk310_1Btn	;RtBtn200355 1310 80 		DB	0x80	;RtBtn300356 1311 18 		DB	GY300_310_1	;Route Number00357 1312 	;00358 1312 3E 		DB	LocalEnterBtn	;Throutle Btn00359 1313 28 		DB	Blk300Btn	;RtBtn100360 1314 26 		DB	Blk310_1Btn	;RtBtn200361 1315 3B 		DB	H2Btn	;RtBtn300362 1316 23 		DB	GY300_310_1_H2	;Route Number00363 1317 	;00364 1317 3E 		DB	LocalEnterBtn	;Throutle Btn00365 1318 28 		DB	Blk300Btn	;RtBtn100366 1319 26 		DB	Blk310_1Btn	;RtBtn200367 131A 34 		DB	H3Btn	;RtBtn300368 131B 24 		DB	GY300_310_1_H3	;Route Number00369 131C 	;00370 131C 3E 		DB	LocalEnterBtn	;Throutle Btn00371 131D 28 		DB	Blk300Btn	;RtBtn100372 131E 26 		DB	Blk310_1Btn	;RtBtn200373 131F 3D 		DB	H4Btn	;RtBtn300374 1320 25 		DB	GY300_310_1_H4	;Route Number00375 1321 	;00376 1321 3E 		DB	LocalEnterBtn	;Throutle Btn00377 1322 28 		DB	Blk300Btn	;RtBtn100378 1323 25 		DB	Blk310_2Btn	;RtBtn200379 1324 80 		DB	0x80	;RtBtn300380 1325 19 		DB	GY300_310_2	;Route Number00381 1326 	;00382 1326 3E 		DB	LocalEnterBtn	;Throutle Btn00383 1327 28 		DB	Blk300Btn	;RtBtn100384 1328 2B 		DB	Blk311_1Btn	;RtBtn200385 1329 80 		DB	0x80	;RtBtn300386 132A 1A 		DB	GY300_311_1	;Route Number00387 132B 	;00388 132B 3E 		DB	LocalEnterBtn	;Throutle Btn00389 132C 28 		DB	Blk300Btn	;RtBtn100390 132D 24 		DB	Blk311_2Btn	;RtBtn200391 132E 80 		DB	0x80	;RtBtn300392 132F 1B 		DB	GY300_311_2	;Route Number00393 1330 	;00394 1330 3E 		DB	LocalEnterBtn	;Throutle Btn00395 1331 28 		DB	Blk300Btn	;RtBtn100396 1332 2C 		DB	Blk312_1Btn	;RtBtn200397 1333 80 		DB	0x80	;RtBtn300398 1334 1C 		DB	GY300_312_1	;Route Number00399 1335 	;00400 1335 3E 		DB	LocalEnterBtn	;Throutle Btn00401 1336 28 		DB	Blk300Btn	;RtBtn100402 1337 23 		DB	Blk312_2Btn	;RtBtn200403 1338 80 		DB	0x80	;RtBtn300404 1339 1D 		DB	GY300_312_2	;Route Number00405 133A 	;00406 133A 3E 		DB	LocalEnterBtn	;Throutle Btn00407 133B 28 		DB	Blk300Btn	;RtBtn100408 133C 2F 		DB	Blk313_1Btn	;RtBtn200409 133D 80 		DB	0x80	;RtBtn300410 133E 1E 		DB	GY300_313_1	;Route Number00411 133F 	;00412 133F 3E 		DB	LocalEnterBtn	;Throutle Btn00413 1340 28 		DB	Blk300Btn	;RtBtn100414 1341 20 		DB	Blk313_2Btn	;RtBtn200415 1342 80 		DB	0x80	;RtBtn300416 1343 1F 		DB	GY300_313_2	;Route Number00417 1344 	;00418 1344 3E 		DB	LocalEnterBtn	;Throutle Btn00419 1345 3C 		DB	Blk320Btn	;RtBtn100420 1346 80 		DB	0x80	;RtBtn200421 1347 80 		DB	0x80	;RtBtn300422 1348 7F 		DB	GY320	;Route Number00423 1349 	;00424 1349 3E 		DB	LocalEnterBtn	;Throutle Btn00425 134A 3C 		DB	Blk320Btn	;RtBtn100426 134B 2A 		DB	H1Btn	;RtBtn200427 134C 80 		DB	0x80	;RtBtn300428 134D 3C 		DB	GY320_H1	;Route Number00429 134E 	;00430 134E 3E 		DB	LocalEnterBtn	;Throutle Btn00431 134F 3C 		DB	Blk320Btn	;RtBtn100432 1350 2D 		DB	G1Btn	;RtBtn200433 1351 80 		DB	0x80	;RtBtn300434 1352 38 		DB	GY320_G1	;Route Number00435 1353 	;00436 1353 3E 		DB	LocalEnterBtn	;Throutle Btn00437 1354 3C 		DB	Blk320Btn	;RtBtn100438 1355 22 		DB	G2Btn	;RtBtn200439 1356 80 		DB	0x80	;RtBtn3Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 64500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc00440 1357 3A 		DB	GY320_G2	;Route Number00441 1358 	;00442 1358 3E 		DB	LocalEnterBtn	;Throutle Btn00443 1359 3C 		DB	Blk320Btn	;RtBtn100444 135A 29 		DB	H5Btn	;RtBtn200445 135B 80 		DB	0x80	;RtBtn300446 135C 3E 		DB	GY320_310_1_H5	;Route Number00447 135D 	;00448 135D 3E 		DB	LocalEnterBtn	;Throutle Btn00449 135E 3C 		DB	Blk320Btn	;RtBtn100450 135F 26 		DB	Blk310_1Btn	;RtBtn200451 1360 80 		DB	0x80	;RtBtn300452 1361 34 		DB	GY320_310_1	;Route Number00453 1362 	;00454 1362 3E 		DB	LocalEnterBtn	;Throutle Btn00455 1363 3C 		DB	Blk320Btn	;RtBtn100456 1364 26 		DB	Blk310_1Btn	;RtBtn200457 1365 29 		DB	H5Btn	;RtBtn300458 1366 3E 		DB	GY320_310_1_H5	;Route Number00459 1367 	;00460 1367 3E 		DB	LocalEnterBtn	;Throutle Btn00461 1368 3C 		DB	Blk320Btn	;RtBtn100462 1369 25 		DB	Blk310_2Btn	;RtBtn200463 136A 80 		DB	0x80	;RtBtn300464 136B 35 		DB	GY320_310_2	;Route Number00465 136C 	;00466 136C 3E 		DB	LocalEnterBtn	;Throutle Btn00467 136D 3C 		DB	Blk320Btn	;RtBtn100468 136E 25 		DB	Blk310_2Btn	;RtBtn200469 136F 29 		DB	H5Btn	;RtBtn300470 1370 3F 		DB	GY320_310_2_H5	;Route Number00471 1371 	;00472 1371 3E 		DB	LocalEnterBtn	;Throutle Btn00473 1372 3C 		DB	Blk320Btn	;RtBtn100474 1373 2C 		DB	Blk312_1Btn	;RtBtn200475 1374 80 		DB	0x80	;RtBtn300476 1375 36 		DB	GY320_312_1	;Route Number00477 1376 	;00478 1376 3E 		DB	LocalEnterBtn	;Throutle Btn00479 1377 3C 		DB	Blk320Btn	;RtBtn100480 1378 23 		DB	Blk312_2Btn	;RtBtn200481 1379 80 		DB	0x80	;RtBtn300482 137A 37 		DB	GY320_312_2	;Route Number00483 137B 	;00484 137B 3E 		DB	LocalEnterBtn	;Throutle Btn00485 137C 33 		DB	Blk321Btn	;RtBtn100486 137D 80 		DB	0x80	;RtBtn200487 137E 80 		DB	0x80	;RtBtn300488 137F 80 		DB	GY321	;Route Number00489 1380 	;00490 1380 3E 		DB	LocalEnterBtn	;Throutle Btn00491 1381 33 		DB	Blk321Btn	;RtBtn100492 1382 2B 		DB	Blk311_1Btn	;RtBtn200493 1383 80 		DB	0x80	;RtBtn300494 1384 46 		DB	GY321_311_1	;Route Number00495 1385 	;00496 1385 3E 		DB	LocalEnterBtn	;Throutle Btn00497 1386 33 		DB	Blk321Btn	;RtBtn100498 1387 24 		DB	Blk311_2Btn	;RtBtn200499 1388 80 		DB	0x80	;RtBtn300500 1389 47 		DB	GY321_311_2	;Route Number00501 138A 	;00502 138A 3E 		DB	LocalEnterBtn	;Throutle Btn00503 138B 33 		DB	Blk321Btn	;RtBtn100504 138C 2C 		DB	Blk312_1Btn	;RtBtn200505 138D 80 		DB	0x80	;RtBtn300506 138E 48 		DB	GY321_312_1	;Route Number00507 138F 	;00508 138F 3E 		DB	LocalEnterBtn	;Throutle Btn00509 1390 33 		DB	Blk321Btn	;RtBtn100510 1391 23 		DB	Blk312_2Btn	;RtBtn200511 1392 80 		DB	0x80	;RtBtn300512 1393 49 		DB	GY321_312_2	;Route Number00513 1394 	;00514 1394 3E 		DB	LocalEnterBtn	;Throutle Btn00515 1395 33 		DB	Blk321Btn	;RtBtn100516 1396 2D 		DB	G1Btn	;RtBtn200517 1397 80 		DB	0x80	;RtBtn300518 1398 4C 		DB	GY321_G1	;Route Number00519 1399 	;00520 1399 3E 		DB	LocalEnterBtn	;Throutle Btn00521 139A 33 		DB	Blk321Btn	;RtBtn100522 139B 22 		DB	G2Btn	;RtBtn200523 139C 80 		DB	0x80	;RtBtn300524 139D 4D 		DB	GY321_G2	;Route Number00525 139E 	;00526 139E 3E 		DB	LocalEnterBtn	;Throutle Btn00527 139F 33 		DB	Blk321Btn	;RtBtn100528 13A0 2F 		DB	Blk313_1Btn	;RtBtn200529 13A1 80 		DB	0x80	;RtBtn300530 13A2 4A 		DB	GY321_313_1	;Route Number00531 13A3 	;00532 13A3 3E 		DB	LocalEnterBtn	;Throutle Btn00533 13A4 33 		DB	Blk321Btn	;RtBtn100534 13A5 20 		DB	Blk313_2Btn	;RtBtn200535 13A6 80 		DB	0x80	;RtBtn300536 13A7 4B 		DB	GY321_313_2	;Route Number00537 13A8 	;00538 13A8 3E 		DB	LocalEnterBtn	;Throutle Btn00539 13A9 26 		DB	Blk310_1Btn	;RtBtn1Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 65500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc00540 13AA 80 		DB	0x80	;RtBtn200541 13AB 80 		DB	0x80	;RtBtn300542 13AC 81 		DB	GY310_1	;Route Number00543 13AD 	;00544 13AD 3E 		DB	LocalEnterBtn	;Throutle Btn00545 13AE 26 		DB	Blk310_1Btn	;RtBtn100546 13AF 3B 		DB	H2Btn	;RtBtn200547 13B0 80 		DB	0x80	;RtBtn300548 13B1 8A 		DB	GY310_1_H2	;Route Number00549 13B2 	;00550 13B2 3E 		DB	LocalEnterBtn	;Throutle Btn00551 13B3 26 		DB	Blk310_1Btn	;RtBtn100552 13B4 34 		DB	H3Btn	;RtBtn200553 13B5 80 		DB	0x80	;RtBtn300554 13B6 8B 		DB	GY310_1_H3	;Route Number00555 13B7 	;00556 13B7 3E 		DB	LocalEnterBtn	;Throutle Btn00557 13B8 26 		DB	Blk310_1Btn	;RtBtn100558 13B9 3D 		DB	H4Btn	;RtBtn200559 13BA 80 		DB	0x80	;RtBtn300560 13BB 8C 		DB	GY310_1_H4	;Route Number00561 13BC 	;00562 13BC 3E 		DB	LocalEnterBtn	;Throutle Btn00563 13BD 26 		DB	Blk310_1Btn	;RtBtn100564 13BE 29 		DB	H5Btn	;RtBtn200565 13BF 80 		DB	0x80	;RtBtn300566 13C0 8D 		DB	GY310_1_H5	;Route Number00567 13C1 	;00568 13C1 3E 		DB	LocalEnterBtn	;Throutle Btn00569 13C2 25 		DB	Blk310_2Btn	;RtBtn100570 13C3 80 		DB	0x80	;RtBtn200571 13C4 80 		DB	0x80	;RtBtn300572 13C5 82 		DB	GY310_2	;Route Number00573 13C6 	;00574 13C6 3E 		DB	LocalEnterBtn	;Throutle Btn00575 13C7 25 		DB	Blk310_2Btn	;RtBtn100576 13C8 29 		DB	H5Btn	;RtBtn200577 13C9 80 		DB	0x80	;RtBtn300578 13CA 8E 		DB	GY310_2_H5	;Route Number00579 13CB 	;00580 13CB 3E 		DB	LocalEnterBtn	;Throutle Btn00581 13CC 2B 		DB	Blk311_1Btn	;RtBtn100582 13CD 80 		DB	0x80	;RtBtn200583 13CE 80 		DB	0x80	;RtBtn300584 13CF 83 		DB	GY311_1	;Route Number00585 13D0 	;00586 13D0 3E 		DB	LocalEnterBtn	;Throutle Btn00587 13D1 24 		DB	Blk311_2Btn	;RtBtn100588 13D2 80 		DB	0x80	;RtBtn200589 13D3 80 		DB	0x80	;RtBtn300590 13D4 84 		DB	GY311_2	;Route Number00591 13D5 	;00592 13D5 3E 		DB	LocalEnterBtn	;Throutle Btn00593 13D6 2C 		DB	Blk312_1Btn	;RtBtn100594 13D7 80 		DB	0x80	;RtBtn200595 13D8 80 		DB	0x80	;RtBtn300596 13D9 85 		DB	GY312_1	;Route Number00597 13DA 	;00598 13DA 3E 		DB	LocalEnterBtn	;Throutle Btn00599 13DB 23 		DB	Blk312_2Btn	;RtBtn100600 13DC 80 		DB	0x80	;RtBtn200601 13DD 80 		DB	0x80	;RtBtn300602 13DE 86 		DB	GY312_2	;Route Number00603 13DF 	;00604 13DF 3E 		DB	LocalEnterBtn	;Throutle Btn00605 13E0 2F 		DB	Blk313_1Btn	;RtBtn100606 13E1 80 		DB	0x80	;RtBtn200607 13E2 80 		DB	0x80	;RtBtn300608 13E3 87 		DB	GY313_1	;Route Number00609 13E4 	;00610 13E4 3E 		DB	LocalEnterBtn	;Throutle Btn00611 13E5 20 		DB	Blk313_2Btn	;RtBtn100612 13E6 80 		DB	0x80	;RtBtn200613 13E7 80 		DB	0x80	;RtBtn300614 13E8 88 		DB	GY313_2	;Route Number00615 13E9 	;00616 13E9 3E 		DB	LocalEnterBtn	;Throutle Btn00617 13EA 3C 		DB	Blk320Btn	;RtBtn100618 13EB 27 		DB	GYLBtn	;RtBtn200619 13EC 2D 		DB	G1Btn	;RtBtn300620 13ED 39 		DB	GY320_G1_GYL	;Route Number00621 13EE 	;00622 13EE 3E 		DB	LocalEnterBtn	;Throutle Btn00623 13EF 3C 		DB	Blk320Btn	;RtBtn100624 13F0 27 		DB	GYLBtn	;RtBtn200625 13F1 22 		DB	G2Btn	;RtBtn300626 13F2 3B 		DB	GY320_G2_GYL	;Route Number00627 13F3 	;00628 13F3 3E 		DB	LocalEnterBtn	;Throutle Btn00629 13F4 3C 		DB	Blk320Btn	;RtBtn100630 13F5 27 		DB	GYLBtn	;RtBtn200631 13F6 2A 		DB	H1Btn	;RtBtn300632 13F7 3D 		DB	GY320_H1_GYL	;Route Number00633 13F8 	;00634 13F8 3E 		DB	LocalEnterBtn	;Throutle Btn00635 13F9 33 		DB	Blk321Btn	;RtBtn100636 13FA 2F 		DB	Blk313_1Btn	;RtBtn200637 13FB 27 		DB	GYLBtn	;RtBtn300638 13FC 4E 		DB	GY321_313_1_GYL	;Route Number00639 13FD 	;Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 66500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc00640 13FD 3E 		DB	LocalEnterBtn	;Throutle Btn00641 13FE 33 		DB	Blk321Btn	;RtBtn100642 13FF 27 		DB	GYLBtn	;RtBtn200643 1400 2D 		DB	G1Btn	;RtBtn300644 1401 4F 		DB	GY321_G1_GYL	;Route Number00645 1402 	;00646 1402 3E 		DB	LocalEnterBtn	;Throutle Btn00647 1403 33 		DB	Blk321Btn	;RtBtn100648 1404 27 		DB	GYLBtn	;RtBtn200649 1405 22 		DB	G2Btn	;RtBtn300650 1406 50 		DB	GY321_G2_GYL	;Route Number00651 1407 	;00652 1407 3E 		DB	LocalEnterBtn	;Throutle Btn00653 1408 33 		DB	Blk321Btn	;RtBtn100654 1409 20 		DB	Blk313_2Btn	;RtBtn200655 140A 10 		DB	G6Btn	;RtBtn300656 140B 52 		DB	GY321_G6	;Route Number00657 140C 	;00658 140C 3E 		DB	LocalEnterBtn	;Throutle Btn00659 140D 33 		DB	Blk321Btn	;RtBtn100660 140E 20 		DB	Blk313_2Btn	;RtBtn200661 140F 0F 		DB	G7Btn	;RtBtn300662 1410 53 		DB	GY321_G7	;Route Number00663 1411 	;00664 1411 3E 		DB	LocalEnterBtn	;Throutle Btn00665 1412 33 		DB	Blk321Btn	;RtBtn100666 1413 20 		DB	Blk313_2Btn	;RtBtn200667 1414 00 		DB	G8Btn	;RtBtn300668 1415 54 		DB	GY321_G8	;Route Number00669 1416 	;00670 1416 3E 		DB	LocalEnterBtn	;Throutle Btn00671 1417 33 		DB	Blk321Btn	;RtBtn100672 1418 20 		DB	Blk313_2Btn	;RtBtn200673 1419 08 		DB	G9ABtn	;RtBtn300674 141A 55 		DB	GY321_G9A	;Route Number00675 141B 	;00676 141B 3E 		DB	LocalEnterBtn	;Throutle Btn00677 141C 33 		DB	Blk321Btn	;RtBtn100678 141D 20 		DB	Blk313_2Btn	;RtBtn200679 141E 04 		DB	G9BBtn	;RtBtn300680 141F 56 		DB	GY321_G9B	;Route Number00681 1420 	;00682 1420 3E 		DB	LocalEnterBtn	;Throutle Btn00683 1421 33 		DB	Blk321Btn	;RtBtn100684 1422 20 		DB	Blk313_2Btn	;RtBtn200685 1423 0E 		DB	G9CBtn	;RtBtn300686 1424 57 		DB	GY321_G9C	;Route Number00687 1425 	;00688 1425 3E 		DB	LocalEnterBtn	;Throutle Btn00689 1426 33 		DB	Blk321Btn	;RtBtn100690 1427 20 		DB	Blk313_2Btn	;RtBtn200691 1428 03 		DB	G9DBtn	;RtBtn300692 1429 58 		DB	GY321_G9D	;Route Number00693 142A 	;00694 142A 3E 		DB	LocalEnterBtn	;Throutle Btn00695 142B 33 		DB	Blk321Btn	;RtBtn100696 142C 20 		DB	Blk313_2Btn	;RtBtn200697 142D 10 		DB	G6Btn	;RtBtn300698 142E 52 		DB	GY321_G6	;Route Number00699 142F 	;00700 142F 3E 		DB	LocalEnterBtn	;Throutle Btn00701 1430 33 		DB	Blk321Btn	;RtBtn100702 1431 0F 		DB	G7Btn	;RtBtn200703 1432 80 		DB	0x80	;RtBtn300704 1433 53 		DB	GY321_G7	;Route Number00705 1434 	;00706 1434 3E 		DB	LocalEnterBtn	;Throutle Btn00707 1435 33 		DB	Blk321Btn	;RtBtn100708 1436 00 		DB	G8Btn	;RtBtn200709 1437 80 		DB	0x80	;RtBtn300710 1438 54 		DB	GY321_G8	;Route Number00711 1439 	;00712 1439 3E 		DB	LocalEnterBtn	;Throutle Btn00713 143A 33 		DB	Blk321Btn	;RtBtn100714 143B 08 		DB	G9ABtn	;RtBtn200715 143C 80 		DB	0x80	;RtBtn300716 143D 55 		DB	GY321_G9A	;Route Number00717 143E 	;00718 143E 3E 		DB	LocalEnterBtn	;Throutle Btn00719 143F 33 		DB	Blk321Btn	;RtBtn100720 1440 04 		DB	G9BBtn	;RtBtn200721 1441 80 		DB	0x80	;RtBtn300722 1442 56 		DB	GY321_G9B	;Route Number00723 1443 	;00724 1443 3E 		DB	LocalEnterBtn	;Throutle Btn00725 1444 33 		DB	Blk321Btn	;RtBtn100726 1445 0E 		DB	G9CBtn	;RtBtn200727 1446 80 		DB	0x80	;RtBtn300728 1447 57 		DB	GY321_G9C	;Route Number00729 1448 	;00730 1448 3E 		DB	LocalEnterBtn	;Throutle Btn00731 1449 33 		DB	Blk321Btn	;RtBtn100732 144A 03 		DB	G9DBtn	;RtBtn200733 144B 80 		DB	0x80	;RtBtn300734 144C 58 		DB	GY321_G9D	;Route Number00735 144D 	;00736 144D 3E 		DB	LocalEnterBtn	;Throutle Btn00737 144E 33 		DB	Blk321Btn	;RtBtn100738 144F 20 		DB	Blk313_2Btn	;RtBtn200739 1450 06 		DB	G10ABtn	;RtBtn3Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 67500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc00740 1451 59 		DB	GY321_G10A	;Route Number00741 1452 	;00742 1452 3E 		DB	LocalEnterBtn	;Throutle Btn00743 1453 33 		DB	Blk321Btn	;RtBtn100744 1454 20 		DB	Blk313_2Btn	;RtBtn200745 1455 05 		DB	G10BBtn	;RtBtn300746 1456 5A 		DB	GY321_G10B	;Route Number00747 1457 	;00748 1457 3E 		DB	LocalEnterBtn	;Throutle Btn00749 1458 33 		DB	Blk321Btn	;RtBtn100750 1459 20 		DB	Blk313_2Btn	;RtBtn200751 145A 01 		DB	G10CBtn	;RtBtn300752 145B 5B 		DB	GY321_G10C	;Route Number00753 145C 	;00754 145C 3E 		DB	LocalEnterBtn	;Throutle Btn00755 145D 33 		DB	Blk321Btn	;RtBtn100756 145E 20 		DB	Blk313_2Btn	;RtBtn200757 145F 02 		DB	G10DBtn	;RtBtn300758 1460 5C 		DB	GY321_G10D	;Route Number00759 1461 	;00760 1461 3E 		DB	LocalEnterBtn	;Throutle Btn00761 1462 33 		DB	Blk321Btn	;RtBtn100762 1463 06 		DB	G10ABtn	;RtBtn200763 1464 80 		DB	0x80	;RtBtn300764 1465 59 		DB	GY321_G10A	;Route Number00765 1466 	;00766 1466 3E 		DB	LocalEnterBtn	;Throutle Btn00767 1467 33 		DB	Blk321Btn	;RtBtn100768 1468 05 		DB	G10BBtn	;RtBtn200769 1469 80 		DB	0x80	;RtBtn300770 146A 5A 		DB	GY321_G10B	;Route Number00771 146B 	;00772 146B 3E 		DB	LocalEnterBtn	;Throutle Btn00773 146C 33 		DB	Blk321Btn	;RtBtn100774 146D 01 		DB	G10CBtn	;RtBtn200775 146E 80 		DB	0x80	;RtBtn300776 146F 5B 		DB	GY321_G10C	;Route Number00777 1470 	;00778 1470 3E 		DB	LocalEnterBtn	;Throutle Btn00779 1471 33 		DB	Blk321Btn	;RtBtn100780 1472 02 		DB	G10DBtn	;RtBtn200781 1473 80 		DB	0x80	;RtBtn300782 1474 5C 		DB	GY321_G10D	;Route Number00783 1475 	;00784 1475 3E 		DB	LocalEnterBtn	;Throutle Btn00785 1476 33 		DB	Blk321Btn	;RtBtn100786 1477 20 		DB	Blk313_2Btn	;RtBtn200787 1478 07 		DB	G17ABtn	;RtBtn300788 1479 5D 		DB	GY321_G17A	;Route Number00789 147A 	;00790 147A 3E 		DB	LocalEnterBtn	;Throutle Btn00791 147B 33 		DB	Blk321Btn	;RtBtn100792 147C 20 		DB	Blk313_2Btn	;RtBtn200793 147D 0D 		DB	G17BBtn	;RtBtn300794 147E 5E 		DB	GY321_G17B	;Route Number00795 147F 	;00796 147F 3E 		DB	LocalEnterBtn	;Throutle Btn00797 1480 33 		DB	Blk321Btn	;RtBtn100798 1481 20 		DB	Blk313_2Btn	;RtBtn200799 1482 0A 		DB	G17CBtn	;RtBtn300800 1483 5F 		DB	GY321_G17C	;Route Number00801 1484 	;00802 1484 3E 		DB	LocalEnterBtn	;Throutle Btn00803 1485 33 		DB	Blk321Btn	;RtBtn100804 1486 07 		DB	G17ABtn	;RtBtn200805 1487 80 		DB	0x80	;RtBtn300806 1488 5D 		DB	GY321_G17A	;Route Number00807 1489 	;00808 1489 3E 		DB	LocalEnterBtn	;Throutle Btn00809 148A 33 		DB	Blk321Btn	;RtBtn100810 148B 0D 		DB	G17BBtn	;RtBtn200811 148C 80 		DB	0x80	;RtBtn300812 148D 5E 		DB	GY321_G17B	;Route Number00813 148E 	;00814 148E 3E 		DB	LocalEnterBtn	;Throutle Btn00815 148F 33 		DB	Blk321Btn	;RtBtn100816 1490 0A 		DB	G17CBtn	;RtBtn200817 1491 80 		DB	0x80	;RtBtn300818 1492 5F 		DB	GY321_G17C	;Route Number00819 1493 	;00820 1493 3E 		DB	LocalEnterBtn	;Throutle Btn00821 1494 33 		DB	Blk321Btn	;RtBtn100822 1495 20 		DB	Blk313_2Btn	;RtBtn200823 1496 09 		DB	G18ABtn	;RtBtn300824 1497 60 		DB	GY321_G18A	;Route Number00825 1498 	;00826 1498 3E 		DB	LocalEnterBtn	;Throutle Btn00827 1499 33 		DB	Blk321Btn	;RtBtn100828 149A 20 		DB	Blk313_2Btn	;RtBtn200829 149B 0C 		DB	G18BBtn	;RtBtn300830 149C 61 		DB	GY321_G18B	;Route Number00831 149D 	;00832 149D 3E 		DB	LocalEnterBtn	;Throutle Btn00833 149E 33 		DB	Blk321Btn	;RtBtn100834 149F 20 		DB	Blk313_2Btn	;RtBtn200835 14A0 0B 		DB	G18CBtn	;RtBtn300836 14A1 62 		DB	GY321_G18C	;Route Number00837 14A2 	;00838 14A2 3E 		DB	LocalEnterBtn	;Throutle Btn00839 14A3 33 		DB	Blk321Btn	;RtBtn1Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 68500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc00840 14A4 09 		DB	G18ABtn	;RtBtn200841 14A5 80 		DB	0x80	;RtBtn300842 14A6 60 		DB	GY321_G18A	;Route Number00843 14A7 	;00844 14A7 3E 		DB	LocalEnterBtn	;Throutle Btn00845 14A8 33 		DB	Blk321Btn	;RtBtn100846 14A9 0C 		DB	G18BBtn	;RtBtn200847 14AA 80 		DB	0x80	;RtBtn300848 14AB 61 		DB	GY321_G18B	;Route Number00849 14AC 	;00850 14AC 3E 		DB	LocalEnterBtn	;Throutle Btn00851 14AD 33 		DB	Blk321Btn	;RtBtn100852 14AE 0B 		DB	G18CBtn	;RtBtn200853 14AF 80 		DB	0x80	;RtBtn300854 14B0 62 		DB	GY321_G18C	;Route Number00855 14B1 	;00856 14B1 3E 		DB	LocalEnterBtn	;Throutle Btn00857 14B2 20 		DB	Blk313_2Btn	;RtBtn100858 14B3 10 		DB	G6Btn	;RtBtn200859 14B4 80 		DB	0x80	;RtBtn300860 14B5 64 		DB	GY313_2_G6	;Route Number00861 14B6 	;00862 14B6 3E 		DB	LocalEnterBtn	;Throutle Btn00863 14B7 20 		DB	Blk313_2Btn	;RtBtn100864 14B8 0F 		DB	G7Btn	;RtBtn200865 14B9 80 		DB	0x80	;RtBtn300866 14BA 65 		DB	GY313_2_G7	;Route Number00867 14BB 	;00868 14BB 3E 		DB	LocalEnterBtn	;Throutle Btn00869 14BC 20 		DB	Blk313_2Btn	;RtBtn100870 14BD 00 		DB	G8Btn	;RtBtn200871 14BE 80 		DB	0x80	;RtBtn300872 14BF 66 		DB	GY313_2_G8	;Route Number00873 14C0 	;00874 14C0 3E 		DB	LocalEnterBtn	;Throutle Btn00875 14C1 20 		DB	Blk313_2Btn	;RtBtn100876 14C2 08 		DB	G9ABtn	;RtBtn200877 14C3 80 		DB	0x80	;RtBtn300878 14C4 67 		DB	GY313_2_G9A	;Route Number00879 14C5 	;00880 14C5 3E 		DB	LocalEnterBtn	;Throutle Btn00881 14C6 20 		DB	Blk313_2Btn	;RtBtn100882 14C7 04 		DB	G9BBtn	;RtBtn200883 14C8 80 		DB	0x80	;RtBtn300884 14C9 68 		DB	GY313_2_G9B	;Route Number00885 14CA 	;00886 14CA 3E 		DB	LocalEnterBtn	;Throutle Btn00887 14CB 20 		DB	Blk313_2Btn	;RtBtn100888 14CC 0E 		DB	G9CBtn	;RtBtn200889 14CD 80 		DB	0x80	;RtBtn300890 14CE 69 		DB	GY313_2_G9C	;Route Number00891 14CF 	;00892 14CF 3E 		DB	LocalEnterBtn	;Throutle Btn00893 14D0 20 		DB	Blk313_2Btn	;RtBtn100894 14D1 03 		DB	G9DBtn	;RtBtn200895 14D2 80 		DB	0x80	;RtBtn300896 14D3 6A 		DB	GY313_2_G9D	;Route Number00897 14D4 	;00898 14D4 3E 		DB	LocalEnterBtn	;Throutle Btn00899 14D5 20 		DB	Blk313_2Btn	;RtBtn100900 14D6 06 		DB	G10ABtn	;RtBtn200901 14D7 80 		DB	0x80	;RtBtn300902 14D8 6B 		DB	GY313_2_G10A	;Route Number00903 14D9 	;00904 14D9 3E 		DB	LocalEnterBtn	;Throutle Btn00905 14DA 20 		DB	Blk313_2Btn	;RtBtn100906 14DB 05 		DB	G10BBtn	;RtBtn200907 14DC 80 		DB	0x80	;RtBtn300908 14DD 6C 		DB	GY313_2_G10B	;Route Number00909 14DE 	;00910 14DE 3E 		DB	LocalEnterBtn	;Throutle Btn00911 14DF 20 		DB	Blk313_2Btn	;RtBtn100912 14E0 01 		DB	G10CBtn	;RtBtn200913 14E1 80 		DB	0x80	;RtBtn300914 14E2 6D 		DB	GY313_2_G10C	;Route Number00915 14E3 	;00916 14E3 3E 		DB	LocalEnterBtn	;Throutle Btn00917 14E4 20 		DB	Blk313_2Btn	;RtBtn100918 14E5 02 		DB	G10DBtn	;RtBtn200919 14E6 80 		DB	0x80	;RtBtn300920 14E7 6E 		DB	GY313_2_G10D	;Route Number00921 14E8 	;00922 14E8 3E 		DB	LocalEnterBtn	;Throutle Btn00923 14E9 20 		DB	Blk313_2Btn	;RtBtn100924 14EA 07 		DB	G17ABtn	;RtBtn200925 14EB 80 		DB	0x80	;RtBtn300926 14EC 6F 		DB	GY313_2_G17A	;Route Number00927 14ED 	;00928 14ED 3E 		DB	LocalEnterBtn	;Throutle Btn00929 14EE 20 		DB	Blk313_2Btn	;RtBtn100930 14EF 0D 		DB	G17BBtn	;RtBtn200931 14F0 80 		DB	0x80	;RtBtn300932 14F1 70 		DB	GY313_2_G17B	;Route Number00933 14F2 	;00934 14F2 3E 		DB	LocalEnterBtn	;Throutle Btn00935 14F3 20 		DB	Blk313_2Btn	;RtBtn100936 14F4 0A 		DB	G17CBtn	;RtBtn200937 14F5 80 		DB	0x80	;RtBtn300938 14F6 71 		DB	GY313_2_G17C	;Route Number00939 14F7 	;Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 69500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc00940 14F7 3E 		DB	LocalEnterBtn	;Throutle Btn00941 14F8 20 		DB	Blk313_2Btn	;RtBtn100942 14F9 09 		DB	G18ABtn	;RtBtn200943 14FA 80 		DB	0x80	;RtBtn300944 14FB 72 		DB	GY313_2_G18A	;Route Number00945 14FC 	;00946 14FC 3E 		DB	LocalEnterBtn	;Throutle Btn00947 14FD 20 		DB	Blk313_2Btn	;RtBtn100948 14FE 0C 		DB	G18BBtn	;RtBtn200949 14FF 80 		DB	0x80	;RtBtn300950 1500 73 		DB	GY313_2_G18B	;Route Number00951 1501 	;00952 1501 3E 		DB	LocalEnterBtn	;Throutle Btn00953 1502 20 		DB	Blk313_2Btn	;RtBtn100954 1503 0B 		DB	G18CBtn	;RtBtn200955 1504 80 		DB	0x80	;RtBtn300956 1505 74 		DB	GY313_2_G18C	;Route Number00957 1506 	;00958 1506 3E 		DB	LocalEnterBtn	;Throutle Btn00959 1507 27 		DB	GYLBtn	;RtBtn100960 1508 13 		DB	G13Btn	;RtBtn200961 1509 80 		DB	0x80	;RtBtn300962 150A 9C 		DB	GYGYL_G13	;Route Number00963 150B 	;00964 150B 3E 		DB	LocalEnterBtn	;Throutle Btn00965 150C 27 		DB	GYLBtn	;RtBtn100966 150D 13 		DB	G13Btn	;RtBtn200967 150E 1F 		DB	G19ABtn	;RtBtn300968 150F 9D 		DB	GYGYL_G19A	;Route Number00969 1510 	;00970 1510 3E 		DB	LocalEnterBtn	;Throutle Btn00971 1511 27 		DB	GYLBtn	;RtBtn100972 1512 13 		DB	G13Btn	;RtBtn200973 1513 11 		DB	G19BBtn	;RtBtn300974 1514 9E 		DB	GYGYL_G19B	;Route Number00975 1515 	;00976 1515 3E 		DB	LocalEnterBtn	;Throutle Btn00977 1516 27 		DB	GYLBtn	;RtBtn100978 1517 1F 		DB	G19ABtn	;RtBtn200979 1518 80 		DB	0x80	;RtBtn300980 1519 9D 		DB	GYGYL_G19A	;Route Number00981 151A 	;00982 151A 3E 		DB	LocalEnterBtn	;Throutle Btn00983 151B 27 		DB	GYLBtn	;RtBtn100984 151C 11 		DB	G19BBtn	;RtBtn200985 151D 80 		DB	0x80	;RtBtn300986 151E 9E 		DB	GYGYL_G19B	;Route Number00987 151F 	;00988 151F 3E 		DB	LocalEnterBtn	;Throutle Btn00989 1520 27 		DB	GYLBtn	;RtBtn100990 1521 14 		DB	G11ABtn	;RtBtn200991 1522 80 		DB	0x80	;RtBtn300992 1523 9F 		DB	GYGYL_G11A	;Route Number00993 1524 	;00994 1524 3E 		DB	LocalEnterBtn	;Throutle Btn00995 1525 27 		DB	GYLBtn	;RtBtn100996 1526 15 		DB	G11BBtn	;RtBtn200997 1527 80 		DB	0x80	;RtBtn300998 1528 A0 		DB	GYGYL_G11B	;Route Number00999 1529 	;01000 1529 3E 		DB	LocalEnterBtn	;Throutle Btn01001 152A 27 		DB	GYLBtn	;RtBtn101002 152B 16 		DB	G11CBtn	;RtBtn201003 152C 80 		DB	0x80	;RtBtn301004 152D A1 		DB	GYGYL_G11C	;Route Number01005 152E 	;01006 152E 3E 		DB	LocalEnterBtn	;Throutle Btn01007 152F 27 		DB	GYLBtn	;RtBtn101008 1530 1B 		DB	G12ABtn	;RtBtn201009 1531 80 		DB	0x80	;RtBtn301010 1532 A2 		DB	GYGYL_G12A	;Route Number01011 1533 	;01012 1533 3E 		DB	LocalEnterBtn	;Throutle Btn01013 1534 27 		DB	GYLBtn	;RtBtn101014 1535 1A 		DB	G12BBtn	;RtBtn201015 1536 80 		DB	0x80	;RtBtn301016 1537 A3 		DB	GYGYL_G12B	;Route Number01017 1538 	;01018 1538 3E 		DB	LocalEnterBtn	;Throutle Btn01019 1539 27 		DB	GYLBtn	;RtBtn101020 153A 19 		DB	G12CBtn	;RtBtn201021 153B 80 		DB	0x80	;RtBtn301022 153C A4 		DB	GYGYL_G12C	;Route Number01023 153D 	;01024 153D 3E 		DB	LocalEnterBtn	;Throutle Btn01025 153E 27 		DB	GYLBtn	;RtBtn101026 153F 2D 		DB	G1Btn	;RtBtn201027 1540 80 		DB	0x80	;RtBtn301028 1541 92 		DB	GYGYL_G1	;Route Number01029 1542 	;01030 1542 3E 		DB	LocalEnterBtn	;Throutle Btn01031 1543 27 		DB	GYLBtn	;RtBtn101032 1544 22 		DB	G2Btn	;RtBtn201033 1545 80 		DB	0x80	;RtBtn301034 1546 94 		DB	GYGYL_G2	;Route Number01035 1547 	;01036 1547 3E 		DB	LocalEnterBtn	;Throutle Btn01037 1548 27 		DB	GYLBtn	;RtBtn101038 1549 2E 		DB	G3Btn	;RtBtn201039 154A 80 		DB	0x80	;RtBtn3Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 70500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc01040 154B A5 		DB	GYGYL_G3	;Route Number01041 154C 	;01042 154C 3E 		DB	LocalEnterBtn	;Throutle Btn01043 154D 27 		DB	GYLBtn	;RtBtn101044 154E 21 		DB	G4Btn	;RtBtn201045 154F 80 		DB	0x80	;RtBtn301046 1550 A6 		DB	GYGYL_G4	;Route Number01047 1551 	;01048 1551 3E 		DB	LocalEnterBtn	;Throutle Btn01049 1552 2F 		DB	Blk313_1Btn	;RtBtn101050 1553 27 		DB	GYLBtn	;RtBtn201051 1554 80 		DB	0x80	;RtBtn301052 1555 A7 		DB	GYGYL_313_1	;Route Number01053 1556 	;01054 1556 3E 		DB	LocalEnterBtn	;Throutle Btn01055 1557 27 		DB	GYLBtn	;RtBtn101056 1558 2A 		DB	H1Btn	;RtBtn201057 1559 80 		DB	0x80	;RtBtn301058 155A A8 		DB	GYGYL_H1	;Route Number01059 155B 	;01060 155B 3E 		DB	LocalEnterBtn	;Throutle Btn01061 155C 2B 		DB	Blk311_1Btn	;RtBtn101062 155D 27 		DB	GYLBtn	;RtBtn201063 155E 80 		DB	0x80	;RtBtn301064 155F A9 		DB	GYGYL_311_1	;Route Number01065 1560 	;01066 1560 3E 		DB	LocalEnterBtn	;Throutle Btn01067 1561 1F 		DB	G19ABtn	;RtBtn101068 1562 1C 		DB	G14Btn	;RtBtn201069 1563 80 		DB	0x80	;RtBtn301070 1564 AA 		DB	GYG19A_G14	;Route Number01071 1565 	;01072 1565 3E 		DB	LocalEnterBtn	;Throutle Btn01073 1566 11 		DB	G19BBtn	;RtBtn101074 1567 1C 		DB	G14Btn	;RtBtn201075 1568 80 		DB	0x80	;RtBtn301076 1569 AB 		DB	GYG19B_G14	;Route Number01077 156A 	;01078 156A 3E 		DB	LocalEnterBtn	;Throutle Btn01079 156B 1F 		DB	G19ABtn	;RtBtn101080 156C 1D 		DB	G15Btn	;RtBtn201081 156D 80 		DB	0x80	;RtBtn301082 156E AC 		DB	GYG19A_G15	;Route Number01083 156F 	;01084 156F 3E 		DB	LocalEnterBtn	;Throutle Btn01085 1570 11 		DB	G19BBtn	;RtBtn101086 1571 1D 		DB	G15Btn	;RtBtn201087 1572 80 		DB	0x80	;RtBtn301088 1573 AD 		DB	GYG19B_G15	;Route Number01089 1574 	;01090 1574 3E 		DB	LocalEnterBtn	;Throutle Btn01091 1575 1F 		DB	G19ABtn	;RtBtn101092 1576 12 		DB	G16Btn	;RtBtn201093 1577 80 		DB	0x80	;RtBtn301094 1578 AE 		DB	GYG19A_G16	;Route Number01095 1579 	;01096 1579 3E 		DB	LocalEnterBtn	;Throutle Btn01097 157A 11 		DB	G19BBtn	;RtBtn101098 157B 12 		DB	G16Btn	;RtBtn201099 157C 80 		DB	0x80	;RtBtn301100 157D AF 		DB	GYG19B_G16	;Route Number01101 157E 	;01102 157E 3E 		DB	LocalEnterBtn	;Throutle Btn01103 157F 13 		DB	G13Btn	;RtBtn101104 1580 1F 		DB	G19ABtn	;RtBtn201105 1581 80 		DB	0x80	;RtBtn301106 1582 B0 		DB	GYG13_G19A	;Route Number01107 1583 	;01108 1583 3E 		DB	LocalEnterBtn	;Throutle Btn01109 1584 13 		DB	G13Btn	;RtBtn101110 1585 11 		DB	G19BBtn	;RtBtn201111 1586 80 		DB	0x80	;RtBtn301112 1587 B1 		DB	GYG13_G19B	;Route Number01113 1588 	;01114 1588 3E 		DB	LocalEnterBtn	;Throutle Btn01115 1589 1F 		DB	G19ABtn	;RtBtn101116 158A 1E 		DB	G20Btn	;RtBtn201117 158B 80 		DB	0x80	;RtBtn301118 158C B2 		DB	GYG19A_G20	;Route Number01119 158D 	;01120 158D 3E 		DB	LocalEnterBtn	;Throutle Btn01121 158E 11 		DB	G19BBtn	;RtBtn101122 158F 1E 		DB	G20Btn	;RtBtn201123 1590 80 		DB	0x80	;RtBtn301124 1591 B3 		DB	GYG19B_G20	;Route Number01125 1592 	;01126 1592 3E 		DB	LocalEnterBtn	;Throutle Btn01127 1593 1F 		DB	G19ABtn	;RtBtn101128 1594 1E 		DB	G20Btn	;RtBtn201129 1595 07 		DB	G17ABtn	;RtBtn301130 1596 B4 		DB	GYG19A_G17A	;Route Number01131 1597 	;01132 1597 3E 		DB	LocalEnterBtn	;Throutle Btn01133 1598 11 		DB	G19BBtn	;RtBtn101134 1599 1E 		DB	G20Btn	;RtBtn201135 159A 07 		DB	G17ABtn	;RtBtn301136 159B B5 		DB	GYG19B_G17A	;Route Number01137 159C 	;01138 159C 3E 		DB	LocalEnterBtn	;Throutle Btn01139 159D 1F 		DB	G19ABtn	;RtBtn1Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 71500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc01140 159E 1E 		DB	G20Btn	;RtBtn201141 159F 0D 		DB	G17BBtn	;RtBtn301142 15A0 B6 		DB	GYG19A_G17B	;Route Number01143 15A1 	;01144 15A1 3E 		DB	LocalEnterBtn	;Throutle Btn01145 15A2 11 		DB	G19BBtn	;RtBtn101146 15A3 1E 		DB	G20Btn	;RtBtn201147 15A4 0D 		DB	G17BBtn	;RtBtn301148 15A5 B7 		DB	GYG19B_G17B	;Route Number01149 15A6 	;01150 15A6 3E 		DB	LocalEnterBtn	;Throutle Btn01151 15A7 1F 		DB	G19ABtn	;RtBtn101152 15A8 1E 		DB	G20Btn	;RtBtn201153 15A9 0A 		DB	G17CBtn	;RtBtn301154 15AA B8 		DB	GYG19A_G17C	;Route Number01155 15AB 	;01156 15AB 3E 		DB	LocalEnterBtn	;Throutle Btn01157 15AC 11 		DB	G19BBtn	;RtBtn101158 15AD 1E 		DB	G20Btn	;RtBtn201159 15AE 0A 		DB	G17CBtn	;RtBtn301160 15AF B9 		DB	GYG19B_G17C	;Route Number01161 15B0 	;01162 15B0 3E 		DB	LocalEnterBtn	;Throutle Btn01163 15B1 1F 		DB	G19ABtn	;RtBtn101164 15B2 07 		DB	G17ABtn	;RtBtn201165 15B3 80 		DB	0x80	;RtBtn301166 15B4 B4 		DB	GYG19A_G17A	;Route Number01167 15B5 	;01168 15B5 3E 		DB	LocalEnterBtn	;Throutle Btn01169 15B6 11 		DB	G19BBtn	;RtBtn101170 15B7 07 		DB	G17ABtn	;RtBtn201171 15B8 80 		DB	0x80	;RtBtn301172 15B9 B5 		DB	GYG19B_G17A	;Route Number01173 15BA 	;01174 15BA 3E 		DB	LocalEnterBtn	;Throutle Btn01175 15BB 1F 		DB	G19ABtn	;RtBtn101176 15BC 0D 		DB	G17BBtn	;RtBtn201177 15BD 80 		DB	0x80	;RtBtn301178 15BE B6 		DB	GYG19A_G17B	;Route Number01179 15BF 	;01180 15BF 3E 		DB	LocalEnterBtn	;Throutle Btn01181 15C0 11 		DB	G19BBtn	;RtBtn101182 15C1 0D 		DB	G17BBtn	;RtBtn201183 15C2 80 		DB	0x80	;RtBtn301184 15C3 B7 		DB	GYG19B_G17B	;Route Number01185 15C4 	;01186 15C4 3E 		DB	LocalEnterBtn	;Throutle Btn01187 15C5 1F 		DB	G19ABtn	;RtBtn101188 15C6 0A 		DB	G17CBtn	;RtBtn201189 15C7 80 		DB	0x80	;RtBtn301190 15C8 B8 		DB	GYG19A_G17C	;Route Number01191 15C9 	;01192 15C9 3E 		DB	LocalEnterBtn	;Throutle Btn01193 15CA 11 		DB	G19BBtn	;RtBtn101194 15CB 0A 		DB	G17CBtn	;RtBtn201195 15CC 80 		DB	0x80	;RtBtn301196 15CD B9 		DB	GYG19B_G17C	;Route Number01197 15CE 	;01198 15CE 3E 		DB	LocalEnterBtn	;Throutle Btn01199 15CF 1F 		DB	G19ABtn	;RtBtn101200 15D0 1E 		DB	G20Btn	;RtBtn201201 15D1 09 		DB	G18ABtn	;RtBtn301202 15D2 BA 		DB	GYG19A_G18A	;Route Number01203 15D3 	;01204 15D3 3E 		DB	LocalEnterBtn	;Throutle Btn01205 15D4 11 		DB	G19BBtn	;RtBtn101206 15D5 1E 		DB	G20Btn	;RtBtn201207 15D6 09 		DB	G18ABtn	;RtBtn301208 15D7 BB 		DB	GYG19B_G18A	;Route Number01209 15D8 	;01210 15D8 3E 		DB	LocalEnterBtn	;Throutle Btn01211 15D9 1F 		DB	G19ABtn	;RtBtn101212 15DA 1E 		DB	G20Btn	;RtBtn201213 15DB 0C 		DB	G18BBtn	;RtBtn301214 15DC BC 		DB	GYG19A_G18B	;Route Number01215 15DD 	;01216 15DD 3E 		DB	LocalEnterBtn	;Throutle Btn01217 15DE 11 		DB	G19BBtn	;RtBtn101218 15DF 1E 		DB	G20Btn	;RtBtn201219 15E0 0C 		DB	G18BBtn	;RtBtn301220 15E1 BD 		DB	GYG19B_G18B	;Route Number01221 15E2 	;01222 15E2 3E 		DB	LocalEnterBtn	;Throutle Btn01223 15E3 1F 		DB	G19ABtn	;RtBtn101224 15E4 1E 		DB	G20Btn	;RtBtn201225 15E5 0B 		DB	G18CBtn	;RtBtn301226 15E6 BE 		DB	GYG19A_G18C	;Route Number01227 15E7 	;01228 15E7 3E 		DB	LocalEnterBtn	;Throutle Btn01229 15E8 11 		DB	G19BBtn	;RtBtn101230 15E9 1E 		DB	G20Btn	;RtBtn201231 15EA 0B 		DB	G18CBtn	;RtBtn301232 15EB BF 		DB	GYG19B_G18C	;Route Number01233 15EC 	;01234 15EC 3E 		DB	LocalEnterBtn	;Throutle Btn01235 15ED 1F 		DB	G19ABtn	;RtBtn101236 15EE 09 		DB	G18ABtn	;RtBtn201237 15EF 80 		DB	0x80	;RtBtn301238 15F0 BA 		DB	GYG19A_G18A	;Route Number01239 15F1 	;Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 72500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc01240 15F1 3E 		DB	LocalEnterBtn	;Throutle Btn01241 15F2 11 		DB	G19BBtn	;RtBtn101242 15F3 09 		DB	G18ABtn	;RtBtn201243 15F4 80 		DB	0x80	;RtBtn301244 15F5 BB 		DB	GYG19B_G18A	;Route Number01245 15F6 	;01246 15F6 3E 		DB	LocalEnterBtn	;Throutle Btn01247 15F7 1F 		DB	G19ABtn	;RtBtn101248 15F8 0C 		DB	G18BBtn	;RtBtn201249 15F9 80 		DB	0x80	;RtBtn301250 15FA BC 		DB	GYG19A_G18B	;Route Number01251 15FB 	;01252 15FB 3E 		DB	LocalEnterBtn	;Throutle Btn01253 15FC 11 		DB	G19BBtn	;RtBtn101254 15FD 0C 		DB	G18BBtn	;RtBtn201255 15FE 80 		DB	0x80	;RtBtn301256 15FF BD 		DB	GYG19B_G18B	;Route Number01257 1600 	;01258 1600 3E 		DB	LocalEnterBtn	;Throutle Btn01259 1601 1F 		DB	G19ABtn	;RtBtn101260 1602 0B 		DB	G18CBtn	;RtBtn201261 1603 80 		DB	0x80	;RtBtn301262 1604 BE 		DB	GYG19A_G18C	;Route Number01263 1605 	;01264 1605 3E 		DB	LocalEnterBtn	;Throutle Btn01265 1606 11 		DB	G19BBtn	;RtBtn101266 1607 0B 		DB	G18CBtn	;RtBtn201267 1608 80 		DB	0x80	;RtBtn301268 1609 BF 		DB	GYG19B_G18C	;Route Number01269 160A 	;01270 160A 3E 		DB	LocalEnterBtn	;Throutle Btn01271 160B 3B 		DB	H2Btn	;RtBtn101272 160C 80 		DB	0x80	;RtBtn201273 160D 80 		DB	0x80	;RtBtn301274 160E 20 		DB	GYH2	;Route Number01275 160F 	;01276 160F 3E 		DB	LocalEnterBtn	;Throutle Btn01277 1610 34 		DB	H3Btn	;RtBtn101278 1611 80 		DB	0x80	;RtBtn201279 1612 80 		DB	0x80	;RtBtn301280 1613 21 		DB	GYH3	;Route Number01281 1614 	;01282 1614 3E 		DB	LocalEnterBtn	;Throutle Btn01283 1615 3D 		DB	H4Btn	;RtBtn101284 1616 80 		DB	0x80	;RtBtn201285 1617 80 		DB	0x80	;RtBtn301286 1618 22 		DB	GYH4	;Route Number01287 1619 	;01288 1619 3E 		DB	LocalEnterBtn	;Throutle Btn01289 161A 26 		DB	Blk310_1Btn	;RtBtn101290 161B 3B 		DB	H2Btn	;RtBtn201291 161C 29 		DB	H5Btn	;RtBtn301292 161D C0 		DB	GYH2_H5	;Route Number01293 161E 	;01294 161E 3E 		DB	LocalEnterBtn	;Throutle Btn01295 161F 3B 		DB	H2Btn	;RtBtn101296 1620 29 		DB	H5Btn	;RtBtn201297 1621 80 		DB	0x80	;RtBtn301298 1622 C0 		DB	GYH2_H5	;Route Number01299 1623 	;01300 1623 3E 		DB	LocalEnterBtn	;Throutle Btn01301 1624 26 		DB	Blk310_1Btn	;RtBtn101302 1625 34 		DB	H3Btn	;RtBtn201303 1626 29 		DB	H5Btn	;RtBtn301304 1627 C1 		DB	GYH3_H5	;Route Number01305 1628 	;01306 1628 3E 		DB	LocalEnterBtn	;Throutle Btn01307 1629 34 		DB	H3Btn	;RtBtn101308 162A 29 		DB	H5Btn	;RtBtn201309 162B 80 		DB	0x80	;RtBtn301310 162C C1 		DB	GYH3_H5	;Route Number01311 162D 	;01312 162D 3E 		DB	LocalEnterBtn	;Throutle Btn01313 162E 26 		DB	Blk310_1Btn	;RtBtn101314 162F 3D 		DB	H4Btn	;RtBtn201315 1630 29 		DB	H5Btn	;RtBtn301316 1631 C2 		DB	GYH4_H5	;Route Number01317 1632 	;01318 1632 3E 		DB	LocalEnterBtn	;Throutle Btn01319 1633 3D 		DB	H4Btn	;RtBtn101320 1634 29 		DB	H5Btn	;RtBtn201321 1635 80 		DB	0x80	;RtBtn301322 1636 C2 		DB	GYH4_H5	;Route Number01323 1637 	;01324 1637 3E 		DB	LocalEnterBtn	;Throutle Btn01325 1638 20 		DB	Blk313_2Btn	;RtBtn101326 1639 1F 		DB	G19ABtn	;RtBtn201327 163A 80 		DB	0x80	;RtBtn301328 163B C3 		DB	GY313_2_G19A	;Route Number01329 163C 	;01330 163C 3E 		DB	LocalEnterBtn	;Throutle Btn01331 163D 20 		DB	Blk313_2Btn	;RtBtn101332 163E 17 		DB	G5Btn	;RtBtn301333 163F 1F 		DB	G19ABtn	;RtBtn201334 1640 C3 		DB	GY313_2_G19A	;Route Number01335 1641 	;01336 1641 3E 		DB	LocalEnterBtn	;Throutle Btn01337 1642 20 		DB	Blk313_2Btn	;RtBtn101338 1643 10 		DB	G6Btn	;RtBtn301339 1644 1F 		DB	G19ABtn	;RtBtn2Highland Greeley PIC.asm   "RoutSelectTable:Greeley"                     Page: 73500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.RtSelTbl.inc01340 1645 C3 		DB	GY313_2_G19A	;Route Number01341 1646 	;01342 1646 3E 		DB	LocalEnterBtn	;Throutle Btn01343 1647 20 		DB	Blk313_2Btn	;RtBtn101344 1648 11 		DB	G19BBtn	;RtBtn201345 1649 80 		DB	0x80	;RtBtn301346 164A C4 		DB	GY313_2_G19B	;Route Number01347 164B 	;01348 164B 3E 		DB	LocalEnterBtn	;Throutle Btn01349 164C 20 		DB	Blk313_2Btn	;RtBtn101350 164D 17 		DB	G5Btn	;RtBtn301351 164E 11 		DB	G19BBtn	;RtBtn201352 164F C4 		DB	GY313_2_G19B	;Route Number01353 1650 	;01354 1650 3E 		DB	LocalEnterBtn	;Throutle Btn01355 1651 20 		DB	Blk313_2Btn	;RtBtn101356 1652 10 		DB	G6Btn	;RtBtn301357 1653 11 		DB	G19BBtn	;RtBtn201358 1654 C4 		DB	GY313_2_G19B	;Route Number01359 1655 	;01360 1655 3E 		DB	LocalEnterBtn	;Throutle Btn01361 1656 33 		DB	Blk321Btn	;RtBtn101362 1657 2B 		DB	Blk311_1Btn	;RtBtn301363 1658 27 		DB	GYLBtn	;RtBtn201364 1659 C5 		DB	GY321_311_1_GYL	;Route Number01365 165A 	;01366 165A 3E 		DB	LocalEnterBtn	;Throutle Btn01367 165B 2B 		DB	Blk311_1Btn	;RtBtn101368 165C 2A 		DB	H1Btn	;RtBtn301369 165D 80 		DB	0x80	;RtBtn201370 165E C6 		DB	GY311_1_H1	;Route Number01371 165F 	;01372 165F 3E 		DB	LocalEnterBtn	;Throutle Btn01373 1660 2B 		DB	Blk311_1Btn	;RtBtn101374 1661 27 		DB	GYLBtn	;RtBtn301375 1662 2A 		DB	H1Btn	;RtBtn201376 1663 C7 		DB	GY311_1_GYL_H1	;Route Number01377 1664 	;01378 1664 3E 		DB	LocalEnterBtn	;Throutle Btn01379 1665 25 		DB	Blk310_2Btn	;RtBtn101380 1666 2A 		DB	H1Btn	;RtBtn301381 1667 80 		DB	0x80	;RtBtn201382 1668 C8 		DB	GY310_2_H1	;Route Number01383 1669 	;01384 1669 	;end of data01385 1669 00 		DB	0x00	;Throutle Btn00789 166A 	;	00790 166A 	;==============================================================================================00791 166A 	; Translate a block used by a throttle to a cab number00792 166A 	;00793 166A 	; Throttle 6 to Cab #			;Blk#, Blk Name, d'Blk#00794 166A 00 	BlkThr6ToCab	DB	0x00	;0x00, BlkNumRDY1 000795 166B 00 		DB	0x00	;0x01, BlkNumRDY2 100796 166C 00 		DB	0x00	;0x02, BlkNumFYL  200797 166D 00 		DB	0x00	;0x03, BlkNum100  300798 166E 00 		DB	0x00	;0x04, BlkNum101  400799 166F 00 		DB	0x00	;0x05, BlkNum110  500800 1670 00 		DB	0x00	;0x06, BlkNum111  600801 1671 00 		DB	0x00	;0x07, BlkNum120  700802 1672 00 		DB	0x00	;0x08, BlkNum121  800803 1673 00 		DB	0x00	;0x09, BlkNum130  900804 1674 00 		DB	0x00	;0x0A, BlkNum131 1000805 1675 00 		DB	0x00	;0x0B, BlkNum140 1100806 1676 00 		DB	0x00	;0x0C, BlkNum141 1200807 1677 00 		DB	0x00	;0x0D, BlkNumPT1 1300808 1678 00 		DB	0x00	;0x0E, BlkNumPT2 1400809 1679 00 		DB	0x00	;0x0F, BlkNum150 1500810 167A 00 		DB	0x00	;0x10, BlkNum151 1600811 167B 00 		DB	0x00	;0x11, BlkNum160 1700812 167C 00 		DB	0x00	;0x12, BlkNum170 1800813 167D 00 		DB	0x00	;0x13, BlkNum171 1900814 167E 00 		DB	0x00	;0x14, BlkNumSYL 2000815 167F 00 		DB	0x00	;0x15, BlkNum180 2100816 1680 00 		DB	0x00	;0x16, BlkNum190 2200817 1681 00 		DB	0x00	;0x17, BlkNum191 2300818 1682 07 		DB	0x07	;0x18, BlkNum200 2400819 1683 07 		DB	0x07	;0x19, BlkNum201 2500820 1684 06 		DB	0x06	;0x1A, BlkNum202 2600821 1685 06 		DB	0x06	;0x1B, BlkNum210 2700822 1686 06 		DB	0x06	;0x1C, BlkNum220 2800823 1687 06 		DB	0x06	;0x1D, BlkNum221 2900824 1688 06 		DB	0x06	;0x1E, BlkNum222 3000825 1689 06 		DB	0x06	;0x1F, BlkNum230 3100826 168A 06 		DB	0x06	;0x20, BlkNum240 3200827 168B 06 		DB	0x06	;0x21, BlkNum250 3300828 168C 06 		DB	0x06	;0x22, BlkNum251 3400829 168D 06 		DB	0x06	;0x23, BlkNum260 3500830 168E 06 		DB	0x06	;0x24, BlkNum270 3600831 168F 06 		DB	0x06	;0x25, BlkNum271 3700832 1690 06 		DB	0x06	;0x26, BlkNum280 3800833 1691 06 		DB	0x06	;0x27, BlkNum290 3900834 1692 06 		DB	0x06	;0x28, BlkNum291 4000835 1693 06 		DB	0x06	;0x29, BlkNum300 4100836 1694 07 		DB	0x07	;0x2A, BlkNum3101 4200837 1695 07 		DB	0x07	;0x2B, BlkNum3102 4300838 1696 07 		DB	0x07	;0x2C, BlkNum3111 4400839 1697 07 		DB	0x07	;0x2D, BlkNum3112 4500840 1698 07 		DB	0x07	;0x2E, BlkNum3121 4600841 1699 07 		DB	0x07	;0x2F, BlkNum3122 4700842 169A 07 		DB	0x07	;0x30, BlkNum3131 48Highland Greeley PIC.asm   TurnTable Data                                Page: 74500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc00843 169B 07 		DB	0x07	;0x31, BlkNum3132 4900844 169C 00 		DB	0x00	;0x32, BlkNum320 5000845 169D 00 		DB	0x00	;0x33, BlkNum390 5100846 169E 00 		DB	0x00	;0x34, BlkNum330 5200847 169F 00 		DB	0x00	;0x35, BlkNum380 5300848 16A0 00 		DB	0x00	;0x36, BlkNum340 5400849 16A1 00 		DB	0x00	;0x37, BlkNum370 5500850 16A2 00 		DB	0x00	;0x38, BlkNum350 5600851 16A3 00 		DB	0x00	;0x39, BlkNum351 5700852 16A4 00 		DB	0x00	;0x3A, BlkNum360 5800853 16A5 00 		DB	0x00	;0x3B, BlkNum361 5900854 16A6 00 		DB	0x00	;0x3C, BlkNum362 6000855 16A7 00 		DB	0x00	;0x3D, BlkNum363 6100856 16A8 00 		DB	0x00	;0x3E, BlkNum364 6200857 16A9 00 		DB	0x00	;0x3F, BlkNum365 6300858 16AA 00 		DB	0x00	;none, BlkNumVY1 6400859 16AB 00 		DB	0x00	;none, BlkNumVY2 6500860 16AC 00 		DB	0x00	;none, BlkNumVY3 6600861 16AD 00 		DB	0x00	;none, BlkNumVY4 6700862 16AE 00 		DB	0x00	;none, BlkNumVY5 6800863 16AF 00 		DB	0x00	;none, BlkNumVY6 6900864 16B0 00 		DB	0x00	;none, BlkNumEYF 7000865 16B1 06 		DB	0x06	;0x47, BlkNumPHL 7100866 16B2 06 		DB	0x06	;0x48, BlkNumPH1 7200867 16B3 06 		DB	0x06	;0x49, BlkNumPH2 7300868 16B4 06 		DB	0x06	;0x4A, BlkNumPH3 7400869 16B5 06 		DB	0x06	;0x4B, BlkNumPH4 7500870 16B6 00 		DB	0x00	;0x4C, BlkMZR Manzanar 7600871 16B7 00 		DB	0x0000872 16B8 00 		DB	0x0000873 16B9 	;00874 16B9 	; Throttle 7 to Cab #			;Blk#, Blk Name, d'Blk#00875 16B9 00 	BlkThr7ToCab	DB	0x00	;0x00, BlkNumRDY1 000876 16BA 00 		DB	0x00	;0x01, BlkNumRDY2 100877 16BB 00 		DB	0x00	;0x02, BlkNumFYL  200878 16BC 00 		DB	0x00	;0x03, BlkNum100  300879 16BD 00 		DB	0x00	;0x04, BlkNum101  400880 16BE 00 		DB	0x00	;0x05, BlkNum110  500881 16BF 00 		DB	0x00	;0x06, BlkNum111  600882 16C0 00 		DB	0x00	;0x07, BlkNum120  700883 16C1 00 		DB	0x00	;0x08, BlkNum121  800884 16C2 00 		DB	0x00	;0x09, BlkNum130  900885 16C3 00 		DB	0x00	;0x0A, BlkNum131 1000886 16C4 00 		DB	0x00	;0x0B, BlkNum140 1100887 16C5 00 		DB	0x00	;0x0C, BlkNum141 1200888 16C6 00 		DB	0x00	;0x0D, BlkNumPT1 1300889 16C7 00 		DB	0x00	;0x0E, BlkNumPT2 1400890 16C8 00 		DB	0x00	;0x0F, BlkNum150 1500891 16C9 00 		DB	0x00	;0x10, BlkNum151 1600892 16CA 00 		DB	0x00	;0x11, BlkNum160 1700893 16CB 00 		DB	0x00	;0x12, BlkNum170 1800894 16CC 00 		DB	0x00	;0x13, BlkNum171 1900895 16CD 00 		DB	0x00	;0x14, BlkNumSYL 2000896 16CE 00 		DB	0x00	;0x15, BlkNum180 2100897 16CF 00 		DB	0x00	;0x16, BlkNum190 2200898 16D0 00 		DB	0x00	;0x17, BlkNum191 2300899 16D1 06 		DB	0x06	;0x18, BlkNum200 2400900 16D2 06 		DB	0x06	;0x19, BlkNum201 2500901 16D3 00 		DB	0x00	;0x1A, BlkNum202 2600902 16D4 00 		DB	0x00	;0x1B, BlkNum210 2700903 16D5 00 		DB	0x00	;0x1C, BlkNum220 2800904 16D6 00 		DB	0x00	;0x1D, BlkNum221 2900905 16D7 00 		DB	0x00	;0x1E, BlkNum222 3000906 16D8 00 		DB	0x00	;0x1F, BlkNum230 3100907 16D9 00 		DB	0x00	;0x20, BlkNum240 3200908 16DA 00 		DB	0x00	;0x21, BlkNum250 3300909 16DB 00 		DB	0x00	;0x22, BlkNum251 3400910 16DC 00 		DB	0x00	;0x23, BlkNum260 3500911 16DD 00 		DB	0x00	;0x24, BlkNum270 3600912 16DE 00 		DB	0x00	;0x25, BlkNum271 3700913 16DF 00 		DB	0x00	;0x26, BlkNum280 3800914 16E0 00 		DB	0x00	;0x27, BlkNum290 3900915 16E1 00 		DB	0x00	;0x28, BlkNum291 4000916 16E2 00 		DB	0x00	;0x29, BlkNum300 4100917 16E3 06 		DB	0x06	;0x2A, BlkNum3101 4200918 16E4 06 		DB	0x06	;0x2B, BlkNum3102 4300919 16E5 06 		DB	0x06	;0x2C, BlkNum3111 4400920 16E6 06 		DB	0x06	;0x2D, BlkNum3112 4500921 16E7 06 		DB	0x06	;0x2E, BlkNum3121 4600922 16E8 06 		DB	0x06	;0x2F, BlkNum3122 4700923 16E9 06 		DB	0x06	;0x30, BlkNum3131 4800924 16EA 06 		DB	0x06	;0x31, BlkNum3132 4900925 16EB 00 		DB	0x00	;0x32, BlkNum320 5000926 16EC 00 		DB	0x00	;0x33, BlkNum390 5100927 16ED 00 		DB	0x00	;0x34, BlkNum330 5200928 16EE 00 		DB	0x00	;0x35, BlkNum380 5300929 16EF 00 		DB	0x00	;0x36, BlkNum340 5400930 16F0 00 		DB	0x00	;0x37, BlkNum370 5500931 16F1 00 		DB	0x00	;0x38, BlkNum350 5600932 16F2 00 		DB	0x00	;0x39, BlkNum351 5700933 16F3 00 		DB	0x00	;0x3A, BlkNum360 5800934 16F4 00 		DB	0x00	;0x3B, BlkNum361 5900935 16F5 00 		DB	0x00	;0x3C, BlkNum362 6000936 16F6 00 		DB	0x00	;0x3D, BlkNum363 6100937 16F7 00 		DB	0x00	;0x3E, BlkNum364 6200938 16F8 00 		DB	0x00	;0x3F, BlkNum365 6300939 16F9 00 		DB	0x00	;none, BlkNumVY1 6400940 16FA 00 		DB	0x00	;none, BlkNumVY2 6500941 16FB 00 		DB	0x00	;none, BlkNumVY3 6600942 16FC 00 		DB	0x00	;none, BlkNumVY4 67Highland Greeley PIC.asm   TurnTable Data                                Page: 75500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc00943 16FD 00 		DB	0x00	;none, BlkNumVY5 6800944 16FE 00 		DB	0x00	;none, BlkNumVY6 6900945 16FF 00 		DB	0x00	;none, BlkNumEYF 7000946 1700 00 		DB	0x00	;0x47, BlkNumPHL 7100947 1701 00 		DB	0x00	;0x48, BlkNumPH1 7200948 1702 00 		DB	0x00	;0x49, BlkNumPH2 7300949 1703 00 		DB	0x00	;0x4A, BlkNumPH3 7400950 1704 00 		DB	0x00	;0x4B, BlkNumPH4 7500951 1705 00 		DB	0x00	;0x4C, BlkMZR Manzanar 7600952 1706 00 		DB	0x0000953 1707 00 		DB	0x0000954 1708 	;00955 1708 	; Throttle 8 to Cab #	(NOT USED)		;Blk#, Blk Name, d'Blk#00956 1708 00 	BlkThr8ToCab	DB	0x00	;0x00, BlkNumRDY1 000957 1709 00 		DB	0x00	;0x01, BlkNumRDY2 100958 170A 00 		DB	0x00	;0x02, BlkNumFYL  200959 170B 00 		DB	0x00	;0x03, BlkNum100  300960 170C 00 		DB	0x00	;0x04, BlkNum101  400961 170D 00 		DB	0x00	;0x05, BlkNum110  500962 170E 00 		DB	0x00	;0x06, BlkNum111  600963 170F 00 		DB	0x00	;0x07, BlkNum120  700964 1710 00 		DB	0x00	;0x08, BlkNum121  800965 1711 00 		DB	0x00	;0x09, BlkNum130  900966 1712 00 		DB	0x00	;0x0A, BlkNum131 1000967 1713 00 		DB	0x00	;0x0B, BlkNum140 1100968 1714 00 		DB	0x00	;0x0C, BlkNum141 1200969 1715 00 		DB	0x00	;0x0D, BlkNumPT1 1300970 1716 00 		DB	0x00	;0x0E, BlkNumPT2 1400971 1717 00 		DB	0x00	;0x0F, BlkNum150 1500972 1718 00 		DB	0x00	;0x10, BlkNum151 1600973 1719 00 		DB	0x00	;0x11, BlkNum160 1700974 171A 00 		DB	0x00	;0x12, BlkNum170 1800975 171B 00 		DB	0x00	;0x13, BlkNum171 1900976 171C 00 		DB	0x00	;0x14, BlkNumSYL 2000977 171D 00 		DB	0x00	;0x15, BlkNum180 2100978 171E 00 		DB	0x00	;0x16, BlkNum190 2200979 171F 00 		DB	0x00	;0x17, BlkNum191 2300980 1720 00 		DB	0x00	;0x18, BlkNum200 2400981 1721 00 		DB	0x00	;0x19, BlkNum201 2500982 1722 00 		DB	0x00	;0x1A, BlkNum202 2600983 1723 00 		DB	0x00	;0x1B, BlkNum210 2700984 1724 00 		DB	0x00	;0x1C, BlkNum220 2800985 1725 00 		DB	0x00	;0x1D, BlkNum221 2900986 1726 00 		DB	0x00	;0x1E, BlkNum222 3000987 1727 00 		DB	0x00	;0x1F, BlkNum230 3100988 1728 00 		DB	0x00	;0x20, BlkNum240 3200989 1729 00 		DB	0x00	;0x21, BlkNum250 3300990 172A 00 		DB	0x00	;0x22, BlkNum251 3400991 172B 00 		DB	0x00	;0x23, BlkNum260 3500992 172C 00 		DB	0x00	;0x24, BlkNum270 3600993 172D 00 		DB	0x00	;0x25, BlkNum271 3700994 172E 00 		DB	0x00	;0x26, BlkNum280 3800995 172F 00 		DB	0x00	;0x27, BlkNum290 3900996 1730 00 		DB	0x00	;0x28, BlkNum291 4000997 1731 00 		DB	0x00	;0x29, BlkNum300 4100998 1732 00 		DB	0x00	;0x2A, BlkNum3101 4200999 1733 00 		DB	0x00	;0x2B, BlkNum3102 4301000 1734 00 		DB	0x00	;0x2C, BlkNum3111 4401001 1735 00 		DB	0x00	;0x2D, BlkNum3112 4501002 1736 00 		DB	0x00	;0x2E, BlkNum3121 4601003 1737 00 		DB	0x00	;0x2F, BlkNum3122 4701004 1738 00 		DB	0x00	;0x30, BlkNum3131 4801005 1739 00 		DB	0x00	;0x31, BlkNum3132 4901006 173A 00 		DB	0x00	;0x32, BlkNum320 5001007 173B 00 		DB	0x00	;0x33, BlkNum390 5101008 173C 00 		DB	0x00	;0x34, BlkNum330 5201009 173D 00 		DB	0x00	;0x35, BlkNum380 5301010 173E 00 		DB	0x00	;0x36, BlkNum340 5401011 173F 00 		DB	0x00	;0x37, BlkNum370 5501012 1740 00 		DB	0x00	;0x38, BlkNum350 5601013 1741 00 		DB	0x00	;0x39, BlkNum351 5701014 1742 00 		DB	0x00	;0x3A, BlkNum360 5801015 1743 00 		DB	0x00	;0x3B, BlkNum361 5901016 1744 00 		DB	0x00	;0x3C, BlkNum362 6001017 1745 00 		DB	0x00	;0x3D, BlkNum363 6101018 1746 00 		DB	0x00	;0x3E, BlkNum364 6201019 1747 00 		DB	0x00	;0x3F, BlkNum365 6301020 1748 00 		DB	0x00	;none, BlkNumVY1 6401021 1749 00 		DB	0x00	;none, BlkNumVY2 6501022 174A 00 		DB	0x00	;none, BlkNumVY3 6601023 174B 00 		DB	0x00	;none, BlkNumVY4 6701024 174C 00 		DB	0x00	;none, BlkNumVY5 6801025 174D 00 		DB	0x00	;none, BlkNumVY6 6901026 174E 00 		DB	0x00	;none, BlkNumEYF 7001027 174F 00 		DB	0x00	;0x47, BlkNumPHL 7101028 1750 00 		DB	0x00	;0x48, BlkNumPH1 7201029 1751 00 		DB	0x00	;0x49, BlkNumPH2 7301030 1752 00 		DB	0x00	;0x4A, BlkNumPH3 7401031 1753 00 		DB	0x00	;0x4B, BlkNumPH4 7501032 1754 00 		DB	0x00	;0x4C, BlkMZR Manzanar 7601033 1755 00 		DB	0x0001034 1756 00 		DB	0x0001035 1757 	;01036 1757 	; Throttle 9 to Cab #	(NOT USED)		;Blk#, Blk Name, d'Blk#01037 1757 00 	BlkThr9ToCab	DB	0x00	;0x00, BlkNumRDY1 001038 1758 00 		DB	0x00	;0x01, BlkNumRDY2 101039 1759 00 		DB	0x00	;0x02, BlkNumFYL  201040 175A 00 		DB	0x00	;0x03, BlkNum100  301041 175B 00 		DB	0x00	;0x04, BlkNum101  401042 175C 00 		DB	0x00	;0x05, BlkNum110  5Highland Greeley PIC.asm   TurnTable Data                                Page: 76500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Data.inc01043 175D 00 		DB	0x00	;0x06, BlkNum111  601044 175E 00 		DB	0x00	;0x07, BlkNum120  701045 175F 00 		DB	0x00	;0x08, BlkNum121  801046 1760 00 		DB	0x00	;0x09, BlkNum130  901047 1761 00 		DB	0x00	;0x0A, BlkNum131 1001048 1762 00 		DB	0x00	;0x0B, BlkNum140 1101049 1763 00 		DB	0x00	;0x0C, BlkNum141 1201050 1764 00 		DB	0x00	;0x0D, BlkNumPT1 1301051 1765 00 		DB	0x00	;0x0E, BlkNumPT2 1401052 1766 00 		DB	0x00	;0x0F, BlkNum150 1501053 1767 00 		DB	0x00	;0x10, BlkNum151 1601054 1768 00 		DB	0x00	;0x11, BlkNum160 1701055 1769 00 		DB	0x00	;0x12, BlkNum170 1801056 176A 00 		DB	0x00	;0x13, BlkNum171 1901057 176B 00 		DB	0x00	;0x14, BlkNumSYL 2001058 176C 00 		DB	0x00	;0x15, BlkNum180 2101059 176D 00 		DB	0x00	;0x16, BlkNum190 2201060 176E 00 		DB	0x00	;0x17, BlkNum191 2301061 176F 00 		DB	0x00	;0x18, BlkNum200 2401062 1770 00 		DB	0x00	;0x19, BlkNum201 2501063 1771 00 		DB	0x00	;0x1A, BlkNum202 2601064 1772 00 		DB	0x00	;0x1B, BlkNum210 2701065 1773 00 		DB	0x00	;0x1C, BlkNum220 2801066 1774 00 		DB	0x00	;0x1D, BlkNum221 2901067 1775 00 		DB	0x00	;0x1E, BlkNum222 3001068 1776 00 		DB	0x00	;0x1F, BlkNum230 3101069 1777 00 		DB	0x00	;0x20, BlkNum240 3201070 1778 00 		DB	0x00	;0x21, BlkNum250 3301071 1779 00 		DB	0x00	;0x22, BlkNum251 3401072 177A 00 		DB	0x00	;0x23, BlkNum260 3501073 177B 00 		DB	0x00	;0x24, BlkNum270 3601074 177C 00 		DB	0x00	;0x25, BlkNum271 3701075 177D 00 		DB	0x00	;0x26, BlkNum280 3801076 177E 00 		DB	0x00	;0x27, BlkNum290 3901077 177F 00 		DB	0x00	;0x28, BlkNum291 4001078 1780 00 		DB	0x00	;0x29, BlkNum300 4101079 1781 00 		DB	0x00	;0x2A, BlkNum3101 4201080 1782 00 		DB	0x00	;0x2B, BlkNum3102 4301081 1783 00 		DB	0x00	;0x2C, BlkNum3111 4401082 1784 00 		DB	0x00	;0x2D, BlkNum3112 4501083 1785 00 		DB	0x00	;0x2E, BlkNum3121 4601084 1786 00 		DB	0x00	;0x2F, BlkNum3122 4701085 1787 00 		DB	0x00	;0x30, BlkNum3131 4801086 1788 00 		DB	0x00	;0x31, BlkNum3132 4901087 1789 00 		DB	0x00	;0x32, BlkNum320 5001088 178A 00 		DB	0x00	;0x33, BlkNum390 5101089 178B 00 		DB	0x00	;0x34, BlkNum330 5201090 178C 00 		DB	0x00	;0x35, BlkNum380 5301091 178D 00 		DB	0x00	;0x36, BlkNum340 5401092 178E 00 		DB	0x00	;0x37, BlkNum370 5501093 178F 00 		DB	0x00	;0x38, BlkNum350 5601094 1790 00 		DB	0x00	;0x39, BlkNum351 5701095 1791 00 		DB	0x00	;0x3A, BlkNum360 5801096 1792 00 		DB	0x00	;0x3B, BlkNum361 5901097 1793 00 		DB	0x00	;0x3C, BlkNum362 6001098 1794 00 		DB	0x00	;0x3D, BlkNum363 6101099 1795 00 		DB	0x00	;0x3E, BlkNum364 6201100 1796 00 		DB	0x00	;0x3F, BlkNum365 6301101 1797 00 		DB	0x00	;none, BlkNumVY1 6401102 1798 00 		DB	0x00	;none, BlkNumVY2 6501103 1799 00 		DB	0x00	;none, BlkNumVY3 6601104 179A 00 		DB	0x00	;none, BlkNumVY4 6701105 179B 00 		DB	0x00	;none, BlkNumVY5 6801106 179C 00 		DB	0x00	;none, BlkNumVY6 6901107 179D 00 		DB	0x00	;none, BlkNumEYF 7001108 179E 00 		DB	0x00	;0x47, BlkNumPHL 7101109 179F 00 		DB	0x00	;0x48, BlkNumPH1 7201110 17A0 00 		DB	0x00	;0x49, BlkNumPH2 7301111 17A1 00 		DB	0x00	;0x4A, BlkNumPH3 7401112 17A2 00 		DB	0x00	;0x4B, BlkNumPH4 7501113 17A3 00 		DB	0x00	;0x4C, BlkMZR Manzanar 7601114 17A4 00 		DB	0x0001115 17A5 00 		DB	0x0001116 17A6 	;	01009 17A6 		include	LowStuff.asm	;starts at 0x000000001 17A6 		subtitle	"LowStuff.asm"00002 17A6 		page00003 17A6 	;===========================================================================================00004 17A6 	;00005 17A6 	;  FileName: LowStuff.asm00006 17A6 	;  Date: 5/25/0900007 17A6 	;  File Version: 1.8.300008 17A6 	;  00009 17A6 	;  Author: David M. Flynn00010 17A6 	;  Company: Oxford V.U.E., Inc.00011 17A6 	;00012 17A6 	;============================================================================================00013 17A6 	; Notes:00014 17A6 	;00015 17A6 	;  This file is all general perpose routines.00016 17A6 	;  Custom stuff is in Main.asm00017 17A6 	;     OnTheTick is called every 1/20th second00018 17A6 	;     OnTheHalfSecond is Goto'd every 1/2 second00019 17A6 	;00020 17A6 	;  I2C EEPROMs00021 17A6 	;    The brain has 8 medium width SOIC ICs at U2..U9 with hardware addresses of 0..7.00022 17A6 	;    These locations may be populated with 24LC256 I/SM 256Kb (32K x 8) serial EEPROMs00023 17A6 	;    with 64 bytes per page or 24LC512 I/SM 512Kb (64K x 8) serial EEPROMs with 128 bytes per page.00024 17A6 	;    All the chips installed must be the same.Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 77500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm00025 17A6 	;    EEPROMs must be installed in 64KB increments.00026 17A6 	;    The routines in this file do NOT test for writes across page boundies.00027 17A6 	;    Default is to use 15+3 bit addressing for 24LC256s. Set Using64KBEEPROM to 1 by00028 17A6 	;    defining the constant Using64KBEEPROM=1 to use 16+3 bit addressing.00029 17A6 	;    EndOfEEROM defaults to 0x01 for 64Kbytes of eeprom set to 0x02 for 128BK, 0x03 for 192KB, etc.00030 17A6 	;00031 17A6 	;  Calls/gotos to routines outside this segment:00032 17A6 	;00033 17A6 	;	if CodeMemStrings00034 17A6 	;	mCall0To2	StringDispatch	;Get the next Char00035 17A6 	;	endif00036 17A6 	;00037 17A6 	;	mCall0To2	OnTheTick	;call every 1/20th sec00038 17A6 	;00039 17A6 	;	GOTO	Main	; go to beginning of program00040 17A6 	;00041 17A6 	;	BSF	PCLATH,400042 17A6 	;	GOTO	OnTheHalfSecond00043 17A6 	;00044 17A6 	;============================================================================================00045 17A6 	; Revision History00046 17A6 	; 1.8.3     5/25/2009	Added conditional Do_ZeroRAM00047 17A6 	; 1.8.2     4/6/2009	Changed conditional UsesLCD>>PrintString00048 17A6 	; 1.8.1     12/16/2008	Added support for 24AA02E48 HasMAC_Addr_EEPROM=100049 17A6 	; 1.8       4/5/2008	Added UsesPulseCounter1/2 Pulse counters on CCP1/CCP200050 17A6 	; 1.7.11    5/7/2006	Fixed RS232BufIO.00051 17A6 	; 1.7.10    5/6/06	Moved UsesRS232BufIO vars to bank3, made ScanRS232In interupt driven.00052 17A6 	; 1.7.9     10/6/05	Added support for ServoControl.asm, UsesServoControl00053 17A6 	; 1.7.8     3/29/05	Added UsesPushPopParams,UsesSRamPushPopPrm, minor improvments to Push and Pop.00054 17A6 	; 1.7.7     3/13/05	Fixed SRAM_Zero problem with CurrentAddress buffers00055 17A6 	; 1.7.6     2/7/05	Changed some mBank0's to CLRF STATUS to save a byte00056 17A6 	;	Added some conditionsal's (opt-in type) UsesDelay10uS, UsesDelay40uS,00057 17A6 	;	 UsesLCDBlink, UsesLCDClear, UsesLCDCursoBlink, Useslcd_Home, Useslcd_ReadData00058 17A6 	;00059 17A6 	; 1.7.5     1/27/05	Fixed EraseEEROM:clear ptr to point to last byte in Data, 0x007FFF00060 17A6 	; 1.7.4     1/16/05	Added comments.00061 17A6 	; 1.7.3     9/21/04	Added some conditionals:UsesByte2Str,UsesDateToBCD,UsesNum2Str,UsesNum3BToStr00062 17A6 	; 1.7.2     9/5/04	Moved RTC equ's into this file.00063 17A6 	; 1.7.1     8/2/04	Added DispIPLine defaults to 1.00064 17A6 	; 1.7       4/28/04	Added AddressEEROMR, CopyEEROMtoSRAM, changed AddressEEROM00065 17A6 	;	Added Using64KBEEPROM, EndOfEEROM00066 17A6 	;	The maximum EEROM size is now 512KB (8 x 24LC512I/SM)00067 17A6 	; 1.6       3/31/04	Added Display_Colon, Display_Dot, DispIP, DispMAC.00068 17A6 	; 1.5.18    1/27/04	Added InitLCDAtStartup defalts to 1.00069 17A6 	; 1.5.17    1/19/04	Fixed a goto in "if ShowSplashScrn else ... "00070 17A6 	;	Changed StandardInits no longer shows the SIGNONStr when ShowSplashScrn=100071 17A6 	; 1.5.16    12/25/03	Changed DispDec2pl, DispDec3pl, BtnDebounce and ClrLine to #Define00072 17A6 	; 1.5.15    12/8/03	Changed SendRS232,SendToLCD to #Define00073 17A6 	;	Added lcd_SetDDRamAddress, lcd_ReadData00074 17A6 	;	Moved write of LDO's before read of LDI's00075 17A6 	; 1.5.14    11/30/03	Added Disp_decbyteW3pl and Disp_decbyteW2pl00076 17A6 	; 1.5.13    11/24/03	Added Timer Finished routine calls for timers >=2. constant UsesTimerFinished00077 17A6 	; 1.5.12    11/15/03	Added ifndef for UsesMAX110, Fixed SRAM test bug.00078 17A6 	; 1.5.11    10/12/03	Changed ISR timers so ISR_Timers can be any value00079 17A6 	; 1.5.10    9/3/03	Added Disp_NLS to work with Disp_LZO to kill spaces00080 17A6 	; 1.5.9     8/29/03	Added Disp_LZO option to Disp_dec3B00081 17A6 	; 1.5.8     8/24/03	Moved to MathStuff.asm:Div24x0A,Div16x1600082 17A6 	; 1.5.7     8/15/03	Added SRAM_ReadDR.00083 17A6 	; 1.5.6     6/23/03	Added Call ScrollStringIdle00084 17A6 	; 1.5.5     6/1/03	Added constant EraseROMMsgLine=2, DateToBCD00085 17A6 	; 1.5.4     5/14/03    Added SRAM_ReadPD.00086 17A6 	; 1.5.3     5/6/03	Extended the use of DisplayOrPut, NumsToNic.00087 17A6 	; 1.5.2     4/21/03	Added UsesOscilator1, UsesOscilator2: oscilators on CCP1 and CCP2.00088 17A6 	;	PortC bits:CCP1, CCP2, Oscilator1Time, Oscilator2Time.00089 17A6 	; 1.5.1     4/18/03	Added new names SelectLDI2, SelectLDI3, SelectLDO2, SelectLDO3, SelMax11000090 17A6 	;	Added support for LDO_2 and LDO_3.00091 17A6 	; 1.5       4/17/03	Added LCD cursor control routines.00092 17A6 	;	Moved LCD equates into LowStuff.asm.00093 17A6 	; 1.4.5     4/15/03	Changed Flags26,escaped to escaped.00094 17A6 	; 1.4.4     4/10/03	Added UsesISR, TXSTAValue.00095 17A6 	; 1.4.3      4/9/03	Added BaudRate, defaults to Baud960000096 17A6 	; 1.4.2      4/8/03	Added port A init value PORTA_Value.00097 17A6 	;	Added defaults section.00098 17A6 	; 1.4.1      4/5/03	Fixed a initialization problem w/ 74AHC573 latches00099 17A6 	; 1.4        4/4/03    Added Modeless Serial IO00100 17A6 	;	if UsesRS232BufIO00101 17A6 	;  in bank 300102 17A6 	;   rsInBuffCount	RES	1	;0 = No chrs in buffer00103 17A6 	;   rsOutBuffCount	RES	100104 17A6 	;   rsInBuffPtr	RES	1	;get byte post inc00105 17A6 	;   rsOutBuffPtr	RES	1	;send byte post inc00106 17A6 	;   #Define	rsGotChar	Flags27,0	;Set if a byte is in W00107 17A6 	;  in SRAM00108 17A6 	;   evRS232InBuff	EQU	0x0204	;256 bytes00109 17A6 	;   evRS232OutBuff	EQU	0x0205	;256 bytes00110 17A6 	;  new routines: ScanRS232In, GetRS232Chr, ScanRS232Out, PutRS232Chr00111 17A6 	;	endif00112 17A6 	;00113 17A6 	; 1.3.4      3/28/03	Added ShowSplashScrn/DispSplashScrn00114 17A6 	;	Fixed bug in SetupDataROM00115 17A6 	; 1.3.3      3/27/03   Added LCD_ChrsPerLine to PrintString00116 17A6 	;	Added lcd_gotoxy_NC00117 17A6 	; 1.3.2      3/26/03	Added UsesSRAM,UsesNIC, and expanded UsesI2C00118 17A6 	;	Modified ANATest w/ ANATestSpacing,ANATestLine00119 17A6 	; 1.3.1      2/26/03   Optimizing and commenting.00120 17A6 	; 1.3        2/21/03	Moved Standard initialization routines to LowStuff00121 17A6 	; 1.2        2/18/03   Added SetupDataROM00122 17A6 	; 1.1.5      2/12/03	Minor bug fixes to Disp_dec3B,read_adcs00123 17A6 	; 1.1.4      1/24/03   Modified Disp_decbyteW, Disp_decword, Disp_dec3B to replace00124 17A6 	;	their counterparts in NICStuff.Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 78500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm00125 17A6 	;	Added SRAM_WritePI, SRAM_ReadPI00126 17A6 	; 1.1.3      1/17/03	Added conditions UsesLCD and RS232Config00127 17A6 	; 1.1.2     12/18/02   Modified SRam test to return if no error and Param70<>000128 17A6 	; 1.1.1     10/25/02   Moved custom routines to main.asm00129 17A6 	;	 This file is now all standard routines00130 17A6 	;	 Moved serial and other unused routines back into LowStuff.asm00131 17A6 	;	 Current size 0x7A9 w/ everything on.00132 17A6 	;00133 17A6 	; 1.1       10/22/02   Moved unused/old code to OldCode file.00134 17A6 	;	Optimized scanio to (1+3) from (1+5)00135 17A6 	; 1.0.3     10/16/02   Strings to SRAM00136 17A6 	; 1.0.2     10/1/02	Strings moved to main.asm, oldCode moved to end00137 17A6 	; 1.0.1     9/17/02	Fisrt rev'd version00138 17A6 	;00139 17A6 	;============================================================================================00140 17A6 	; Default values00141 17A6 	;00142 17A6 		ifndef HasMAC_Addr_EEPROM00144 17A6 		endif00145 17A6 	;00146 17A6 		ifndef UsesPulseCounter100148 17A6 		endif00149 17A6 	;00150 17A6 		ifndef UsesPulseCounter200152 17A6 		endif00153 17A6 	;00154 17A6 		ifndef BaudRate00156 17A6 		endif00157 17A6 	;00158 17A6 		ifndef TXSTAValue00160 17A6 		endif00161 17A6 	;00162 17A6 		ifndef PORTA_Value00164 17A6 		endif00165 17A6 	;00166 17A6 		ifndef ANATestSpacing00168 17A6 		endif00169 17A6 	;00170 17A6 		ifndef ANATestLine00172 17A6 		endif00173 17A6 	;00174 17A6 		ifndef ShowSplashScrn00176 17A6 		endif00177 17A6 	;00178 17A6 		ifndef UsesOscilator100180 17A6 		endif00181 17A6 	;00182 17A6 		ifndef UsesOscilator200184 17A6 		endif00185 17A6 	;00186 17A6 		ifndef EraseROMMsgLine00188 17A6 		endif00189 17A6 	;00190 17A6 		ifndef UsesMAX11000192 17A6 		endif00193 17A6 	;00194 17A6 		ifndef UsesTimerFinished00196 17A6 		endif00197 17A6 	;00198 17A6 		ifndef InitLCDAtStartup00200 17A6 		endif00201 17A6 	; I2C EEPROMs00202 17A6 		ifndef EnableEEROMCopy00204 17A6 		endif00205 17A6 		ifndef Using64KBEEPROM00207 17A6 		endif00208 17A6 		ifndef EndOfEEROM00211 17A6 		endif00212 17A6 	;00213 17A6 		ifndef DispIPLine00215 17A6 		endif00216 17A6 	;00217 17A6 	; Optional features (You must op-in if you need these)00218 17A6 	;00219 17A6 		ifndef UsesBootloader00221 17A6 		endif00222 17A6 	;00223 17A6 		ifndef UsesByte2Str00225 17A6 		endif00226 17A6 	;00227 17A6 		ifndef UsesDateToBCD00229 17A6 		endif00230 17A6 	;00231 17A6 		ifndef UsesNum2Str00233 17A6 		endif00234 17A6 	;00235 17A6 		ifndef UsesNum3BToStr00237 17A6 		endif00238 17A6 	;00239 17A6 	; Optional features (You must op-out if you don't need these)00240 17A6 	;00241 17A6 	;   Fix_dec3B,Num3BToStr,Disp_dec3B00242 17A6 		ifndef Uses3BNums00244 17A6 		endif00245 17A6 	;00246 17A6 	;   display_rtc00247 17A6 		ifndef Use_display_rtc00249 17A6 		endif00250 17A6 	;00251 17A6 	;   DispMAC,DispMAC_E2Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 79500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm00252 17A6 		ifndef UsesDispMAC00254 17A6 		endif00255 17A6 	;00256 17A6 		ifndef UsesDelay10uS00258 17A6 		endif00259 17A6 		ifndef UsesDelay40uS00261 17A6 		endif00262 17A6 	;00263 17A6 		ifndef UsesLCDBlink00265 17A6 		endif00266 17A6 		ifndef UsesLCDClear00268 17A6 		endif00269 17A6 		ifndef UsesLCDCursoBlink00271 17A6 		endif00272 17A6 		ifndef Useslcd_Home00274 17A6 		endif00275 17A6 		ifndef Useslcd_ReadData00277 17A6 		endif00278 17A6 		ifndef UsesPushPopParams00280 17A6 		endif00281 17A6 		ifndef UsesSRamPushPopPrm00283 17A6 		endif00284 17A6 		ifndef UsesServoControl00286 17A6 		endif00287 17A6 	;00288 17A6 	;============================================================================================00289 17A6 	; Conditionals00290 17A6 	;00291 17A6 	;00292 17A6 	; UsesI2C	open_file, close_file, i2c_stop, i2c_start, i2c_writeW,00293 17A6 	;	i2c_read1, i2c_read00294 17A6 	; ISR_Timers	DoDecTimers00295 17A6 	; CodeMemStrings	StringDispatch00296 17A6 	; SRAM_Strings	StringDispatch00297 17A6 	; UsesPushPop	PushParams, PopParams, Push, Pop00298 17A6 	; Do_SRAM_Test	SRAM_Test00299 17A6 	; Do_RS232_Test	RS232_Test00300 17A6 	; UsesLCD	lcd_nybble, lcd_Home, lcd_Clear, wait_LCD_Ready, lcd_gotoWClr,00301 17A6 	;	lcd_GotoLineW,PrintString00302 17A6 	; UsesDataLogging	TimeToSRAM00303 17A6 	; HasRTC	display_rtc, set_rtc, read_rtc, read_rtc_byte, read_rtc_nibble,00304 17A6 	;	write_rtc_nibble, lcd_gotoxy, SendLCD_CmdW, lcd_char, Init_LCD00305 17A6 	; Do_LD_Test	LD_Test00306 17A6 	; RTCTest	calls display_rtc from ToggleSysLED00307 17A6 	; ANATest	displays adcs 0,1, and 3 as X, Y, and Z from ToggleSysLED00308 17A6 	; UsesLDI0	calls ReadLDI_0 from scan_io00309 17A6 	; UsesLDI1	calls ReadLDI_1 from scan_io00310 17A6 	; UsesLDI2	calls ReadLDI_2 from scan_io00311 17A6 	; UsesLDI3	calls ReadLDI_3 from scan_io00312 17A6 	; UsesLDO0	calls OPT_WriteLDO_0 from scan_io00313 17A6 	; UsesLDO1	calls OPT_WriteLDO_1 from scan_io00314 17A6 	;00315 17A6 	; AnyANAUsed	read_adcs, ReadADC00316 17A6 	;00317 17A6 	; UsesRS232	init port00318 17A6 	; RS232Active	DispSerial, putchar, get_char, getnum, TXString00319 17A6 	; RS232Config	user_config, xmodem_recv00320 17A6 	; Do_eeROM_Test	eeROM_Test00321 17A6 	; UsesMAX110	WaitMAX110NotBusy, CalMAX110, ReadMAX11000322 17A6 	; UsesRS232BufIO	ScanRS232In, GetRS232Chr, ScanRS232Out, PutRS232Chr00323 17A6 	;00324 17A6 	; Uses3BNums	Fix_dec3B,Num3BToStr,Disp_dec3B00325 17A6 	; Use_display_rtc	display_rtc00326 17A6 	; UsesDispMAC	DispMAC00327 17A6 	; UsesByte2Str	Byte2Str00328 17A6 	; UsesDateToBCD	DateToBCD00329 17A6 	; UsesNum2Str	Num2Str00330 17A6 	; UsesNum3BToStr	Num3BToStr00331 17A6 	; UsesDelay10uS	Delay10uS00332 17A6 	; UsesDelay40uS	Delay40uS00333 17A6 	; UsesLCDBlink	lcd_Blink00334 17A6 	; UsesLCDClear	lcd_Clear00335 17A6 	; UsesLCDCursoBlink	lcd_CursorBlink00336 17A6 	; Useslcd_Home	lcd_Home00337 17A6 	; Useslcd_ReadData	lcd_SetDDRamAddress,lcd_ReadData00338 17A6 	; 00339 17A6 	;============================================================================================00340 17A6 	;00341 17A6 	;Routines in segment 000342 17A6 	; Name	(additional stack words required) Description00343 17A6 	;============================================================================================00344 17A6 	;00345 17A6 	;StandardInits	(1+3) ClearRam, Init ANA I/O, Setup RS232, Setup I2C bus, PortB, PortD, PortA, PortE00346 17A6 	;	T1CON, Latched Outputs, T2CON, INTCON, PR2, myeth, Init_LCD, test/zero SRAM, SetupStrings,00347 17A6 	;	Display SIGNONStr00348 17A6 	; 00349 17A6 	;ClearRam	(1+0) Clear all the 'F877's RAM to 000350 17A6 	;00351 17A6 	;PrintString	(1+2) Send a string (W) to DisplaysW00352 17A6 	;TXString	(1+0) Send a string out the serial port00353 17A6 	;00354 17A6 	;Fix_decbyte	(0) used in converting base 10 byte values to ascii00355 17A6 	;Disp_decbyteW3pl	(1+2) Sets Flags25:DispDec3pl00356 17A6 	;Disp_decbyteW2pl	(1+2) Sets Flags25:DispDec2pl00357 17A6 	;Disp_decbyteW	(1+2) Display a byte in unsigned decimal format no leading 0's no leading spaces00358 17A6 	;Fix_decword	(0) Used to convert a word value to a string00359 17A6 	;Num2Str	(1+1) Convert an Int16 (Param77:Param76) to a pStr at txbuff00360 17A6 	;Disp_decword	(1+2) 16 bit version of Disp_decbyteW00361 17A6 	;Fix_dec3B	(0) Used to convert a 3 byte value to a string00362 17A6 	;Num3BToStr	(1+1) Convert an Int24 at Param77:Param76:Param74 to a pStr at txbuffHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 80500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm00363 17A6 	;Disp_dec3B	(1+2) 24 bit version of Disp_decbyteW00364 17A6 	;00365 17A6 	;ReadData	(0) Read Data from input device, W = select value (Select0,SelectSRAM, etc.)00366 17A6 	;00367 17A6 	;Set8bitAddr	(0) Set the low 8 address bits to the value in the W00368 17A6 	;SetSRAM_Addr	(0) Put the SRAM address on the address bus00369 17A6 	;SRAM_OffsetAddr	(0) Offset the SRAM_Addr by W00370 17A6 	;SRAM_NextAddr	(0) Increments the SRAM_Addr00371 17A6 	;SRAM_PrevAddr	(0) Decrements the SRAM_Addr00372 17A6 	;SRAM_WritePI	(1+0) Write the value in the W to SRAM address SRAM_Addr then increment address00373 17A6 	;SRAM_Write	(1+0) Write the value in the W to SRAM address SRAM_Addr00374 17A6 	;SRAM_ReadPD	(1+0) Read the value in SRAM address SRAM_Addr into the W then decrement address00375 17A6 	;SRAM_ReadDR	(1+0) Set SRAM address to evDataROM+W then SRAM_ReadPI00376 17A6 	;SRAM_ReadPI	(1+0) Read the value in SRAM address SRAM_Addr into the W then increment address00377 17A6 	;StringDispatch	(1+0) Param7F=String Number (0..n), Param7D=Character Number00378 17A6 	;SRAM_Read	(1+0) Read the value in SRAM address SRAM_Addr into the W00379 17A6 	;SRAM_Test	(1+3) Test the SRAM (512KB) a successful test displays (SRAM:5A.1.2.3)00380 17A6 	;SRAM_Zero	(1+3) Zero the Static RAM00381 17A6 	;ZeroSRAM_Addr	(1+0) Setup the SRAM address buffers and variables00382 17A6 	;00383 17A6 	;Processor RAM version00384 17A6 	;PushParams	(0) Push Params76..7D stack++,  STATUS, FSR and W are unchanged00385 17A6 	;PopParams	(0) POP Params76..7D --stack,  STATUS, FSR and W are unchanged00386 17A6 	;Push	(0) Push the W onto the stack++,  STATUS, FSR and W are unchanged00387 17A6 	;Pop	(0) Pop the W from the --stack,  STATUS and FSR are unchanged00388 17A6 	;00389 17A6 	;SRAM version00390 17A6 	;PushParams	(1+1) Push Params76..7D stack++,  STATUS, FSR and W are unchanged00391 17A6 	;PopParams	(1+1) POP Params76..7D --stack,  STATUS, FSR and W are unchanged00392 17A6 	;Push	(1+1) Push the W onto the stack++,  STATUS, FSR and W are unchanged00393 17A6 	;Pop	(1+1) Pop the W from the --stack,  STATUS and FSR are unchanged00394 17A6 	;00395 17A6 	;Delay1Sec	(1+0) Delay 1 Second (RAM used:Param77,78,79)00396 17A6 	;DelayWmS	(0)   Delay (value in W) milliseconds (RAM used:Param77,78,79)00397 17A6 	;Delay10uS	(0)   Delay 10us (RAM used:Param77)00398 17A6 	;Delay100uS	(0)   Delay 100us (RAM used:Param77)00399 17A6 	;Delay40uS	(0)   Delay 40us (RAM used:Param77)00400 17A6 	;DelayWuS	(0)   Delay W us (RAM used:Param77)00401 17A6 	;00402 17A6 	;lcd_nybble	(0)   Send a nybble to the LCD00403 17A6 	;lcd_On	(1+0) Send LCD command for Disp On, Cursor Off, Blink Off00404 17A6 	;lcd_Blink	(1+0) Send LCD command for Disp On, Cursor Off, Blink On00405 17A6 	;lcd_CursorBlink	(1+0) Send LCD command for Disp On, Cursor On, Blink On00406 17A6 	;lcd_Cursor	(1+0) Send LCD command for Disp On, Cursor On, Blink Off00407 17A6 	;lcd_Home	(1+0) Home the cursor without clearing DDRAM00408 17A6 	;lcd_Clear	(1+0) Home the cursor clearing DDRAM00409 17A6 	;lcd_SetDDRamAddress	(1+0) Set the DD Ram Address (W)00410 17A6 	;lcd_ReadData	(1+0) Read from DD Ram (Data returned in W and Param78)00411 17A6 	;wait_LCD_Ready	(0)   Polls the LCDs Busy Flag until clear00412 17A6 	;lcd_GotoLineW	(1+0) Goto the beginning of line W, Clears line.00413 17A6 	;lcd_gotoxy	(1+0) Go to an X-Y position on the display, top left is 0, 0 (W,Param78)00414 17A6 	;lcd_gotoxy_NC	(1+0) No Clear version of lcd_gotoxy00415 17A6 	;SendLCD_CmdW	(1+0) Send a command byte in W to the LCD as two nybbles00416 17A6 	;SendLCD_Cmd79	(1+0) Send a command byte in Param79 to the LCD as two nybbles00417 17A6 	;lcd_char	(1+0) Send a character byte to the LCD as two nybbles00418 17A6 	;Init_LCD	(1+1) Initialise the LCD00419 17A6 	;00420 17A6 	;Byte2Str	(1+1) Convert a Byte (Param77) to a pStr at txbuff00421 17A6 	;Disp_Hex_Byte	(1+2) Send a byte, W, to the display as 2 hex digits00422 17A6 	;Disp_Hex_Nibble	(1+1) Send a nibble to the display as a hex digit00423 17A6 	;00424 17A6 	;Display_Colon	(1+1) Load a ':' into the W and goto DisplaysW00425 17A6 	;Display_Dot	(1+1) Load a '.' into the W and goto DisplaysW00426 17A6 	;DisplaysW	(1+1) Display handler; redirects to LCD and/or serial00427 17A6 	;DispSerial	(1+0) Send the Char in Param7500428 17A6 	;putchar	(0) Send the byte in the W out the serial port00429 17A6 	;DispNIC	(1+1) Send the char to the NIC00430 17A6 	;RS232_Test	(1+0) Test the RS232 port by echoing every character00431 17A6 	;00432 17A6 	;ReadEE79	(0) Read from the CPU's EEPROM using Param79 as Address00433 17A6 	;ReadEE79PI	(0) Read from the CPU's EEPROM using Param79++ as Address00434 17A6 	;ReadEEwW	(0) Read from the CPU's EEPROM using W as Address00435 17A6 	;WriteEEP79WPI	(0) Write CPU's EEPROM using address from Param79++ and Data in W00436 17A6 	;WriteEEP79W	(0) Write CPU's EEPROM using address from Param79 and Data in W00437 17A6 	;WriteEEwW	(0) Write CPU's EEPROM using current value in EEADR and W as Data00438 17A6 	;00439 17A6 	;   Reading/Writing 2 LSBs of MAC Address and 4 byte IP address00440 17A6 	;csum_nonvol	(1+0) Do a 1's complement checksum of the CPU's non-volatile eeprom00441 17A6 	;read_nonvol	(1+1) Read in the nonvolatile parameters to ram, return 0 if error00442 17A6 	;write_nonvol	(1+1) Write out the nonvolatile parameters to CPU's eeprom00443 17A6 	;00444 17A6 	;TimeToSRAM	(1+1) copy the 6 byte time to the SRAM00445 17A6 	;display_rtc	(1+3) Display the RTC on the LCD in the from YY:MM:DD:HH:mm:ss00446 17A6 	;DateToBCD	(1+0) Convert RTC_Year..RTC_Seconds to BCD for set_rtc00447 17A6 	;set_rtc	(1+1) Set the RTC with Data form RTC_Year..RTC_Seconds (BCD format)00448 17A6 	;read_rtc	(1+2) Read the Real Time Clock00449 17A6 	;read_rtc_byte	(1+1) Read one byte from the Real Time Clock00450 17A6 	;read_rtc_nibble	(1+0) Read one nibble from the Real Time Clock00451 17A6 	;write_rtc_nibble	(1+0) Writes the low nibble from Param79 to the RTC Address from Param7800452 17A6 	;00453 17A6 	;WaitMAX110NotBusy	(1+1) Wait for the MAX110 to finish, will loop forever if an error occures00454 17A6 	;CalMAX110	(1+2) Calibrate the MAX110 14bit ADC for Channel 000455 17A6 	;ReadMAX110	(0) Read the MAX110 14bit ADC Channel 000456 17A6 	;00457 17A6 	;OPT_WriteLDO_0	(0) if CMD_LDO_0<>CurrentLDO_0 then WriteLDO_000458 17A6 	;WriteLDO_0	(0) Write the data in CurrentLDO_0 to the latch00459 17A6 	;OPT_WriteLDO_1	(0) if CMD_LDO_1<>CurrentLDO_1 then WriteLDO_100460 17A6 	;WriteLDO_1	(0) Write the data in CurrentLDO_1 to the latch00461 17A6 	;OPT_WriteLDO_2	(0) if CMD_LDO_1<>CurrentLDO_2 then WriteLDO_200462 17A6 	;WriteLDO_2	(0) Write the data in CurrentLDO_2 to the latchHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 81500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm00463 17A6 	;OPT_WriteLDO_3	(0) if CMD_LDO_3<>CurrentLDO_3 then WriteLDO_300464 17A6 	;WriteLDO_3	(0) Write the data in CurrentLDO_3 to the latch00465 17A6 	;ReadLDI_0	(1+0) Read the data from the latch and store it at CurrentLDI_0 & W00466 17A6 	;ReadLDI_1	(1+0) Read the data from the latch and store it at CurrentLDI_1 & W00467 17A6 	;ReadLDI_2	(1+0) Read the data from the latch and store it at CurrentLDI_2 & W00468 17A6 	;ReadLDI_3	(1+0) Read the data from the latch and store it at CurrentLDI_3 & W00469 17A6 	;LD_Test	    Flash each led for 1 seconds then echo switches to LEDs00470 17A6 	;00471 17A6 	;geticks	(0) Update the current tick count, return W=1 if changed00472 17A6 	;scan_io	(1+3) Check timer, scan ADCs, toggle LED if timeout 00473 17A6 	;read_adcs	(0+0) Read ADC values00474 17A6 	;ReadADC	(0) returns ADRESH in Param78 and ADRESL in Param7800475 17A6 	;00476 17A6 	;AddressEEROMR	(1+0) Set the eeprom address from eeROMbuff.Addr and restart for a read00477 17A6 	;AddressEEROM	(1+0) Set the eeprom address from eeROMbuff.Addr writing mode00478 17A6 	;ReadEEROM	(1+1) Read data (eeROMbuff.len 1..32 bytes) from eeproms (eeROMbuff.Addr) to eeROMbuff.Data00479 17A6 	;EraseEEROM	(1+3) Erases the 2nd eeROM chip and clr the ptrs00480 17A6 	;WriteEEROM	(1+1) Write eeROMbuff.Data (eeROMbuff.len 1..32 bytes) to the eeproms (eeROMbuff.Addr)00481 17A6 	;CopyEEROMtoSRAM	(1+1) Copy the whole data space (EEROM) to SRAM 32KB buffer evBuff32KB (W= 32KB page #)00482 17A6 	;SetupDataROM	(1+2) Copy d.d file to SRAM starting at evDataRom*25600483 17A6 	;SetupStrings	(1+2) Copy the s.s file to SRAM starting at evStrings*25600484 17A6 	;open_file	(1+0) Open the previously-found file for transmission (serial eeprom)00485 17A6 	;close_file	(1+0) Close the previously-opened file (serial eeprom)00486 17A6 	;i2c_stop	(0) Ends a iic operation00487 17A6 	;i2c_start	(0) Start an iic operation00488 17A6 	;i2c_writeW	(0) writes a byte to the serial EEPROM, hangs if no ACK00489 17A6 	;i2c_read1	(0) Normal iic read with ACK00490 17A6 	;i2c_read	(0) if Param77 then ACK else NAK00491 17A6 	;00492 17A6 	;find_file	(1+0) Find a filename in ROM filesystem00493 17A6 	;user_config	(1+2) User initialisation code; get serial number and IP address00494 17A6 	;xmodem_recv	(1+2) Handle incoming XMODEM data block00495 17A6 	;00496 17A6 	;ScanRS232In	(1+1) Get a character from the RS232 port and put it in the buffer00497 17A6 	;GetRS232Chr	(0+1) Get a character from the RS232 input buffer00498 17A6 	;ScanRS232Out	(0+1) Put a character from the output buffer in the RS232 port00499 17A6 	;PutRS232Chr	(0+1) Put a character into the RS232 output buffer00500 17A6 	;00501 17A6 	;get_char	(0) Get a character from the serial port00502 17A6 	;getnum	(1+1) Get a 16-bit decimal number from the console (serial port)00503 17A6 	;eeROM_Test	(1+3) Test the eeROM00504 17A6 	;00505 17A6 	;DispIP	(1+3) Display IP address on 2nd line00506 17A6 	;DispMAC	(1+3) Display MAC address on 2nd line00507 17A6 	; 00508 17A6 	; 00509 17A6 	;============================================================================================00510 17A6 	;LCD Stuff00511 17A6 	; DMC-20434 20Char x 4 line LCD00512 17A6 0028 	LCD_MODE	EQU	0x2800513 17A6 0002 	LCD_4Bits	EQU	0x0200514 17A6 0002 	LCD_Dots1	EQU	0x02	;5x7 dots00515 17A6 0008 	LCD_Dots2	EQU	0x0800516 17A6 0006 	LCD_EnterMode	EQU	0x06	;Incrementing cursor, not horiz scroll00517 17A6 0001 	LCD_Clear	EQU	0x0100518 17A6 0002 	LCD_Home	EQU	0x0200519 17A6 0040 	LCD_LINE2	EQU	0x40	;20 dec00520 17A6 000C 	LCD_ON	EQU	0x0C	;Disp On, Cursor Off, Blink Off00521 17A6 000E 	LCD_Cursor	EQU	b'00001110'	;Disp On, Cursor On, Blink Off00522 17A6 000F 	LCD_CursorBlink	EQU	b'00001111'	;Disp On, Cursor On, Blink On00523 17A6 000D 	LCD_Blink	EQU	b'00001101'	;Disp On, Cursor Off, Blink On00524 17A6 	;00525 17A6 0080 	LCD_SETPOS	EQU	0x8000526 17A6 	;00527 17A6 	;============================================================================================00528 17A6 	; Real Time Clock Addresses  EPSON RTC-7242100529 17A6 0000 	RTC_OneSec	EQU	0x00	; 1-second digit reg.00530 17A6 0001 	RTC_TenSec	EQU	0x01	; 10-second digit reg.00531 17A6 0002 	RTC_OneMinute	EQU	0x02	; 1-minute digit reg.00532 17A6 0003 	RTC_TenMinute	EQU	0x03	; 10-minute digit reg.00533 17A6 0004 	RTC_OneHour	EQU	0x04	; 1-hour digit reg.00534 17A6 0005 	RTC_TenHourAMPM	EQU	0x05	; 10-hour digit & AM/PM bit reg.00535 17A6 0006 	RTC_OneDay	EQU	0x06	; 1-day digit reg.00536 17A6 0007 	RTC_TenDay	EQU	0x07	; 10-day digit reg.00537 17A6 0008 	RTC_OneMonth	EQU	0x08	; 1-month digit reg.00538 17A6 0009 	RTC_TenMonth	EQU	0x09	; 10-month digit reg.00539 17A6 000A 	RTC_OneYear	EQU	0x0A	; 1-year digit reg.00540 17A6 000B 	RTC_TenYear	EQU	0x0B	; 10-year digit reg.00541 17A6 000C 	RTC_Week	EQU	0x0C	; Week 0..600542 17A6 000D 	RTC_CtrlRegD	EQU	0x0D	; Control Reg. D00543 17A6 000E 	RTC_CtrlRegE	EQU	0x0E	; Control Reg. E00544 17A6 000F 	RTC_CtrlRegF	EQU	0x0F	; Control Reg. F00545 17A6 	;00546 17A6 0004 	RTC_AMPMmask	EQU	0x04	; mask to extract AM/PM bit00547 17A6 0003 	RTC_KillAMPMmask	EQU	0x03	; mask to kill the AM/PM bit00548 17A6 	;RTC_CtrlRegF bits00549 17A6 0004 	RTC_24Bit	EQU	0x04	; set this bit for 24 hour mode00550 17A6 0005 	RTC_ReadBit	EQU	5	; active low  (PORTD)00551 17A6 0004 	RTC_WriteBit	EQU	4	; active low  (PORTD)00552 17A6 0010 	RTC_ReadMask	EQU	0x10	; set the write bit00553 17A6 0020 	RTC_WriteMask	EQU	0x20	; set the read bit00554 17A6 0006 	RTC_CSBit	EQU	6	;RTC chip select Active Low (PORTB)00555 17A6 	;============================================================================================00556 17A6 	; Reset Vector entry point00557 17A6 	;00558 17A6 		ORG	0x0000	; processor reset vector00559 0000 	;00560 0000 3010 		MOVLW	0x10	; ensure page bits are cleared00561 0001 008A 		MOVWF	PCLATH00562 0002 28B9 		GOTO	Main	; go to beginning of programHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 82500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm00563 0003 	;00564 0003 	;============================================================================================00565 0003 	; Interupt entry point00566 0003 	;00567 0003 		ORG	0x0004	; interrupt vector location00568 0004 		if UsesISR00771 0004 		endif		; if UsesISR00772 0004 0009 		RETFIE		; return from interrupt00773 0005 	;00774 0005 	;=========================================================================================00775 0005 	;=========================================================================================00776 0005 	; Standard Initalization routines00777 0005 	;00778 0005 	; ClearRam, Init ANA I/O, Setup RS232, Setup I2C bus, PortB, PortD, PortA, PortE00779 0005 	; T1CON, Latched Outputs, T2CON, INTCON, PR2, myeth, Init_LCD, test/zero SRAM, SetupStrings,00780 0005 	; Display SIGNONStr00781 0005 	;00782 0005 	; Entry: none00783 0005 	; Exit: none00784 0005 	; RAM used: All00785 0005 	; Calls:(1+3) ClearRam,SetupStrings,lcd_GotoLineW,PrintString,StandardInits_1,DelayWmS,Init_LCD00786 0005 	;	DisplaysW,SRAM_Test,SRAM_Zero00787 0005 	;00788 0005 2085 	StandardInits	CALL	ClearRam00789 0006 	;00790 0006 3081 		MOVLW	ADCON0Val	;div32,CH0,ON00791 0007 009F 		MOVWF	ADCON000792 0008 1683 		BSF	STATUS,RP0	;Bank 100793 0009 3087 		MOVLW	ADCON1_Value	;may be All_Digital00794 000A 009F 		MOVWF	ADCON100795 000B 1283 		BCF	STATUS,RP0	;Bank 000796 000C 	;00797 000C 		if UsesRS23200817 000C 		endif00818 000C 	;00819 000C 		if UsesI2C00820 000C 	;===========================================================================================00821 000C 	; I2C init code00822 000C 	; configure SSP for hardware I2C00823 000C 1683 		BSF	STATUS,RP0	; Bank 100824 000D 1587 		BSF	TRISC,SCL	; I2C SCL pin is input (will be controlled by SSP)00825 000E 1607 		BSF	TRISC,SDA	; I2C SDA pin is input (will be controlled by SSP)00826 000F 1283 		BCF	STATUS,RP0	; Bank 000827 0010 1607 		BSF	PORTC,SDA00828 0011 1587 		BSF	PORTC,SCL00829 0012 1683 		BSF	STATUS,RP0	; Bank 100830 0013 1794 		BSF	SSPSTAT,SMP	; I2C slew rate control disabled00831 0014 1283 		BCF	STATUS,RP0	; Bank 000832 0015 1594 		BSF	SSPCON,SSPM3	; I2C master mode in hardware00833 0016 1114 		BCF	SSPCON,SSPM200834 0017 1094 		BCF	SSPCON,SSPM100835 0018 1014 		BCF	SSPCON,SSPM000836 0019 1694 		BSF	SSPCON,SSPEN	; enable SSP module00837 001A 1683 		BSF	STATUS,RP0	; Bank 100838 001B 3030 		MOVLW	d'48'	; set I2C clock rate to 100kHz00839 001C 0093 		MOVWF	SSPADD	; Fosc/(4*(SSPADD+1))=100.310kHz00840 001D 1283 		BCF	STATUS,RP0	; Bank 000841 001E 	;00842 001E 		endif00843 001E 	;00844 001E 	; setup Port B All outputs with SelectEnable=1,IORead=1,IOWrite=1, LCD_E=000845 001E 3000 		MOVLW	PORTA_Value00846 001F 0085 		MOVWF	PORTA00847 0020 3070 		MOVLW	PORTB_Value00848 0021 0086 		MOVWF	PORTB00849 0022 0188 		CLRF	PORTD00850 0023 1683 		BSF	STATUS,RP0	; Bank 100851 0024 3000 		MOVLW	TRISBValue	;All out00852 0025 0086 		MOVWF	TRISB00853 0026 1381 		BCF	OPTION_REG,NOT_RBPU	; Use pullups on port B00854 0027 	;00855 0027 3000 		MOVLW	All_Out00856 0028 0088 		MOVWF	TRISD	; set for clearing latched outputs00857 0029 	;00858 0029 302F 		MOVLW	TRISAValue00859 002A 0085 		MOVWF	TRISA00860 002B 	;00861 002B 3007 		MOVLW	TRISEValue00862 002C 0089 		MOVWF	TRISE00863 002D 	;00864 002D 1283 		BCF	STATUS,RP0	; Bank 000865 002E 	;00866 002E 3035 		MOVLW	TIMER1_SET	; Init timer 100867 002F 0090 		MOVWF	T1CON00868 0030 	;00869 0030 	;Set all Latched outputs to 0x0000870 0030 3000 		MOVLW	Select0	;Select0, A0..A700871 0031 206F 		CALL	StandardInits_100872 0032 3001 		MOVLW	Select1	;Select1, A8..A1500873 0033 206F 		CALL	StandardInits_100874 0034 3002 		MOVLW	Select2	;Select2, A16..A2300875 0035 206F 		CALL	StandardInits_100876 0036 	;00877 0036 		if UsesLDO000878 0036 	;Set outputs of LDO_0 on so LEDs will be off00879 0036 307F 		MOVLW	LDO_0_InitVal	;all high except reset00880 0037 0088 		MOVWF	PORTD00881 0038 		mBank300881 0038 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000881 0039 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 83500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm00882 003A 00A8 		MOVWF	CMD_LDO_000883 003B 00A5 		MOVWF	CurrentLDO_000884 003C 3008 		MOVLW	SelectLDO000885 003D 206F 		CALL	StandardInits_100886 003E 		endif00887 003E 	;00888 003E 		if UsesLDO100889 003E 3000 		MOVLW	LDO_1_InitVal00890 003F 0088 		MOVWF	PORTD00891 0040 		mBank300891 0040 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000891 0041 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100892 0042 00A9 		MOVWF	CMD_LDO_100893 0043 00A6 		MOVWF	CurrentLDO_100894 0044 3009 		MOVLW	SelectLDO100895 0045 206F 		CALL	StandardInits_100896 0046 		endif00897 0046 	;00898 0046 		if UsesLDO200906 0046 		endif00907 0046 	;00908 0046 		if UsesLDO300916 0046 		endif00917 0046 	;00918 0046 	;00919 0046 	; Setup TMR2 for 1/256 sec interupts00920 0046 307E 		MOVLW	T2CON_Value00921 0047 0092 		MOVWF	T2CON00922 0048 1683 		BSF	_RP0	; Bank 100923 0049 170B 		BSF	INTCON,PEIE00924 004A 	;00925 004A 		if ISR_Timers>000927 004A 		endif00928 004A 	;00929 004A 3000 		MOVLW	HasISR00930 004B 3980 		ANDLW	0x80	; True?00931 004C 		SKPZ	00931 004C 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00932 004D 178B 		BSF	INTCON,GIE	;GIE bit00933 004E 304B 		MOVLW	PR2_Value00934 004F 0092 		MOVWF	PR200935 0050 1283 		BCF	_RP0	; Bank 000936 0051 	;00937 0051 	;00938 0051 		if UsesNIC00939 0051 	; Setup MAC address (ethernet hardware addreess)00940 0051 	; The MAC address is six consecutive bytes for fast access.00941 0051 3000 		MOVLW	MAC_Addr000942 0052 00AA 		MOVWF	myeth000943 0053 3004 		MOVLW	MAC_Addr100944 0054 00AB 		MOVWF	myeth100945 0055 30A3 		MOVLW	MAC_Addr200946 0056 00AC 		MOVWF	myeth200947 0057 3000 		MOVLW	MAC_Addr300948 0058 00AD 		MOVWF	myeth300949 0059 01AE 		CLRF	myeth4	;will be loaded from eprom(0)00950 005A 01AF 		CLRF	myeth5	;will be loaded from eprom(1)00951 005B 	;00952 005B 		if HasMAC_Addr_EEPROM00957 005B 		endif00958 005B 		endif00959 005B 	;00960 005B 1525 		BSF	BtnDebounce00961 005C 	;Extended powerup delay00962 005C 30FF 		MOVLW	0xFF00963 005D 22EC 		CALL	DelayWmS00964 005E 	;00965 005E 		if UsesLCD & InitLCDAtStartup00966 005E 237E 		Call	Init_LCD	; Init LCD 00967 005F 1626 		BSF	SendToLCD	;disp_lcd:=TRUE; Set display flags 00968 0060 		endif00969 0060 	;00970 0060 		if RS232Active00972 0060 		endif00973 0060 	;00974 0060 	; if activated go to the LED and Switch test from here00975 0060 		if Do_LD_Test00977 0060 		endif00978 0060 	;00979 0060 		if UsesLCD & InitLCDAtStartup00980 0060 0103 		CLRW00981 0061 2353 		CALL	lcd_GotoLineW00982 0062 		if ShowSplashScrn00983 0062 30E0 		MOVLW	eSplashText00984 0063 2079 		CALL	DispSplashScrn_100985 0064 3001 		MOVLW	0x01	;2nd line00986 0065 2353 		CALL	lcd_GotoLineW00987 0066 30F0 		MOVLW	eSplashText200988 0067 2079 		CALL	DispSplashScrn_100989 0068 		else00992 0068 		endif		;if ShowSplashScrn00993 0068 		endif		;if UsesLCD00994 0068 	;00995 0068 		if UsesSRAM00996 0068 	;========================================00997 0068 	; zeroing sram, because of multiplexing this is about 2,000,000 bus cycles (about 4 seconds)00998 0068 	;00999 0068 	; If SRAM test is activated go to the SRAM test from here01000 0068 	;01001 0068 		if Do_SRAM_TestHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 84500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm01004 0068 		else01005 0068 		if Do_ZeroRAM01006 0068 2279 		Call	SRAM_Zero	;just zero01007 0069 		endif01008 0069 		endif01009 0069 		endif01010 0069 	;01011 0069 	;================================================================01012 0069 	; Move strings to SRAM01013 0069 		if SRAM_Strings01014 0069 24C2 		Call	SetupStrings01015 006A 		endif01016 006A 	;01017 006A 	;01018 006A 		if UsesLCD & InitLCDAtStartup01019 006A 		if ShowSplashScrn01020 006A 		else01025 006A 		endif01026 006A 		endif01027 006A 	;01028 006A 		if UsesPulseCounter101036 006A 		endif01037 006A 	;01038 006A 		if UsesPulseCounter201046 006A 		endif01047 006A 	;01048 006A 		if UsesOscilator101057 006A 		endif01058 006A 	;01059 006A 		if UsesOscilator201068 006A 		endif01069 006A 	;01070 006A 		if UsesServoControl01072 006A 		endif01073 006A 	;01074 006A 		if UsesBootloader01075 006A 		mCall0To3	PwrUpTest01075 006A 158A      M		BSF	PCLATH,3		BSF	PCLATH,301075 006B 160A      M		BSF	PCLATH,4		BSF	PCLATH,401075 006C 2719      M		CALL	PwrUpTest		CALL	Destination01075 006D 018A      M		CLRF	PCLATH		CLRF	PCLATH01076 006E 		endif01077 006E 	;01078 006E 		if UsesRS232BufIO01083 006E 		endif01084 006E 	;01085 006E 0008 		RETURN01086 006F 	;01087 006F 0183 	StandardInits_1	CLRF	STATUS	;saves 1 byte over mBank001088 0070 00F8 		MOVWF	Param7801089 0071 0806 		MOVF	PORTB,W01090 0072 39F0 		ANDLW	AddressMask01091 0073 0478 		IORWF	Param78,W01092 0074 0086 		MOVWF	PORTB01093 0075 1206 		BCF	PORTB,SelectEnable01094 0076 0000 		NOP01095 0077 1606 		BSF	PORTB,SelectEnable01096 0078 0008 		RETURN01097 0079 	;01098 0079 00FA 	DispSplashScrn_1	MOVWF	Param7A01099 007A 	;01100 007A 		if LCD_ChrsPerLine=d'20'01101 007A 3020 		MOVLW	' '01102 007B 23AB 		CALL	DisplaysW01103 007C 3020 		MOVLW	' '01104 007D 23AB 		CALL	DisplaysW01105 007E 		endif01106 007E 	;01107 007E 	DispSplashScrn_L1	MOVFW	Param7A01107 007E 087A      M		MOVF	Param7A,W		MOVF	src,W01108 007F 23C7 		CALL	ReadEEwW01109 0080 		SKPNZ01109 0080 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z01110 0081 0008 		RETURN01111 0082 23AB 		CALL	DisplaysW01112 0083 0AFA 		INCF	Param7A,F01113 0084 287E 		GOTO	DispSplashScrn_L101114 0085 	;01115 0085 	;===============================================================================================01116 0085 	; Clear all RAM01117 0085 	; Entry: none01118 0085 	; Exit: none01119 0085 	; RAM used: All01120 0085 	; Calls:(1+0) ClearRam_L201121 0085 	;01122 0085 0183 	ClearRam	CLRF	STATUS01123 0086 305F 		MOVLW	0x5F	;Clear 20h-7Eh, 95 bytes01124 0087 00FF 		MOVWF	Param7F01125 0088 3020 		MOVLW	0x2001126 0089 0084 		MOVWF	FSR01127 008A 209A 		CALL	ClearRam_L201128 008B 	;01129 008B 3050 		MOVLW	0x50	;Clear A0h-FFh, 80 bytes01130 008C 00FF 		MOVWF	Param7F01131 008D 30A0 		MOVLW	0xA001132 008E 0084 		MOVWF	FSR01133 008F 209A 		CALL	ClearRam_L201134 0090 	;01135 0090 1783 		BSF	STATUS,IRP	;Clear 110h-16Fh, 96 bytes01136 0091 3060 		MOVLW	0x60	;96Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 85500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm01137 0092 00FF 		MOVWF	Param7F01138 0093 3010 		MOVLW	0x1001139 0094 0084 		MOVWF	FSR01140 0095 209A 		CALL	ClearRam_L201141 0096 	;	01142 0096 3060 		MOVLW	0x60	;Clear 190h-1EFh, 96 bytes01143 0097 00FF 		MOVWF	Param7F01144 0098 3090 		MOVLW	0x9001145 0099 0084 		MOVWF	FSR01146 009A 	;01147 009A 0180 	ClearRam_L2	CLRF	INDF01148 009B 0A84 		INCF	FSR,F01149 009C 0BFF 		DECFSZ	Param7F,F01150 009D 289A 		GOTO	ClearRam_L201151 009E 0008 		RETURN01152 009F 	;01153 009F 	;01154 009F 		if UsesLCD01155 009F 	;=========================================================================================01156 009F 	; Send string number (W) to DisplaysW01157 009F 	; Entry: W = string number01158 009F 	; RAM used: Param7D=CharCount, Param7F=StringNumber01159 009F 	; Calls:(1+2) DisplaysW01160 009F 	;01161 009F 00FF 	PrintString	MOVWF	Param7F01162 00A0 01FD 		CLRF	Param7D	;CharCount=001163 00A1 	PrintString_L1	01164 00A1 		if CodeMemStrings01166 00A1 		endif01167 00A1 		if SRAM_Strings01168 00A1 2255 		CALL	StringDispatch	;Get the next Char01169 00A2 		endif01170 00A2 0AFD 		INCF	Param7D,F	;CharCount:=CharCount+101171 00A3 3800 		IORLW	0x00	;set Z if last char01172 00A4 1903 		BTFSC	STATUS,Z01173 00A5 0008 		RETURN		;00 = done01174 00A6 23AB 		CALL	DisplaysW	;Display the Char01175 00A7 3014 		MOVLW	LCD_ChrsPerLine01176 00A8 027D 		SUBWF	Param7D,W	;CharCount-LCD_ChrsPerLine01177 00A9 		SKPZ		;skip if zero01177 00A9 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z01178 00AA 28A1 		GOTO	PrintString_L101179 00AB 0008 		RETURN01180 00AC 	;01181 00AC 		endif01182 00AC 	;01183 00AC 		if RS232Active01208 00AC 		endif01209 00AC 	;01210 00AC 	;============================================================================================01211 00AC 	; used in converting base 10 byte values to ascii01212 00AC 	;01213 00AC 	; Param78=Param77 div Param7901214 00AC 	; Param77=Param77 mod Param7901215 00AC 	;01216 00AC 	; Entry: Param79=100 or 10, Param77=data01217 00AC 	; Exit: Param77 remainder, Param78=0..901218 00AC 	; RAM used: Param77, Param78, Param79  (verified 6/1/03)01219 00AC 	; Calls:(0) none01220 00AC 	;01221 00AC 01F8 	Fix_decbyte	CLRF	Param7801222 00AD 0879 		MOVF	Param79,W01223 00AE 0277 		SUBWF	Param77,W	;data-10001224 00AF 1C03 		BTFSS	STATUS,C01225 00B0 0008 		RETURN		;Param77>=10001226 00B1 	;01227 00B1 0AF8 	Fix_decbyte_L1	INCF	Param78,F01228 00B2 00F7 		MOVWF	Param7701229 00B3 0879 		MOVF	Param79,W01230 00B4 0277 		SUBWF	Param77,W	;data-10001231 00B5 1803 		BTFSC	STATUS,C01232 00B6 28B1 		GOTO	Fix_decbyte_L1	;Param77>=10001233 00B7 0008 		RETURN01234 00B8 	;01235 00B8 	;=====================================================================================01236 00B8 	; Display a byte in unsigned decimal format no leading 0's no leading spaces01237 00B8 	; Entry: W=Data, Flags25:DispDec2pl, Flags25:DispDec3pl, Flags25:DispLSpaces01238 00B8 	;  Setting Flags25:DispDec2pl causes a leading zero in the second place01239 00B8 	;  Setting Flags25:DispDec3pl causes a leading zero in the third place01240 00B8 	; Exit:none01241 00B8 	; RAM used: Param71:0, Param77, Param78, Param79, FSR01242 00B8 	; Calls:(1+2) Fix_decbyte, DisplaysW01243 00B8 	;01244 00B8 0183 	Disp_decbyteW3pl	CLRF	STATUS	;saves 1 byte over mBank001245 00B9 14A5 		BSF	DispDec3pl01246 00BA 0183 	Disp_decbyteW2pl	CLRF	STATUS	;saves 1 byte over mBank001247 00BB 1425 		BSF	DispDec2pl01248 00BC 0183 	Disp_decbyteW	CLRF	STATUS	;saves 1 byte over mBank001249 00BD 1071 		BCF	Param71,0	;Zero flag01250 00BE 00F7 		MOVWF	Param7701251 00BF 3064 		MOVLW	d'100'01252 00C0 00F9 		MOVWF	Param7901253 00C1 20AC 		CALL	Fix_decbyte01254 00C2 0878 		MOVF	Param78,W01255 00C3 1D03 		BTFSS	STATUS,Z	; skip if Param78=001256 00C4 28CB 		GOTO	Disp_decbyteW_Show3	;first digit is not zero01257 00C5 18A5 		BTFSC	DispDec3pl	; show 3 places?01258 00C6 28CB 		GOTO	Disp_decbyteW_Show3	;Display 3rd digit 0..901259 00C7 1FA5 		BTFSS	DispLSpaces01260 00C8 28CE 		GOTO	Disp_decbyteW_1	;no leading spaceHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 86500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm01261 00C9 3020 		MOVLW	' '01262 00CA 28CD 		GOTO	Disp_decbyteW_Show3S	;show the leading space01263 00CB 	;01264 00CB 1471 	Disp_decbyteW_Show3	BSF	Param71,0	;Show Zero flag01265 00CC 3E30 		ADDLW	'0'01266 00CD 2148 	Disp_decbyteW_Show3S	CALL	DisplayOrPut01267 00CE 	;01268 00CE 300A 	Disp_decbyteW_1	MOVLW	d'10'01269 00CF 00F9 		MOVWF	Param7901270 00D0 20AC 		CALL	Fix_decbyte01271 00D1 0878 		MOVF	Param78,W01272 00D2 1D03 		BTFSS	STATUS,Z	;skip if 001273 00D3 28DC 		GOTO	Disp_decbyteW_2	;secnd digit not zero01274 00D4 1871 		BTFSC	Param71,001275 00D5 28DC 		GOTO	Disp_decbyteW_2	;prev digit was shown 01276 00D6 1825 		BTFSC	DispDec2pl	; show 2 places?01277 00D7 28DC 		GOTO	Disp_decbyteW_2	;Display 2nd digit 0..901278 00D8 1FA5 		BTFSS	DispLSpaces01279 00D9 28DE 		GOTO	Disp_decbyteW_301280 00DA 3020 		MOVLW	' '01281 00DB 28DD 		GOTO	Disp_decbyteW_2S01282 00DC 	;01283 00DC 3E30 	Disp_decbyteW_2	ADDLW	'0'01284 00DD 2148 	Disp_decbyteW_2S	CALL	DisplayOrPut01285 00DE 	;01286 00DE 0877 	Disp_decbyteW_3	MOVF	Param77,W01287 00DF 3E30 		ADDLW	'0'01288 00E0 10A5 		BCF	DispDec3pl01289 00E1 1025 		BCF	DispDec2pl01290 00E2 2948 		GOTO	DisplayOrPut01291 00E3 	;01292 00E3 	;==============================================================================01293 00E3 	; Used to convert a word value to a string01294 00E3 	; Entry: Param7A:Param79=multiplier (10000,1000,100 or 10), Param77:Param76=data01295 00E3 	; Exit: Param77:Param76 remainder, Param78=result('0'..'9')01296 00E3 	; RAM used: Param76, Param77, Param78, Param79, Param7A01297 00E3 	; Calls:(0) none01298 00E3 	;01299 00E3 01F8 	Fix_decword	CLRF	Param7801300 00E4 	;if multiplier >= data01301 00E4 087A 	Fix_decword_L1	MOVF	Param7A,W01302 00E5 0277 		SUBWF	Param77,W	01303 00E6 1903 		BTFSC	STATUS,Z01304 00E7 28EB 		GOTO	Fix_decword_1	;high data = high multi01305 00E8 1C03 		BTFSS	STATUS,C	;skip if not barrowed data>=multi01306 00E9 28F7 		GOTO	Fix_decword_End	;high data < high multiplier01307 00EA 28EF 		GOTO	Fix_decword_2	;high data > high multiplier01308 00EB 0879 	Fix_decword_1	MOVF	Param79,W01309 00EC 0276 		SUBWF	Param76,W	;low data - low multi01310 00ED 1C03 		BTFSS	STATUS,C	;skip if not barrowed data>=multi01311 00EE 28F7 		GOTO	Fix_decword_End	;data < multiplier01312 00EF 	;result++01313 00EF 	;data -= multiplier01314 00EF 0AF8 	Fix_decword_2	INCF	Param78,F01315 00F0 0879 		MOVF	Param79,W01316 00F1 02F6 		SUBWF	Param76,F	;low data - low multi01317 00F2 1C03 		BTFSS	STATUS,C	; skip if not barrowed01318 00F3 03F7 		DECF	Param77,F01319 00F4 087A 		MOVF	Param7A,W01320 00F5 02F7 		SUBWF	Param77,F	;high data - high multi01321 00F6 28E4 		GOTO	Fix_decword_L1	;Param77>=10001322 00F7 	; else done01323 00F7 0008 	Fix_decword_End	RETURN01324 00F8 	;01325 00F8 		if UsesNum2Str01346 00F8 		endif01347 00F8 	;===============================================================================================01348 00F8 	; 16 bit version of Disp_decbyteW01349 00F8 	; if DispDec2pl is cleared01350 00F8 	;  output to DisplaysW is '00000'..'65535'01351 00F8 	;  else output to DisplaysW is '##0.00'..'655.35'01352 00F8 	; Enrty: Param77:Param76  16 bit value01353 00F8 	; Exit: none01354 00F8 	; RAM used: Param76, Param77, Param78, Param79, Param7A01355 00F8 	; Calls: (1+2) Fix_decword, DisplaysW01356 00F8 	;01357 00F8 	Disp_decword	mBank001357 00F8 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001357 00F9 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101358 00FA 1825 		BTFSC	DispDec2pl01359 00FB 14A7 		BSF	Disp_LZO01360 00FC 1927 		BTFSC	DispDec1pl01361 00FD 14A7 		BSF	Disp_LZO01362 00FE 3010 		MOVLW	low d'10000'01363 00FF 00F9 		MOVWF	Param7901364 0100 3027 		MOVLW	high d'10000'01365 0101 00FA 		MOVWF	Param7A01366 0102 20E3 		CALL	Fix_decword	;(1+0)01367 0103 0878 		MOVF	Param78,W01368 0104 1CA7 		BTFSS	Disp_LZO	;if set ##0.0001369 0105 2908 		GOTO	Disp_decword_1	; else disp 001370 0106 1903 		BTFSC	STATUS,Z	; don't disp 001371 0107 290C 		GOTO	Disp_decword_2A	; show a <space> instead01372 0108 3E30 	Disp_decword_1	ADDLW	'0'01373 0109 10A7 		BCF	Disp_LZO01374 010A 2148 	Disp_decword_1sp	CALL	DisplayOrPut	;(1+2)01375 010B 290F 		GOTO	Disp_decword_201376 010C 	;01377 010C 3020 	Disp_decword_2A	MOVLW	' '01378 010D 1DA7 		BTFSS	Disp_NLSHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 87500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm01379 010E 290A 		GOTO	Disp_decword_1sp01380 010F 	;01381 010F 30E8 	Disp_decword_2	MOVLW	low d'1000'01382 0110 00F9 		MOVWF	Param7901383 0111 3003 		MOVLW	high d'1000'01384 0112 00FA 		MOVWF	Param7A01385 0113 20E3 		CALL	Fix_decword01386 0114 0878 		MOVF	Param78,W01387 0115 1CA7 		BTFSS	Disp_LZO01388 0116 2919 		GOTO	Disp_decword_301389 0117 	;01390 0117 1903 		BTFSC	STATUS,Z	; don't disp 001391 0118 291D 		GOTO	Disp_decword_4A	; show a <space> instead01392 0119 3E30 	Disp_decword_3	ADDLW	'0'01393 011A 10A7 		BCF	Disp_LZO01394 011B 2148 	Disp_decword_3Sp	CALL	DisplayOrPut01395 011C 2920 		GOTO	Disp_decword_401396 011D 	;01397 011D 3020 	Disp_decword_4A	MOVLW	' '01398 011E 1DA7 		BTFSS	Disp_NLS01399 011F 291B 		GOTO	Disp_decword_3Sp01400 0120 	;01401 0120 3064 	Disp_decword_4	MOVLW	d'100'01402 0121 00F9 		MOVWF	Param7901403 0122 01FA 		CLRF	Param7A01404 0123 20E3 		CALL	Fix_decword01405 0124 0878 		MOVF	Param78,W01406 0125 1CA7 		BTFSS	Disp_LZO01407 0126 292B 		GOTO	Disp_decword_5LZ01408 0127 1D27 		BTFSS	DispDec1pl01409 0128 292B 		GOTO	Disp_decword_5LZ01410 0129 		SKPNZ		; don't disp 001410 0129 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z01411 012A 292F 		GOTO	Disp_decword_5D	; show a <space> instead01412 012B 	;01413 012B 3E30 	Disp_decword_5LZ	ADDLW	'0'01414 012C 10A7 		BCF	Disp_LZO01415 012D 2148 	Disp_decword_4sp	CALL	DisplayOrPut01416 012E 2932 		GOTO	Disp_decword_5B01417 012F 	;01418 012F 3020 	Disp_decword_5D	MOVLW	' '01419 0130 1DA7 		BTFSS	Disp_NLS01420 0131 292D 		GOTO	Disp_decword_4sp01421 0132 	;01422 0132 1C25 	Disp_decword_5B	BTFSS	DispDec2pl01423 0133 2936 		GOTO	Disp_decword_501424 0134 302E 		MOVLW	'.'01425 0135 2148 		CALL	DisplayOrPut01426 0136 	;01427 0136 300A 	Disp_decword_5	MOVLW	d'10'01428 0137 00F9 		MOVWF	Param7901429 0138 01FA 		CLRF	Param7A01430 0139 20E3 		CALL	Fix_decword01431 013A 0878 		MOVF	Param78,W01432 013B 3E30 		ADDLW	'0'01433 013C 2148 		CALL	DisplayOrPut01434 013D 	;01435 013D 1D27 		BTFSS	DispDec1pl01436 013E 2941 		GOTO	Disp_decword_701437 013F 302E 		MOVLW	'.'01438 0140 2148 		CALL	DisplayOrPut01439 0141 3030 	Disp_decword_7	MOVLW	'0'01440 0142 0776 		ADDWF	Param76,W01441 0143 	;reset defaults01442 0143 10A5 		BCF	DispDec3pl01443 0144 1025 		BCF	DispDec2pl01444 0145 1127 		BCF	DispDec1pl01445 0146 10A7 		BCF	Disp_LZO01446 0147 11A7 		BCF	Disp_NLS01447 0148 	;01448 0148 	;================================================================01449 0148 	;01450 0148 	DisplayOrPut	mBank001450 0148 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001450 0149 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101451 014A 1A27 		BTFSC	NumsToNic01452 014B 294F 		GOTO	DOP_Put01453 014C 1827 		BTFSC	NumsToRam01454 014D 2953 		GOTO	DOP_Ram01455 014E 2BAB 		GOTO	DisplaysW01456 014F 	DOP_Put01457 014F 		if UsesNIC01458 014F 		mCall0To1	putnic_checkbyte01458 014F 158A      M		BSF	PCLATH,3		BSF	PCLATH,301458 0150 2388      M		CALL	putnic_checkbyte		CALL	Destination01458 0151 018A      M		CLRF	PCLATH		CLRF	PCLATH01459 0152 		endif01460 0152 0008 		RETURN01461 0153 	;01462 0153 0080 	DOP_Ram	MOVWF	INDF01463 0154 0A84 		INCF	FSR,F01464 0155 0008 		RETURN01465 0156 	;01466 0156 		if Uses3BNums01467 0156 	;==============================================================================01468 0156 	; Used to convert a 3 byte value to a string01469 0156 	; Entry: Param7B:Param7A:Param79=multiplier (1,000,000, 100,000, 10,000, 1,000, 100 or 10)01470 0156 	;   , Param77:Param76:Param74=data01471 0156 	; Exit: Param77:Param76:Param74 remainder, Param78=result(0..9)01472 0156 	; RAM used: Param74, Param76, Param77, Param78, Param79, Param7A, Param7BHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 88500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm01473 0156 	; Calls:(0) none01474 0156 	;01475 0156 01F8 	Fix_dec3B	CLRF	Param7801476 0157 	;if multiplier >= data01477 0157 087B 	Fix_dec3B_L1	MOVF	Param7B,W01478 0158 0277 		SUBWF	Param77,W	01479 0159 1903 		BTFSC	STATUS,Z01480 015A 295E 		GOTO	Fix_dec3B_3	;high data = high multi01481 015B 1C03 		BTFSS	STATUS,C	;skip if not barrowed data>=multi01482 015C 2975 		GOTO	Fix_dec3B_End	;high data < high multiplier01483 015D 2969 		GOTO	Fix_dec3B_2	;high data > high multiplier01484 015E 	;01485 015E 087A 	Fix_dec3B_3	MOVF	Param7A,W01486 015F 0276 		SUBWF	Param76,W	01487 0160 1903 		BTFSC	STATUS,Z01488 0161 2965 		GOTO	Fix_dec3B_1	;mid data = mid multi01489 0162 1C03 		BTFSS	STATUS,C	;skip if not barrowed data>=multi01490 0163 2975 		GOTO	Fix_dec3B_End	;mid data < mid multiplier01491 0164 2969 		GOTO	Fix_dec3B_2	;mid data > mid multiplier01492 0165 0879 	Fix_dec3B_1	MOVF	Param79,W01493 0166 0274 		SUBWF	Param74,W	;low data - low multi01494 0167 1C03 		BTFSS	STATUS,C	;skip if not barrowed data>=multi01495 0168 2975 		GOTO	Fix_dec3B_End	;data < multiplier01496 0169 	;result++01497 0169 	;data -= multiplier01498 0169 0AF8 	Fix_dec3B_2	INCF	Param78,F01499 016A 0879 		MOVF	Param79,W01500 016B 02F4 		SUBWF	Param74,F	;low data - low multi01501 016C 1C03 		BTFSS	STATUS,C	; skip if not barrowed01502 016D 03F6 		DECF	Param76,F01503 016E 087A 		MOVF	Param7A,W01504 016F 02F6 		SUBWF	Param76,F	;mid data - mid multi01505 0170 1C03 		BTFSS	STATUS,C	; skip if not barrowed01506 0171 03F7 		DECF	Param77,F01507 0172 087B 		MOVF	Param7B,W01508 0173 02F7 		SUBWF	Param77,F	;high data - high multi01509 0174 2957 		GOTO	Fix_dec3B_L1	;Param77>=10001510 0175 	; else done01511 0175 3030 	Fix_dec3B_End	MOVLW	'0'	01512 0176 07F8 		ADDWF	Param78,F01513 0177 0008 		RETURN01514 0178 	;01515 0178 		endif01516 0178 	;01517 0178 		if UsesNum3BToStr01535 0178 		endif01536 0178 	;01537 0178 		if UsesNum2Str | UsesNum3BToStr01546 0178 		endif01547 0178 	;01548 0178 		if Uses3BNums01549 0178 	;===============================================================================================01550 0178 	; 24 bit version of Disp_decbyteW01551 0178 	; output to DisplaysW is '00000000'..'16777215'01552 0178 	; Enrty: Param77:Param76:Param74  24 bit value little endian01553 0178 	; Options: Set flag Disp_LZO for leading zero omission. This flag gets cleared.01554 0178 	; Exit: none01555 0178 	; RAM used: Param74,Param76, Param77, Param78, Param79, Param7A, Param7B, FSR01556 0178 	; Calls: (1+2) Fix_dec3B, DisplaysW01557 0178 	;01558 0178 	Disp_dec3B	mBank001558 0178 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001558 0179 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101559 017A 3080 		MOVLW	0x80	;d'10,000,000'01560 017B 00F9 		MOVWF	Param79	;=0x98968001561 017C 3096 		MOVLW	0x9601562 017D 00FA 		MOVWF	Param7A01563 017E 3098 		MOVLW	0x9801564 017F 00FB 		MOVWF	Param7B01565 0180 21A5 		CALL	Disp_dec3B_101566 0181 	;01567 0181 3040 		MOVLW	0x40	;d'1,000,000'01568 0182 00F9 		MOVWF	Param79	;=0x0F424001569 0183 3042 		MOVLW	0x4201570 0184 00FA 		MOVWF	Param7A01571 0185 300F 		MOVLW	0x0F01572 0186 00FB 		MOVWF	Param7B01573 0187 21A5 		CALL	Disp_dec3B_101574 0188 	;01575 0188 30A0 		MOVLW	0xA0	;d'100,000'01576 0189 00F9 		MOVWF	Param79	;=0x0186A001577 018A 3086 		MOVLW	0x8601578 018B 00FA 		MOVWF	Param7A01579 018C 3001 		MOVLW	0x0101580 018D 00FB 		MOVWF	Param7B01581 018E 21A5 		CALL	Disp_dec3B_101582 018F 	;01583 018F 3010 		MOVLW	low d'10000'	;d'10,000'01584 0190 00F9 		MOVWF	Param79	;=0x00271001585 0191 3027 		MOVLW	high d'10000'01586 0192 00FA 		MOVWF	Param7A01587 0193 01FB 		CLRF	Param7B01588 0194 21A5 		CALL	Disp_dec3B_101589 0195 	;01590 0195 30E8 		MOVLW	low d'1000'01591 0196 00F9 		MOVWF	Param7901592 0197 3003 		MOVLW	high d'1000'01593 0198 00FA 		MOVWF	Param7A01594 0199 21A5 		CALL	Disp_dec3B_101595 019A 	;Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 89500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm01596 019A 3064 		MOVLW	d'100'01597 019B 00F9 		MOVWF	Param7901598 019C 01FA 		CLRF	Param7A01599 019D 21A5 		CALL	Disp_dec3B_101600 019E 	;01601 019E 300A 		MOVLW	d'10'01602 019F 00F9 		MOVWF	Param7901603 01A0 21A5 		CALL	Disp_dec3B_101604 01A1 	;01605 01A1 3030 		MOVLW	'0'01606 01A2 0774 		ADDWF	Param74,W01607 01A3 10A7 		BCF	Disp_LZO01608 01A4 29AF 		GOTO	Disp_dec3B_201609 01A5 	;01610 01A5 2156 	Disp_dec3B_1	CALL	Fix_dec3B01611 01A6 1CA7 		BTFSS	Disp_LZO01612 01A7 29AE 		GOTO	Disp_dec3B_301613 01A8 3030 		MOVLW	'0'01614 01A9 0278 		SUBWF	Param78,W01615 01AA 		SKPNZ01615 01AA 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z01616 01AB 0008 		RETURN01617 01AC 	;reset defaults01618 01AC 10A7 		BCF	Disp_LZO01619 01AD 11A7 		BCF	Disp_NLS01620 01AE 0878 	Disp_dec3B_3	MOVF	Param78,W01621 01AF 2948 	Disp_dec3B_2	GOTO	DisplayOrPut01622 01B0 	;01623 01B0 		endif01624 01B0 	;=================================================================================01625 01B0 	; Read Data from input device01626 01B0 	;01627 01B0 	;  Note: Address Enable ON, IORead ON, Get Data, IORead OFF, Address Enable OFF01628 01B0 	;01629 01B0 	; Entry: W=Select Value (Select0,SelectSRAM, etc.)01630 01B0 	; Exit: W = data from port01631 01B0 	; Ram used: Param78 (verified 2/26/03)01632 01B0 	; Calls: (0) none01633 01B0 	;01634 01B0 00F8 	ReadData	MOVWF	Param7801635 01B1 		mBank101635 01B1 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001635 01B2 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101636 01B3 		if UsesRS232BufIO01640 01B3 		endif01641 01B3 30FF 		MOVLW	All_In01642 01B4 0088 		MOVWF	TRISD01643 01B5 1283 		BCF	STATUS,RP0	;Bank001644 01B6 0806 		MOVF	PORTB,W01645 01B7 39F0 		ANDLW	AddressMask01646 01B8 0478 		IORWF	Param78,W01647 01B9 0086 		MOVWF	PORTB01648 01BA 1206 		BCF	PORTB,SelectEnable01649 01BB 1286 		BCF	PORTB,IORead01650 01BC 0000 		NOP		;wait 200nS01651 01BD 0808 		MOVF	PORTD,W01652 01BE 1686 		BSF	PORTB,IORead01653 01BF 1606 		BSF	PORTB,SelectEnable01654 01C0 		if UsesRS232BufIO01656 01C0 		endif01657 01C0 0008 		RETURN	01658 01C1 	;01659 01C1 	;=================================================================================01660 01C1 	; Set the low 8 address bits to the value in the W01661 01C1 	;01662 01C1 	; Entry: W= and 8 bit address01663 01C1 	; Exit: CurrentAddr0 is changed01664 01C1 	; RAM used: none (verified 2/26/03)01665 01C1 	; Calls:(0) none01666 01C1 	;01667 01C1 	Set8bitAddr01668 01C1 		if UsesRS232BufIO01672 01C1 		endif01673 01C1 		mSet8bitAddr01673 01C1 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101673 01C2 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP0	;Bank001673 01C3 0088      M		MOVWF	PORTD		MOVWF	PORTD01673 01C4 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1	;Bank301673 01C5 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001673 01C6 00A2      M		MOVWF	CurrentAddr0		MOVWF	CurrentAddr001673 01C7 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP1	;Bank101673 01C8 3000      M		MOVLW	All_Out		MOVLW	All_Out01673 01C9 0088      M		MOVWF	TRISD		MOVWF	TRISD01673 01CA 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP0	;Bank001673 01CB 0806      M		MOVF	PORTB,W		MOVF	PORTB,W01673 01CC 39F0      M		ANDLW	AddressMask		ANDLW	AddressMask01673 01CD 3800      M		IORLW	Select0		IORLW	Select001673 01CE 0086      M		MOVWF	PORTB		MOVWF	PORTB01673 01CF 1206      M		BCF	PORTB,SelectEnable		BCF	PORTB,SelectEnable01673 01D0 1606      M		BSF	PORTB,SelectEnable		BSF	PORTB,SelectEnable01674 01D1 		if UsesRS232BufIO01676 01D1 		endif01677 01D1 0008 		RETURN01678 01D2 	;01679 01D2 	;01680 01D2 		if UsesSRAM01681 01D2 	;=================================================================================01682 01D2 	; Put the SRAM address on the address bus01683 01D2 	; Entry:SRAM_Addr01684 01D2 	; Exit:address bus and CurrentAddr = SRAM_AddrHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 90500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm01685 01D2 	;	PORTD is set for output01686 01D2 	; RAM used: none (verified 2/26/03)01687 01D2 	; Calls:(0) none01688 01D2 	;01689 01D2 	SetSRAM_Addr	mBank101689 01D2 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001689 01D3 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101690 01D4 		if UsesRS232BufIO01694 01D4 		endif01695 01D4 3000 		MOVLW	All_Out01696 01D5 0088 		MOVWF	TRISD01697 01D6 1703 		BSF	STATUS,RP1	;Bank301698 01D7 081F 		MOVF	SRAM_Addr0,W01699 01D8 0222 		SUBWF	CurrentAddr0,W01700 01D9 1903 		BTFSC	STATUS,Z01701 01DA 29E8 		GOTO	SetSRAM_Addr_101702 01DB 081F 		MOVF	SRAM_Addr0,W01703 01DC 00A2 		MOVWF	CurrentAddr001704 01DD 		mBank001704 01DD 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001704 01DE 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101705 01DF 0088 		MOVWF	PORTD01706 01E0 	;01707 01E0 0806 		MOVF	PORTB,W01708 01E1 39F0 		ANDLW	AddressMask01709 01E2 3800 		IORLW	Select001710 01E3 0086 		MOVWF	PORTB01711 01E4 1206 		BCF	PORTB,SelectEnable01712 01E5 1606 		BSF	PORTB,SelectEnable01713 01E6 	;01714 01E6 		mBank301714 01E6 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001714 01E7 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP101715 01E8 0820 	SetSRAM_Addr_1	MOVF	SRAM_Addr1,W01716 01E9 0223 		SUBWF	CurrentAddr1,W01717 01EA 1903 		BTFSC	STATUS,Z01718 01EB 29F9 		GOTO	SetSRAM_Addr_201719 01EC 0820 		MOVF	SRAM_Addr1,W01720 01ED 00A3 		MOVWF	CurrentAddr101721 01EE 		mBank001721 01EE 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001721 01EF 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101722 01F0 0088 		MOVWF	PORTD01723 01F1 	;01724 01F1 0806 		MOVF	PORTB,W01725 01F2 39F0 		ANDLW	AddressMask01726 01F3 3801 		IORLW	Select101727 01F4 0086 		MOVWF	PORTB01728 01F5 1206 		BCF	PORTB,SelectEnable01729 01F6 1606 		BSF	PORTB,SelectEnable01730 01F7 	;01731 01F7 		mBank301731 01F7 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001731 01F8 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP101732 01F9 0821 	SetSRAM_Addr_2	MOVF	SRAM_Addr2,W01733 01FA 0224 		SUBWF	CurrentAddr2,W01734 01FB 1903 		BTFSC	STATUS,Z01735 01FC 2C52 		GOTO	Bank0Rtn01736 01FD 0821 		MOVF	SRAM_Addr2,W01737 01FE 00A4 		MOVWF	CurrentAddr201738 01FF 		mBank001738 01FF 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001738 0200 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101739 0201 0088 		MOVWF	PORTD01740 0202 	;01741 0202 0806 		MOVF	PORTB,W01742 0203 39F0 		ANDLW	AddressMask01743 0204 3802 		IORLW	Select201744 0205 0086 		MOVWF	PORTB01745 0206 1206 		BCF	PORTB,SelectEnable01746 0207 1606 		BSF	PORTB,SelectEnable01747 0208 	;01748 0208 		if UsesRS232BufIO01750 0208 		endif01751 0208 2C52 		GOTO	Bank0Rtn01752 0209 	;01753 0209 	;=================================================================================01754 0209 	; Offset the SRAM_Addr by W01755 0209 	; Entry:W=Offset01756 0209 	; Exit: none01757 0209 	; RAM used: none (verified 2/26/03)01758 0209 	; Calls:(0) none01759 0209 	;01760 0209 	SRAM_OffsetAddr	mBank301760 0209 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001760 020A 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP101761 020B 079F 		ADDWF	SRAM_Addr0,F01762 020C 1803 		BTFSC	STATUS,C01763 020D 0FA0 		INCFSZ	SRAM_Addr1,F01764 020E 2C52 		GOTO	Bank0Rtn01765 020F 0AA1 		INCF	SRAM_Addr2,F01766 0210 2C52 		GOTO	Bank0Rtn01767 0211 	;01768 0211 	;=================================================================================01769 0211 	; Increments the SRAM_Addr, if past end (>=0x080000) roll over to 0x00000001770 0211 	; Entry:none01771 0211 	; Exit:W = 0x00, Z=1, if address = 0x00000001772 0211 	; RAM used: none (verified 2/26/03)01773 0211 	; Calls:(0) none01774 0211 	;Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 91500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm01775 0211 	SRAM_NextAddr	mBank301775 0211 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001775 0212 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP101776 0213 0F9F 		INCFSZ	SRAM_Addr0,F01777 0214 2A18 		GOTO	SRAM_NextAddr_101778 0215 0FA0 		INCFSZ	SRAM_Addr1,F01779 0216 2A18 		GOTO	SRAM_NextAddr_101780 0217 0AA1 		INCF	SRAM_Addr2,F01781 0218 30F8 	SRAM_NextAddr_1	MOVLW	0xF8	;SRAM ends at 0x07FFFF01782 0219 0521 		ANDWF	SRAM_Addr2,W01783 021A 1903 		BTFSC	STATUS,Z01784 021B 2A1F 		GOTO	SRAM_NextAddr_201785 021C 019F 		CLRF	SRAM_Addr001786 021D 01A0 		CLRF	SRAM_Addr101787 021E 01A1 		CLRF	SRAM_Addr201788 021F 081F 	SRAM_NextAddr_2	MOVF	SRAM_Addr0,W01789 0220 0420 		IORWF	SRAM_Addr1,W01790 0221 0421 		IORWF	SRAM_Addr2,W01791 0222 2C52 		GOTO	Bank0Rtn01792 0223 	;01793 0223 	;=================================================================================01794 0223 	; Decrements the SRAM_Addr, if less than 0x000000 then set to 0x07FFFF01795 0223 	; Entry:none01796 0223 	; Exit:none01797 0223 	; RAM used: none (verified 2/26/03)01798 0223 	; Calls:(0) none01799 0223 	;01800 0223 	SRAM_PrevAddr	mBank301800 0223 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001800 0224 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP101801 0225 039F 		DECF	SRAM_Addr0,F01802 0226 0F1F 		INCFSZ	SRAM_Addr0,W01803 0227 2A2C 		GOTO	SRAM_PrevAddr_101804 0228 03A0 		DECF	SRAM_Addr1,F01805 0229 0F20 		INCFSZ	SRAM_Addr1,W01806 022A 2A2C 		GOTO	SRAM_PrevAddr_101807 022B 03A1 		DECF	SRAM_Addr2,F01808 022C 30FF 	SRAM_PrevAddr_1	MOVLW	0xFF01809 022D 0221 		SUBWF	SRAM_Addr2,W01810 022E 1D03 		BTFSS	STATUS,Z01811 022F 2C52 		GOTO	Bank0Rtn01812 0230 3007 		MOVLW	0x0701813 0231 00A1 		MOVWF	SRAM_Addr201814 0232 30FF 		MOVLW	0xFF01815 0233 00A0 		MOVWF	SRAM_Addr101816 0234 009F 		MOVWF	SRAM_Addr001817 0235 2C52 		GOTO	Bank0Rtn01818 0236 	;01819 0236 	;=================================================================================01820 0236 	; Write the value in the W to SRAM address SRAM_Addr then increment address01821 0236 	;01822 0236 	; Entry: W=data to write, SRAM_Addr=SRAM address01823 0236 	; Exit: none01824 0236 	; RAM used:Param78 (verified 2/26/03)01825 0236 	; Calls:(1+0) SetSRAM_Addr, SRAM_NextAddr01826 0236 	;01827 0236 00F8 	SRAM_WritePI	MOVWF	Param7801828 0237 21D2 		CALL	SetSRAM_Addr01829 0238 2211 		CALL	SRAM_NextAddr01830 0239 2A3C 		GOTO	SRAM_Write_101831 023A 	;01832 023A 	;=================================================================================01833 023A 	; Write the value in the W to SRAM address SRAM_Addr01834 023A 	;01835 023A 	; Entry: W=data to write, SRAM_Addr=SRAM address01836 023A 	; Exit: Param78=data01837 023A 	; RAM used: Param78 (verified 2/26/03)01838 023A 	; Calls:(1+0) SetSRAM_Addr01839 023A 	;01840 023A 00F8 	SRAM_Write	MOVWF	Param7801841 023B 21D2 		CALL	SetSRAM_Addr01842 023C 0878 	SRAM_Write_1	MOVF	Param78,W01843 023D 	;01844 023D 		if UsesRS232BufIO01848 023D 		endif01849 023D 	;01850 023D 0088 		MOVWF	PORTD01851 023E 1686 		BSF	PORTB,IORead	;OE* = inactive01852 023F 1306 		BCF	PORTB,IOWrite01853 0240 	;01854 0240 0806 		MOVF	PORTB,W01855 0241 39F0 		ANDLW	AddressMask01856 0242 3803 		IORLW	SelectSRAM01857 0243 0086 		MOVWF	PORTB01858 0244 1206 		BCF	PORTB,SelectEnable01859 0245 1606 		BSF	PORTB,SelectEnable01860 0246 	;01861 0246 1706 		BSF	PORTB,IOWrite	01862 0247 		if UsesRS232BufIO01864 0247 		endif01865 0247 0008 		RETURN01866 0248 	;01867 0248 	;01868 0248 	;=================================================================================01869 0248 	; Read the value in SRAM address SRAM_Addr into the W then decrement address01870 0248 	;01871 0248 	; Entry: SRAM_Addr=SRAM address01872 0248 	; Exit: W = value from SRAM01873 0248 	; RAM used: none (verified 2/26/03)01874 0248 	; Calls:(1+0) SetSRAM_Addr, SRAM_NextAddrHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 92500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm01875 0248 	;01876 0248 21D2 	SRAM_ReadPD	CALL	SetSRAM_Addr01877 0249 2223 		CALL	SRAM_PrevAddr01878 024A 2A69 		GOTO	SRAM_Read_101879 024B 	;01880 024B 		endif01881 024B 	;01882 024B 		if UsesDataROM01883 024B 	;=================================================================================01884 024B 	; Set SRAM address to evDataROM+W then SRAM_ReadPI01885 024B 	;01886 024B 	; Entry: W=DataRom offset01887 024B 	; Exit: W = value from SRAM, SRAM_Addr=evDataROM+W+101888 024B 	; RAM used: none (verified 8/15/03)01889 024B 	; Calls:(1+0) SetSRAM_Addr, SRAM_NextAddr01890 024B 	;01891 024B 	SRAM_ReadDR	mBank301891 024B 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001891 024C 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP101892 024D 009F 		MOVWF	SRAM_Addr001893 024E 3010 		MOVLW	low evDataROM01894 024F 00A0 		MOVWF	SRAM_Addr101895 0250 3000 		MOVLW	high evDataROM01896 0251 00A1 		MOVWF	SRAM_Addr201897 0252 	;01898 0252 	; fall through to SRAM_ReadPI01899 0252 	;01900 0252 		endif01901 0252 	;01902 0252 		if UsesSRAM01903 0252 	;=================================================================================01904 0252 	; Read the value in SRAM address SRAM_Addr into the W then increment address01905 0252 	;01906 0252 	; Entry: SRAM_Addr=SRAM address01907 0252 	; Exit: W = value from SRAM01908 0252 	; RAM used: none (verified 2/26/03)01909 0252 	; Calls:(1+0) SetSRAM_Addr, SRAM_NextAddr01910 0252 	;01911 0252 21D2 	SRAM_ReadPI	CALL	SetSRAM_Addr01912 0253 2211 		CALL	SRAM_NextAddr01913 0254 2A69 		GOTO	SRAM_Read_101914 0255 	;01915 0255 		endif01916 0255 	;01917 0255 		if SRAM_Strings01918 0255 	;=============================================================================================01919 0255 	; Entry: Param7F=String Number (0..n), Param7D=Character Number01920 0255 	; Exit: W=Character01921 0255 	; RAM used: Param7D, Param7F  (verified 10/2/02)01922 0255 	; Calls:(1+0) SetSRAM_Addr01923 0255 	; 01924 0255 	; Strings were stored in SRAM at power up01925 0255 	; String Zero is at (evStrings x 256) + (String Number x 8) + Character Number01926 0255 	;01927 0255 	StringDispatch	mBank301927 0255 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001927 0256 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP101928 0257 3000 		MOVLW	high evStrings01929 0258 00A1 		MOVWF	SRAM_Addr2	;0x0101930 0259 01A0 		CLRF	SRAM_Addr101931 025A 1003 		BCF	STATUS,C01932 025B 0D7F 		RLF	Param7F,W	;x201933 025C 009F 		MOVWF	SRAM_Addr001934 025D 0DA0 		RLF	SRAM_Addr1,F01935 025E 0D9F 		RLF	SRAM_Addr0,F	;x401936 025F 0DA0 		RLF	SRAM_Addr1,F01937 0260 0D9F 		RLF	SRAM_Addr0,F	;x801938 0261 0DA0 		RLF	SRAM_Addr1,F01939 0262 	;01940 0262 30F2 		MOVLW	low evStrings	;0x0201941 0263 07A0 		ADDWF	SRAM_Addr1,F	;0x02..0x0801942 0264 087D 		MOVF	Param7D,W01943 0265 079F 		ADDWF	SRAM_Addr0,F01944 0266 1803 		BTFSC	STATUS,C01945 0267 0AA0 		INCF	SRAM_Addr1,F01946 0268 	;01947 0268 	; Fall through to SRAM_Read01948 0268 		endif01949 0268 	;01950 0268 		if UsesSRAM01951 0268 	;=================================================================================01952 0268 	; Read the value in SRAM address SRAM_Addr into the W01953 0268 	; Entry: SRAM_Addr=SRAM address01954 0268 	; Exit: W = value from SRAM01955 0268 	; RAM used: none (verified 2/26/03)01956 0268 	; Calls:(1+0) SetSRAM_Addr01957 0268 	;01958 0268 21D2 	SRAM_Read	CALL	SetSRAM_Addr01959 0269 1683 	SRAM_Read_1	BSF	STATUS,RP0	;Bank101960 026A 		if UsesRS232BufIO01964 026A 		endif01965 026A 30FF 		MOVLW	All_In01966 026B 0088 		MOVWF	TRISD01967 026C 1283 		BCF	STATUS,RP0	;Bank001968 026D 1706 		BSF	PORTB,IOWrite	;R/W* = R01969 026E 1286 		BCF	PORTB,IORead	;OE* = active01970 026F 	;01971 026F 0806 		MOVF	PORTB,W01972 0270 39F0 		ANDLW	AddressMask01973 0271 3803 		IORLW	SelectSRAMHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 93500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm01974 0272 0086 		MOVWF	PORTB01975 0273 1206 		BCF	PORTB,SelectEnable01976 0274 0000 		NOP01977 0275 0808 		MOVF	PORTD,W01978 0276 1606 		BSF	PORTB,SelectEnable01979 0277 	;01980 0277 1686 		BSF	PORTB,IORead	01981 0278 		if UsesRS232BufIO01983 0278 		endif01984 0278 0008 		RETURN01985 0279 	;01986 0279 	;01987 0279 		if Do_SRAM_Test02101 0279 		endif		; Do_SRAM_Test02102 0279 		if Do_ZeroRAM02103 0279 	;=================================================================================02104 0279 	; Zero the Static RAM 02105 0279 	; Put 0x00 in every location read back and display error if cannot zero02106 0279 	;02107 0279 	; Entry: none02108 0279 	; Exit: none, if error then doesn't exit02109 0279 	; RAM used: Param70, Param71, Param72, Param78 (verified 2/26/03)02110 0279 	; Calls:(1+0) SetSRAM_Addr, SRAM_Write_1, SRAM_Read_1,02111 0279 	;  if error calls:(1+3) lcd_GotoLineW, DisplaysW, SRAM_Read, Disp_Hex_Byte02112 0279 	;02113 0279 01F0 	SRAM_Zero	CLRF	Param70	; aka SRAM_Addr002114 027A 01F1 		CLRF	Param71	; aka SRAM_Addr102115 027B 01F2 		CLRF	Param72	; aka SRAM_Addr202116 027C 22A3 		CALL	ZeroSRAM_Addr02117 027D 01F8 		CLRF	Param7802118 027E 	;02119 027E 223C 	SRAM_Zero_L1	CALL	SRAM_Write_102120 027F 2269 		CALL	SRAM_Read_102121 0280 1D03 		BTFSS	STATUS,Z	; skip if good02122 0281 2ABD 		GOTO	SRAM_Zero_Err02123 0282 	; next address 002124 0282 1683 		BSF	STATUS,RP0	;Bank102125 0283 3000 		MOVLW	All_Out02126 0284 0088 		MOVWF	TRISD02127 0285 1283 		BCF	STATUS,RP0	;Bank002128 0286 0AF0 		INCF	Param70,F	;aka SRAMAddr002129 0287 0870 		MOVF	Param70,W02130 0288 0088 		MOVWF	PORTD02131 0289 	;02132 0289 0806 		MOVF	PORTB,W02133 028A 39F0 		ANDLW	AddressMask02134 028B 3800 		IORLW	Select002135 028C 0086 		MOVWF	PORTB02136 028D 1206 		BCF	PORTB,SelectEnable02137 028E 1606 		BSF	PORTB,SelectEnable02138 028F 0870 		MOVF	Param70,W02139 0290 1D03 		BTFSS	STATUS,Z02140 0291 2A7E 		GOTO	SRAM_Zero_L102141 0292 	; next address 102142 0292 0AF1 		INCF	Param71,F	;aka SRAMAddr002143 0293 0871 		MOVF	Param71,W02144 0294 0088 		MOVWF	PORTD02145 0295 	;02146 0295 0806 		MOVF	PORTB,W02147 0296 39F0 		ANDLW	AddressMask02148 0297 3801 		IORLW	Select102149 0298 0086 		MOVWF	PORTB02150 0299 1206 		BCF	PORTB,SelectEnable02151 029A 1606 		BSF	PORTB,SelectEnable02152 029B 	;02153 029B 		ifdef evEndOfSRAM02154 029B 3006 		MOVLW	low evEndOfSRAM02155 029C 0271 		SUBWF	Param71,W02156 029D 1D03 		BTFSS	STATUS,Z02157 029E 2AAC 		GOTO	SRAM_Zero_NotDone02158 029F 3002 		MOVLW	high evEndOfSRAM02159 02A0 0272 		SUBWF	Param72,W02160 02A1 1D03 		BTFSS	STATUS,Z02161 02A2 		endif02162 02A2 2AAC 		GOTO	SRAM_Zero_NotDone02163 02A3 	;02164 02A3 	; fall through to ZeroSRAM_Addr02165 02A3 	;=======================================================================================02166 02A3 	; Setup the SRAM address buffers and variables02167 02A3 	;02168 02A3 	ZeroSRAM_Addr	mBank302168 02A3 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP002168 02A4 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP102169 02A5 30FF 		MOVLW	0xFF02170 02A6 009F 		MOVWF	SRAM_Addr002171 02A7 00A0 		MOVWF	SRAM_Addr102172 02A8 00A1 		MOVWF	SRAM_Addr202173 02A9 21D2 		CALL	SetSRAM_Addr02174 02AA 2211 		CALL	SRAM_NextAddr02175 02AB 29D2 		GOTO	SetSRAM_Addr02176 02AC 	;02177 02AC 	;=======================================================================================02178 02AC 	;02179 02AC 	SRAM_Zero_NotDone02180 02AC 	;02181 02AC 0871 		MOVF	Param71,W02182 02AD 1D03 		BTFSS	STATUS,Z02183 02AE 2A7E 		GOTO	SRAM_Zero_L102184 02AF 	; next address 202185 02AF 0AF2 		INCF	Param72,FHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 94500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm02186 02B0 0872 		MOVF	Param72,W02187 02B1 0088 		MOVWF	PORTD02188 02B2 	;02189 02B2 0806 		MOVF	PORTB,W02190 02B3 39F0 		ANDLW	AddressMask02191 02B4 3802 		IORLW	Select202192 02B5 0086 		MOVWF	PORTB02193 02B6 1206 		BCF	PORTB,SelectEnable02194 02B7 1606 		BSF	PORTB,SelectEnable02195 02B8 0872 		MOVF	Param72,W02196 02B9 	;02197 02B9 39F8 		ANDLW	0xF802198 02BA 		SKPNZ02198 02BA 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z02199 02BB 2A7E 		GOTO	SRAM_Zero_L102200 02BC 2AA3 		GOTO	ZeroSRAM_Addr02201 02BD 	;02202 02BD 	;02203 02BD 	SRAM_Test_E202204 02BD 	SRAM_Test_E102205 02BD 	SRAM_Zero_Err	02206 02BD 		if UsesLCD02207 02BD 3002 		MOVLW	0x0202208 02BE 2353 		CALL	lcd_GotoLineW	;goto begining of 3rd line02209 02BF 		ifdef eSRAMErrStr02210 02BF 30D8 		MOVLW	eSRAMErrStr02211 02C0 2079 		CALL	DispSplashScrn_102212 02C1 		else02215 02C1 		endif02216 02C1 		endif02217 02C1 	;02218 02C1 2268 		CALL	SRAM_Read02219 02C2 239A 		CALL	Disp_Hex_Byte02220 02C3 2AC3 	SRAM_Zero_Stop	GOTO	SRAM_Zero_Stop	; loop until reset02221 02C4 	;02222 02C4 		endif02223 02C4 		endif02224 02C4 	;02225 02C4 		if UsesPushPopParams02318 02C4 		endif02319 02C4 		if UsesPushPop02392 02C4 		endif		; UsesPushPop02393 02C4 	;02394 02C4 		if UsesSRamPushPopPrm02490 02C4 		endif02491 02C4 		if UsesSRamPushPop02492 02C4 	;=================================================================================02493 02C4 	; Push the W onto the stack++02494 02C4 	;02495 02C4 	; Entry: W = value to be pushed02496 02C4 	; Exit: STATUS, FSR and W are unchanged02497 02C4 	; RAM Used: Param7F, SaveStatus, FSR_Save, PPCounter (verified 2/26/03)02498 02C4 	; Calls:(1+1) SRAM_Write02499 02C4 	;02500 02C4 00FF 	Push	MOVWF	Param7F02501 02C5 0803 		MOVF	STATUS,W02502 02C6 		mBank302502 02C6 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP002502 02C7 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP102503 02C8 0090 		MOVWF	SaveStatus02504 02C9 	;02505 02C9 0811 		MOVF	StackPtr,W02506 02CA 009F 		MOVWF	SRAM_Addr002507 02CB 0A91 		INCF	StackPtr,F02508 02CC 30F0 		MOVLW	low evParamStack02509 02CD 00A0 		MOVWF	SRAM_Addr102510 02CE 3000 		MOVLW	high evParamStack02511 02CF 00A1 		MOVWF	SRAM_Addr202512 02D0 	;02513 02D0 087F 		MOVF	Param7F,W02514 02D1 223A 		CALL	SRAM_Write02515 02D2 	;02516 02D2 0810 		MOVF	SaveStatus,W02517 02D3 0083 		MOVWF	STATUS02518 02D4 0EFF 		SWAPF	Param7F,F	; swap is used because status bits are unaffected02519 02D5 0E7F 		SWAPF	Param7F,W	; restore W register contents02520 02D6 0008 		RETURN02521 02D7 	;02522 02D7 	;=================================================================================02523 02D7 	; Pop the W from the --stack02524 02D7 	; STATUS is changed by MOVF Param7F,W  FSR is unchanged02525 02D7 	;02526 02D7 	; Entry: none02527 02D7 	; Exit: W = value from top of stack02528 02D7 	; RAM Used: Param7F, SaveStatus, PPCounter (verified 2/26/03)02529 02D7 	; Calls:(1+1) SRAM_Read02530 02D7 	;02531 02D7 0803 	Pop	MOVF	STATUS,W02532 02D8 		mBank302532 02D8 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP002532 02D9 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP102533 02DA 0090 		MOVWF	SaveStatus02534 02DB 	;02535 02DB 0391 		DECF	StackPtr,F02536 02DC 0091 		MOVWF	StackPtr,W02537 02DD 009F 		MOVWF	SRAM_Addr002538 02DE 30F0 		MOVLW	low evParamStack02539 02DF 00A0 		MOVWF	SRAM_Addr102540 02E0 3000 		MOVLW	high evParamStack02541 02E1 00A1 		MOVWF	SRAM_Addr2Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 95500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm02542 02E2 	;02543 02E2 2268 		CALL	SRAM_Read02544 02E3 00FF 		MOVWF	Param7F02545 02E4 	;02546 02E4 0810 		MOVF	SaveStatus,W02547 02E5 0083 		MOVWF	STATUS02548 02E6 087F 		MOVF	Param7F,W	; we want the Z bit to be correct02549 02E7 0008 		RETURN02550 02E8 		endif		; UsesSRamPushPop02551 02E8 	;02552 02E8 	;==================================================================================02553 02E8 	; Delay 1 Second02554 02E8 	;02555 02E8 	; Entry: none02556 02E8 	; Exit: none02557 02E8 	; RAM used: Param77, Param78, Param79 (verified 2/26/03)02558 02E8 	; Calls:(1+0) DelayWmS02559 02E8 	;02560 02E8 30FA 	Delay1Sec	MOVLW	d'250'02561 02E9 22EC 		CALL	DelayWmS02562 02EA 22EC 		CALL	DelayWmS02563 02EB 22EC 		CALL	DelayWmS02564 02EC 	;02565 02EC 	;==================================================================================02566 02EC 	; Delay (value in W) milliseconds  (999978ns/loop + overhead) (Fosc = 19.6608MHz)02567 02EC 	;02568 02EC 	; Entry: W = mS to delay02569 02EC 	; Exit: none02570 02EC 	; RAM used: Param77, Param78, Param79 (verified 2/26/03)02571 02EC 	; Calls:(0) none02572 02EC 	;02573 02EC 	;   CLOCK=19660800/4 = 203ns/cycle02574 02EC 	;02575 02EC 00F9 	DelayWmS	MOVWF	Param79	;W*4926+502576 02ED 08F9 		MOVF	Param79,F02577 02EE 1903 		BTFSC	STATUS,Z02578 02EF 2AFD 		GOTO	DelayWmS_end02579 02F0 3006 	DelayWmS_L1	MOVLW	0x06	;3+4632+3+285+3=492602580 02F1 00F8 		MOVWF	Param7802581 02F2 01F7 	DelayWmS_L2	CLRF	Param77	;6*(4+768)=463202582 02F3 0BF7 	DelayWmS_L3	DECFSZ	Param77,F	;3*256=76802583 02F4 2AF3 		GOTO	DelayWmS_L302584 02F5 0BF8 		DECFSZ	Param78,F02585 02F6 2AF2 		GOTO	DelayWmS_L202586 02F7 305F 		MOVLW	0x5F02587 02F8 00F7 		MOVWF	Param7702588 02F9 0BF7 	DelayWmS_L4	DECFSZ	Param77,F	;3*95=28502589 02FA 2AF9 		GOTO	DelayWmS_L402590 02FB 0BF9 		DECFSZ	Param79,F02591 02FC 2AF0 		GOTO	DelayWmS_L102592 02FD 34FA 	DelayWmS_end	RETLW	d'250'02593 02FE 	;02594 02FE 	;======================================================================================02595 02FE 	; Delay uS    1 cycle = .203uS (Fosc = 19.6608MHz)02596 02FE 	;02597 02FE 	; 0x1F	;(31*3+5)*0.203=19.894uS02598 02FE 	;02599 02FE 	; Entry: none02600 02FE 	; Exit: none02601 02FE 	; RAM used: Param77 (verified 2/26/03)02602 02FE 	; Calls:(0) none02603 02FE 	;02604 02FE 		if UsesDelay10uS02607 02FE 		endif02608 02FE 30A3 	Delay100uS	MOVLW	0xA3	;(163*3+5)*0.203=100.28202609 02FF 		if UsesDelay40uS02612 02FF 		endif02613 02FF 00F7 	DelayWuS	MOVWF	Param7702614 0300 0BF7 	DelayWuS_Loop	DECFSZ	Param77,F02615 0301 2B00 		GOTO	DelayWuS_Loop02616 0302 0008 		RETURN02617 0303 	;02618 0303 		if UsesLCD02619 0303 	;======================================================================================02620 0303 	;======================================================================================	02621 0303 	; Send a nybble to the LCD02622 0303 	;	02623 0303 	; Entry: W:0..3 = Nibble to send02624 0303 	; Exit: Param78 has the Nibble02625 0303 	; RAM used: Param78 (verified 2/26/03)02626 0303 	; Calls:(0) none02627 0303 	;02628 0303 00F8 	lcd_nybble	MOVWF	Param7802629 0304 1786 		BSF	PORTB,LCD_E	;LCD_E = 102630 0305 300F 		MOVLW	0x0F02631 0306 05F8 		ANDWF	Param78,F	;only the low nibble02632 0307 30F0 		MOVLW	0xF002633 0308 0508 		ANDWF	PORTD,W	;kill the low nibble02634 0309 0478 		IORWF	Param78,W	; and replace with bByte's low nibble02635 030A 0088 		MOVWF	PORTD02636 030B 0000 		NOP		;delay 400nS02637 030C 0000 		NOP02638 030D 1386 		BCF	PORTB,LCD_E	;LCD_E = 002639 030E 0008 		RETURN02640 030F 	;02641 030F 	;===================================================================================02642 030F 	; Send LCD command for Disp On, Cursor Off, Blink Off02643 030F 	;02644 030F 	; Entry: none02645 030F 	; Exit: noneHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 96500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm02646 030F 	; RAM Used: Param78, Param79 (verified 4/17/03)02647 030F 	; Calls:(1+0) wait_LCD_Ready, SendLCD_CmdW02648 030F 	;02649 030F 300C 	lcd_On	MOVLW	LCD_ON02650 0310 2B13 		GOTO	lcd_RdyAndCmd02651 0311 	;02652 0311 		if UsesLCDBlink02664 0311 		endif02665 0311 		if UsesLCDCursoBlink02677 0311 		endif02678 0311 	;===================================================================================02679 0311 	; Send LCD command for Disp On, Cursor On, Blink Off02680 0311 	;02681 0311 	; Entry: none02682 0311 	; Exit: none02683 0311 	; RAM Used: Param78, Param79 (verified 4/17/03)02684 0311 	; Calls:(1+0) wait_LCD_Ready, SendLCD_CmdW02685 0311 	;02686 0311 300E 	lcd_Cursor	MOVLW	LCD_Cursor02687 0312 2B13 		GOTO	lcd_RdyAndCmd02688 0313 	;02689 0313 		if Useslcd_Home02701 0313 		endif02702 0313 	;=========================================================================02703 0313 	; Home the cursor clearing DDRAM02704 0313 	;02705 0313 	; Entry: none02706 0313 	; Exit: none02707 0313 	; RAM used: Param78, Param79 (verified 2/26/03)02708 0313 	; Calls:(1+0) wait_LCD_Ready, SendLCD_CmdW02709 0313 	;02710 0313 		if UsesLCDClear02712 0313 		endif02713 0313 00F9 	lcd_RdyAndCmd	MOVWF	Param7902714 0314 232E 		CALL	wait_LCD_Ready02715 0315 2B66 		GOTO	SendLCD_Cmd7902716 0316 	;02717 0316 		if Useslcd_ReadData02718 0316 	;=========================================================================02719 0316 	; Set the DD Ram Address02720 0316 	; First line starts at 0x00..0x13, 2nd at 0x40..0x53, 3rd at 0x14..0x27, 4th at 0x54..0x6702721 0316 	;02722 0316 	; Entry: W=DD Ram Address (7 bits)02723 0316 	; Exit: none02724 0316 	; RAM Used: Param78, Param79 (verified 12/8/03)02725 0316 	; Calls:(1+0) wait_LCD_Ready, SendLCD_CmdW02726 0316 	;02727 0316 3880 	lcd_SetDDRamAddress	IORLW	0x8002728 0317 2B13 		GOTO	lcd_RdyAndCmd02729 0318 	;02730 0318 	;=========================================================================02731 0318 	; Read from DD Ram02732 0318 	;02733 0318 	; Entry: none02734 0318 	; Exit: Byte in W and Param7802735 0318 	; RAM used: Param78 (verified 12/8/03)02736 0318 	; Calls:(1+0) wait_LCD_Ready02737 0318 	;02738 0318 232E 	lcd_ReadData	CALL	wait_LCD_Ready02739 0319 1688 		BSF	PORTD,LCD_RW	; LCD_RD = 1; Read02740 031A 1608 		BSF	PORTD,LCD_AS	; LCD_RS = 1; Data02741 031B 1786 		BSF	PORTB,LCD_E	;LCD_E = 102742 031C 0000 		NOP02743 031D 0000 		NOP02744 031E 0808 		MOVF	PORTD,W	;get high nibble02745 031F 390F 		ANDLW	0x0F02746 0320 00F8 		MOVWF	Param7802747 0321 0EF8 		SWAPF	Param78,F02748 0322 1386 		BCF	PORTB,LCD_E	;LCD_E = 002749 0323 0000 		NOP02750 0324 0000 		NOP02751 0325 1786 		BSF	PORTB,LCD_E	;LCD_E = 102752 0326 0000 		NOP		02753 0327 0000 		NOP02754 0328 0808 		MOVF	PORTD,W	;get low nibble02755 0329 390F 		ANDLW	0x0F02756 032A 04F8 		IORWF	Param78,F02757 032B 1386 		BCF	PORTB,LCD_E	;LCD_E = 002758 032C 0878 		MOVF	Param78,W02759 032D 0008 		RETURN02760 032E 	;	02761 032E 		endif02762 032E 	;=========================================================================02763 032E 	; Polls the LCDs Busy Flag until clear02764 032E 	;02765 032E 	; Entry: none02766 032E 	; Exit: none02767 032E 	; RAM used: none (verified 2/26/03)02768 032E 	; Calls:(0) none02769 032E 	;02770 032E 	wait_LCD_Ready	mBank102770 032E 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP002770 032F 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP102771 0330 		if UsesRS232BufIO02775 0330 		endif02776 0330 300F 		MOVLW	0x0F	;Data In02777 0331 0088 		MOVWF	TRISD02778 0332 1283 		BCF	STATUS,RP0	;Bank002779 0333 1688 		BSF	PORTD,LCD_RW	; LCD_RD = 1; Read02780 0334 1208 		BCF	PORTD,LCD_AS	; LCD_RS = 0; commandHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 97500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm02781 0335 1786 		BSF	PORTB,LCD_E	;LCD_E = 102782 0336 0000 		NOP02783 0337 0000 		NOP02784 0338 0808 		MOVF	PORTD,W	;get high nibble02785 0339 1386 		BCF	PORTB,LCD_E	;LCD_E = 002786 033A 0000 		NOP02787 033B 0000 		NOP02788 033C 1786 		BSF	PORTB,LCD_E	;LCD_E = 102789 033D 0000 		NOP		;loose the low nibble02790 033E 0000 		NOP02791 033F 1386 		BCF	PORTB,LCD_E	;LCD_E = 002792 0340 		if UsesRS232BufIO02794 0340 		endif02795 0340 3908 		ANDLW	0x08	;Busy Flag02796 0341 1D03 		BTFSS	STATUS,Z02797 0342 2B2E 		GOTO	wait_LCD_Ready02798 0343 0008 		RETURN02799 0344 	;02800 0344 	;===================================================================================02801 0344 	; No Clear version of lcd_gotoxy02802 0344 	;02803 0344 	; Entry: W='X' value, Param78='Y' value02804 0344 	; Exit: none02805 0344 	; RAM used: Param78, Param79 (verified 4/18/03)02806 0344 	; Calls: (1+0) wait_LCD_Ready, lcd_nybble02807 0344 	;02808 0344 	lcd_gotoxy_NC	mBank002808 0344 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP002808 0345 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP102809 0346 1225 		BCF	ClrLine02810 0347 2B5B 		GOTO	lcd_gotoxy_NC_102811 0348 	;02812 0348 	;===================================================================================02813 0348 	; part of lcd_gotoxy (do not call)02814 0348 	;02815 0348 00FA 	lcd_gotoWClr	MOVWF	Param7A02816 0349 2365 		CALL	SendLCD_CmdW02817 034A 3014 		MOVLW	d'20'02818 034B 00FB 		MOVWF	Param7B02819 034C 3020 	lcd_gotoWClr_L1	MOVLW	' '02820 034D 2371 		CALL	lcd_char02821 034E 0BFB 		DECFSZ	Param7B,F02822 034F 2B4C 		GOTO	lcd_gotoWClr_L102823 0350 232E 		CALL	wait_LCD_Ready	02824 0351 087A 		MOVF	Param7A,W02825 0352 2B65 		GOTO	SendLCD_CmdW02826 0353 	;02827 0353 	;===================================================================================02828 0353 	; Goto the beginning of line W02829 0353 	; 02830 0353 	; Entry: W='X' value, Param78='Y' value02831 0353 	; Exit: none02832 0353 	; RAM used: Param78, Param79, Param7A, Param7B (verified 2/26/03)02833 0353 	; Calls:(1+1) wait_LCD_Ready, SendLCD_CmdW02834 0353 	;02835 0353 00F8 	lcd_GotoLineW	MOVWF	Param7802836 0354 0103 		CLRW02837 0355 	;02838 0355 	; fall through to lcd_gotoxy02839 0355 	;===================================================================================02840 0355 	;  Go to an X-Y position on the display, top left is 0, 002841 0355 	; if W(X)=0 then clear line02842 0355 	;02843 0355 	; Entry: W='X' value, Param78='Y' value02844 0355 	; Exit: none02845 0355 	; RAM used: Param78, Param79, Param7A, Param7B (verified 2/26/03)02846 0355 	; Calls:(1+1) wait_LCD_Ready, SendLCD_CmdW02847 0355 	;						02848 0355 	; W=W+LCD_SETPOS02849 0355 	; if (y=1) or (y=3)02850 0355 	;  W=W+LCD_LINE202851 0355 	; if (y=2) or (y=3)02852 0355 	;  W=W+2002853 0355 	lcd_gotoxy	mBank002853 0355 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP002853 0356 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP102854 0357 1225 		BCF	ClrLine02855 0358 391F 		ANDLW	0x1F	;limit to low 5 bits02856 0359 1903 		BTFSC	STATUS,Z02857 035A 1625 		BSF	ClrLine02858 035B 1878 	lcd_gotoxy_NC_1	BTFSC	Param78,0	;inc DDRAM pos by 2002859 035C 3E40 		ADDLW	LCD_LINE202860 035D 18F8 		BTFSC	Param78,102861 035E 3E14 		ADDLW	d'20'02862 035F 3880 		IORLW	LCD_SETPOS02863 0360 00F8 		MOVWF	Param7802864 0361 232E 		CALL	wait_LCD_Ready02865 0362 0878 		MOVF	Param78,W02866 0363 1A25 		BTFSC	ClrLine02867 0364 2B48 		GOTO	lcd_gotoWClr02868 0365 	;02869 0365 	; fall through to SendLCD_CmdW02870 0365 	;===========================================================================================02871 0365 	; Send a command byte to the LCD as two nybbles02872 0365 	;		02873 0365 	; Entry: W=Byte to send02874 0365 	; Exit: none02875 0365 	; RAM used: Param78, Param79 (verified 2/26/03)02876 0365 	; Calls:(1+0) lcd_nybble02877 0365 	;Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 98500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm02878 0365 00F9 	SendLCD_CmdW	MOVWF	Param7902879 0366 	SendLCD_Cmd79	mBank102879 0366 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP002879 0367 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP102880 0368 3000 		MOVLW	All_Out02881 0369 0088 		MOVWF	TRISD02882 036A 1283 		BCF	STATUS,RP002883 036B 1288 		BCF	PORTD,LCD_RW	; LCD_RD = 0; write02884 036C 1208 		BCF	PORTD,LCD_AS	; LCD_RS = 0; command02885 036D 0E79 		SWAPF	Param79,W	; Send high nibble to LCD02886 036E 2303 		CALL	lcd_nybble02887 036F 0879 		MOVF	Param79,W	; Send low nibble to LCD02888 0370 	;02889 0370 2B03 		GOTO	lcd_nybble02890 0371 	;02891 0371 	;======================================================================================02892 0371 	; Send a character byte to the LCD as two nybbles02893 0371 	;		02894 0371 	; Entry: W02895 0371 	; Exit: Param79 will contain the value from W02896 0371 	; RAM used: Param78, Param79 (verified 2/26/03)02897 0371 	; Calls:(1+0) wait_LCD_Ready, lcd_nybble02898 0371 	;02899 0371 00F9 	lcd_char	MOVWF	Param7902900 0372 232E 		CALL	wait_LCD_Ready02901 0373 		mBank102901 0373 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP002901 0374 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP102902 0375 3000 		MOVLW	All_Out02903 0376 0088 		MOVWF	TRISD02904 0377 1283 		BCF	STATUS,RP002905 0378 	;02906 0378 1288 		BCF	PORTD,LCD_RW	; LCD_RD = 0; write02907 0379 1608 		BSF	PORTD,LCD_AS	; LCD_RS = 1; data02908 037A 0E79 		SWAPF	Param79,W	; Send high nibble to LCD02909 037B 2303 		CALL	lcd_nybble02910 037C 	;02911 037C 0879 		MOVF	Param79,W	; Send low nibble to LCD02912 037D 2B03 		GOTO	lcd_nybble02913 037E 	;02914 037E 	;======================================================================================02915 037E 	; Initialise the LCD02916 037E 	; Entry: none02917 037E 	; Exit: none02918 037E 	; RAM used: Param78, Param7902919 037E 	; Calls:(1+1) DelayWmS, SendLCD_CmdW, Delay100uS, LCD_Clear02920 037E 	;02921 037E 1683 	Init_LCD	BSF	STATUS,RP002922 037F 3000 		MOVLW	All_Out	; Ensure RS and R/W lines are O/Ps02923 0380 0088 		MOVWF	TRISD02924 0381 1283 		BCF	STATUS,RP002925 0382 	;02926 0382 1208 		BCF	PORTD,LCD_AS	; LCD_RS = 0; command02927 0383 1288 		BCF	PORTD,LCD_RW	; LCD_RD = 0; write02928 0384 	;02929 0384 3014 		MOVLW	d'20'02930 0385 22EC 		CALL	DelayWmS	; Ensure LCD is stable after power-up02931 0386 	;Optrex Display02932 0386 3028 		MOVLW	LCD_MODE02933 0387 2365 		CALL	SendLCD_CmdW02934 0388 3006 		MOVLW	0x0602935 0389 22EC 		CALL	DelayWmS02936 038A 	;02937 038A 3028 		MOVLW	LCD_MODE02938 038B 2365 		CALL	SendLCD_CmdW02939 038C 3006 		MOVLW	0x0602940 038D 22EC 		CALL	DelayWmS02941 038E 	;02942 038E 3028 		MOVLW	LCD_MODE02943 038F 2365 		CALL	SendLCD_CmdW02944 0390 3006 		MOVLW	0x0602945 0391 22EC 		CALL	DelayWmS02946 0392 	;02947 0392 300C 		MOVLW	LCD_ON02948 0393 2365 		CALL	SendLCD_CmdW02949 0394 22FE 		CALL	Delay100uS02950 0395 	;02951 0395 3006 		MOVLW	LCD_EnterMode02952 0396 2365 		CALL	SendLCD_CmdW02953 0397 22FE 		CALL	Delay100uS02954 0398 	;02955 0398 3001 		MOVLW	LCD_Clear02956 0399 2B65 		GOTO	SendLCD_CmdW02957 039A 	;02958 039A 		endif02959 039A 	;=========================================================================================02960 039A 		if UsesByte2Str02983 039A 		endif02984 039A 	;02985 039A 	;=========================================================================================02986 039A 	; Disp_Hex_Byte send a byte to the display as 2 hex digits02987 039A 	; entry: W=value02988 039A 	; exit: none02989 039A 	; RAM used:Param75, Param76, Param7902990 039A 	; Calls:(1+2) Disp_Hex_Nibble, DisplaysW02991 039A 	;02992 039A 00F6 	Disp_Hex_Byte	MOVWF	Param76	;save the data02993 039B 0E76 	Disp_Hex_Byte_E2	SWAPF	Param76,W	;get hi nibble in low nibble of W02994 039C 239E 		CALL	Disp_Hex_Nibble	;output the high nibble02995 039D 0876 		MOVF	Param76,W	; now the low nibbleHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 99500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm02996 039E 	;02997 039E 	;fall through to Disp_Hex_Nibble02998 039E 	;02999 039E 	;===============================================================03000 039E 	; Send a nibble to the display as a hex digit03001 039E 	; Entry: W:0..3 = Nibble to display03002 039E 	; RAM used: Param75, Param78, Param7903003 039E 	; Calls:(1+1) DisplaysW03004 039E 	;03005 039E 390F 	Disp_Hex_Nibble	ANDLW	0x0F	;kill the other nibble03006 039F 3E30 		ADDLW	'0'	; add offset03007 03A0 00F9 		MOVWF	Param7903008 03A1 303A 		MOVLW	0x3A	;'9'+1 should barrow if 0..903009 03A2 0279 		SUBWF	Param79,W	03010 03A3 0103 		CLRW03011 03A4 1803 		BTFSC	STATUS,C	;skip if barrowed03012 03A5 3007 		MOVLW	0x0703013 03A6 0779 		ADDWF	Param79,W03014 03A7 	;03015 03A7 2948 		GOTO	DisplayOrPut03016 03A8 	;03017 03A8 	;=========================================================================================03018 03A8 	; Load a ':' into the W and goto DisplaysW03019 03A8 	;03020 03A8 303A 	Display_Colon	MOVLW	':'03021 03A9 2BAB 		GOTO	DisplaysW03022 03AA 	;03023 03AA 	;=========================================================================================03024 03AA 	; Load a '.' into the W and goto DisplaysW03025 03AA 	;03026 03AA 302E 	Display_Dot	MOVLW	'.'03027 03AB 	;03028 03AB 	; fall through to DisplaysW03029 03AB 	;=========================================================================================03030 03AB 	; Display handler; redirects to LCD and/or serial03031 03AB 	; 					 03032 03AB 	; RAM used: Param75=CharTemp,Param78, Param7903033 03AB 	; Calls:(1+1) wait_LCD_Ready, SendLCD_CmdW, lcd_char, putchar03034 03AB 	;03035 03AB 00F5 	DisplaysW	MOVWF	Param75	;CharTemp=W03036 03AC 		mBank003036 03AC 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003036 03AD 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103037 03AE 1E26 		BTFSS	SendToLCD	; if (disp_lcd)03038 03AF 2BC2 		GOTO	DispSerial	;not LCD try Serial03039 03B0 	;03040 03B0 300D 		MOVLW	0x0D	; if (b == '\r') 03041 03B1 0275 		SUBWF	Param75,W03042 03B2 1D03 		BTFSS	STATUS,Z03043 03B3 2BB8 		GOTO	DisplaysW_103044 03B4 	;03045 03B4 	;Carrage Return (0D)03046 03B4 		if UsesLCD03047 03B4 	;03048 03B4 232E 		CALL	wait_LCD_Ready03049 03B5 3080 		MOVLW	LCD_SETPOS	; lcd_cmd(LCD_SETPOS); 03050 03B6 2365 		CALL	SendLCD_CmdW03051 03B7 	;03052 03B7 		endif03053 03B7 	;03054 03B7 2BC2 		GOTO	DispSerial03055 03B8 	;03056 03B8 	; else if (b == '\n') 03057 03B8 300A 	DisplaysW_1	MOVLW	0x0A03058 03B9 0275 		SUBWF	Param75,W03059 03BA 1D03 		BTFSS	STATUS,Z03060 03BB 2BC0 		GOTO	DisplaysW_203061 03BC 	;03062 03BC 	;Line Feed (0A)03063 03BC 		if UsesLCD03064 03BC 	;03065 03BC 232E 		CALL	wait_LCD_Ready03066 03BD 30C0 		MOVLW	LCD_SETPOS+LCD_LINE2	; lcd_cmd(LCD_SETPOS + LCD_LINE2); 03067 03BE 2365 		CALL	SendLCD_CmdW03068 03BF 		endif03069 03BF 	;03070 03BF 2BC2 		GOTO	DispSerial03071 03C0 	;03072 03C0 	DisplaysW_2	03073 03C0 		if UsesLCD03074 03C0 	;03075 03C0 0875 		MOVF	Param75,W	; lcd_char(b); 03076 03C1 2371 		CALL	lcd_char03077 03C2 		endif03078 03C2 	;03079 03C2 	;  fall through to  DispSerial03080 03C2 	;====================================================================================03081 03C2 	;     DispSerial03082 03C2 	; Entry: Param75 char to send03083 03C2 	; Exit: none03084 03C2 	; RAM used: Param75=CharToSend03085 03C2 	; Calls:(1+0) putchar03086 03C2 	;03087 03C2 	DispSerial	03088 03C2 		if RS232Active03124 03C2 		endif03125 03C2 0008 		RETURN03126 03C3 	;03127 03C3 	;03128 03C3 		if Do_RS232_TestHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 100500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm03142 03C3 		endif03143 03C3 	;03144 03C3 	;========================================================================================03145 03C3 	;========================================================================================03146 03C3 	; Read from the CPU's EEPROM using Param79 as Address03147 03C3 	;03148 03C3 	; Entry: Param79=address to read03149 03C3 	; Exit: W=data from eeprom, Param7903150 03C3 	; RAM used: Param79 (verified 2/26/03)03151 03C3 	; Calls:(0) none03152 03C3 	;03153 03C3 0879 	ReadEE79	MOVF	Param79,W03154 03C4 2BC7 		GOTO	ReadEEwW03155 03C5 	;03156 03C5 	; fall through to ReadEEwW03157 03C5 	;03158 03C5 	;========================================================================================03159 03C5 	; Read from the CPU's EEPROM using Param79++ as Address03160 03C5 	;03161 03C5 	; Entry: Param79=address to read03162 03C5 	; Exit: W=data from eeprom, Param79++03163 03C5 	; RAM used: Param79 (verified 2/26/03)03164 03C5 	; Calls:(0) none03165 03C5 	;03166 03C5 0879 	ReadEE79PI	MOVF	Param79,W03167 03C6 0AF9 		INCF	Param79,F03168 03C7 	;03169 03C7 	; fall through to ReadEEwW03170 03C7 	;03171 03C7 	;========================================================================================03172 03C7 	; Read from the CPU's EEPROM using W as Address03173 03C7 	; Entry: W=address to read03174 03C7 	; Exit: W=data from eeprom03175 03C7 	; RAM used: none (verified 2/26/03)03176 03C7 	; Calls:(0) none03177 03C7 	;03178 03C7 	ReadEEwW	mBank203178 03C7 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003178 03C8 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP103179 03C9 008D 		MOVWF	EEADR03180 03CA 018F 		CLRF	EEADRH03181 03CB 1683 		BSF	STATUS,RP0	;bank303182 03CC 138C 		BCF	EECON1,EEPGD03183 03CD 140C 		BSF	EECON1,RD03184 03CE 1283 		BCF	STATUS,RP0	;bank203185 03CF 080C 		MOVF	EEDATA,W03186 03D0 1303 		BCF	STATUS,RP1	;bank003187 03D1 0008 		RETURN03188 03D2 	;03189 03D2 	;=========================================================================================03190 03D2 	; Write CPU's EEPROM using address from Param79++ and Data in W03191 03D2 	; Entry: Param79=address, W=data03192 03D2 	; Exit: EEADR=address, W=data, Param79++03193 03D2 	; RAM used: Param78, Param79 (verified 2/26/03)03194 03D2 	; Calls:(0) WriteEEwW03195 03D2 	;03196 03D2 00F8 	WriteEEP79WPI	MOVWF	Param7803197 03D3 0879 		MOVF	Param79,W03198 03D4 0AF9 		INCF	Param79,F03199 03D5 2BD8 		GOTO	WriteEEP79W_103200 03D6 	;03201 03D6 	;=========================================================================================03202 03D6 	; Write CPU's EEPROM using address from Param79 and Data in W03203 03D6 	; Entry: Param79=address, W=data03204 03D6 	; Exit: EEADR=address, W=data03205 03D6 	; RAM used: Param78, Param79 (verified 2/26/03)03206 03D6 	; Calls:(0) WriteEEwW03207 03D6 	;03208 03D6 00F8 	WriteEEP79W	MOVWF	Param7803209 03D7 0879 		MOVF	Param79,W03210 03D8 	WriteEEP79W_1	mBank203210 03D8 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003210 03D9 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP103211 03DA 008D 		MOVWF	EEADR03212 03DB 1303 		BCF	STATUS,RP103213 03DC 0878 		MOVF	Param78,W03214 03DD 	;03215 03DD 	; fall through to WriteEEwW03216 03DD 	;03217 03DD 	;=========================================================================================03218 03DD 	; Write CPU's EEPROM using current value in EEADR and W as Data03219 03DD 	; Entry: EEADR=address, W=data03220 03DD 	; Exit: none03221 03DD 	; RAM used: none (verified 2/26/03)03222 03DD 	; Calls:(0) none03223 03DD 	;03224 03DD 	WriteEEwW	mBank203224 03DD 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003224 03DE 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP103225 03DF 018F 		CLRF	EEADRH03226 03E0 008C 		MOVWF	EEDATA03227 03E1 1683 		BSF	STATUS,RP0	;Bank303228 03E2 		if UsesISR03232 03E2 		endif03233 03E2 138C 		BCF	EECON1,EEPGD03234 03E3 150C 		BSF	EECON1,WREN03235 03E4 3055 		MOVLW	0x55	;load03236 03E5 008D 		MOVWF	EECON203237 03E6 30AA 		MOVLW	0xAA03238 03E7 008D 		MOVWF	EECON2Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 101500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm03239 03E8 148C 		BSF	EECON1,WR	;fire!03240 03E9 188C 		BTFSC	EECON1,WR	;wait for write to finish03241 03EA 2BE9 		GOTO	$-1	; test again03242 03EB 110C 		BCF	EECON1,WREN03243 03EC 		if UsesISR03248 03EC 		endif03249 03EC 2C52 		GOTO	Bank0Rtn03250 03ED 	;03251 03ED 		if UsesNIC03252 03ED 	;===========================================================================================03253 03ED 	; Do a 1's complement checksum of the CPU's non-volatile eeprom03254 03ED 	; (6 bytes tested, 2 lsB of MAC Address, and 4 byte IP Address)03255 03ED 	; Entry: none03256 03ED 	; Exit: Param78=Checksum03257 03ED 	; RAM used:Param78, Param79 (verified 2/26/03)03258 03ED 	; Calls:(1+0) ReadEEwW03259 03ED 	;03260 03ED 01F8 	csum_nonvol	CLRF	Param78	;csum03261 03EE 01F9 		CLRF	Param79	;count03262 03EF 3006 	csum_nonvol_L1	MOVLW	0x0603263 03F0 0279 		SUBWF	Param79,W03264 03F1 1803 		BTFSC	STATUS,C03265 03F2 2BF6 		GOTO	csum_nonvol_End03266 03F3 23C5 		CALL	ReadEE79PI	;sum += read_eeprom(i++);03267 03F4 07F8 		ADDWF	Param78,F03268 03F5 2BEF 		GOTO	csum_nonvol_L103269 03F6 30FF 	csum_nonvol_End	MOVLW	0xFF03270 03F7 06F8 		XORWF	Param78,F03271 03F8 3400 		RETLW	0003272 03F9 	;03273 03F9 	;=====================================================================================03274 03F9 	; Read in the nonvolatile parameters, return 0 if error03275 03F9 	;  This routine is called one time only at power up.03276 03F9 	;  It reads:03277 03F9 	;    2 lsB of MAC Address, and 4 byte IP Address03278 03F9 	;03279 03F9 	; Entry:none03280 03F9 	; Exit: if csum error then Param78=0 else 103281 03F9 	; RAM used: Param78, Param79, FSR (verified 2/26/03)03282 03F9 	; Calls:(1+1) ReadEEwW, csum_nonvol03283 03F9 	;03284 03F9 01F9 	read_nonvol	CLRF	Param7903285 03FA 	;03286 03FA 		if HasMAC_Addr_EEPROM=003287 03FA 23C5 		CALL	ReadEE79PI03288 03FB 00AE 		MOVWF	myeth403289 03FC 		endif03290 03FC 	;03291 03FC 		if HasMAC_Addr_EEPROM=003292 03FC 23C5 		CALL	ReadEE79PI03293 03FD 00AF 		MOVWF	myeth503294 03FE 		endif03295 03FE 	;03296 03FE 23C5 		CALL	ReadEE79PI03297 03FF 00B0 		MOVWF	myip_b303298 0400 23C5 		CALL	ReadEE79PI03299 0401 00B1 		MOVWF	myip_b203300 0402 23C5 		CALL	ReadEE79PI03301 0403 00B2 		MOVWF	myip_b103302 0404 23C5 		CALL	ReadEE79PI03303 0405 00B3 		MOVWF	myip_b003304 0406 	;03305 0406 		if HasMAC_Addr_EEPROM=003306 0406 23ED 		CALL	csum_nonvol	; return (csum_nonvol() == read_eeprom(6)); 03307 0407 3006 		MOVLW	0x0603308 0408 23C7 		CALL	ReadEEwW03309 0409 0278 		SUBWF	Param78,W	;calc'd csum = csum?03310 040A 3001 		MOVLW	0x01	;ok03311 040B 1D03 		BTFSS	STATUS,Z	;skip if same03312 040C 0103 		CLRW		;Error!03313 040D 00F8 		MOVWF	Param7803314 040E 0008 		RETURN03315 040F 		else03317 040F 		endif03318 040F 	;03319 040F 	;========================================================================================================03320 040F 	; Write out the nonvolatile parameters to CPU's eeprom03321 040F 	; Entry: myeth4, myeth5, myip03322 040F 	; Exit: none03323 040F 	; RAM used: Param78, Param79, myeth4, myeth5, myip (verified 2/26/03)03324 040F 	; Calls:(1+1) WriteEEP79W, csum_nonvol03325 040F 	; 03326 040F 01F9 	write_nonvol	CLRF	Param7903327 0410 	;03328 0410 		if HasMAC_Addr_EEPROM=003329 0410 082E 		MOVF	myeth4,W03330 0411 23D2 		CALL	WriteEEP79WPI	; write_eeprom(0, myeth[4]);03331 0412 082F 		MOVF	myeth5,W03332 0413 23D2 		CALL	WriteEEP79WPI	; write_eeprom(1, myeth[5]);03333 0414 		endif03334 0414 	;03335 0414 0830 		MOVF	myip_b3,W03336 0415 23D2 		CALL	WriteEEP79WPI	; write_eeprom(2, myip.b[3]);03337 0416 0831 		MOVF	myip_b2,W03338 0417 23D2 		CALL	WriteEEP79WPI	; write_eeprom(3, myip.b[2]);03339 0418 0832 		MOVF	myip_b1,W03340 0419 23D2 		CALL	WriteEEP79WPI	; write_eeprom(4, myip.b[1]);03341 041A 0833 		MOVF	myip_b0,W03342 041B 23D2 		CALL	WriteEEP79WPI	; write_eeprom(5, myip.b[0]);03343 041C 		if HasMAC_Addr_EEPROM=0Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 102500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm03344 041C 23ED 		CALL	csum_nonvol	; write_eeprom(6, csum_nonvol());03345 041D 3006 		MOVLW	0x0603346 041E 00F9 		MOVWF	Param7903347 041F 0878 		MOVF	Param78,W03348 0420 2BD6 		GOTO	WriteEEP79W03349 0421 		else03351 0421 		endif03352 0421 	;03353 0421 		endif03354 0421 	;===========================================================================================================03355 0421 	;===========================================================================================================03356 0421 		if UsesDataLogging & HasRTC03376 0421 		endif03377 0421 	;03378 0421 		if HasRTC & UsesLCD & Use_display_rtc03409 0421 		endif03410 0421 	;03411 0421 		if HasRTC & UsesDateToBCD03437 0421 		endif03438 0421 	;03439 0421 		if HasRTC03478 0421 		endif03479 0421 	;03480 0421 		if HasRTC03614 0421 		endif03615 0421 	;03616 0421 	;=========================================================================================================03617 0421 	;=========================================================================================================03618 0421 		if UsesMAX11003744 0421 		endif03745 0421 	;03746 0421 	;========================================================================================================03747 0421 		if UsesLDO003748 0421 	;========================================================================================================03749 0421 	; if CMD_LDO_0<>CurrentLDO_0 then WriteLDO_003750 0421 	; Entry: CMD_LDO_0, CurrentLDO_003751 0421 	; Exit: none03752 0421 	; RAM used: none (verified 2/26/03)03753 0421 	; Calls:(0) none03754 0421 	;03755 0421 	OPT_WriteLDO_0	mBank303755 0421 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP003755 0422 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP103756 0423 0828 		MOVF	CMD_LDO_0,W03757 0424 0225 		SUBWF	CurrentLDO_0,W03758 0425 		SKPNZ03758 0425 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z03759 0426 2C52 		GOTO	Bank0Rtn03760 0427 	;03761 0427 	;=================================================================================03762 0427 	; Write the data in CMD_LDO_0 to the latch03763 0427 	; Entry: CurrentLDO_003764 0427 	; Exit: none03765 0427 	; RAM used: none (verified 2/26/03)03766 0427 	; Calls:(0) none03767 0427 	;03768 0427 	WriteLDO_0	mBank103768 0427 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP003768 0428 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103769 0429 3000 		MOVLW	All_Out03770 042A 		if UsesRS232BufIO03774 042A 		endif03775 042A 0088 		MOVWF	TRISD03776 042B 1703 		BSF	_RP1	;Bank303777 042C 0828 		MOVF	CMD_LDO_0,W03778 042D 00A5 		MOVWF	CurrentLDO_003779 042E 		mBank003779 042E 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003779 042F 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103780 0430 0088 		MOVWF	PORTD03781 0431 0806 		MOVF	PORTB,W03782 0432 39F0 		ANDLW	AddressMask03783 0433 3808 		IORLW	SelectLDO003784 0434 0086 	WriteLDO_X	MOVWF	PORTB03785 0435 1206 		BCF	PORTB,SelectEnable03786 0436 0000 		NOP03787 0437 1606 		BSF	PORTB,SelectEnable03788 0438 		if UsesRS232BufIO03790 0438 		endif03791 0438 0008 		RETURN03792 0439 	;03793 0439 		endif	UsesLDO003794 0439 	;03795 0439 		if UsesLDO103796 0439 	;=================================================================================03797 0439 	; if CMD_LDO_1<>CurrentLDO_1 then WriteLDO_103798 0439 	; Entry: CMD_LDO_1, CurrentLDO_103799 0439 	; Exit: none03800 0439 	; RAM used: none (verified 2/26/03)03801 0439 	; Calls:(0) none03802 0439 	;03803 0439 	OPT_WriteLDO_1	mBank303803 0439 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP003803 043A 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP103804 043B 0829 		MOVF	CMD_LDO_1,W03805 043C 0226 		SUBWF	CurrentLDO_1,W03806 043D 		SKPNZ03806 043D 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z03807 043E 2C52 		GOTO	Bank0Rtn03808 043F 	;Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 103500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm03809 043F 	;=================================================================================03810 043F 	; Write the data in CMD_LDO_1 to the latch03811 043F 	; Entry: CMD_LDO_103812 043F 	; Exit: CurrentLDO_1 = CMD_LDO_103813 043F 	; RAM used: none (verified 2/26/03)03814 043F 	; Calls:(0) none03815 043F 	;03816 043F 	WriteLDO_1	mBank103816 043F 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP003816 0440 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103817 0441 3000 		MOVLW	All_Out03818 0442 		if UsesRS232BufIO03822 0442 		endif03823 0442 0088 		MOVWF	TRISD03824 0443 1703 		BSF	STATUS,RP1	;Bank 303825 0444 0829 		MOVF	CMD_LDO_1,W03826 0445 00A6 		MOVWF	CurrentLDO_103827 0446 		mBank003827 0446 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003827 0447 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103828 0448 0088 		MOVWF	PORTD03829 0449 0806 		MOVF	PORTB,W03830 044A 39F0 		ANDLW	AddressMask03831 044B 3809 		IORLW	SelectLDO103832 044C 2C34 		GOTO	WriteLDO_X03833 044D 	;03834 044D 		endif		;UsesLDO103835 044D 	;03836 044D 		if UsesLDO203875 044D 		endif		;UsesLDO103876 044D 	;03877 044D 		if UsesLDO303916 044D 		endif		;UsesLDO103917 044D 	;03918 044D 		if UsesLDI003919 044D 	;=================================================================================03920 044D 	; Read the data from the latch and store it at CurrentLDI_003921 044D 	; Entry:none03922 044D 	; Exit:CurrentLDI_0 and W contain the Data03923 044D 	; RAM used: Param78 (verified 2/26/03)03924 044D 	; Calls:(1+0) ReadData03925 044D 	;03926 044D 300A 	ReadLDI_0	MOVLW	SelectLDI003927 044E 21B0 		CALL	ReadData03928 044F 	;03929 044F 		mBank303929 044F 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP003929 0450 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP103930 0451 00A7 		MOVWF	CurrentLDI_003931 0452 		endif03932 0452 	Bank0Rtn03933 0452 	ReadLDI_end	mBank003933 0452 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003933 0453 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103934 0454 0008 		RETURN03935 0455 	;03936 0455 		if UsesLDI103950 0455 		endif03951 0455 	;03952 0455 		if UsesLDI203967 0455 		endif03968 0455 	;03969 0455 		if UsesLDI303984 0455 		endif03985 0455 	;03986 0455 	;===============================================================================================03987 0455 		if Do_LD_Test04022 0455 		endif		;Do_LD_Test04023 0455 	;04024 0455 	;04025 0455 	;=====================================04026 0455 	; geticks04027 0455 	; Update the current tick count, return W=1 if changed04028 0455 	; TIMER1_DIV=120, Fosc/4/8/(120*256)=2004029 0455 	; RAM used:tickcount, lastc, Param78 (verified 1/30/03)04030 0455 	; Calls:(0) none04031 0455 	;04032 0455 0064 	geticks	CLRWDT		;Kick watchdog04033 0456 080F 		MOVF	TMR1H,W04034 0457 00F8 		MOVWF	Param78	;store it temp04035 0458 0820 		MOVF	lastc,W04036 0459 02F8 		SUBWF	Param78,F	; tc = TMR1H - lastc; 04037 045A 3078 		MOVLW	TIMER1_DIV	; if (tc >= TIMER1_DIV)04038 045B 0278 		SUBWF	Param78,W04039 045C 1C03 		BTFSS	_C04040 045D 3400 		RETLW	0x0004041 045E 0AA1 		INCF	tickcount,F	; tickcount++; 04042 045F 3078 		MOVLW	TIMER1_DIV	; lastc = lastc+TIMER1_DIV;04043 0460 07A0 		ADDWF	lastc,F04044 0461 3401 		RETLW	0x0104045 0462 	;	04046 0462 	;=====================================================================================04047 0462 	; Check timer, scan ADCs, toggle LED if timeout 04048 0462 	; RAM used: Param78, Param7904049 0462 	; Calls:(1+0) geticks, OnTheTick, ToggleSysLED, ReadLDI_N(1+0), OPT_WriteLDO_N(0)04050 0462 	;04051 0462 	scan_io	mBank004051 0462 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP004051 0463 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP104052 0464 		if UsesRS232BufIOHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 104500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm04054 0464 		endif04055 0464 	;04056 0464 2455 		CALL	geticks04057 0465 3901 		ANDLW	0x0104058 0466 		SKPNZ04058 0466 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z04059 0467 2C6B 		GOTO	scan_io_104060 0468 	;04061 0468 		if UsesScrollMenu04064 0468 		endif04065 0468 	;04066 0468 		mCall0To2	OnTheTick	;call every 1/20th sec04066 0468 160A      M		BSF	PCLATH,4		BSF	PCLATH,404066 0469 20FC      M		CALL	OnTheTick		CALL	Destination04066 046A 018A      M		CLRF	PCLATH		CLRF	PCLATH04067 046B 	;04068 046B 	scan_io_1	04069 046B 		if AnyANAUsed04071 046B 		endif04072 046B 	;04073 046B 		if UsesLDO004074 046B 2421 		CALL	OPT_WriteLDO_004075 046C 		endif04076 046C 	;04077 046C 		if UsesLDO104078 046C 2439 		CALL	OPT_WriteLDO_104079 046D 		endif04080 046D 	;04081 046D 		if UsesLDO204083 046D 		endif04084 046D 	;04085 046D 		if UsesLDO304087 046D 		endif04088 046D 	;04089 046D 	;04090 046D 		if UsesLDI004091 046D 244D 		CALL	ReadLDI_004092 046E 		endif04093 046E 	;04094 046E 		if UsesLDI104096 046E 		endif04097 046E 	;04098 046E 		if UsesLDI204100 046E 		endif04101 046E 	;04102 046E 		if UsesLDI304104 046E 		endif04105 046E 	;04106 046E 	;=====================================================================================04107 046E 	;Toggle the system LED04108 046E 	; if tickcount-ledticks >= LEDTIME then toggle the LED and fall throug to OnTheHalfSecond04109 046E 	; Entry:ledticks,tickcount04110 046E 	; Exit:tickcount-ledticks04111 046E 	; RAM used:ledticks, tickcount, Param7804112 046E 	; Calls:(1+3) OnTheHalfSecond, lcd_GotoLineW,PrintString,Disp_decword,Disp_decbyteW04113 046E 	;	04114 046E 	;ToggleSysLED04115 046E 		mBank004115 046E 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP004115 046F 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP104116 0470 	; Check for timeout using the tick counter04117 0470 	; if tickcount-ledticks >= LEDTIME then ledticks=tickcount04118 0470 300A 		MOVLW	LEDTIME	;1004119 0471 00F8 		MOVWF	Param7804120 0472 0822 		MOVF	ledticks,W	;2204121 0473 0221 		SUBWF	tickcount,W	;W:=tickcount-W, W=55-22=3304122 0474 0278 		SUBWF	Param78,W	;W:=LEDTIME-W, W=10-33=-2304123 0475 1903 		BTFSC	STATUS,Z04124 0476 2C79 		GOTO	ToggleSysLED_104125 0477 1803 		BTFSC	STATUS,C	;skip if borrow04126 0478 0008 		RETURN04127 0479 	;04128 0479 	; below here are routines that run every 0.5 seconds04129 0479 	;04130 0479 0821 	ToggleSysLED_1	MOVF	tickcount,W04131 047A 00A2 		MOVWF	ledticks04132 047B 3010 		MOVLW	SystemLEDMask	; Toggle system LED 04133 047C 0685 		XORWF	PORTA,F04134 047D 	;04135 047D 	; fall through to ShowAnXYZ04136 047D 	;04137 047D 		if ANATest04182 047D 		endif		;ANATest04183 047D 	;04184 047D 	;==============================================================================04185 047D 	; Goto the custom routines in Main.asm04186 047D 	;04187 047D 160A 		BSF	PCLATH,404188 047E 2905 		GOTO	OnTheHalfSecond04189 047F 	;04190 047F 	;=========================================================================================04191 047F 	; Read ADC values. A new adc value is read each call04192 047F 	;04193 047F 	; CurADC bits:04194 047F 	; 7 Channel is set04195 047F 	; 6 Conversion is started04196 047F 	; 5..3 ADC Channel number 0..704197 047F 	; 2..0 not used04198 047F 	;04199 047F 	; Entry: noneHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 105500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm04200 047F 	; Exit: none04201 047F 	; RAM used: Param78,Param79, adc0LSB..adc7MSB, FSR (verified 2/7/05)04202 047F 	; Calls: (0+0) ReadADC04203 047F 	;04204 047F 	read_adcs04205 047F 	;04206 047F 		if AnyANAUsed04276 047F 		endif04277 047F 0008 		RETURN04278 0480 	;04279 0480 	;========================================================================================================04280 0480 		if UsesI2C04281 0480 	;===============================================================================================04282 0480 	; Set the eeprom address04283 0480 	;  Can address all 8 32K eerom chips.04284 0480 	;04285 0480 	; Entry:eeROMbuff.Addr04286 0480 	; Exit:eeprom is ready for data to write04287 0480 	;      Param78 has EEROM_ADDR (aka chip select)04288 0480 	; RAM used: Param78, FSR (verified 2/26/03)04289 0480 	; Calls:(1+0) i2c_start, i2c_writeW, i2c_stop04290 0480 	;04291 0480 1079 	AddressEEROMR	BCF	Param79,0	;Write flag Reading04292 0481 2C83 		GOTO	AddressEEROM_E204293 0482 1479 	AddressEEROM	BSF	Param79,0	;Write flag to Writing04294 0483 250F 	AddressEEROM_E2	CALL	i2c_start04295 0484 1783 		BSF	STATUS,IRP04296 0485 3025 		MOVLW	low eeROMbuff.Addr+104297 0486 0084 		MOVWF	FSR	; middle byte of address04298 0487 	;04299 0487 		if Using64KBEEPROM04302 0487 		else04303 0487 0D00 		RLF	INDF,W	; A15 >> C04304 0488 0384 		DECF	FSR,F	; MSB of address04305 0489 0D00 		RLF	INDF,W	; 2:1:0 A17:A16:A1504306 048A 		endif04307 048A 	;04308 048A 00F8 		MOVWF	Param7804309 048B 0D78 		RLF	Param78,W04310 048C 	;04311 048C 390E 		ANDLW	0x0E	; keep only address bits04312 048D 38A0 		IORLW	EEROM_ADDR	; eerom 0 =0xA004313 048E 00F8 		MOVWF	Param78	; save the eerom command for later04314 048F 				;  used by ReadEEROM04315 048F 2516 		CALL	i2c_writeW	; Command includes chip select04316 0490 0A84 		INCF	FSR,F	; middle byte04317 0491 0800 		MOVF	INDF,W04318 0492 	;04319 0492 		if Using64KBEEPROM04320 0492 		else04321 0492 397F 		ANDLW	0x7F	; A15 was included in the cmd04322 0493 		endif04323 0493 	;04324 0493 2516 		CALL	i2c_writeW	; hi byte04325 0494 0A84 		INCF	FSR,F	; LSB of address04326 0495 0800 		MOVF	INDF,W04327 0496 2516 		CALL	i2c_writeW	; lo byte04328 0497 1879 		BTFSC	Param79,0	;Setup for writing?04329 0498 0008 		RETURN		; Yes04330 0499 	;04331 0499 2508 		CALL	i2c_stop	; stop this write04332 049A 250F 		CALL	i2c_start04333 049B 0878 		MOVF	Param78,W04334 049C 3801 		IORLW	0x01	; restart at the same address as read04335 049D 2516 		CALL	i2c_writeW04336 049E 0008 		RETURN04337 049F 	;04338 049F 	;===============================================================================================04339 049F 	; Read data (eeROMbuff.len 1..32 bytes) from eeproms (eeROMbuff.Addr) to eeROMbuff.Data04340 049F 	; Entry:eeROMbuff.len, eeROMbuff.Addr04341 049F 	; Exit:eeROMbuff.Data04342 049F 	; RAM used: Param78, Param79, FSR (verified 2/26/03)04343 049F 	; Calls:(1+1) AddressEEROMR, i2c_start, i2c_writeW, i2c_stop, i2c_read1, close_file04344 049F 	;04345 049F 2480 	ReadEEROM	CALL	AddressEEROMR04346 04A0 	;04347 04A0 3023 		MOVLW	low eeROMbuff.len04348 04A1 0084 		MOVWF	FSR04349 04A2 	;	BSF	STATUS,IRP	;done by AddressEEROM04350 04A2 0800 		MOVF	INDF,W04351 04A3 00F9 		MOVWF	Param79	;store len for easy access04352 04A4 3027 		MOVLW	low eeROMbuff.Data04353 04A5 0084 		MOVWF	FSR04354 04A6 2521 	ReadEEROM_L1	CALL	i2c_read104355 04A7 2153 		CALL	DOP_Ram04356 04A8 0BF9 		DECFSZ	Param79,F04357 04A9 2CA6 		GOTO	ReadEEROM_L104358 04AA 2D06 		GOTO	close_file04359 04AB 	;04360 04AB 		endif		;UsesI2C04361 04AB 	;04362 04AB 		if UsesDataLogging04466 04AB 		endif		;UsesDataLogging04467 04AB 	;04468 04AB 		if UsesI2C04469 04AB 	;===============================================================================================04470 04AB 	; Write eeROMbuff.Data (eeROMbuff.len 1..32 bytes) to the eeproms (eeROMbuff.Addr)04471 04AB 	;  After calling WriteEEROM allow 5ms for write operation to complete before calling any i2c routines.04472 04AB 	;04473 04AB 	; Entry:eeROMbuff.len, eeROMbuff.Addr, eeROMbuff.DataHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 106500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm04474 04AB 	; Exit:none04475 04AB 	; RAM used: Param78, FSR (verified 2/26/03)04476 04AB 	; Calls:(1+1) AddressEEROM, i2c_start, i2c_writeW, i2c_stop04477 04AB 	;04478 04AB 2482 	WriteEEROM	CALL	AddressEEROM04479 04AC 3023 		MOVLW	low eeROMbuff.len04480 04AD 0084 		MOVWF	FSR04481 04AE 	;	BSF	STATUS,IRP	;done by AddressEEROM04482 04AE 0800 		MOVF	INDF,W04483 04AF 00F8 		MOVWF	Param78	;store len for easy access04484 04B0 3027 		MOVLW	low eeROMbuff.Data04485 04B1 0084 		MOVWF	FSR04486 04B2 0800 	WriteEEROM_L1	MOVF	INDF,W04487 04B3 2516 		CALL	i2c_writeW04488 04B4 0A84 		INCF	FSR,F04489 04B5 0BF8 		DECFSZ	Param78,F04490 04B6 2CB2 		GOTO	WriteEEROM_L104491 04B7 2D08 		GOTO	i2c_stop04492 04B8 	;04493 04B8 		endif04494 04B8 	;04495 04B8 		if EnableEEROMCopy04532 04B8 		endif04533 04B8 	;04534 04B8 		if UsesDataROM04535 04B8 	;===============================================================================================04536 04B8 	; DataROM  Copy d.d file to SRAM04537 04B8 	;04538 04B8 	; Entry: None04539 04B8 	; Exit: d.d >> SRAM starting at evDataROM*25604540 04B8 	; RAM used:04541 04B8 	;04542 04B8 2538 	SetupDataROM	CALL	ZeroFName04543 04B9 	;04544 04B9 		mBank304544 04B9 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP004544 04BA 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP104545 04BB 3000 		MOVLW	high evDataROM04546 04BC 00A1 		MOVWF	SRAM_Addr204547 04BD 3010 		MOVLW	low evDataROM04548 04BE 00A0 		MOVWF	SRAM_Addr104549 04BF 019F 		CLRF	SRAM_Addr004550 04C0 	;04551 04C0 3064 		MOVLW	'd'04552 04C1 	;04553 04C1 2CCB 		GOTO	SS_104554 04C2 	;04555 04C2 		endif04556 04C2 	;04557 04C2 		if SRAM_Strings04558 04C2 	;===============================================================================================04559 04C2 	; Strings  Copy the s.s file to SRAM04560 04C2 	; Entry:None04561 04C2 	; Exit: s.s >> SRAM starting at evStrings*25604562 04C2 	; RAM used:04563 04C2 	; Calls: (1+2) find_file,open_file,SS_file_byte,SRAM_Write,SRAM_NextAddr,sfb_ReadNextB,i2c_read104564 04C2 	;04565 04C2 2538 	SetupStrings	CALL	ZeroFName04566 04C3 	;04567 04C3 		mBank304567 04C3 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP004567 04C4 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP104568 04C5 3000 		MOVLW	high evStrings04569 04C6 00A1 		MOVWF	SRAM_Addr2	;0x0104570 04C7 30F2 		MOVLW	low evStrings04571 04C8 00A0 		MOVWF	SRAM_Addr1	;0x0204572 04C9 019F 		CLRF	SRAM_Addr004573 04CA 	;04574 04CA 3073 		MOVLW	's'	;Set filename = "s.s"04575 04CB 2153 	SS_1	CALL	DOP_Ram04576 04CC 0A84 		INCF	FSR,F04577 04CD 0080 		MOVWF	INDF04578 04CE 0384 		DECF	FSR,F04579 04CF 302E 		MOVLW	'.'04580 04D0 0080 		MOVWF	INDF04581 04D1 	;04582 04D1 		mBank304582 04D1 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP004582 04D2 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP104583 04D3 	;04584 04D3 2544 		CALL	find_file04585 04D4 1C78 		BTFSS	Param78,004586 04D5 2CDD 		GOTO	SS_NotFound	;file not found04587 04D6 24F9 		CALL	open_file04588 04D7 	;04589 04D7 24E7 	SS_L2	CALL	SS_file_byte04590 04D8 		mBank204590 04D8 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP004590 04D9 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP104591 04DA 1F96 		BTFSS	End_Of_File04592 04DB 2CD7 		GOTO	SS_L204593 04DC 	;	04594 04DC 2D06 		GOTO	close_file04595 04DD 	;04596 04DD 01F9 	SS_NotFound	CLRF	Param79	;fill with zeros04597 04DE 0103 	SS_L3	CLRW04598 04DF 2236 		CALL	SRAM_WritePI04599 04E0 0103 		CLRW04600 04E1 2236 		CALL	SRAM_WritePI04601 04E2 0103 		CLRWHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 107500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm04602 04E3 2236 		CALL	SRAM_WritePI04603 04E4 0BF9 		DECFSZ	Param79,F04604 04E5 2CDE 		GOTO	SS_L304605 04E6 0008 		RETURN04606 04E7 	;04607 04E7 	;=======================================04608 04E7 	; Calls: (1+1) sfb_ReadNextB,SRAM_Write,SRAM_NextAddr04609 04E7 	;04610 04E7 24EC 	SS_file_byte	CALL	sfb_ReadNextB04611 04E8 1B96 		BTFSC	End_Of_File	;we're done with this file?04612 04E9 0008 		RETURN		;yes04613 04EA 0878 		MOVF	Param78,W04614 04EB 2A36 		GOTO	SRAM_WritePI04615 04EC 	;04616 04EC 	;=======================================04617 04EC 	; CAUTION  Returns with Bank 2 selected04618 04EC 	;04619 04EC 	; Calls: (1+0) i2c_read104620 04EC 	;04621 04EC 2521 	sfb_ReadNextB	CALL	i2c_read1	;next file byte >> Param7804622 04ED 1703 		BSF	STATUS,RP1	; Bank 204623 04EE 0810 		MOVF	romdir.f.len,W04624 04EF 0411 		IORWF	romdir.f.len+1,W04625 04F0 1D03 		BTFSS	STATUS,Z04626 04F1 2CF4 		GOTO	sfb_ReadNextB_104627 04F2 1796 		BSF	End_Of_File	;read past end return 004628 04F3 0008 		RETURN04629 04F4 0810 	sfb_ReadNextB_1	MOVF	romdir.f.len,W	; romdir.f.len--; Decrement length04630 04F5 1903 		BTFSC	STATUS,Z04631 04F6 0391 		DECF	romdir.f.len+1,F04632 04F7 0390 		DECF	romdir.f.len,F04633 04F8 0008 		RETURN04634 04F9 	;04635 04F9 		endif		;SRAM_Strings04636 04F9 	;04637 04F9 		if UsesI2C04638 04F9 	;===============================================================================================04639 04F9 	; Open the previously-found file for transmission04640 04F9 	; sends start bit, slave address (aka chip # 0..7)04641 04F9 	;04642 04F9 	; RAM used: romdir.f.start (verified 2/26/03)04643 04F9 	; Calls:(1+0) i2c_start, i2c_writeW, i2c_stop04644 04F9 	;04645 04F9 	; Note: the files must be in EEROM 004646 04F9 	;04647 04F9 250F 	open_file	CALL	i2c_start04648 04FA 30A0 		MOVLW	EEROM_ADDR	; i2c_write(EEROM_ADDR) Write start pointer to eerom 04649 04FB 2516 		CALL	i2c_writeW04650 04FC 1703 		BSF	STATUS,RP1	; i2c_write(high romdir.f.start); hi byte04651 04FD 0813 		MOVF	romdir.f.start+1,W04652 04FE 2516 		CALL	i2c_writeW04653 04FF 1703 		BSF	STATUS,RP1	; i2c_write(low romdir.f.start); low byte04654 0500 0812 		MOVF	romdir.f.start,W04655 0501 2516 		CALL	i2c_writeW04656 0502 2508 		CALL	i2c_stop04657 0503 250F 		CALL	i2c_start04658 0504 30A1 		MOVLW	EEROM_ADDR|1	; i2c_write(EEROM_ADDR | 1) Restart ROM access as read cycle 04659 0505 2D16 		GOTO	i2c_writeW04660 0506 	;04661 0506 	;=======================================================================04662 0506 	; Close the previously-opened file (aka stop read operation)04663 0506 	; Dummy read cycle w/ NAK instead of ACK04664 0506 	;04665 0506 	; RAM used: Param78 (verified 2/26/03)04666 0506 	; Calls:(1+0) i2c_read, i2c_stop04667 0506 	;04668 0506 01F8 	close_file	CLRF	Param7804669 0507 2522 		CALL	i2c_read04670 0508 	;04671 0508 	; fall through to i2c_stop04672 0508 	;04673 0508 	;=====================================================================================================04674 0508 	; Ends a iic operation04675 0508 	; use I2C(MASTER, SDA=PIN_C4, SCL=PIN_C3, RESTART_WDT, FAST) 04676 0508 	; Entry: none04677 0508 	; Exit: none04678 0508 	; RAM used: none (verified 2/26/03)04679 0508 	; Calls:(0) none04680 0508 	i2c_stop	mBank104680 0508 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP004680 0509 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP104681 050A 1511 		BSF	SSPCON2,PEN	; send stop bit04682 050B 1911 		BTFSC	SSPCON2,PEN	; has stop bit been sent?04683 050C 2D0B 		GOTO	$-1	; no, loop back to test04684 050D 1283 		BCF	_RP0	; Bank 004685 050E 0008 		RETURN04686 050F 	;04687 050F 	;=================================================================================================04688 050F 	; Start an iic operation04689 050F 	; RAM used: none (verified 2/26/03)04690 050F 	; Calls: (0) none04691 050F 	;04692 050F 	i2c_start	mBank104692 050F 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP004692 0510 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP104693 0511 1411 		BSF	SSPCON2,SEN	; send start bit04694 0512 1811 		BTFSC	SSPCON2,SEN	; has SEN cleared yet04695 0513 2D12 		GOTO	$-1	; no, loop back to test04696 0514 1283 		BCF	_RP0	; Bank 004697 0515 0008 		RETURNHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 108500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm04698 0516 	;04699 0516 	;================================================================================================04700 0516 	; writes a byte to the serial EEPROM, hangs if no ACK04701 0516 	; entry: W byte to send04702 0516 	; exit: none04703 0516 	; RAM used: none (verified 2/26/03)04704 0516 	; Calls:(0) none04705 0516 	;04706 0516 	i2c_writeW	mBank004706 0516 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP004706 0517 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP104707 0518 118C 		BCF	PIR1,SSPIF	; clear interrupt flag04708 0519 0093 		MOVWF	SSPBUF	; move data to SSPBUF04709 051A 1D8C 		BTFSS	PIR1,SSPIF	; has SSP completed sending?04710 051B 2D1A 		GOTO	$-1	; no, loop back to test04711 051C 1683 		BSF	STATUS,RP004712 051D 1B11 		BTFSC	SSPCON2,ACKSTAT	; has slave sent ACK?04713 051E 2D1D 		GOTO	$-1	; no, try again04714 051F 1283 		BCF	_RP0	; Bank 004715 0520 0008 		RETURN04716 0521 	;04717 0521 	;=========================================================================================04718 0521 	; Read next byte04719 0521 	; RAM used: Param78 (verified 2/26/03)04720 0521 	; Calls:(0) i2c_read04721 0521 	;04722 0521 1478 	i2c_read1	BSF	Param78,004723 0522 	;04724 0522 	; fall through to i2c_read04725 0522 	;04726 0522 	;=========================================================================================04727 0522 	; Read from external serial eeprom(s)04728 0522 	; Entry: Param78 = 1 Read next byte send ACK, 0 = Dummy Read w/NAK04729 0522 	; Exit: Param78 and W = Return Value04730 0522 	; RAM used: Param78 (verified 2/26/03)04731 0522 	; Calls:(0) none04732 0522 	;04733 0522 	i2c_read	mBank004733 0522 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP004733 0523 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP104734 0524 118C 		BCF	PIR1,SSPIF	; clear interrupt flag04735 0525 1683 		BSF	STATUS,RP004736 0526 1591 		BSF	SSPCON2,RCEN	; enable receive mode04737 0527 1283 		BCF	STATUS,RP004738 0528 1D8C 		BTFSS	PIR1,SSPIF	; has SSP received a data byte?04739 0529 2D28 		GOTO	$-1	; no, loop back to test04740 052A 1683 		BSF	STATUS,RP004741 052B 1691 		BSF	SSPCON2,ACKDT	; NAK04742 052C 1878 		BTFSC	Param78,004743 052D 1291 		BCF	SSPCON2,ACKDT	; ACK04744 052E 1611 		BSF	SSPCON2,ACKEN	; send ACKDT bit04745 052F 	;04746 052F 1A11 		BTFSC	SSPCON2,ACKEN	; has ACKDT bit been sent yet?04747 0530 2D2F 		GOTO	$-1	; no, loop back to test04748 0531 1283 		BCF	STATUS,RP004749 0532 	;04750 0532 0813 		MOVF	SSPBUF,W	; save data to RAM04751 0533 00F8 		MOVWF	Param7804752 0534 1683 		BSF	STATUS,RP004753 0535 1191 		BCF	SSPCON2,RCEN	; disable receive mode04754 0536 1283 		BCF	STATUS,RP004755 0537 0008 		RETURN04756 0538 		endif		;UsesI2C04757 0538 	;04758 0538 		if UsesEEROMFiles04759 0538 	;=======================================04760 0538 	;04761 0538 300C 	ZeroFName	MOVLW	ROM_FNAMELEN	;zero filename04762 0539 00F8 		MOVWF	Param7804763 053A 3017 		MOVLW	low romdir.f.name04764 053B 0084 		MOVWF	FSR04765 053C 1783 		BSF	STATUS,IRP04766 053D 0180 	ZeroFName_L1	CLRF	INDF	;117..117+B04767 053E 0A84 		INCF	FSR,F04768 053F 0BF8 		DECFSZ	Param78,F04769 0540 2D3D 		GOTO	ZeroFName_L104770 0541 3017 		MOVLW	low romdir.f.name04771 0542 0084 		MOVWF	FSR04772 0543 0008 		RETURN04773 0544 	;04774 0544 	;=================================================================================================04775 0544 	; Definitions for filesystem04776 0544 	; 04777 0544 	; The filesystem is in 1 or 2 ROMs (32k bytes each). At the start of the first ROM is a 04778 0544 	; directory of 1 or more filename blocks, each of which have pointers to 04779 0544 	; data blocks. The end of the directory is marked by a dummy length of FFFFh 04780 0544 	; 04781 0544 	; All the HTTP files include the appropriate HTTP headers. 04782 0544 	; 04783 0544 	; There may be 2 special files in the file list:04784 0544 	;  "s.s" is the strings file for SRAM based strings.04785 0544 	;  "d.d" is the SRAM data image04786 0544 	; 04787 0544 	; Filename block structure04788 0544 	; WORD len;	Length of file in bytes04789 0544 	; WORD start;	Start address of file data in ROM04790 0544 	; WORD check;	TCP checksum of file04791 0544 	; BYTE flags;	Embedded Gateway Interface (EGI) flags04792 0544 	; char name[ROM_FNAMELEN]; Lower-case filename with extension04793 0544 	; 	Highland Greeley PIC.asm   "LowStuff.asm"                                Page: 109500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm04794 0544 	;04795 0544 	;===============================================================================================04796 0544 	;===============================================================================================04797 0544 	; Find a filename in ROM filesystem. Return false if not found 04798 0544 	; ** Sets fileidx(Param72) to 0 if ROM error, 1 if file is first in ROM, 2 if 2nd.. 04799 0544 	; ** and leaves directory info in 'romdir' 04800 0544 	; ** If the first byte of name is zero, match first directory entry04801 0544 	;04802 0544 	; Entry: romdir.f.name04803 0544 	; Exit: Param78:0 1=found04804 0544 	; RAM used: Param77, Param78, Param79, Param7A, romdir(19 bytes) (verified 2/26/03)04805 0544 	; Calls:(1+0) i2c_start, i2c_writeW, i2c_stop, i2c_read, i2c_read104806 0544 	;04807 0544 	; BOOL mismatch=1, end=0;   Param79:0, Param79:104808 0544 	; int i; Param7A04809 0544 	; BYTE b; Param7B04810 0544 	;04811 0544 1479 	find_file	BSF	Param79,0	; mismatch=104812 0545 10F9 		BCF	Param79,1	; end=004813 0546 01F7 		CLRF	Param77	; fileidx = 0; Set ROM address pointer to 0 04814 0547 250F 		CALL	i2c_start04815 0548 30A0 		MOVLW	EEROM_ADDR04816 0549 2516 		CALL	i2c_writeW	; i2c_write(EEROM_ADDR); 04817 054A 0103 		CLRW04818 054B 2516 		CALL	i2c_writeW	; i2c_write(0) Address=0x000004819 054C 0103 		CLRW	04820 054D 2516 		CALL	i2c_writeW	; i2c_write(0)04821 054E 2508 		CALL	i2c_stop04822 054F 250F 		CALL	i2c_start	;Read next directory entry04823 0550 30A1 		MOVLW	EEROM_ADDR|1	; i2c_write(EEROM_ADDR | 1);04824 0551 2516 		CALL	i2c_writeW	; continue read at current address04825 0552 	;  04826 0552 	; Get file len, ptr, csum and flags     romdir.f.len..romdir.f.flags  7 bytes04827 0552 	; for i=7 downto 104828 0552 3007 	find_file_L1	MOVLW	0x0704829 0553 00FA 		MOVWF	Param7A04830 0554 3010 		MOVLW	low romdir.f.len	; romdir.b[i] = i2c_read(1); 04831 0555 0084 		MOVWF	FSR04832 0556 1783 		BSF	STATUS,IRP04833 0557 	;04834 0557 2521 	find_file_L2	CALL	i2c_read104835 0558 2153 		CALL	DOP_Ram	;110+Param7A04836 0559 0BFA 		DECFSZ	Param7A,F04837 055A 2D57 		GOTO	find_file_L204838 055B 	;04839 055B 1703 		BSF	STATUS,RP104840 055C 0A11 		INCF	romdir.f.len+1,W	;if high byte = FF that's the end04841 055D 1D03 		BTFSS	STATUS,Z04842 055E 2D61 		GOTO	find_file_104843 055F 14F9 		BSF	Param79,1	; end = 104844 0560 2D6F 		GOTO	find_file_4	; Abandon if no entry 04845 0561 	;04846 0561 1079 	find_file_1	BCF	Param79,0	; mismatch = 0;  Try matching name 04847 0562 	; for i=ROM_FNAMELEN downto 004848 0562 300C 		MOVLW	ROM_FNAMELEN04849 0563 00FA 		MOVWF	Param7A04850 0564 2521 	find_file_L3	CALL	i2c_read104851 0565 0200 		SUBWF	INDF,W04852 0566 1D03 		BTFSS	STATUS,Z04853 0567 1479 		BSF	Param79,0	; mismatch = 1;04854 0568 0A84 		INCF	FSR,F04855 0569 0BFA 		DECFSZ	Param7A,F04856 056A 2D64 		GOTO	find_file_L3	; test all 12 bytes04857 056B 	; if (!romdir.f.name[0])   If null name, match anything 04858 056B 1703 		BSF	STATUS,RP104859 056C 0897 		MOVF	romdir.f.name,F04860 056D 1903 		BTFSC	STATUS,Z04861 056E 1079 		BCF	Param79,0	; mismatch = 0; 04862 056F 	; 04863 056F 	; Loop until matched 	04864 056F 	; while (!end && fileidx++<>MAXFILES && mismatch); 04865 056F 18F9 	find_file_4	BTFSC	Param79,1	; skip if not end04866 0570 2D78 		GOTO	find_file_5	; end of dir04867 0571 0877 		MOVF	Param77,W	;fileidx04868 0572 0AF7 		INCF	Param77,F04869 0573 3C64 		SUBLW	MAXFILES	; MAXFILES-fileidx04870 0574 1903 		BTFSC	STATUS,Z04871 0575 2D78 		GOTO	find_file_5	; no more files04872 0576 1879 		BTFSC	Param79,0	; skip if not mismatch04873 0577 2D52 		GOTO	find_file_L1	; mismatch04874 0578 	; if (mismatch) 04875 0578 1C79 	find_file_5	BTFSS	Param79,0	; skip if mismatch04876 0579 2D7E 		GOTO	find_file_End	; not mismatch04877 057A 	; romdir.f.len = 0; 04878 057A 1703 		BSF	STATUS,RP104879 057B 0190 		CLRF	romdir.f.len04880 057C 0191 		CLRF	romdir.f.len+104881 057D 1303 		BCF	STATUS,RP104882 057E 	; return(!mismatch); 04883 057E 2506 	find_file_End	CALL	close_file	; i2c_read(0); NAK04884 057F 01F8 		CLRF	Param7804885 0580 1C79 		BTFSS	Param79,0	; skip if mismatch04886 0581 1478 		BSF	Param78,0	; return found=true04887 0582 3400 		RETLW	0004888 0583 	;04889 0583 		endif04890 0583 	;04891 0583 		if RS232Config04954 0583 		endif04955 0583 	; fall through to xmodem_recvHighland Greeley PIC.asm   "LowStuff.asm"                                Page: 110500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:LowStuff.asm04956 0583 	;04957 0583 		if xmodemEEROM05127 0583 		endif05128 0583 	;05129 0583 		if UsesRS232BufIO05238 0583 		endif05239 0583 	;05240 0583 	;05241 0583 		if UsesRS232BufIO05321 0583 		endif05322 0583 	;05323 0583 		if RS232Active05345 0583 		endif05346 0583 	;05347 0583 		if RS232Config05472 0583 		endif05473 0583 	;05474 0583 		if Do_eeROM_Test05514 0583 		endif05515 0583 	;05516 0583 		if UsesNIC & UsesLCD05517 0583 	;=====================================05518 0583 	; Display IP address on 2nd line05519 0583 	;05520 0583 	; Entry: none05521 0583 	; Exit: none05522 0583 	; RAM used: Param71:0, Param77,Param78, Param79, Param7A, Param7B05523 0583 	; Calls:(1+3) lcd_GotoLineW, Disp_decbyteW, Display_Dot05524 0583 	;05525 0583 3001 	DispIP	MOVLW	DispIPLine05526 0584 2353 		CALL	lcd_GotoLineW05527 0585 	;05528 0585 	;  Bank0 must be selected before calling this entry point05529 0585 13A5 	DispIP_E2	BCF	DispLSpaces05530 0586 0830 		MOVF	myip_b3,W	; MSB05531 0587 20BC 		CALL	Disp_decbyteW05532 0588 23AA 		CALL	Display_Dot05533 0589 0831 		MOVF	myip_b2,W05534 058A 20BC 		CALL	Disp_decbyteW05535 058B 23AA 		CALL	Display_Dot05536 058C 0832 		MOVF	myip_b1,W 05537 058D 20BC 		CALL	Disp_decbyteW05538 058E 23AA 		CALL	Display_Dot05539 058F 0833 		MOVF	myip_b0,W	; LSB05540 0590 28BC 		GOTO	Disp_decbyteW05541 0591 	;05542 0591 		if UsesDispMAC05543 0591 	;=====================================05544 0591 	; Display MAC address on 2nd line05545 0591 	;05546 0591 	; Entry: none05547 0591 	; Exit: none05548 0591 	; RAM used: Param71:0, Param76, Param77,Param78, Param79, Param7A, Param7B05549 0591 	; Calls:(1+3) lcd_GotoLineW, Disp_Hex_Byte, Display_Colon05550 0591 	;05551 0591 3001 	DispMAC	MOVLW	0x0105552 0592 2353 		CALL	lcd_GotoLineW05553 0593 	;05554 0593 	;  Bank0 must be selected before calling this entry point05555 0593 082A 	DispMAC_E2	MOVF	myeth0,W	; MSB05556 0594 239A 		CALL	Disp_Hex_Byte05557 0595 23A8 		CALL	Display_Colon05558 0596 082B 		MOVF	myeth1,W05559 0597 239A 		CALL	Disp_Hex_Byte05560 0598 23A8 		CALL	Display_Colon05561 0599 082C 		MOVF	myeth2,W 05562 059A 239A 		CALL	Disp_Hex_Byte05563 059B 23A8 		CALL	Display_Colon05564 059C 082D 		MOVF	myeth3,W	; LSB05565 059D 239A 		CALL	Disp_Hex_Byte05566 059E 23A8 		CALL	Display_Colon05567 059F 082E 		MOVF	myeth4,W	; LSB05568 05A0 239A 		CALL	Disp_Hex_Byte05569 05A1 23A8 		CALL	Display_Colon05570 05A2 082F 		MOVF	myeth5,W	; LSB05571 05A3 2B9A 		GOTO	Disp_Hex_Byte05572 05A4 	;05573 05A4 		endif05574 05A4 		endif05575 05A4 	; 05576 05A4 	;================================================================================================05577 05A4 	; end of segment 0  (0000-07FF)05578 05A4 	;================================================================================================05579 05A4 	;05580 05A4 	;05581 05A4 	 05582 05A4 	 05583 05A4 	 05584 05A4 	 05585 05A4 	 05586 05A4 	 05587 05A4 	 05588 05A4 	 05589 05A4 	 05590 05A4 	 01010 05A4 		include	DataAccessSeg0.asm00001 05A4 		subtitle	"DataAccess.asm"00002 05A4 		page00003 05A4 	;============================================================================================Highland Greeley PIC.asm   "DataAccess.asm"                              Page: 111500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DataAccessSeg0.asm00004 05A4 	;00005 05A4 	;  FileName: DataAccess.asm00006 05A4 	;  Date: 2/11/201200007 05A4 	;  File Version: 1.2.200008 05A4 	;  00009 05A4 	;  Author: David M. Flynn00010 05A4 	;  Company: HPRR00011 05A4 	;  Project: TCC00012 05A4 	;00013 05A4 	;============================================================================================00014 05A4 	;============================================================================================00015 05A4 	; Revision History00016 05A4 	;00017 05A4 	; 1.2.2 2/11/2012	Added SMLocMask, Do not overwrite SM data if set. CopyUDPSMTable,CopyUDPSMTableHigh00018 05A4 	;	DoXPageMove was changed to DoSMPageMove00019 05A4 	; 1.2.1 4/29/2009	Added Comments.00020 05A4 	; 1.2   6/29/2005	Added SyncBlkPwr.00021 05A4 	; 1.1   5/1/2005	Removed Panel Specific routines,00022 05A4 	;	Added GetBlockCmdTable2X,SetBlockCmdTable2X,GetBlockPwrTable2X,SetBlockPwrTable2X00023 05A4 	; 1.0   9/6/2004	First Reved version.00024 05A4 	;00025 05A4 	;============================================================================================00026 05A4 	; Conditional Assmbly00027 05A4 		ifndef UsesSyncBP00029 05A4 		endif00030 05A4 	;00031 05A4 	;============================================================================================00032 05A4 	; Notes:00033 05A4 	;00034 05A4 	;Caution most routines called within this include file00035 05A4 	;  leave Bank3 selected.00036 05A4 	;00037 05A4 	;Main.asm should call SetupDMFEIO once then00038 05A4 	; call DoDMFEIO each pass through the main loop00039 05A4 	;00040 05A4 	;6502 Registers00041 05A4 0072 	XReg	EQU	Param7200042 05A4 0073 	YReg	EQU	Param7300043 05A4 	;00044 05A4 	;in SMTable each Byte represents one Switch Machine00045 05A4 	; bit0 = Valid bit set by sending cpu to say "Use this data."00046 05A4 	; bit1 = Private Valid (Ownership) bit set when Valid and Command bits are set.00047 05A4 	; bit2 = 00048 05A4 	; bit3 = 00049 05A4 	; bit4 = 00050 05A4 	; bit5 = Feed Back00051 05A4 	; bit6 = Command if 1 then bit 7 will also be 100052 05A4 	; bit7 = Control00053 05A4 	;00054 05A4 	;in BlockPwrTable each byte represents one block00055 05A4 	; bit0 = Cab500056 05A4 	; bit1 = Cab400057 05A4 	; bit2 = Cab300058 05A4 	; bit3 = Cab200059 05A4 	; bit4 = Cab100060 05A4 	; bit5 = Detect West00061 05A4 	; bit6 = Detect East00062 05A4 	; bit7 = Set if any cab is powerd00063 05A4 	;  if bit 7 is set but bits 0..4 are cleared then look at BlockPwrTable200064 05A4 	;  for additional cab bits00065 05A4 	;00066 05A4 	;in BlockPwrTable2 each byte represents one block00067 05A4 	; bit0 = Cab900068 05A4 	; bit1 = Cab800069 05A4 	; bit2 = Cab700070 05A4 	; bit3 = Cab600071 05A4 	; bit4 = not used00072 05A4 	; bit5 = not used00073 05A4 	; bit6 = not used00074 05A4 	; bit7 = not used00075 05A4 	;00076 05A4 007F 	SMControlMask	EQU	0x7F00077 05A4 00DF 	SMFBMask	EQU	0xDF00078 05A4 00A0 	SMCnFMask	EQU	0xA0	;Control and Feedback bits00079 05A4 0040 	SMCMDMask	EQU	0x40	;Command Bit00080 05A4 0001 	SMVDMask	EQU	0x01	;Valid Data bit for TX00081 05A4 0001 	SMLocBit	EQU	0x01	;Data is local flag00082 05A4 00BF 	SMCMDInvMask	EQU	0xBF00083 05A4 00C0 	SMCTRLnCMDMask	EQU	0xC000084 05A4 004C 	BlockCount	EQU	kMaxBlockNum+1	;Last block number+100085 05A4 	;=========================================================================================00086 05A4 	; Name	(additional stack words required) Description00087 05A4 	;=========================================================================================00088 05A4 	;GetBlkOwnerX	(1+1) Get the block owner flags byte from data ram00089 05A4 	;GetCabNumX	(1+2) Get the cab number powering this block 0..900090 05A4 	;GetSMTableHighX	(1+1) Get SM data from SMTableHigh,X00091 05A4 	;GetGet_1X	(1+1) Read SRAM at W*256+XReg return in W and Param7800092 05A4 	;GetGet_Read	(1+1) Read SRAM at 0x00:SRAM_Addr1:SRAM_Addr0 return in W and Param7800093 05A4 	;SetSMTableHighX	(1+1) Store the W at SMTableHigh,X00094 05A4 	;GetCurBlkY	(1+1) Get data from SRAM (CurBlk),Y00095 05A4 	;GetSMDispPtrY	(1+1) Get data from SRAM (SMDispPtr),Y00096 05A4 	;GetBlockCmdTableX	(1+1) Get the Block Power Command data at BlockCmdTable,X00097 05A4 	;SetBlockCmdTableX	(1+1) Store the W in Block Power Command data at BlockCmdTable,X00098 05A4 	;GetBlockCmdTable2X	(1+1) Get the Block Power Command data at BlockCmdTable2,X00099 05A4 	;SetBlockCmdTable2X	(1+1) Store the W in Block Power Command data at BlockCmdTable2,X00100 05A4 	;GetBlockPwrTableX	(1+1) Get the Block Power data at BlockPwrTable,X00101 05A4 	;SetBlockPwrTableX	(1+1) Store the W in Block Power data at BlockPwrTable,X00102 05A4 	;SetSet_1X	(1+1) Store Param78 in SRAM at W*256+XReg00103 05A4 	;GetBlockPwrTable2X	(1+1) Get the Block Power data at BlockPwrTable2,X00104 05A4 	;SetBlockPwrTable2X	(1+1) Store the W in Block Power data at BlockPwrTable2,XHighland Greeley PIC.asm   "DataAccess.asm"                              Page: 112500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DataAccessSeg0.asm00105 05A4 	;GetSMTableX	(1+1) Get SM data from SMTable,X00106 05A4 	;SetSMTableX	(1+1) Store the W at SMTable,X00107 05A4 	;SyncBlkPwr	(1+2) If Block Cmd = 0 and Block Pwr = 0 then clear valid bit00108 05A4 	;SyncSMs	(1+2) kill Valid bits if Cmd = Ctrl00109 05A4 	;CopyUDPBlockPwrTable	(1+2) Copy the block pwr Data from evUDP_BlockPwrTable(0x0204) to BlockPwrTable(0x0004)00110 05A4 	;CopyUDPBlockPwrTable2	(1+2) Copy the block pwr Data from evUDP_BlockPwrTable2(0x0206) to BlockPwrTable(0x0006)00111 05A4 	;CopyUDPSMTable	(1+1) Copy the low SM Data from evUDP_SMTable(0x0202) to SMTable(0x0002)00112 05A4 	;CopyUDPSMTableHigh	(1+1) Copy the high SM Data from evUDP_SMTableHigh(0x0203) to SMTableHigh(0x0003)00113 05A4 	;=========================================================================================00114 05A4 	; Get the block owner flags byte from data ram00115 05A4 	; Param78=(BlockOwner,X)00116 05A4 	;00117 05A4 	; Entry: XReg00118 05A4 	; Exit: W & Param7800119 05A4 	; RAM used: Param78, XReg00120 05A4 	; Calls: GetGet_Read00121 05A4 	;00122 05A4 3001 	GetBlkOwnerX	MOVLW	high BlockOwner00123 05A5 3E10 		ADDLW	low evDataROM00124 05A6 00A0 		MOVWF	SRAM_Addr100125 05A7 3020 		MOVLW	low BlockOwner00126 05A8 0772 		ADDWF	XReg,W00127 05A9 009F 		MOVWF	SRAM_Addr000128 05AA 		ADDCF	SRAM_Addr1,F00128 05AA 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00128 05AB 0AA0      M		INCF	SRAM_Addr1,F		INCF	dest,W_or_F00129 05AC 2DE5 		GOTO	GetGet_Read00130 05AD 	;00131 05AD 		if UsesGetCabNumX00132 05AD 	;=========================================================================================00133 05AD 	; Get the cab number powering this block00134 05AD 	;00135 05AD 	; Entry: XReg=BlkNum, bank300136 05AD 	; Exit: Param78 & W = Cab# 0..9, Bank300137 05AD 	; RAM Used: XReg, Param78, Param7900138 05AD 	; Calls: (1+2) GetBlockPwrTableX,GetBlockPwrTable2X00139 05AD 	;00140 05AD 2608 	GetCabNumX	CALL	GetBlockPwrTableX00141 05AE 1FF8 		BTFSS	Param78,7	;Anycab00142 05AF 2DBB 		GOTO	GetCabNumX_NoCab	; No00143 05B0 	;00144 05B0 00F9 		MOVWF	Param7900145 05B1 391F 		ANDLW	0x1F	;1..5?00146 05B2 		SKPNZ00146 05B2 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00147 05B3 2DBE 		GOTO	GetCabNumX_100148 05B4 	;00149 05B4 3005 		MOVLW	0x0500150 05B5 00F8 		MOVWF	Param7800151 05B6 1879 	GetCabNumX_L1	BTFSC	Param79,000152 05B7 2DC7 		GOTO	GetCabNumX_Found00153 05B8 0CF9 		RRF	Param79,F00154 05B9 0BF8 		DECFSZ	Param78,F00155 05BA 2DB6 		GOTO	GetCabNumX_L100156 05BB 	;00157 05BB 01F8 	GetCabNumX_NoCab	CLRF	Param7800158 05BC 0878 	GetCabNumX_Found_End	MOVF	Param78,W00159 05BD 0008 		RETURN00160 05BE 	;00161 05BE 2614 	GetCabNumX_1	CALL	GetBlockPwrTable2X00162 05BF 00F9 		MOVWF	Param7900163 05C0 3009 		MOVLW	0x0900164 05C1 00F8 		MOVWF	Param7800165 05C2 1879 	GetCabNumX_L2	BTFSC	Param79,000166 05C3 2DC7 		GOTO	GetCabNumX_Found00167 05C4 0CF9 		RRF	Param79,F00168 05C5 0BF8 		DECFSZ	Param78,F00169 05C6 2DC2 		GOTO	GetCabNumX_L200170 05C7 	;00171 05C7 	; We have a throttle number, it must be translated into a Cab number.00172 05C7 3006 	GetCabNumX_Found	MOVLW	0x0600173 05C8 0278 		SUBWF	Param78,W00174 05C9 		SKPNB		;<=5?00174 05C9 1C03      M		BTFSS	STATUS,C		BTFSS	STATUS,C00175 05CA 2DBC 		GOTO	GetCabNumX_Found_End	; Yes00176 05CB 	;6..9 need translating00177 05CB 	;00178 05CB 3008 		MOVLW	0x0800179 05CC 0278 		SUBWF	Param78,W00180 05CD 		SKPB		;Thr 8 or 9?00180 05CD 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00181 05CE 2DBB 		GOTO	GetCabNumX_NoCab	; Yes, they don't route return 0x0000182 05CF 	;00183 05CF 3006 		MOVLW	0x0600184 05D0 0278 		SUBWF	Param78,W00185 05D1 		SKPZ		;Thr 6?00185 05D1 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00186 05D2 2DD7 		GOTO	Throttle7ToCab	; No00187 05D3 	;			  No, must be 700188 05D3 3016 	Throttle6ToCab	MOVLW	High BlkThr6ToCab00189 05D4 00A0 		MOVWF	SRAM_Addr100190 05D5 306A 		MOVLW	low BlkThr6ToCab00191 05D6 2DDA 		GOTO	ThrottleToCab00192 05D7 	;00193 05D7 3016 	Throttle7ToCab	MOVLW	High BlkThr7ToCab00194 05D8 00A0 		MOVWF	SRAM_Addr100195 05D9 30B9 		MOVLW	low BlkThr7ToCab00196 05DA 	;00197 05DA 	;00198 05DA 0772 	ThrottleToCab	ADDWF	XReg,W	;BlkNumHighland Greeley PIC.asm   "DataAccess.asm"                              Page: 113500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DataAccessSeg0.asm00199 05DB 009F 		MOVWF	SRAM_Addr000200 05DC 		ADDCF	SRAM_Addr1,F00200 05DC 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00200 05DD 0AA0      M		INCF	SRAM_Addr1,F		INCF	dest,W_or_F00201 05DE 3010 		MOVLW	low evDataROM00202 05DF 07A0 		ADDWF	SRAM_Addr1,F00203 05E0 2DE5 		GOTO	GetGet_Read00204 05E1 	;00205 05E1 	;00206 05E1 		endif00207 05E1 	;00208 05E1 	;=========================================================================================00209 05E1 	; Get SM data from SMTableHigh,X00210 05E1 	;00211 05E1 	; Entry: XReg, bank300212 05E1 	; Exit: Param78 & W = SMData, Bank300213 05E1 	; RAM Used: XReg, Param7800214 05E1 	; Calls: (1+1) SRAM_Read00215 05E1 	;00216 05E1 	;6502:	LDA	SMTableHigh,X00217 05E1 	;PIC16:	CALL	GetSMTableHighX00218 05E1 	;00219 05E1 3003 	GetSMTableHighX	MOVLW	low SMTableHigh00220 05E2 00A0 	GetGet_1X	MOVWF	SRAM_Addr100221 05E3 0872 		MOVF	XReg,W00222 05E4 009F 		MOVWF	SRAM_Addr000223 05E5 01A1 	GetGet_Read	CLRF	SRAM_Addr2	;MSB is 0x00 on all00224 05E6 2268 		CALL	SRAM_Read00225 05E7 00F8 		MOVWF	Param7800226 05E8 	B3_Return	mBank300226 05E8 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000226 05E9 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100227 05EA 0008 		RETURN00228 05EB 	;00229 05EB 	;00230 05EB 	;=========================================================================================00231 05EB 	; Store the W at SMTableHigh,X00232 05EB 	;00233 05EB 	; Entry: W, XReg, bank300234 05EB 	; Exit: Param78 & W = SMData, Bank300235 05EB 	; RAM Used: XReg, Param7800236 05EB 	; Calls: (1+1) SRAM_Write00237 05EB 	;00238 05EB 	;6502:	STA	SMTableHigh,X00239 05EB 	;PIC16:	CALL	SetSMTableHighX00240 05EB 	;00241 05EB 00F8 	SetSMTableHighX	MOVWF	Param7800242 05EC 3003 		MOVLW	low SMTableHigh00243 05ED 2E0C 		GOTO	SetSet_1X00244 05EE 	;00245 05EE 	;=========================================================================================00246 05EE 	; Get data from SRAM (CurBlk),Y00247 05EE 	;00248 05EE 	; Entry: YReg, bank300249 05EE 	; Exit: Param78 & W = Data, Bank300250 05EE 	; RAM Used: YReg, Param7800251 05EE 	; Calls: (1+1) SRAM_Read00252 05EE 	;00253 05EE 	;6502:	LDA	(CurBlk),Y00254 05EE 	;PIC16:	CALL	GetCurBlkY00255 05EE 	;00256 05EE 0838 	GetCurBlkY	MOVF	CurBlk+1,W00257 05EF 00A0 		MOVWF	SRAM_Addr100258 05F0 0837 		MOVF	CurBlk,W00259 05F1 0773 		ADDWF	YReg,W00260 05F2 009F 		MOVWF	SRAM_Addr000261 05F3 		ADDCF	SRAM_Addr1,F00261 05F3 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00261 05F4 0AA0      M		INCF	SRAM_Addr1,F		INCF	dest,W_or_F00262 05F5 2DE5 		GOTO	GetGet_Read00263 05F6 	;00264 05F6 	;=========================================================================================00265 05F6 	; Get data from SRAM (SMDispPtr),Y00266 05F6 	;00267 05F6 	; Entry: YReg, bank300268 05F6 	; Exit: Param78 & W = SMData, Bank300269 05F6 	; RAM Used: YReg, Param7800270 05F6 	; Calls: (1+1) SRAM_Read00271 05F6 	;00272 05F6 	;6502:	LDA	(SMDispPtr),Y00273 05F6 	;PIC16:	CALL	GetSMDispPtrY00274 05F6 	;00275 05F6 	GetSMDispPtrY	MOVFW	SMDispPtr+100275 05F6 083A      M		MOVF	SMDispPtr+1,W		MOVF	src,W00276 05F7 00A0 		MOVWF	SRAM_Addr100277 05F8 		MOVFW	SMDispPtr00277 05F8 0839      M		MOVF	SMDispPtr,W		MOVF	src,W00278 05F9 0773 		ADDWF	YReg,W00279 05FA 009F 		MOVWF	SRAM_Addr000280 05FB 		ADDCF	SRAM_Addr1,F00280 05FB 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00280 05FC 0AA0      M		INCF	SRAM_Addr1,F		INCF	dest,W_or_F00281 05FD 2DE5 		GOTO	GetGet_Read00282 05FE 	;00283 05FE 	;=========================================================================================00284 05FE 		if UsesBlockCmdTable00285 05FE 	;=========================================================================================00286 05FE 	; Get the Block Power Command data at BlockCmdTable,X00287 05FE 	;00288 05FE 	; Entry: XReg, bank3Highland Greeley PIC.asm   "DataAccess.asm"                              Page: 114500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DataAccessSeg0.asm00289 05FE 	; Exit: Param78 & W = BlockCmdTable, Bank300290 05FE 	; RAM Used: XReg, Param7800291 05FE 	; Calls: (1+1) SRAM_Write00292 05FE 	;00293 05FE 	;6502:	LDA	BlockCmdTable,X00294 05FE 	;PIC16:	CALL	GetBlockCmdTableX00295 05FE 	;00296 05FE 3005 	GetBlockCmdTableX	MOVLW	low BlockCmdTable00297 05FF 2DE2 		GOTO	GetGet_1X00298 0600 	;00299 0600 	;=========================================================================================00300 0600 	; Store the W in Block Power Command data at BlockCmdTable,X00301 0600 	;00302 0600 	; Entry: W, XReg, bank300303 0600 	; Exit: Param78 & W = BlockCmdTable, Bank300304 0600 	; RAM Used: XReg, Param7800305 0600 	; Calls: (1+1) SRAM_Write00306 0600 	;00307 0600 	;6502:	STA	BlockCmdTable,X00308 0600 	;PIC16:	CALL	SetBlockCmdTableX00309 0600 	;00310 0600 00F8 	SetBlockCmdTableX	MOVWF	Param7800311 0601 3005 		MOVLW	low BlockCmdTable00312 0602 2E0C 		GOTO	SetSet_1X00313 0603 	;00314 0603 	;=========================================================================================00315 0603 	; Get the Block Power Command data at BlockCmdTable2,X00316 0603 	;00317 0603 	; Entry: XReg, bank300318 0603 	; Exit: Param78 & W = BlockCmdTable, Bank300319 0603 	; RAM Used: XReg, Param7800320 0603 	; Calls: (1+1) SRAM_Write00321 0603 	;00322 0603 3007 	GetBlockCmdTable2X	MOVLW	low BlockCmdTable200323 0604 2DE2 		GOTO	GetGet_1X00324 0605 	;00325 0605 	;=========================================================================================00326 0605 	; Store the W in Block Power Command data at BlockCmdTable2,X00327 0605 	;00328 0605 	; Entry: W=BlockCmd, XReg, bank300329 0605 	; Exit: Param78 & W = BlockCmd, Bank300330 0605 	; RAM Used: XReg, Param7800331 0605 	; Calls: (1+1) SRAM_Write00332 0605 	;00333 0605 00F8 	SetBlockCmdTable2X	MOVWF	Param7800334 0606 3007 		MOVLW	low BlockCmdTable200335 0607 2E0C 		GOTO	SetSet_1X00336 0608 	;00337 0608 		endif00338 0608 	;=========================================================================================00339 0608 	; Get the Block Power data at BlockPwrTable,X00340 0608 	;00341 0608 	; Entry: XReg, bank300342 0608 	; Exit: Param78 & W = BlockPwrTable, Bank300343 0608 	; RAM Used: XReg, Param7800344 0608 	; Calls: (1+1) SRAM_Write00345 0608 	;00346 0608 	;6502:	LDA	BlockPwrTable,X00347 0608 	;PIC16:	CALL	GetBlockPwrTableX00348 0608 	;00349 0608 3004 	GetBlockPwrTableX	MOVLW	low BlockPwrTable00350 0609 2DE2 		GOTO	GetGet_1X00351 060A 	;00352 060A 	;=========================================================================================00353 060A 	; Store the W in Block Power data at BlockPwrTable,X00354 060A 	;00355 060A 	; Entry: W, XReg, bank300356 060A 	; Exit: Param78 & W = BlockPwrTable, Bank300357 060A 	; RAM Used: XReg, Param7800358 060A 	; Calls: (1+1) SRAM_Write00359 060A 	;00360 060A 	;6502:	STA	BlockPwrTable,X00361 060A 	;PIC16:	CALL	SetBlockPwrTableX00362 060A 	;00363 060A 00F8 	SetBlockPwrTableX	MOVWF	Param7800364 060B 3004 		MOVLW	low BlockPwrTable00365 060C 	;00366 060C 00A0 	SetSet_1X	MOVWF	SRAM_Addr100367 060D 01A1 		CLRF	SRAM_Addr200368 060E 0872 		MOVF	XReg,W00369 060F 009F 		MOVWF	SRAM_Addr000370 0610 0878 		MOVF	Param78,W00371 0611 223A 		CALL	SRAM_Write00372 0612 0878 		MOVF	Param78,W00373 0613 2DE8 		GOTO	B3_Return00374 0614 	;00375 0614 	;=========================================================================================00376 0614 	; Get the Block Power data at BlockPwrTable2,X00377 0614 	;00378 0614 	; Entry: XReg, bank300379 0614 	; Exit: Param78 & W = BlockPwrTable, Bank300380 0614 	; RAM Used: XReg, Param7800381 0614 	; Calls: (1+1) SRAM_Write00382 0614 	;00383 0614 3006 	GetBlockPwrTable2X	MOVLW	low BlockPwrTable200384 0615 2DE2 		GOTO	GetGet_1X00385 0616 	;00386 0616 	;=========================================================================================00387 0616 	; Store the W in Block Power data at BlockPwrTable2,X00388 0616 	;Highland Greeley PIC.asm   "DataAccess.asm"                              Page: 115500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DataAccessSeg0.asm00389 0616 	; Entry: W, XReg, bank300390 0616 	; Exit: Param78 & W = BlockPwrTable, Bank300391 0616 	; RAM Used: XReg, Param7800392 0616 	; Calls: (1+1) SRAM_Write00393 0616 	;00394 0616 00F8 	SetBlockPwrTable2X	MOVWF	Param7800395 0617 3006 		MOVLW	low BlockPwrTable200396 0618 2E0C 		GOTO	SetSet_1X00397 0619 	;00398 0619 	;00399 0619 	;=========================================================================================00400 0619 	; Get SM data from SMTable,X00401 0619 	;00402 0619 	; Entry: XReg, bank300403 0619 	; Exit: Param78 & W = SMData, Bank300404 0619 	; RAM Used: XReg, Param7800405 0619 	; Calls: (1+1) SRAM_Read00406 0619 	;00407 0619 	;6502:	LDA	SMTable,X00408 0619 	;PIC16:	CALL	GetSMTableX00409 0619 	;00410 0619 3002 	GetSMTableX	MOVLW	low SMTable00411 061A 2DE2 		GOTO	GetGet_1X00412 061B 	;00413 061B 	;=========================================================================================00414 061B 	; Store the W at SMTable,X00415 061B 	;00416 061B 	; Entry: W, XReg, bank300417 061B 	; Exit: Param78 & W = SMData, Bank300418 061B 	; RAM Used: XReg, Param7800419 061B 	; Calls: (1+1) SRAM_Write00420 061B 	;00421 061B 	;6502:	STA	SMTable,X00422 061B 	;PIC16:	CALL	SetSMTableX00423 061B 	;00424 061B 00F8 	SetSMTableX	MOVWF	Param7800425 061C 3002 		MOVLW	low SMTable00426 061D 2E0C 		GOTO	SetSet_1X00427 061E 	;00428 061E 		if UsesSyncBP00429 061E 	;=========================================================================================00430 061E 	; If Block Cmd = 0 and Block Pwr = 0 then clear valid bit.00431 061E 	; Call this low level maintenence routine once each time through the main loop 00432 061E 	;00433 061E 	; Entry: SyncBlkNum, bank300434 061E 	; Exit: SyncBlkNum++, Bank300435 061E 	; RAM Used: XReg, Param78, Param7900436 061E 	; Calls: (1+2) GetBlockCmdTableX,SetBlockCmdTableX,GetBlockCmdTable2X,SetBlockCmdTable2X,00437 061E 	;	GetBlockPwrTableX,GetBlockPwrTable2X00438 061E 	;00439 061E 086B 	SyncBlkPwr	MOVF	SyncBlkNum,W00440 061F 00F2 		MOVWF	XReg00441 0620 25FE 		CALL	GetBlockCmdTableX00442 0621 00F9 		MOVWF	Param7900443 0622 1FF8 		BTFSS	Param78,7	;valid bit00444 0623 2E2E 		GOTO	SyncBlkPwr_100445 0624 391F 		ANDLW	0x1F00446 0625 		SKPZ		;Any cab bit set?00446 0625 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00447 0626 2E2E 		GOTO	SyncBlkPwr_1	; Yes00448 0627 2608 		CALL	GetBlockPwrTableX00449 0628 391F 		ANDLW	0x1F00450 0629 		SKPZ		;Any cab bit set?00450 0629 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00451 062A 2E2E 		GOTO	SyncBlkPwr_1	; Yes00452 062B 13F9 		BCF	Param79,700453 062C 0879 		MOVF	Param79,W00454 062D 2600 		CALL	SetBlockCmdTableX00455 062E 	;00456 062E 2603 	SyncBlkPwr_1	CALL	GetBlockCmdTable2X00457 062F 00F9 		MOVWF	Param7900458 0630 1FF8 		BTFSS	Param78,7	;valid bit00459 0631 2E3C 		GOTO	SyncBlkPwr_End00460 0632 390F 		ANDLW	0x0F00461 0633 		SKPZ		;Any cab bit set?00461 0633 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00462 0634 2E3C 		GOTO	SyncBlkPwr_End	; Yes00463 0635 2614 		CALL	GetBlockPwrTable2X00464 0636 390F 		ANDLW	0x0F00465 0637 		SKPZ		;Any cab bit set?00465 0637 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00466 0638 2E3C 		GOTO	SyncBlkPwr_End	; Yes00467 0639 13F9 		BCF	Param79,700468 063A 0879 		MOVF	Param79,W00469 063B 2605 		CALL	SetBlockCmdTable2X00470 063C 	;00471 063C 0AEB 	SyncBlkPwr_End	INCF	SyncBlkNum,F00472 063D 086B 		MOVF	SyncBlkNum,W00473 063E 3C4C 		SUBLW	BlockCount00474 063F 		SKPNZ00474 063F 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00475 0640 01EB 		CLRF	SyncBlkNum00476 0641 0008 		RETURN00477 0642 	;00478 0642 		endif00479 0642 	;===================================================================================================00480 0642 	;00481 0642 		if UsesAutoSMCtrl00482 0642 	;===================================================================================================00483 0642 	;kill Valid bits if Cmd = CtrlHighland Greeley PIC.asm   "DataAccess.asm"                              Page: 116500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DataAccessSeg0.asm00484 0642 	;00485 0642 	; Entry: SyncSMNum, bank300486 0642 	; Exit: SyncSMNum++, Bank300487 0642 	; RAM Used: XReg, Param7800488 0642 	; Calls: (1+2) GetSMTableX,SetSMTableX,GetSMTableHighX,SetSMTableHighX00489 0642 	;00490 0642 086C 	SyncSMs	MOVF	SyncSMNum,W00491 0643 00F2 		MOVWF	XReg00492 0644 2619 		CALL	GetSMTableX00493 0645 1C78 		BTFSS	Param78,0	;valid bit00494 0646 2E50 		GOTO	SyncSMs_100495 0647 1078 		BCF	Param78,000496 0648 39C0 		ANDLW	0xC0	;Ctrl and Cmd00497 0649 		SKPNZ00497 0649 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00498 064A 2E4E 		GOTO	SyncSMs_SetLow	;Both are clear so clr valid bit00499 064B 3AC0 		XORLW	0xC0	;Ctrl and Cmd00500 064C 		SKPZ00500 064C 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00501 064D 2E50 		GOTO	SyncSMs_1	;not the same00502 064E 	;00503 064E 0878 	SyncSMs_SetLow	MOVF	Param78,W00504 064F 261B 		CALL	SetSMTableX00505 0650 	;00506 0650 25E1 	SyncSMs_1	CALL	GetSMTableHighX00507 0651 1C78 		BTFSS	Param78,0	Valid bit00508 0652 2E5C 		GOTO	SyncSMs_200509 0653 1078 		BCF	Param78,000510 0654 39C0 		ANDLW	0xC0	;Ctrl and Cmd00511 0655 		SKPNZ00511 0655 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00512 0656 2E5A 		GOTO	SyncSMs_SetHi	;Both are clear so clr valid bit00513 0657 3AC0 		XORLW	0xC0	;Ctrl and Cmd00514 0658 		SKPZ00514 0658 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00515 0659 2E5C 		GOTO	SyncSMs_200516 065A 	;00517 065A 0878 	SyncSMs_SetHi	MOVF	Param78,W00518 065B 25EB 		CALL	SetSMTableHighX00519 065C 	;00520 065C 0AEC 	SyncSMs_2	INCF	SyncSMNum,F00521 065D 0008 		RETURN00522 065E 		endif00523 065E 	;00524 065E 	;===========================================================================================00525 065E 	; Copy the block pwr Data from evUDP_BlockPwrTable(0x0204) to BlockPwrTable(0x0004)00526 065E 	; Preserve the occupancy bits00527 065E 	;00528 065E 	; Entry: Bank300529 065E 	; Exit: Bank300530 065E 	; RAM Used: XReg, Param7800531 065E 	; Calls: (1+2) GetBlkOwnerX,SRAM_Read,SRAM_Write00532 065E 	;00533 065E 01F2 	CopyUDPBlockPwrTable	CLRF	XReg	;Block Zero00534 065F 	;00535 065F 25A4 	Receive_BlockPwr_L1	CALL	GetBlkOwnerX00536 0660 1BF8 		BTFSC	Param78,7	;This is one of mine?00537 0661 2E6F 		GOTO	Receive_BlockPwr_Nxt	; Yes, Ignore this data00538 0662 	;00539 0662 3002 		MOVLW	kUDP_SRAM_Page00540 0663 00A1 		MOVWF	SRAM_Addr200541 0664 3004 		MOVLW	low BlockPwrTable00542 0665 00A0 		MOVWF	SRAM_Addr100543 0666 0872 		MOVF	XReg,W00544 0667 009F 		MOVWF	SRAM_Addr000545 0668 2268 		CALL	SRAM_Read00546 0669 		mBank300546 0669 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000546 066A 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100547 066B 01A1 		CLRF	SRAM_Addr200548 066C 223A 		CALL	SRAM_Write00549 066D 		mBank300549 066D 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000549 066E 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100550 066F 	;00551 066F 304B 	Receive_BlockPwr_Nxt	MOVLW	kMaxBlockNum00552 0670 0272 		SUBWF	XReg,W00553 0671 		SKPNZ00553 0671 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00554 0672 0008 		RETURN00555 0673 0AF2 		INCF	XReg,F00556 0674 2E5F 		GOTO	Receive_BlockPwr_L100557 0675 	;00558 0675 	;===============================================================================================00559 0675 	; Copy the block pwr Data from evUDP_BlockPwrTable2(0x0206) to BlockPwrTable(0x0006)00560 0675 	; Preserve the occupancy bits00561 0675 	;00562 0675 	; Entry: Bank300563 0675 	; Exit: Bank300564 0675 	; RAM Used: XReg, Param7800565 0675 	; Calls: (1+2) GetBlkOwnerX,SRAM_Read,SRAM_Write00566 0675 	;00567 0675 01F2 	CopyUDPBlockPwrTable2	CLRF	XReg	;Block Zero00568 0676 	;00569 0676 25A4 	Receive_BlockPwr2_L1	CALL	GetBlkOwnerX00570 0677 1BF8 		BTFSC	Param78,7	;This is one of mine?00571 0678 2E86 		GOTO	Receive_BlockPwr2_Nxt	; Yes, Ignore this data00572 0679 	;00573 0679 3002 		MOVLW	kUDP_SRAM_Page00574 067A 00A1 		MOVWF	SRAM_Addr2Highland Greeley PIC.asm   "DataAccess.asm"                              Page: 117500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DataAccessSeg0.asm00575 067B 3006 		MOVLW	low BlockPwrTable200576 067C 00A0 		MOVWF	SRAM_Addr100577 067D 0872 		MOVF	XReg,W00578 067E 009F 		MOVWF	SRAM_Addr000579 067F 2268 		CALL	SRAM_Read00580 0680 		mBank300580 0680 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000580 0681 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100581 0682 01A1 		CLRF	SRAM_Addr200582 0683 223A 		CALL	SRAM_Write00583 0684 		mBank300583 0684 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000583 0685 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100584 0686 	;00585 0686 304B 	Receive_BlockPwr2_Nxt	MOVLW	kMaxBlockNum00586 0687 0272 		SUBWF	XReg,W00587 0688 		SKPNZ00587 0688 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00588 0689 0008 		RETURN00589 068A 0AF2 		INCF	XReg,F00590 068B 2E76 		GOTO	Receive_BlockPwr2_L100591 068C 	;00592 068C 	;=========================================================================================00593 068C 	; Copy the low SM Data from evUDP_SMTable(0x0202) to SMTable(0x0002)00594 068C 	; Preserve the command bit and sent bit.00595 068C 	;00596 068C 	; Entry: Bank300597 068C 	; Exit: Bank000598 068C 	; RAM Used: FSR, Param78,Param79,Param7A00599 068C 	; Calls: (1+1) SRAM_Read,SRAM_Write,SRAM_NextAddr00600 068C 	;00601 068C 3002 	CopyUDPSMTable	MOVLW	low SMTable00602 068D 00A0 		MOVWF	SRAM_Addr100603 068E 01F9 		CLRF	Param79	;0x00 = copy 256 bytes00604 068F 	;00605 068F 019F 	DoSMPageMove	CLRF	SRAM_Addr000606 0690 30A1 		MOVLW	SRAM_Addr200607 0691 0084 		MOVWF	FSR00608 0692 1783 		BSF	_IRP00609 0693 3002 	DoSMPageMove_L1	MOVLW	kUDP_SRAM_Page00610 0694 0080 		MOVWF	INDF	;>>Incoming data00611 0695 2268 		CALL	SRAM_Read00612 0696 39A0 		ANDLW	SMCnFMask	;only keep Ctrl & FB 0xA000613 0697 00FA 		MOVWF	Param7A00614 0698 	;00615 0698 0180 		CLRF	INDF	;>>Stored data00616 0699 2268 		CALL	SRAM_Read00617 069A 00F8 		MOVWF	Param78	00618 069B 3941 		ANDLW	SMCMDMask+SMVDMask	;only keep CMD and ValidData flags00619 069C 047A 		IORWF	Param7A,W	; combine w/ Ctrl & FB00620 069D 1CF8 		BTFSS	Param78,SMLocBit	;Don't overwrite local data00621 069E 223A 		CALL	SRAM_Write00622 069F 2211 		CALL	SRAM_NextAddr00623 06A0 0BF9 		DECFSZ	Param79,F00624 06A1 2E93 		GOTO	DoSMPageMove_L100625 06A2 0008 		RETURN00626 06A3 	;00627 06A3 	;=========================================================================================00628 06A3 	; Copy the high SM Data from evUDP_SMTableHigh(0x0203) to SMTableHigh(0x0003)00629 06A3 	;00630 06A3 	; Entry: Bank300631 06A3 	; Exit: Bank000632 06A3 	; RAM Used: FSR, Param78,Param79,Param7A00633 06A3 	; Calls: (1+1) SRAM_Read,SRAM_WritePI00634 06A3 	;00635 06A3 3003 	CopyUDPSMTableHigh	MOVLW	low SMTableHigh00636 06A4 00A0 		MOVWF	SRAM_Addr100637 06A5 01F9 		CLRF	Param79	;0x00 = copy 256 bytes00638 06A6 2E8F 		GOTO	DoSMPageMove01011 06A7 		include	BlockControlSeg0.asm00001 06A7 		subtitle	"BlockControl.asm"00002 06A7 		page00003 06A7 	;============================================================================================00004 06A7 	;00005 06A7 	;  FileName: BlockControl.asm00006 06A7 	;  Date: 6/27/0900007 06A7 	;  File Version: 1.0.100008 06A7 	;  00009 06A7 	;  Author: David M. Flynn00010 06A7 	;  Company: HPRR00011 06A7 	;  Project: TCC00012 06A7 	;00013 06A7 	;============================================================================================00014 06A7 	;============================================================================================00015 06A7 	; Revision History00016 06A7 	;00017 06A7 	; 1.0.1 6/27/2009	Optimized some code.00018 06A7 	; 1.0   7/9/2006	Moved routines from main panel.00019 06A7 	;00020 06A7 	;============================================================================================00021 06A7 	; Conditional Assmbly00022 06A7 	;00023 06A7 	;00024 06A7 	;============================================================================================00025 06A7 	; Notes:00026 06A7 	;00027 06A7 	;kMaxRetry	EQU	0x05	;BlockPwr scan00028 06A7 	;BlockPwrTblPtr	RES	200029 06A7 	;ScannerBlkNum	RES	1Highland Greeley PIC.asm   "BlockControl.asm"                            Page: 118500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:BlockControlSeg0.asm00030 06A7 	;BPTemp	RES	200031 06A7 	;BPTemp2	RES	200032 06A7 	;=========================================================================================00033 06A7 	; Name	(additional stack words required) Description00034 06A7 	;=========================================================================================00035 06A7 	;ScanBlockPwr	Test the next block in the sequence00036 06A7 	;SetBlockPwr	Look at Block Power Cmds and set relays for one block00037 06A7 	;=======================================================================================00038 06A7 	InputA_D00	mCall0To3	InputA00038 06A7 158A      M		BSF	PCLATH,3		BSF	PCLATH,300038 06A8 160A      M		BSF	PCLATH,4		BSF	PCLATH,400038 06A9 238E      M		CALL	InputA		CALL	Destination00038 06AA 018A      M		CLRF	PCLATH		CLRF	PCLATH00039 06AB 0008 		RETURN00040 06AC 	Output_D00	mCall0To3	Output00040 06AC 158A      M		BSF	PCLATH,3		BSF	PCLATH,300040 06AD 160A      M		BSF	PCLATH,4		BSF	PCLATH,400040 06AE 2356      M		CALL	Output		CALL	Destination00040 06AF 018A      M		CLRF	PCLATH		CLRF	PCLATH00041 06B0 0008 		RETURN00042 06B1 	;=======================================================================================00043 06B1 	;Test the next block in the sequence00044 06B1 	;00045 06B1 	; Entry: kMaxRetry,BlockPwrTblPtr,ScannerBlkNum00046 06B1 	; Exit: BlockPwrTblPtr++,ScannerBlkNum++00047 06B1 	; RAM Used: XReg, YReg, Param78, Param7A, BPTemp, BPTemp200048 06B1 	; Calls: GetBlkOwnerX, GetCurBlkY, InputA_D00, GetBlockPwrTableX, SetBlockPwrTableX,00049 06B1 	;	GetBlockPwrTable2X, SetBlockPwrTable2X00050 06B1 	;00051 06B1 3005 	ScanBlockPwr	MOVLW	kMaxRetry00052 06B2 00F7 		MOVWF	Param77	;test 5 blocks00053 06B3 	;00054 06B3 0840 	ScanBlockPwr_L1	MOVF	BlockPwrTblPtr,W00055 06B4 00B7 		MOVWF	CurBlk00056 06B5 0841 		MOVF	BlockPwrTblPtr+1,W00057 06B6 00B8 		MOVWF	CurBlk+100058 06B7 0847 		MOVF	ScannerBlkNum,W00059 06B8 00F2 		MOVWF	XReg	;Block number00060 06B9 	;00061 06B9 25A4 		CALL	GetBlkOwnerX00062 06BA 1FF8 		BTFSS	Param78,7	;MyBlock?00063 06BB 2EFF 		GOTO	ScanBlockPwr_Next	; No00064 06BC 	;00065 06BC 01C2 		CLRF	BPTemp00066 06BD 01C3 		CLRF	BPTemp+100067 06BE 01C4 		CLRF	BPTemp200068 06BF 01C5 		CLRF	BPTemp2+100069 06C0 	;00070 06C0 3009 		MOVLW	0x0900071 06C1 00FA 		MOVWF	Param7A	;Do 9 cabs00072 06C2 	;00073 06C2 3000 		MOVLW	BPCab1	; starting with Cab100074 06C3 00F3 		MOVWF	YReg00075 06C4 	;00076 06C4 01B3 	ScanBlockPwr_L4	CLRF	IActive	;default unused cabs to off00077 06C5 25EE 		CALL	GetCurBlkY	;cab bit number00078 06C6 	; set valid bit mask for this cab 0=cab not here00079 06C6 0D78 		RLF	Param78,W00080 06C7 0DC5 		RLF	BPTemp2+1,F00081 06C8 0DC4 		RLF	BPTemp2,F00082 06C9 3001 		MOVLW	0x0100083 06CA 06C5 		XORWF	BPTemp2+1,F00084 06CB 	;00085 06CB 1FF8 		BTFSS	Param78,7	;none?00086 06CC 26A7 		CALL	InputA_D00	; No00087 06CD 0D33 		RLF	IActive,W	;Read input00088 06CE 0DC3 		RLF	BPTemp+1,F00089 06CF 0DC2 		RLF	BPTemp,F00090 06D0 3002 		MOVLW	0x0200091 06D1 07F3 		ADDWF	YReg,F	;next cab00092 06D2 0BFA 		DECFSZ	Param7A,F	;All 9 done?00093 06D3 2EC4 		GOTO	ScanBlockPwr_L4	; No00094 06D4 	;00095 06D4 	; BPTemp cabs 23456789 xxxxxxx100096 06D4 	; Adjust bit positions00097 06D4 0EC2 		SWAPF	BPTemp,F	;23456789 0001000000098 06D5 0E43 		SWAPF	BPTemp+1,W	;W=6789234500099 06D6 390F 		ANDLW	0x0F00100 06D7 04C2 		IORWF	BPTemp,F	;23456789 0001234500101 06D8 300F 		MOVLW	0x0F00102 06D9 05C3 		ANDWF	BPTemp+1,F	;00006789 0001234500103 06DA 	;00104 06DA 0EC4 		SWAPF	BPTemp2,F00105 06DB 0E45 		SWAPF	BPTemp2+1,W00106 06DC 390F 		ANDLW	0x0F00107 06DD 04C4 		IORWF	BPTemp2,F00108 06DE 300F 		MOVLW	0x0F00109 06DF 05C5 		ANDWF	BPTemp2+1,F00110 06E0 	;00111 06E0 0842 		MOVF	BPTemp,W00112 06E1 0443 		IORWF	BPTemp+1,W00113 06E2 		SKPZ		;Is any cab powered?00113 06E2 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00114 06E3 17C2 		BSF	AnyCabOnFlag	; Yes00115 06E4 	;00116 06E4 2608 		CALL	GetBlockPwrTableX00117 06E5 3080 		MOVLW	b'10000000'	;Ignor detect bits00118 06E6 0444 		IORWF	BPTemp2,W	; and cabs not here00119 06E7 0578 		ANDWF	Param78,W00120 06E8 0242 		SUBWF	BPTemp,WHighland Greeley PIC.asm   "BlockControl.asm"                            Page: 119500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:BlockControlSeg0.asm00121 06E9 		SKPNZ		;Changed?00121 06E9 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00122 06EA 2EF2 		GOTO	ScanBlockPwr_3	; No00123 06EB 	;00124 06EB 0844 		MOVF	BPTemp2,W	; Yes, Keep cabs not here00125 06EC 3A1F 		XORLW	0x1F	; cabs 1..500126 06ED 3860 		IORLW	b'01100000'	; and detect bits00127 06EE 	;00128 06EE 0578 		ANDWF	Param78,W00129 06EF 0442 		IORWF	BPTemp,W00130 06F0 260A 		CALL	SetBlockPwrTableX00131 06F1 1456 		BSF	BlockDataChngFlag00132 06F2 	;	00133 06F2 2614 	ScanBlockPwr_3	CALL	GetBlockPwrTable2X00134 06F3 0845 		MOVF	BPTemp2+1,W	;Ignor reserved bits00135 06F4 0578 		ANDWF	Param78,W	; and cabs not here00136 06F5 0243 		SUBWF	BPTemp+1,W00137 06F6 		SKPNZ		;Changed?00137 06F6 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00138 06F7 2EFF 		GOTO	ScanBlockPwr_Next	; No00139 06F8 	;00140 06F8 0845 		MOVF	BPTemp2+1,W	; Yes, Keep cabs not here00141 06F9 3A0F 		XORLW	0x0F	; cabs 6..900142 06FA 38F0 		IORLW	b'11110000'	; and reserved bits00143 06FB 	;00144 06FB 0578 		ANDWF	Param78,W00145 06FC 0443 		IORWF	BPTemp+1,W00146 06FD 2616 		CALL	SetBlockPwrTable2X00147 06FE 14D6 		BSF	BlockDataChngFlag200148 06FF 	;00149 06FF 3012 	ScanBlockPwr_Next	MOVLW	BPAddBlk00150 0700 07C0 		ADDWF	BlockPwrTblPtr,F00151 0701 		ADDCF	BlockPwrTblPtr+1,F00151 0701 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00151 0702 0AC1      M		INCF	BlockPwrTblPtr+1,F		INCF	dest,W_or_F00152 0703 	;00153 0703 304B 		MOVLW	kMaxBlockNum00154 0704 0247 		SUBWF	ScannerBlkNum,W00155 0705 		SKPZ		;All blocks done?00155 0705 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00156 0706 0A47 		INCF	ScannerBlkNum,W	;No00157 0707 00C7 		MOVWF	ScannerBlkNum00158 0708 	;		00159 0708 08C7 		MOVF	ScannerBlkNum,F00160 0709 		SKPZ00160 0709 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00161 070A 2F10 		GOTO	ScanBlockPwr_500162 070B 	;00163 070B 306D 		MOVLW	low BlkPwrRDY1	;Setup to scan the first00164 070C 00C0 		MOVWF	BlockPwrTblPtr	; block next time we are00165 070D 3001 		MOVLW	high BlkPwrRDY1	; called.00166 070E 3E10 		ADDLW	low evDataROM00167 070F 00C1 		MOVWF	BlockPwrTblPtr+100168 0710 	;00169 0710 0BF7 	ScanBlockPwr_5	DECFSZ	Param77,F00170 0711 2EB3 		GOTO	ScanBlockPwr_L100171 0712 0008 		RETURN00172 0713 	;00173 0713 	;=============================================================================================00174 0713 	; Look at Block Power Cmds and set relays for one block00175 0713 	;00176 0713 	; Entry: BlockNum00177 0713 	; Exit: BlockNum++00178 0713 	; RAM Used: Param78, Param79, Param7A, BPTemp, BPTemp2, CurBlk00179 0713 	; Calls: GetBlockCmdTableX, GetBlockPwrTableX, GetBlockCmdTable2X, GetBlockPwrTable2X00180 0713 	;00181 0713 0846 	SetBlockPwr	MOVF	BlockNum,W00182 0714 00F2 		MOVWF	XReg00183 0715 	;00184 0715 25A4 		CALL	GetBlkOwnerX00185 0716 1FF8 		BTFSS	Param78,7	;Is this one of mine?00186 0717 2F5D 		GOTO	SetBlockPwr_NextBlk	; No00187 0718 	;00188 0718 25FE 		CALL	GetBlockCmdTableX00189 0719 00C2 		MOVWF	BPTemp00190 071A 2603 		CALL	GetBlockCmdTable2X00191 071B 00C3 		MOVWF	BPTemp+100192 071C 	;00193 071C 2608 		CALL	GetBlockPwrTableX00194 071D 00C4 		MOVWF	BPTemp200195 071E 2614 		CALL	GetBlockPwrTable2X00196 071F 00C5 		MOVWF	BPTemp2+100197 0720 	;00198 0720 	;in BlockPwrTable each Byte represents one block00199 0720 	; bit0 = Cab500200 0720 	; bit1 = Cab400201 0720 	; bit2 = Cab300202 0720 	; bit3 = Cab200203 0720 	; bit4 = Cab100204 0720 	; bit5 = Detect West00205 0720 	; bit6 = Detect East00206 0720 	; bit7 = Set if any cab is powerd00207 0720 	;  if bit 7 is set but bits 0..4 are cleared then look at BlockPwrTable200208 0720 	;  for additional cab bits00209 0720 	;00210 0720 	;in BlockPwrTable2 each byte represents one block00211 0720 	; bit0 = Cab900212 0720 	; bit1 = Cab800213 0720 	; bit2 = Cab700214 0720 	; bit3 = Cab6Highland Greeley PIC.asm   "BlockControl.asm"                            Page: 120500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:BlockControlSeg0.asm00215 0720 	; bit4 = not used00216 0720 	; bit5 = not used00217 0720 	; bit6 = not used00218 0720 	; bit7 = not used00219 0720 	; align bits to go cabs 1..9 sequentially BPTemp:7..0 BPTemp+1:7	 C   BP+1     BP00220 0720 0EC3 		SWAPF	BPTemp+1,F	;x 6789xxxx xxx1234500221 0721 0DC3 		RLF	BPTemp+1,F	;6 789xxxxx xxx1234500222 0722 0DC2 		RLF	BPTemp,F	;x 789xxxxx xx12345600223 0723 0DC3 		RLF	BPTemp+1,F	;7 89xxxxxx xx12345600224 0724 0DC2 		RLF	BPTemp,F	;x 89xxxxxx x123456700225 0725 0DC3 		RLF	BPTemp+1,F	;8 9xxxxxxx x123456700226 0726 0DC2 		RLF	BPTemp,F	;x 9xxxxxxx 1234567800227 0727 	; align bits to go cabs 1..9 sequentially BPTemp2:7..0 BPTemp2+1:700228 0727 0EC5 		SWAPF	BPTemp2+1,F	;x 6789xxxx xxx1234500229 0728 0DC5 		RLF	BPTemp2+1,F	;6 789xxxxx xxx1234500230 0729 0DC4 		RLF	BPTemp2,F	;x 789xxxxx xx12345600231 072A 0DC5 		RLF	BPTemp2+1,F	;7 89xxxxxx xx12345600232 072B 0DC4 		RLF	BPTemp2,F	;x 89xxxxxx x123456700233 072C 0DC5 		RLF	BPTemp2+1,F	;8 9xxxxxxx x123456700234 072D 0DC4 		RLF	BPTemp2,F	;x 9xxxxxxx 1234567800235 072E 	;00236 072E 	; CurBlk := evDataROM + BlkPwrRDY100237 072E 306D 		MOVLW	low BlkPwrRDY100238 072F 00B7 		MOVWF	CurBlk,F00239 0730 3001 		MOVLW	high BlkPwrRDY100240 0731 3E10 		ADDLW	low evDataROM00241 0732 00B8 		MOVWF	CurBlk+1,F00242 0733 	;00243 0733 	; CurBlk := CurBlk + (BPAddBlk * BlockNum)00244 0733 3012 		MOVLW	BPAddBlk00245 0734 00F9 		MOVWF	Param7900246 0735 0846 	SetBlockPwr_L2	MOVF	BlockNum,W00247 0736 07B7 		ADDWF	CurBlk,F00248 0737 		ADDCF	CurBlk+1,F00248 0737 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00248 0738 0AB8      M		INCF	CurBlk+1,F		INCF	dest,W_or_F00249 0739 0BF9 		DECFSZ	Param79,F00250 073A 2F35 		GOTO	SetBlockPwr_L200251 073B 	;00252 073B 	;00253 073B 	; Set outputs to drive cab power relays00254 073B 	;00255 073B 3000 		MOVLW	BPCab1	;0x0000256 073C 00F3 		MOVWF	YReg00257 073D 3009 		MOVLW	0x0900258 073E 00FA 		MOVWF	Param7A	;Do 9 cabs00259 073F 	;00260 073F 01AF 	SetBlockPwr_L3	CLRF	OActive00261 0740 0DC3 		RLF	BPTemp+1,F	;Get ThrFlag from BlkCmd table into C00262 0741 0DC2 		RLF	BPTemp,F00263 0742 0CAF 		RRF	OActive,F	;from blk Cmd00264 0743 	;00265 0743 01F8 		CLRF	Param7800266 0744 0DC5 		RLF	BPTemp2+1,F00267 0745 0DC4 		RLF	BPTemp2,F00268 0746 0C78 		RRF	Param78,W	;Get ThrFlag from blk Pwr table into C00269 0747 	;00270 0747 	; Compare power with command. Is this a change?00271 0747 022F 		SUBWF	OActive,W00272 0748 		SKPZ		;Same?00272 0748 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00273 0749 2F4D 		GOTO	SetBlockPwr_1	; No00274 074A 0AF3 	SetBlockPwr_DoNext	INCF	YReg,F	; Yes00275 074B 0AF3 		INCF	YReg,F00276 074C 2F5B 		GOTO	SetBlockPwr_Next00277 074D 	;00278 074D 25EE 	SetBlockPwr_1	CALL	GetCurBlkY00279 074E 1BF8 		BTFSC	Param78,7	;None?00280 074F 2F4A 		GOTO	SetBlockPwr_DoNext	; Yes, we're done with this block00281 0750 	;00282 0750 	; Add 0x0400 to the output bit number00283 0750 	; Output bits for blocks are the input bit + 0x40000284 0750 	; example: Cab1 RDY1 Input=0x2042 Output=0x244200285 0750 	;00286 0750 00AE 		MOVWF	OBit00287 0751 0AF3 		INCF	YReg,F00288 0752 25EE 		CALL	GetCurBlkY00289 0753 0AF3 		INCF	YReg,F00290 0754 3903 		ANDLW	0x0300291 0755 3E04 		ADDLW	0x0400292 0756 00B0 		MOVWF	OBoard00293 0757 	;00294 0757 0E78 		SWAPF	Param78,W00295 0758 3903 		ANDLW	0x0300296 0759 00AD 		MOVWF	OSlot00297 075A 26AC 		CALL	Output_D0000298 075B 	;00299 075B 0BFA 	SetBlockPwr_Next	DECFSZ	Param7A,F00300 075C 2F3F 		GOTO	SetBlockPwr_L300301 075D 	;	00302 075D 	; Advance block number00303 075D 304B 	SetBlockPwr_NextBlk	MOVLW	kMaxBlockNum00304 075E 0246 		SUBWF	BlockNum,W	;W=BlockNum-kMaxBlockNum00305 075F 		SKPZ		;W=0?00305 075F 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00306 0760 0A46 		INCF	BlockNum,W	; No00307 0761 00C6 		MOVWF	BlockNum00308 0762 0008 		RETURN00309 0763 	;00310 0763 	;======================================================================================Highland Greeley PIC.asm   "BlockControl.asm"                            Page: 121500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm01012 0763 		include	NICStuff.asm	; 0x080000001 0763 		subtitle	"NIC Stuff"00002 0763 		page00003 0763 	;================================================================================================00004 0763 	;00005 0763 	;  FileName: NICStuff.asm00006 0763 	;  Date: 4/7/0900007 0763 	;  File Version: 1.5.1600008 0763 	;  00009 0763 	;  Author: David M. Flynn00010 0763 	;  Company: Oxford V.U.E., Inc.00011 0763 	;00012 0763 	;============================================================================================00013 0763 	; Notes:00014 0763 	;00015 0763 	;  This file is Network Interface Controller routines.00016 0763 	;  There are no custom routines in this file.00017 0763 	;00018 0763 	;  Segmentation is not supported!00019 0763 	;   Any incoming or outgoing data must fit in a simgle ethernet frame.00020 0763 	;   Routers are not supported, for security all packets must be to/from this subnet.00021 0763 	;00022 0763 	;============================================================================================00023 0763 	; Revision History00024 0763 	;00025 0763 	; 1.5.16    4/7/09	Fixed: TFTPPortS for Tx of more than 256 bytes.00026 0763 	; 1.5.15    6/16/06	To support UsesRS232BufIO _GIE is cleared durring read/write of NIC00027 0763 	; 1.5.14    5/11/05	Optimized code.00028 0763 	; 1.5.13    3/31/05	Added ARPsNeverDie00029 0763 	; 1.5.12    3/16/05	Added AllowReceiveBroadcast00030 0763 	; 1.5.11    3/14/05	Changed Locate_ARP to return MAC:FFFFFFFFFFFF when IP:25500031 0763 	;	Added some comments fixed others.00032 0763 	; 1.5.10    10/22/04	Optomized some code. ip_recv (0/0), Removed some test code.00033 0763 	; 1.5.9     9/21/04	The constant testing now defaults to 000034 0763 	; 1.5.8     4/29/04	Changed TFTPPortS_handler to support read only of any block size (default is still 256)00035 0763 	;	Added entry points for TFTPPortS_ReadAll and TFTPPortS_Read00036 0763 	; 1.5.7     12/29/03	Changed atend, checkflag to #Define, added CheckFlagFileReg equ Flags2600037 0763 	; 1.5.6     8/28/03	Added outnic_RBCR0_100038 0763 	;	Changed putnic_checkbyte to use only 1 stack word00039 0763 	; 1.5.5     7/4/03	Fixed arp_findfree,arp_find to reduce stack loading to 5 from 6.00040 0763 	; 1.5.4     6/8/03	Added conditional UsesTCPIPDataPort.00041 0763 	; 1.5.3     5/28/03	Moved EQUs to this file.00042 0763 	; 1.5.2     5/20/03	Added UsesUDP conditional.00043 0763 	; 1.5.1     4/5/03	Fixed a minor bug in tcp_handler for not using UsesRS232BufIO00044 0763 	; 1.5       4/4/03	Added TCPRS232Port, RS232Port_handler is in segment 3 (file:RS232Port.asm)00045 0763 	; 1.4.1b1   3/4/03	Separated TFTPPortS_handler and TFTPPortE_handler.00046 0763 	;	Removed code for port numbers > 255.00047 0763 	; 1.4b1     2/21/03	Moved pcol tests and branching to get_ether00048 0763 	; 1.3b1      2/9/03	Minor bug fixes. First fully functional version.00049 0763 	;	As of 2/9/03 this version has NO known bugs or missing features.00050 0763 	;	With all testing messsages off there are d'195' bytes free in this segment.00051 0763 	; 1.3a1      2/4/03	Added User Datagram Protocol00052 0763 	; 1.2       1/29/03	Added ARP cache and ARP Req.00053 0763 	; 1.1.1     1/23/03	Added match_word.00054 0763 	; 1.1       10/29/02   Moved standard routines from Ether.asm00055 0763 	; 1.0.1     9/17/02	Fisrt rev'd version00056 0763 	;00057 0763 	;============================================================================================00058 0763 	; Conditionals00059 0763 	;00060 0763 	; testing	DisplaysW_D08, lcd_GotoLineW_D0800061 0763 	; ARPtesting	Show arp messages on LCD line 0.00062 0763 	; UsesRS232	TXString_D0800063 0763 	; HasRTC	set_rtc, read_rtc00064 0763 	; CodeMemStrings	StringDispatch	There are two of these.00065 0763 	; TTFTPtoSRAM	TFTPPortS_handler	There are two of these.00066 0763 	; TTFTPtoEEROM	TFTPPortE_handler00067 0763 	;  If both versions of TFTPPort_handler are needed a new port number can be used.00068 0763 	; UsesUDP	UDP_Send, put_udp, UDP_recv, udp_handler00069 0763 	; ARPsNeverDie	Don't decrement time to live ae_ttl00070 0763 	;00071 0763 	;============================================================================================00072 0763 	; Conditional assembly defaults00073 0763 	;00074 0763 		ifndef UsesUDP00076 0763 		endif00077 0763 	;00078 0763 		ifndef UsesTCPIPDataPort00080 0763 		endif00081 0763 	;00082 0763 		ifndef testing00084 0763 		endif00085 0763 	;00086 0763 		ifndef AllowReceiveBroadcast00088 0763 		endif00089 0763 	;00090 0763 		ifndef ARPsNeverDie00092 0763 		endif00093 0763 	;00094 0763 	;============================================================================================00095 0763 		ORG	0x080000096 0800 	;00097 0800 	; Name	(additional stack words required) Description (Bank In/Bank Out)00098 0800 	;================================================================================================00099 0800 	;calls outside this segment00100 0800 	;00101 0800 	; Segment 0 calls00102 0800 	;DisplaysDot_D08	(1+1+1)00103 0800 	;DisplaysW_D08	(1+1+1)Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 122500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm00104 0800 	;lcd_GotoLineW_D08	(1+1+0)00105 0800 	;Disp_Hex_Byte_D08	(1+1+2)00106 0800 	;Disp_decbyteW_D08	(1+1+2)00107 0800 	;PrintString_D08	(1+1+2)00108 0800 	;DelayWmS_D08	(1+0)00109 0800 	;TXString_D08	(1+1+0)00110 0800 	;WriteLDO_0_D08	(1+0)00111 0800 	;00112 0800 	; other:00113 0800 	;  GOTO	http_recv	;tcp port 80 handler in segment 300114 0800 	;  GOTO	UDP_Term_Handler	;udp port 57 handler in segment 300115 0800 	;  GOTO	UDP_Data_Handler	;udp port 87 handler in segment 300116 0800 	;00117 0800 	;segment 1 routines00118 0800 	;setnic_addr	(1+0) Set the 'remote DMA' address in the NIC's RAM to be accessed00119 0800 	;getnic_addr	(1+0) Get the 'remote DMA' address in the NIC's RAM to be accessed00120 0800 	;nicwrap	(0)   Wrap an NIC Rx page number00121 0800 	;getnic_data	(1+0) Get data from NIC's RAM into the given buffer00122 0800 	;get_ether	(1+5) Get packet into buffer, return length (excl CRC)00123 0800 	;getnic_byte	(1+0) Return a byte from the NIC RAM00124 0800 	;getch_net	(1+0) Get a byte from network buffer; if end, set flag00125 0800 	;00126 0800 	;check_byte_W	(0)   Add byte to checksum value00127 0800 	;check_remip	(1+0) Add remip to checksum value00128 0800 	;check_MyIP	(1+0) Add myip to checksum value00129 0800 	;check_4Data	(1+0) Add 4 bytes pointed to by W to checksum value00130 0800 	;check_data	(1+0) Sends bytes from Param7A to Param7A+Param79-1 to checksum value00131 0800 	;00132 0800 	;get_remip	(1+1) Gets remip with getch_net00133 0800 	;get_rseq	(1+1) Gets rseq with getch_net00134 0800 	;get_6Data	(1+1) Gets 6 bytes pointed to by W with getch_net00135 0800 	;get_2Data	(1+1) Gets 2 bytes pointed to by W with getch_net00136 0800 	;get_rack	(1+1) Gets rack with getch_net00137 0800 	;get_4Data	(1+1) Gets 4 bytes pointed to by W with getch_net00138 0800 	;get_Ndata	(1+1) Gets W bytes pointed to by Param7A with getch_net00139 0800 	;get_data	(1+1) gets bytes with getch_net and saves them to Param7A..Param7A+Param79-100140 0800 	;00141 0800 	;MemMove_Low	(0)   Move bytes from bank 0 or 1 to somewhere else in bank 0 or 100142 0800 	; MemMove_Low_L	(0)   Move bytes from bank (IRP) to somewhere else in bank (IRP), set IRP before calling.00143 0800 	;MemMove_SRAM	(1+1) Move bytes from bank 0 or 1 to SRAM00144 0800 	; MemMove_SRAM_L	(1+1) Move bytes from bank (IRP) to SRAM, set IRP before calling.00145 0800 	;MemMoveFrom_SRAM	(1+1) Move bytes from SRAM to bank 0 or 100146 0800 	; MemMoveFrom_SRAM_L	(1+1) Move bytes from SRAM to bank (IRP), set IRP before calling.00147 0800 	;MemComp_SRAM	(1+1) Compare bytes from bank 0 or 1 to SRAM, return 0 not matched00148 0800 	; MemComp_SRAM_L	(1+1) Compare bytes from bank (IRP) to SRAM, return 0 not matched, set IRP before calling.00149 0800 	;MemComp_Low	(0)   Compare bytes from bank 0 or 1 to somewhere else in bank 0 or 1, return 0 not matched00150 0800 	; MemComp_Low_L	(0)   Compare bytes from bank (IRP) to somewhere else in bank (IRP), return 0 not matched00151 0800 	;00152 0800 	;match_word	(1+2) Match an incoming word value, return 0 not matched, or end of message00153 0800 	;match_byteW	(1+1) Match an incoming byte value, return 0 not matched, or end of message00154 0800 	;match_MyIP	(1+2) Match 4 incoming data bytes to data pointed to by W, return 0 not matched, or end of message00155 0800 	;match_4Data	(1+2) Match 4 incoming data bytes to data pointed to by W, return 0 not matched, or end of message00156 0800 	;match_data	(1+2) matches bytes from getch_net to Param7A..Param7A+Param79-1,  return 0 not matched, or end of message00157 0800 	;00158 0800 	;skip_6bytes	(1+1) Skip an incoming 6 byte value, return 0 if end of message00159 0800 	;skip_lword	(1+1) Skip an incoming lword value, return 0 if end of message00160 0800 	;skip_word	(1+1)00161 0800 	;skip_byte	(1+1)00162 0800 	;00163 0800 	;putch_net_W	(0+0) Put a byte into the network buffer at (txbuff+txin) RAM bank 100164 0800 	;put_rack	(1+0) Sends rack to putch_net_W00165 0800 	;put_rseq	(1+0) Sends rseq to putch_net_W00166 0800 	;put_remip	(1+0) Sends remip to putch_net_W00167 0800 	;put_MyIP	(1+0) Sends myip to putch_net_W00168 0800 	;put_4Data	(1+0) Sends 4 bytes pointed to by W to putch_net_W00169 0800 	;put_data	(1+0) Sends bytes from Param7A to Param7A+Param79-1 to putch_net_W (banks 0 and 1)00170 0800 	;put_data2	(1+0) Sends bytes from Param7A to Param7A+Param79-1 to putch_net_W (banks 2 and 3)00171 0800 	;putnic_data	(1+0) Put the given data into the NIC's RAM00172 0800 	;00173 0800 	;put_ether	(1+1) Put Ethernet packet into buffer given data at txbuff and len Param7D00174 0800 	;xmit_ether	(1+0) Transmit the Ethernet frame00175 0800 	;00176 0800 	;Locate_ARP	(1+4) Scan the ARP cache for an IP(remip_b0) load into ram if found00177 0800 	;arp_findfree	(1+1) Find an free ARP cache record. return: Param78=(0=not found, cache#1..32)00178 0800 	;arp_find	(1+1) Find an ARP for (ar_spa) in the ARP cache00179 0800 	;arp_add_or_replace	(1+2) Add this AR address pair to the cache (replace old if found)00180 0800 	;arp_add	(1+2) Add a new ARP record to the ARP cache00181 0800 	;arp_Replace	(1+2) Move ARP record into SRAM00182 0800 	;arp_get	(1+1) Move an ARP record into ram00183 0800 	;arp_recv	(1+3) Handle an incoming ARP message00184 0800 	;send_ARP_Resp	(1+2) Sends an ARP responce00185 0800 	; put_ARP_Header	(1+2) Puts an ARP hearder into the buffer using putch_net_W00186 0800 	;send_ARP_Req	(1+3) Sends an ARP request00187 0800 	;00188 0800 	;UDP_Send	(1+2) Send a UDP datagram given data in txbuff and len txin00189 0800 	; UDP_Send_E2	(1+2) Send a UDP datagram00190 0800 	;put_udp	(1+1) Put a UDP header into the buffer (txbuff+txin)00191 0800 	;00192 0800 	;put_ip	(1+1) Send out an IP datagram header, given data length00193 0800 	;putnic_byte	(1+0) Put the given byte into the NIC's RAM00194 0800 	;putnic_checkbyte	(1+0) Put the given byte into the NIC's RAM00195 0800 	;00196 0800 	;Dec_Put_n_Check	(1+3) combined Fix Dec byte and PutNic Check Byte00197 0800 	;DecWPut_n_Check	(1+3) 16 bit version of Dec_Put_n_Check00198 0800 	;Dec3BPut_n_Check	(1+3) 24 bit version of Dec_Put_n_Check00199 0800 	;00200 0800 	;copy_rx_tx	(1+1) Copy a block from NIC Rx to Tx buffers (not crossing page boundaries)00201 0800 	;00202 0800 	;check_rxbytes	(1+0) Checksum the given number of bytes in the Rx NIC buffer00203 0800 	;Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 123500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm00204 0800 	;IncRSeq	(0)   IncRSeq00205 0800 	;ip_recv	(1+4++) Get an IP datagram (0/0)00206 0800 	;tcp_recv	      if valid TCP segment goto tcp_handler00207 0800 	; CheckPseudo	(1+1) Check the pseudo header.00208 0800 	;tcp_handler	(1++)  Handle an incoming TCP segment00209 0800 	;daytime_handler	(1+3) Respond to an Daytime request00210 0800 	;00211 0800 	;Std_TCP_Setup	(0+1) Clear checksum, setnic_addr((TXSTART*256)+ETHERHEADER_LEN+IPHDR_LEN+TCPHDR_LEN)00212 0800 	;PutString	(1+2) Send string number (W) to IP frame buffer00213 0800 	;TFTPPortS_handler	(1+2) Handler for the TFTP Port SRAM version.00214 0800 	;TFTPPortS_ReadAll	(1+2) Read 256 bytes from SRAM into NIC buffer and send it (tflags  Ack & close & Push)00215 0800 	;TFTPPortS_Read	(1+2) Read SRAM_Len bytes from the SRAM into the nic buffer and send it (tflags  Ack & close & Push)00216 0800 	;TFTPPortE_handler	(1+2) Handler for the TFTP Port, EEROM version.00217 0800 	;TFTPPortE_ReadAll	(1+2) Read eeROMBuffLen bytes of data into NIC buffer and send it (tflags  Ack & close & Push)00218 0800 	;TFTPPortE_Read	(1+2) Read eeROMbuff.len bytes of data into NIC buffer and send it (tflags  Ack & close & Push)00219 0800 	;icmp_recv	(1+)  Respond to an ICMP message (e.g. ping)00220 0800 	;00221 0800 	;put_tcp	(1+1) Put out a TCP segment header. Data checksum must have already been computed.00222 0800 	;tcp_xmit	(1+2) Transmit a TCP segment00223 0800 	; tcp_xmit_2	(1+2) Transmit ethernet header and data00224 0800 	;UDP_recv	(1+2++) Test a User Datagram to see if it is valid00225 0800 	;udp_handler	(1+2++)    Handle an incomming UDP datagram00226 0800 	;00227 0800 	;reset_ether	(0)   Set NIC reset signal high (Active)00228 0800 	;init_ether	(1+4) Initialise NIC.00229 0800 	;00230 0800 	;innic_NE_RESET	(0)   Input a byte from NIC register NE_RESET00231 0800 	;innic_CURRP	(0)   Input a byte from NIC register CURRP, current page reg for rd and wr00232 0800 	;innic_ISR	(0)   Input a byte from NIC register ISR, interrupt status reg for rd and wr00233 0800 	;innic_RSAR0	(0)   Input a byte from NIC register RSAR0, low byte of remote start addr00234 0800 	;innic_RSAR1	(0)   Input a byte from NIC register RSAR1, hi byte of remote start addr00235 0800 	;innic_Data	(0)   Input a byte from NIC register DATAPORT00236 0800 	;innic	(0)   Input a byte from a NIC register00237 0800 	;outnic_RSPR0_W	(0)   Data in W to RSAR000238 0800 	;outnic_RSPR1_W	(0)   Data in W to RSAR100239 0800 	;outnic_BNRY_W	(0)   Data in W to BNRY00240 0800 	;outnic_TCR_W	(0)   Data in W to TCR00241 0800 	;outnic_RCR_W	(0)   Data in W to RCR00242 0800 	;outnic_RBCR1_0	(0)   Set Hi byte of Byte Count to zero00243 0800 	;outnic_RBCR1_W	(0)   Set Hi byte of Byte Count00244 0800 	;outnic_RBCR0_W	(0)   Set low byte of Byte Count00245 0800 	;outnic_CMDR_0A	(0)   Start, DMA remote read00246 0800 	;outnic_CMDR_W	(0)   Data in W to CMDR00247 0800 	;outnicD78W	(0)   Data in Param78 Address in W00248 0800 	;outnic_ISR_FF	(0)   Clear interrupt flags00249 0800 	;outnit_ISR_W	(0)   Data in W to ISR00250 0800 	;outnic_ISR_0A	(0)   0x0A to ISR00251 0800 	;outnic_ISR40	(0)   Clear remote DMA interrupt flag00252 0800 	;outnic_ISR	(0)   Write the value in Param71 to the NICs ISR register00253 0800 	;outnic_W	(0)   Output a byte to a NIC register W=Addr, Param71=Data00254 0800 	;00255 0800 	;================================================================================================00256 0800 	;========================================================================================================00257 0800 	; 8390 Network Interface Controller (NIC) page0 register offsets00258 0800 0000 	CMDR	EQU	0x00	; command register for read & write00259 0800 0001 	PSTART	EQU	0x01	; page start register for write00260 0800 0002 	PSTOP	EQU	0x02	; page stop register for write00261 0800 0003 	BNRY	EQU	0x03	; boundary reg for rd and wr00262 0800 0004 	TPSR	EQU	0x04	; tx start page start reg for wr00263 0800 0005 	TBCR0	EQU	0x05	; tx byte count 0 reg for wr00264 0800 0006 	TBCR1	EQU	0x06	; tx byte count 1 reg for wr00265 0800 0007 	ISR	EQU	0x07	; interrupt status reg for rd and wr00266 0800 0008 	RSAR0	EQU	0x08	; low byte of remote start addr00267 0800 0009 	RSAR1	EQU	0x09	; hi byte of remote start addr00268 0800 000A 	RBCR0	EQU	0x0A	; remote byte count reg 0 for wr00269 0800 000B 	RBCR1	EQU	0x0B	; remote byte count reg 1 for wr00270 0800 000C 	RCR	EQU	0x0C	; rx configuration reg for wr00271 0800 000D 	TCR	EQU	0x0D	; tx configuration reg for wr00272 0800 000E 	DCR	EQU	0x0E	; data configuration reg for wr00273 0800 000F 	IMR	EQU	0x0F	; interrupt mask reg for wr00274 0800 	;00275 0800 	; NIC page 1 register offsets00276 0800 0001 	PAR0	EQU	0x01	; physical addr reg 0 for rd and wr00277 0800 0007 	CURRP	EQU	0x07	; current page reg for rd and wr00278 0800 0008 	MAR0	EQU	0x08	; multicast addr reg 0 for rd and WR00279 0800 	;00280 0800 	; NIC page 3 register offsets00281 0800 0001 	RTL9346CR	EQU	0x01	; RTL 9346 command reg	00282 0800 0006 	RTL3	EQU	0x06	; RTL config reg 300283 0800 	;	00284 0800 	; NIC RAM definitions00285 0800 0020 	RAMPAGES	EQU	0x20	; Total number of 256-byte RAM pages 20? 40?00286 0800 0040 	TXSTART	EQU	0x40	; Tx buffer start page 40?00287 0800 0006 	TXPAGES	EQU	0x06	; Pages for Tx buffer 600288 0800 0046 	RXSTART	EQU	(TXSTART+TXPAGES)	; Rx buffer start page 40+6=4600289 0800 005F 	RXSTOP	EQU	(TXSTART+RAMPAGES-1)	; Last Rx buffer page 40+20-1=5F00290 0800 0048 	DCRVAL	EQU	0x48	; Value for data config reg 00291 0800 	;00292 0800 	; Command reg values00293 0800 	;	EQU	0x0A	;Start, DMA remote read00294 0800 	;	EQU	0x12	;Start, DMA remote write00295 0800 	;	EQU	0x21	;Stop, DMA abort, page 000296 0800 	;	EQU	0x22	;Start NIC00297 0800 0024 	NICTXCMD	EQU	0x24	;Transmit the packet00298 0800 	;NICDMAAp1CMD	EQU	0x60	;DMA abort, page 100299 0800 	;	EQU	0x61	;Stop, DMA abort, page 100300 0800 	;NICDMAAp0CMD	EQU	0x20	;DMA abort, page 000301 0800 	;NICDMAAp0CMD	EQU	0x20	;DMA abort, page 000302 0800 	; NE2000 definitions  00303 0800 0010 	DATAPORT 	EQU	0x10 Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 124500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm00304 0800 001F 	NE_RESET	EQU	0x1F 00305 0800 	;00306 0800 	; Ethernet definitions00307 0800 003C 	MINFRAME	EQU	d'60' 00308 0800 0040 	MINFRAMEC	EQU	d'64'	;0x4000309 0800 0004 	CRCLEN	EQU	4 00310 0800 05EA 	MAXFRAME	EQU	d'1514'	;0x5EA00311 0800 05EE 	MAXFRAMEC	EQU	d'1518'	;0x5EE00312 0800 	;00313 0800 	;============================================================================================00314 0800 	;Dispatch routines (this is segment 1)00315 0800 	;00316 0800 	;segment 0 calls00317 0800 	;00318 0800 		if testing00328 0800 		endif00329 0800 	;00330 0800 		if UsesLCD00331 0800 	Disp_decbyteW_D08	mCall1To0	Disp_decbyteW00331 0800 118A      M		BCF	PCLATH,3		BCF	PCLATH,300331 0801 20BC      M		CALL	Disp_decbyteW		CALL	Destination00331 0802 158A      M		BSF	PCLATH,3		BSF	PCLATH,300331 0803 120A      M		BCF	PCLATH,4		BCF	PCLATH,400332 0804 0008 		RETURN00333 0805 	;00334 0805 	PrintString_D08	mCall1To0	PrintString00334 0805 118A      M		BCF	PCLATH,3		BCF	PCLATH,300334 0806 209F      M		CALL	PrintString		CALL	Destination00334 0807 158A      M		BSF	PCLATH,3		BSF	PCLATH,300334 0808 120A      M		BCF	PCLATH,4		BCF	PCLATH,400335 0809 0008 		RETURN00336 080A 		endif		;UsesLCD00337 080A 	;00338 080A 	DelayWmS_D08	mCall1To0	DelayWmS00338 080A 118A      M		BCF	PCLATH,3		BCF	PCLATH,300338 080B 22EC      M		CALL	DelayWmS		CALL	Destination00338 080C 158A      M		BSF	PCLATH,3		BSF	PCLATH,300338 080D 120A      M		BCF	PCLATH,4		BCF	PCLATH,400339 080E 0008 		RETURN00340 080F 	;00341 080F 		if RS232Active00344 080F 		endif00345 080F 	;00346 080F 	;00347 080F 	WriteLDO_0_D08	mCall1To0	WriteLDO_000347 080F 118A      M		BCF	PCLATH,3		BCF	PCLATH,300347 0810 2427      M		CALL	WriteLDO_0		CALL	Destination00347 0811 158A      M		BSF	PCLATH,3		BSF	PCLATH,300347 0812 120A      M		BCF	PCLATH,4		BCF	PCLATH,400348 0813 0008 		RETURN00349 0814 	;00350 0814 	;=============================================================================================00351 0814 	; Set the 'remote DMA' address in the NIC's RAM to be accessed00352 0814 	; Entry:nic ram address Low=Param7A, High=Param7B00353 0814 	; Exit: none00354 0814 	; RAM used: Param71, Param7A, Param7B (verified 1/23/03)00355 0814 	; Calls: (1+0) outnic_ISR40, outnic_RSPR0_W, outnic_RSPR1_W00356 0814 	;  00357 0814 2768 	setnic_addr	CALL	outnic_ISR40	;Clear remote DMA interrupt flag00358 0815 087A 		MOVF	Param7A,W	; outnic(RSAR0, addr mod 256); Data addr 00359 0816 2740 		CALL	outnic_RSPR0_W00360 0817 087B 		MOVF	Param7B,W	; outnic(RSAR1, addr/256); 00361 0818 2F43 		GOTO	outnic_RSPR1_W00362 0819 	; 00363 0819 	;==========================================================================	00364 0819 	; Get the 'remote DMA' address in the NIC's RAM to be accessed00365 0819 	; Entry: none 00366 0819 	; Exit: Param79=high byte, W=low byte00367 0819 	; RAM used: Param78, Param79 (verified 1/23/03)00368 0819 	; Calls:(1+0) innic_RSAR1, innic_RSAR000369 0819 	;00370 0819 271C 	getnic_addr	CALL	innic_RSAR100371 081A 00F9 		MOVWF	Param79	;move high byte out of harms way00372 081B 2F1A 		GOTO	innic_RSAR0	;go get low byte and return00373 081C 	;00374 081C 	; 00375 081C 	;==============================================================================================00376 081C 	; Wrap an NIC Rx page number00377 081C 	; Entry: W=page number to wrap00378 081C 	; Exit: W=wraped page munber00379 081C 	; RAM used: Param78 (verified 1/23/03)00380 081C 	; Calls: (0) none00381 081C 	;00382 081C 00F8 	nicwrap	MOVWF	Param7800383 081D 305F 		MOVLW	RXSTOP	; if (page >= RXSTOP) 00384 081E 0278 		SUBWF	Param78,W00385 081F 1C03 		BTFSS	STATUS,C00386 0820 2824 		GOTO	nicwrap_100387 0821 30E7 		MOVLW	RXSTART-RXSTOP	; page := page + RXSTART - RXSTOP; 00388 0822 07F8 		ADDWF	Param78,F00389 0823 0008 		RETURN00390 0824 3046 	nicwrap_1	MOVLW	RXSTART	; else if (page < RXSTART) 00391 0825 0278 		SUBWF	Param78,W00392 0826 1803 		BTFSC	STATUS,C00393 0827 0008 		RETURN00394 0828 3019 		MOVLW	RXSTOP-RXSTART	; page := Page + RXSTOP - RXSTART; 00395 0829 0778 		ADDWF	Param78,W00396 082A 0008 		RETURN		; return(page);00397 082B 	; 00398 082B 	;==================================================================================================Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 125500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm00399 082B 	; Get data from NIC's RAM into the given buffer00400 082B 	; ptr=Param7A  len=Param7B00401 082B 	; Entry: Param7A, Param7B00402 082B 	; Exit: none00403 082B 	; RAM used: Param71, Param78, Param7A, Param7B, FSR (verified 1/23/03)00404 082B 	; Calls:(1+0) outnic_ISR40, outnic_RBCR0_W, outnic_RBCR1_0, outnic_CMDR_0A, innic_Data00405 082B 	;00406 082B 2768 	getnic_data	CALL	outnic_ISR40	; outnic(ISR, 0x40);  Clear remote DMA interrupt flag 00407 082C 087B 		MOVF	Param7B,W	; outnic(RBCR0, len);	Byte count00408 082D 2754 		CALL	outnic_RBCR0_W00409 082E 274F 		CALL	outnic_RBCR1_0	; outnic(RBCR1, 0); 00410 082F 2757 		CALL	outnic_CMDR_0A	; outnic(CMDR, 0x0a);   Start, DMA remote read00411 0830 087A 		MOVF	Param7A,W00412 0831 0084 		MOVWF	FSR00413 0832 1383 		BCF	STATUS,IRP00414 0833 	; while (len--)  Get bytes00415 0833 271E 	getnic_data_L1	CALL	innic_Data	; b = innic(DATAPORT); 00416 0834 0080 		MOVWF	INDF	; data^ = b; 00417 0835 0A84 		INCF	FSR,F	; data++00418 0836 	; 00419 0836 0BFB 		DECFSZ	Param7B,F00420 0837 2833 		GOTO	getnic_data_L100421 0838 0008 		RETURN00422 0839 	;00423 0839 	;===================================================================================================00424 0839 	; Get packet into buffer, return length (excl CRC), or 0 if none available00425 0839 	; Entry: none00426 0839 	; Exit: Param7C=low, Param7D=high00427 0839 	; 00428 0839 	; RAM used: Param71, Param77, Param78, Param7A, Param7B, Param7C, Param7D, FSR00429 0839 	; Calls: (1+5) innic_ISR, innic_CURRP, TXString_D08, init_ether(1+4), outnic_CMDR_W,00430 0839 	;	getnic_data, nicwrap, outnic_BNRY_W00431 0839 	;00432 0839 	get_ether	mBank000432 0839 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000432 083A 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100433 083B 01D3 		CLRF	rxout+1	; rxout = 0; 00434 083C 01D2 		CLRF	rxout00435 083D 10A6 		BCF	atend	; atend = 0;00436 083E 	;00437 083E 	; if (innic(ISR) & 0x10); If Rx overrun..00438 083E 2718 		CALL	innic_ISR00439 083F 1A78 		BTFSC	Param78,400440 0840 26AB 		CALL	init_ether	; init_ether(); ..reset controller (drastic!)00441 0841 	;00442 0841 3060 		MOVLW	0x60	; outnic(CMDR, 0x60) DMA abort, page 100443 0842 2758 		CALL	outnic_CMDR_W00444 0843 	;	00445 0843 2716 		CALL	innic_CURRP	;curr = innic(CURRP) Get current page 00446 0844 3020 		MOVLW	0x20	; outnic(CMDR, 0x20) DMA abort, page 000447 0845 2758 		CALL	outnic_CMDR_W00448 0846 	; if (curr != next_page); If Rx packet..00449 0846 0834 		MOVF	next_page,W00450 0847 0278 		SUBWF	Param78,W00451 0848 		SKPNZ00451 0848 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00452 0849 0008 		RETURN		;curr=next_page no data so return00453 084A 	;  00454 084A 0834 		MOVF	next_page,W	; curr_rx_page = next_page; 00455 084B 00B5 		MOVWF	curr_rx_page00456 084C 	; setnic_addr(next_page); 00457 084C 00FB 		MOVWF	Param7B	;hi byte00458 084D 01FA 		CLRF	Param7A	;low byte00459 084E 2014 		CALL	setnic_addr00460 084F 	; Move the NIC hardware packet header into ram00461 084F 	; getnic_data(&nicin, sizeof(nicin)); 00462 084F 3038 		MOVLW	nicin.nic.stat	;nicin00463 0850 00FA 		MOVWF	Param7A00464 0851 3012 		MOVLW	NICETHERHEADER_LEN	;sizeof(nicin) 0x12 bytes00465 0852 00FB 		MOVWF	Param7B	;nicin.nic.stat..nicin.eth.pcol+100466 0853 202B 		CALL	getnic_data00467 0854 	;00468 0854 	; len = nicin.nic.len; Take length from stored header00469 0854 083B 		MOVF	nicin.nic.len+1,W	;high byte00470 0855 00FD 		MOVWF	Param7D00471 0856 083A 		MOVF	nicin.nic.len,W00472 0857 00FC 		MOVWF	Param7C00473 0858 	; if ((nicin.nic.stat & 1) && len>=MINFRAMEC && len<=MAXFRAMEC) 00474 0858 1C38 		BTFSS	nicin.nic.stat,000475 0859 2875 		GOTO	get_ether_4	;packet error00476 085A 	;00477 085A 08FD 		MOVF	Param7D,F00478 085B 		SKPZ00478 085B 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00479 085C 2862 		GOTO	get_ether_2	;>=0x10000480 085D 	;00481 085D 3040 		MOVLW	MINFRAMEC	;<64 bytes00482 085E 027C 		SUBWF	Param7C,W00483 085F 1C03 		BTFSS	STATUS,C00484 0860 2875 		GOTO	get_ether_4	;too short packet error00485 0861 286C 		GOTO	get_ether_3	;0x100>len>=MINFRAMEC00486 0862 	;00487 0862 3005 	get_ether_2	MOVLW	0x0500488 0863 027D 		SUBWF	Param7D,W00489 0864 1C03 		BTFSS	STATUS,C00490 0865 286C 		GOTO	get_ether_3	;len<=0x50000491 0866 	;00492 0866 		SKPZ00492 0866 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00493 0867 2875 		GOTO	get_ether_4	;len>=0x600 too big packet errorHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 126500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm00494 0868 30EF 		MOVLW	0xEF00495 0869 027C 		SUBWF	Param7C,W00496 086A 1803 		BTFSC	STATUS,C	;clr=barrow00497 086B 2875 		GOTO	get_ether_4	;>=0x5EF too big packet error00498 086C 	;00499 086C 	; If hdr is OK, get packet00500 086C 3012 	get_ether_3	MOVLW	2*MACLEN+2+CRCLEN	; len -= MACLEN+MACLEN+2+CRCLEN00501 086D 02FC 		SUBWF	Param7C,F00502 086E 1C03 		BTFSS	STATUS,C00503 086F 03FD 		DECF	Param7D,F00504 0870 	 ;00505 0870 087D 		MOVF	Param7D,W	; rxin = len;00506 0871 00D1 		MOVWF	rxin+100507 0872 087C 		MOVF	Param7C,W00508 0873 00D0 		MOVWF	rxin00509 0874 	;00510 0874 2877 		GOTO	get_ether_500511 0875 	;00512 0875 01FD 	get_ether_4	CLRF	Param7D	; len = 0; 00513 0876 01FC 		CLRF	Param7C00514 0877 	;00515 0877 	;00516 0877 	; Update next packet ptr00517 0877 	; if (nicin.nic.next>=RXSTART && nicin.nic.next<RXSTOP) 00518 0877 3046 	get_ether_5	MOVLW	RXSTART00519 0878 0239 		SUBWF	nicin.nic.next,W00520 0879 1C03 		BTFSS	STATUS,C00521 087A 2882 		GOTO	get_ether_600522 087B 305F 		MOVLW	RXSTOP00523 087C 0239 		SUBWF	nicin.nic.next,W00524 087D 1803 		BTFSC	STATUS,C00525 087E 2882 		GOTO	get_ether_600526 087F 	;00527 087F 0839 		MOVF	nicin.nic.next,W	; next_page = nicin.nic.next; 00528 0880 00B4 		MOVWF	next_page00529 0881 	; else  If invalid, use prev+100530 0881 2888 		GOTO	get_ether_700531 0882 	;00532 0882 	; next_page = nicwrap(next_page + 1); 00533 0882 3001 	get_ether_6	MOVLW	0x0100534 0883 0734 		ADDWF	next_page,W00535 0884 201C 		CALL	nicwrap00536 0885 00B4 		MOVWF	next_page00537 0886 01FD 		CLRF	Param7D	; len = 0;00538 0887 01FC 		CLRF	Param7C00539 0888 	; Update boundary register00540 0888 	; bound = nicwrap(next_page - 1); 00541 0888 0334 	get_ether_7	DECF	next_page,W	; W=next_page-100542 0889 201C 		CALL	nicwrap00543 088A 2746 		CALL	outnic_BNRY_W	; outnic(BNRY, bound); 00544 088B 	;00545 088B 	;00546 088B 087C 		MOVF	Param7C,W	; len of data LSB00547 088C 047D 		IORWF	Param7D,W	; len of data MSB00548 088D 		SKPNZ		;skip if len<>000548 088D 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00549 088E 0008 		RETURN00550 088F 	;00551 088F 	;00552 088F 	; Note nicin.eth.pcol is big endian whereas my variables are little endian!		00553 088F 	; if (nicin.eth.pcol == PCOL_ARP) 00554 088F 3008 		MOVLW	high PCOL_ARP00555 0890 0248 		SUBWF	nicin.eth.pcol,W00556 0891 		SKPZ00556 0891 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00557 0892 2897 		GOTO	get_ether_IP	;hi byte didn't match00558 0893 	;00559 0893 3006 		MOVLW	low PCOL_ARP00560 0894 0249 		SUBWF	nicin.eth.pcol+1,W00561 0895 		SKPNZ00561 0895 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00562 0896 2A72 		GOTO	arp_recv	; it's ARP00563 0897 	;00564 0897 	; else if (nicin.eth.pcol == PCOL_IP) 00565 0897 3008 	get_ether_IP	MOVLW	high PCOL_IP00566 0898 0248 		SUBWF	nicin.eth.pcol,W00567 0899 		SKPZ00567 0899 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00568 089A 289F 		GOTO	get_ether_Px	;hi byte didn't match00569 089B 	;00570 089B 3000 		MOVLW	low PCOL_IP00571 089C 0249 		SUBWF	nicin.eth.pcol+1,W00572 089D 		SKPNZ00572 089D 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00573 089E 2BDA 		GOTO	ip_recv	;it's IP00574 089F 	;the next pcol  (there isn't one)00575 089F 0008 	get_ether_Px	RETURN00576 08A0 	;00577 08A0 	;===============================================================================================	00578 08A0 	; Return a byte from the NIC RAM00579 08A0 	; Entry:none00580 08A0 	; Exit: W & Param78=Data00581 08A0 	; RAM used: Param71, Param78 (verified 10/2/02)00582 08A0 	; Calls: (1+0) outnic_RBCR0_1, outnic_RBCR1_0, outnic_CMDR_0A, innic_Data00583 08A0 	;00584 08A0 2753 	getnic_byte	CALL	outnic_RBCR0_1	; outnic(RBCR0, 1) Byte count00585 08A1 274F 		CALL	outnic_RBCR1_0	; outnic(RBCR1, 0); 00586 08A2 2757 		CALL	outnic_CMDR_0A	; outnic(CMDR, 0x0a) Start, DMA remote read00587 08A3 2F1E 		GOTO	innic_Data	;  b = innic(DATAPORT); 00588 08A4 	;  Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 127500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm00589 08A4 	;======================================================================================================00590 08A4 	; Get a byte from network buffer; if end, set flag00591 08A4 	; Entry: rxin, rxout00592 08A4 	; Exit: rxout++, Param78 & W = byte from nic00593 08A4 	; RAM used: Param71, Param78 (verified 1/23/03)00594 08A4 	; Calls:(1+0) check_byte_W, outnic_RBCR0_W, outnic_RBCR1_0, outnic_CMDR_0A, innic_Data00595 08A4 	;00596 08A4 	getch_net	mBank000596 08A4 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000596 08A5 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100597 08A6 01F8 		CLRF	Param78	; BYTE b=0; 00598 08A7 14A6 		BSF	atend	;default to atend00599 08A8 0853 		MOVF	rxout+1,W	; atend = rxout>=rxin; 00600 08A9 0251 		SUBWF	rxin+1,W00601 08AA 1C03 		BTFSS	_C00602 08AB 28B7 		GOTO	getch_net_200603 08AC 0853 		MOVF	rxout+1,W00604 08AD 0251 		SUBWF	rxin+1,W00605 08AE 1D03 		BTFSS	_Z00606 08AF 28B6 		GOTO	getch_net_100607 08B0 0852 		MOVF	rxout,W00608 08B1 0250 		SUBWF	rxin,W00609 08B2 1903 		BTFSC	_Z00610 08B3 28B7 		GOTO	getch_net_200611 08B4 1C03 		BTFSS	_C00612 08B5 28B7 		GOTO	getch_net_200613 08B6 10A6 	getch_net_1	BCF	atend00614 08B7 18A6 	getch_net_2	BTFSC	atend	; if (!atend) 00615 08B8 3400 		RETLW	0x00	; default value is end of data00616 08B9 	;----------------00617 08B9 	;copy of getnic_byte to save a stack word00618 08B9 	;	CALL	getnic_byte	; b = getnic_byte(); 00619 08B9 	;getnic_byte00620 08B9 2753 		CALL	outnic_RBCR0_1	; outnic(RBCR0, 1) Byte count00621 08BA 274F 		CALL	outnic_RBCR1_0	; outnic(RBCR1, 0); 00622 08BB 2757 		CALL	outnic_CMDR_0A	; outnic(CMDR, 0x0a) Start, DMA remote read00623 08BC 271E 		CALL	innic_Data	;  b = innic(DATAPORT); 00624 08BD 	;----------------00625 08BD 0AD2 		INCF	rxout,F	; rxout++00626 08BE 1903 		BTFSC	STATUS,Z00627 08BF 0AD3 		INCF	rxout+1,F00628 08C0 	;00629 08C0 0878 		MOVF	Param78,W	; check_byte(b);00630 08C1 	;00631 08C1 	; Fall through to check_byte_W00632 08C1 	;=====================================================================================================00633 08C1 	; Add byte to checksum value00634 08C1 	; Entry: W=byte to check00635 08C1 	; Exit: value from W is in Param78 (aka W is unchanged)00636 08C1 	; RAM used: Param78  (verified 10/2/02)00637 08C1 	; Calls: (0) none00638 08C1 	;00639 08C1 	check_byte_W	mBank000639 08C1 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000639 08C2 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100640 08C3 00F8 		MOVWF	Param7800641 08C4 	; if (checkflag) 00642 08C4 1D26 		BTFSS	checkflag00643 08C5 28D0 		GOTO	check_byte_W_100644 08C6 	; if ((checklo = b+checklo) < b) 00645 08C6 0878 		MOVF	Param78,W00646 08C7 07CD 		ADDWF	checklo,F00647 08C8 0878 		MOVF	Param78,W00648 08C9 024D 		SUBWF	checklo,W00649 08CA 1803 		BTFSC	STATUS,C00650 08CB 28D9 		GOTO	check_byte_W_200651 08CC 	; if (++checkhi == 0) 00652 08CC 0FCC 		INCFSZ	checkhi,F00653 08CD 28D9 		GOTO	check_byte_W_200654 08CE 0ACD 		INCF	checklo,F	; checklo++00655 08CF 	; else 00656 08CF 28D9 		GOTO	check_byte_W_200657 08D0 	; 00658 08D0 	; if ((checkhi = b+checkhi) < b) 00659 08D0 0878 	check_byte_W_1	MOVF	Param78,W00660 08D1 07CC 		ADDWF	checkhi,F00661 08D2 0878 		MOVF	Param78,W00662 08D3 024C 		SUBWF	checkhi,W00663 08D4 1803 		BTFSC	STATUS,C00664 08D5 28D9 		GOTO	check_byte_W_200665 08D6 	; if (++checklo == 0) 00666 08D6 0FCD 		INCFSZ	checklo,F00667 08D7 28D9 		GOTO	check_byte_W_200668 08D8 0ACC 		INCF	checkhi,F	; checkhi++; 00669 08D9 3004 	check_byte_W_2	MOVLW	checkflagMask	; checkflag = !checkflag; 00670 08DA 06A6 		XORWF	CheckFlagFileReg,F00671 08DB 0878 		MOVF	Param78,W	;restore W00672 08DC 0008 		RETURN00673 08DD 	;00674 08DD 	;====================================================================================================00675 08DD 	; Add remip to checksum value00676 08DD 	; Entry: none00677 08DD 	; Exit: none00678 08DD 	; RAM used: Param78, Param79, Param7A  (verified 1/23/03)00679 08DD 	; Calls: (1+0) check_byte_W00680 08DD 	;00681 08DD 3056 	check_remip	MOVLW	remip_b300682 08DE 28E0 		GOTO	check_4Data00683 08DF 	;00684 08DF 	;====================================================================================================Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 128500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm00685 08DF 	; Add myip to checksum value00686 08DF 	; Entry: none00687 08DF 	; Exit: none00688 08DF 	; RAM used: Param78, Param79, Param7A  (verified 1/23/03)00689 08DF 	; Calls: (1+0) check_byte_W00690 08DF 	;00691 08DF 3030 	check_MyIP	MOVLW	myip_b300692 08E0 	;00693 08E0 	;====================================================================================================00694 08E0 	; Add 4 bytes pointed to by W to checksum value00695 08E0 	; Entry: W = ptr to first byte to check00696 08E0 	; Exit: none00697 08E0 	; RAM used: Param78, Param79, Param7A  (verified 1/23/03)00698 08E0 	; Calls: (1+0) check_byte_W00699 08E0 	;00700 08E0 00FA 	check_4Data	MOVWF	Param7A	; check_lword(myip) Include addresses in checksum00701 08E1 3004 		MOVLW	0x0400702 08E2 00F9 		MOVWF	Param7900703 08E3 	;00704 08E3 	;==========================================================================================00705 08E3 	; Sends bytes from Param7A to Param7A+Param79-1 to check_byte_W00706 08E3 	; Entry: Param7A=ptr to data, Param79=length of data00707 08E3 	; Exit: none00708 08E3 	; RAM used: Param78, Param79, Param7A, FSR  (verified 1/23/03)00709 08E3 	; Calls:(1+0) check_byte_W00710 08E3 	;00711 08E3 087A 	check_data	MOVF	Param7A,W00712 08E4 1383 		BCF	_IRP00713 08E5 0084 		MOVWF	FSR00714 08E6 0800 	check_data_1	MOVF	INDF,W00715 08E7 20C1 		CALL	check_byte_W00716 08E8 0A84 		INCF	FSR,F00717 08E9 0BF9 		DECFSZ	Param79,F00718 08EA 28E6 		GOTO	check_data_100719 08EB 0008 		RETURN00720 08EC 	;00721 08EC 	;====================================================================================================00722 08EC 	; Gets remip with getch_net00723 08EC 	; Entry: none00724 08EC 	; Exit: none00725 08EC 	; RAM used:  Param71, Param78, Param79, Param7A (verified 1/23/03)00726 08EC 	; Calls:(1+1) getch_net00727 08EC 	;00728 08EC 3056 	get_remip	MOVLW	remip_b300729 08ED 28F7 		GOTO	get_4Data00730 08EE 	;00731 08EE 	;====================================================================================================00732 08EE 	; Gets rseq with getch_net00733 08EE 	; Entry: none00734 08EE 	; Exit: none00735 08EE 	; RAM used:  Param71, Param78, Param79, Param7A (verified 1/23/03)00736 08EE 	; Calls:(1+1) getch_net00737 08EE 	;00738 08EE 305E 	get_rseq	MOVLW	rseq_b300739 08EF 28F7 		GOTO	get_4Data00740 08F0 	;00741 08F0 	;====================================================================================================00742 08F0 	; Gets 6 bytes pointed to by W with getch_net00743 08F0 	; Entry: W pointer to destination00744 08F0 	; Exit: none00745 08F0 	; RAM used: Param71, Param78, Param79, Param7A (verified 1/23/03)00746 08F0 	; Calls:(1+1) getch_net00747 08F0 	;00748 08F0 00FA 	get_6Data	MOVWF	Param7A00749 08F1 3006 		MOVLW	0x0600750 08F2 28F9 		GOTO	get_Ndata00751 08F3 	;00752 08F3 	;====================================================================================================00753 08F3 	; Gets 2 bytes pointed to by W with getch_net00754 08F3 	; Entry: W pointer to destination00755 08F3 	; Exit: none00756 08F3 	; RAM used: Param71, Param78, Param79, Param7A (verified 1/23/03)00757 08F3 	; Calls:(1+1) getch_net00758 08F3 	;00759 08F3 00FA 	get_2Data	MOVWF	Param7A00760 08F4 3002 		MOVLW	0x0200761 08F5 28F9 		GOTO	get_Ndata00762 08F6 	;00763 08F6 	;====================================================================================================00764 08F6 	; Gets rack with getch_net00765 08F6 	; Entry: none00766 08F6 	; Exit: none00767 08F6 	; RAM used: Param71, Param78, Param79, Param7A (verified 1/23/03)00768 08F6 	; Calls:(1+2) getch_net00769 08F6 	;00770 08F6 3062 	get_rack	MOVLW	rack_b300771 08F7 	;00772 08F7 	;====================================================================================================00773 08F7 	; Gets 4 bytes pointed to by W with getch_net00774 08F7 	; Entry: W pointer to destination00775 08F7 	; Exit: none00776 08F7 	; RAM used: Param71, Param78, Param79, Param7A (verified 1/23/03)00777 08F7 	; Calls:(1+1) getch_net00778 08F7 	;00779 08F7 00FA 	get_4Data	MOVWF	Param7A00780 08F8 3004 		MOVLW	0x0400781 08F9 	;00782 08F9 	;=========================================================================00783 08F9 	; Gets W bytes pointed to by Param7A with getch_net00784 08F9 	; Entry: Param7A=Dest, W=Bytes to GetHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 129500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm00785 08F9 	; Exit: none00786 08F9 	; RAM used: Param71, Param78, Param79, Param7A (verified 1/25/03)00787 08F9 	; Calls:(1+1) getch_net00788 08F9 	;00789 08F9 00F9 	get_Ndata	MOVWF	Param7900790 08FA 	;00791 08FA 	;==========================================================================================00792 08FA 	; gets bytes with getch_net and saves them to Param7A..Param7A+Param79-100793 08FA 	; Entry: Param7A=ptr to data, Param79=length of data00794 08FA 	; Exit: none00795 08FA 	; RAM used: Param71, Param78, Param79, Param7A, FSR (verified 1/23/03)00796 08FA 	; Calls:(1+1) getch_net00797 08FA 	;00798 08FA 087A 	get_data	MOVF	Param7A,W00799 08FB 0084 		MOVWF	FSR00800 08FC 1383 		BCF	STATUS,IRP00801 08FD 20A4 	get_data_1	CALL	getch_net00802 08FE 0080 		MOVWF	INDF00803 08FF 0A84 		INCF	FSR,F00804 0900 0BF9 		DECFSZ	Param79,F00805 0901 28FD 		GOTO	get_data_100806 0902 0008 		RETURN00807 0903 	;00808 0903 	;====================================================================================================00809 0903 	; Move bytes from bank 0 or 1 to somewhere else in bank 0 or 100810 0903 	; Entry: Param79=Bytes to move, Param7A=destination, Param7B=Source00811 0903 	; Exit: none00812 0903 	; RAM used: Param78, Param79, Param7A, Param7B, FSR (verified 1/24/03)00813 0903 	; Calls:(0) none00814 0903 	;00815 0903 1383 	MemMove_Low	BCF	STATUS,IRP00816 0904 087B 	MemMove_Low_L	MOVF	Param7B,W00817 0905 0084 		MOVWF	FSR00818 0906 0800 		MOVF	INDF,W00819 0907 00F8 		MOVWF	Param7800820 0908 087A 		MOVF	Param7A,W00821 0909 0084 		MOVWF	FSR00822 090A 0878 		MOVF	Param78,W00823 090B 0080 		MOVWF	INDF00824 090C 0AFA 		INCF	Param7A,F00825 090D 0AFB 		INCF	Param7B,F00826 090E 0BF9 		DECFSZ	Param79,F00827 090F 2904 		GOTO	MemMove_Low_L00828 0910 0008 		RETURN00829 0911 	;00830 0911 	;====================================================================================================00831 0911 	; Move bytes from bank 0 or 1 to SRAM00832 0911 	; Entry: SRAM_Addr=first SRAM byte, Param7A=Bytes to move, FSR=first byte of data in ram00833 0911 	; Exit: none00834 0911 	; RAM used: Param78, Param7A, FSR (verified 1/25/03)00835 0911 	; Calls:(1+1) SRAM_WritePI00836 0911 	;00837 0911 1383 	MemMove_SRAM	BCF	STATUS,IRP00838 0912 0800 	MemMove_SRAM_L	MOVF	INDF,W00839 0913 		mCall1To0	SRAM_WritePI00839 0913 118A      M		BCF	PCLATH,3		BCF	PCLATH,300839 0914 2236      M		CALL	SRAM_WritePI		CALL	Destination00839 0915 158A      M		BSF	PCLATH,3		BSF	PCLATH,300839 0916 120A      M		BCF	PCLATH,4		BCF	PCLATH,400840 0917 0A84 		INCF	FSR,F00841 0918 0BFA 		DECFSZ	Param7A,F00842 0919 2912 		GOTO	MemMove_SRAM_L00843 091A 0008 		RETURN00844 091B 	;00845 091B 	;====================================================================================================00846 091B 	; Move bytes from SRAM to bank 0 or 100847 091B 	; Entry: SRAM_Addr=first SRAM byte, Param7A=Bytes to move, FSR=first dest of data in ram00848 091B 	; Exit: none00849 091B 	; RAM used: Param7A, FSR (verified 2/4/03)00850 091B 	; Calls:(1+1) SRAM_ReadPI00851 091B 	;00852 091B 1383 	MemMoveFrom_SRAM	BCF	STATUS,IRP00853 091C 	MemMoveFrom_SRAM_L	mCall1To0	SRAM_ReadPI00853 091C 118A      M		BCF	PCLATH,3		BCF	PCLATH,300853 091D 2252      M		CALL	SRAM_ReadPI		CALL	Destination00853 091E 158A      M		BSF	PCLATH,3		BSF	PCLATH,300853 091F 120A      M		BCF	PCLATH,4		BCF	PCLATH,400854 0920 0080 		MOVWF	INDF00855 0921 0A84 		INCF	FSR,F00856 0922 0BFA 		DECFSZ	Param7A,F00857 0923 291C 		GOTO	MemMoveFrom_SRAM_L00858 0924 0008 		RETURN00859 0925 	;00860 0925 	;====================================================================================================00861 0925 	; Compare bytes from bank 0 or 1 to SRAM, return 0 not matched00862 0925 	; Entry: SRAM_Addr=first SRAM byte, Param7A=Bytes to test, FSR=first byte of data in ram00863 0925 	; Exit: Param78=(matched=0x01, not matched=0x00)00864 0925 	; RAM used: Param78, Param7A, FSR (verified 1/24/03)00865 0925 	; Calls:(1+1) SRAM_ReadPI (1+1)00866 0925 	;00867 0925 1383 	MemComp_SRAM	BCF	STATUS,IRP00868 0926 	MemComp_SRAM_L	mCall1To0	SRAM_ReadPI00868 0926 118A      M		BCF	PCLATH,3		BCF	PCLATH,300868 0927 2252      M		CALL	SRAM_ReadPI		CALL	Destination00868 0928 158A      M		BSF	PCLATH,3		BSF	PCLATH,300868 0929 120A      M		BCF	PCLATH,4		BCF	PCLATH,400869 092A 0200 		SUBWF	INDF,W00870 092B 1D03 		BTFSS	STATUS,Z	;skip if a match00871 092C 2943 		GOTO	MemComp_Low_Not00872 092D 0A84 		INCF	FSR,FHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 130500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm00873 092E 0BFA 		DECFSZ	Param7A,F00874 092F 2926 		GOTO	MemComp_SRAM_L00875 0930 2940 		GOTO	MemComp_Low_found00876 0931 	;00877 0931 	;====================================================================================================00878 0931 	; Compare bytes from bank 0 or 1 to somewhere else in bank 0 or 1, return 0 not matched00879 0931 	; Entry: Param79=Bytes to test, Param7A=block 1, Param7B=block 200880 0931 	; Exit: Param78=(matched=0x01, not matched=0x00)00881 0931 	; RAM used: Param78, Param79, Param7A, Param7B, FSR (verified 1/24/03)00882 0931 	; Calls:(0) none00883 0931 	;00884 0931 1383 	MemComp_Low	BCF	STATUS,IRP00885 0932 087B 	MemComp_Low_L	MOVF	Param7B,W00886 0933 0084 		MOVWF	FSR00887 0934 0800 		MOVF	INDF,W00888 0935 00F8 		MOVWF	Param7800889 0936 087A 		MOVF	Param7A,W00890 0937 0084 		MOVWF	FSR00891 0938 0878 		MOVF	Param78,W00892 0939 0200 		SUBWF	INDF,W00893 093A 1D03 		BTFSS	STATUS,Z	;skip if a match00894 093B 2943 		GOTO	MemComp_Low_Not00895 093C 0AFA 		INCF	Param7A,F00896 093D 0AFB 		INCF	Param7B,F00897 093E 0BF9 		DECFSZ	Param79,F00898 093F 2932 		GOTO	MemComp_Low_L00899 0940 3001 	MemComp_Low_found	MOVLW	0x0100900 0941 00F8 		MOVWF	Param7800901 0942 0008 		RETURN00902 0943 01F8 	MemComp_Low_Not	CLRF	Param7800903 0944 0008 		RETURN00904 0945 	;00905 0945 	;====================================================================================================00906 0945 	; Match an incoming word value, return Param78=0x01 if matched return 0 not matched, or end of message00907 0945 	;00908 0945 	; Entry: Param75 high byte (first byte) to match, W low byte (second byte) to match00909 0945 	; Exit: Param78=(matched & not atend)00910 0945 	; RAM used: Param71, Param75, Param78, Param79 (verified 1/23/03)00911 0945 	; Calls:(1+2) getch_net00912 0945 	;00913 0945 00F9 	match_word	MOVWF	Param7900914 0946 214B 		CALL	match_byteW_200915 0947 1C78 		BTFSS	Param78,000916 0948 0008 		RETURN00917 0949 0879 		MOVF	Param79,W00918 094A 	;00919 094A 	;====================================================================================================00920 094A 	; Match an incoming byte value, return 0 not matched, or end of message00921 094A 	; Entry: W byte to match00922 094A 	; Exit: Param78=(matched & not atend)00923 094A 	; RAM used: Param71, Param75, Param78 (verified 1/23/03)00924 094A 	; Calls:(1+1) getch_net00925 094A 	;00926 094A 00F5 	match_byteW	MOVWF	Param7500927 094B 20A4 	match_byteW_2	CALL	getch_net00928 094C 01F8 		CLRF	Param78	;assume error00929 094D 02F5 		SUBWF	Param75,F00930 094E 1D03 		BTFSS	STATUS,Z00931 094F 0008 		RETURN00932 0950 18A6 		BTFSC	atend00933 0951 0008 		RETURN00934 0952 1478 		BSF	Param78,000935 0953 0008 		RETURN00936 0954 	;00937 0954 	;=========================================================================================00938 0954 	; Match an incoming data value to myip, return 0 not matched, or end of message00939 0954 	; Entry: none00940 0954 	; Exit: Param78=(matched & not atend)00941 0954 	; RAM used: Param71, Param75, Param78, Param79, Param7A (verified 1/23/03)00942 0954 	; Calls:(1+2) match_byteW00943 0954 	;00944 0954 3030 	match_MyIP	MOVLW	myip_b300945 0955 	;00946 0955 	;=========================================================================================00947 0955 	; Match 4 incoming data bytes to data pointed to by W, return 0 not matched, or end of message00948 0955 	; Entry: none00949 0955 	; Exit: Param78=(matched & not atend)00950 0955 	; RAM used: Param71, Param75, Param78, Param79, Param7A (verified 1/23/03)00951 0955 	; Calls:(1+2) match_byteW00952 0955 	;00953 0955 00FA 	match_4Data	MOVWF	Param7A00954 0956 3004 		MOVLW	0x0400955 0957 00F9 		MOVWF	Param7900956 0958 	;00957 0958 	;fall through to match_data00958 0958 	;00959 0958 	;==========================================================================================00960 0958 	; matches bytes from getch_net to Param7A..Param7A+Param79-1,  return 0 not matched, or end of message00961 0958 	; Entry: Param7A=ptr to data, Param79=length of data00962 0958 	; Exit: Param78,0 1=match 0=not matched00963 0958 	; RAM used: Param71, Param75, Param78, Param79, Param7A, FSR (verified 1/23/03)00964 0958 	; Calls:(1+2) match_byteW00965 0958 	;00966 0958 087A 	match_data	MOVF	Param7A,W00967 0959 0084 		MOVWF	FSR00968 095A 1383 		BCF	STATUS,IRP00969 095B 0800 		MOVF	INDF,W00970 095C 214A 		CALL	match_byteW00971 095D 1C78 		BTFSS	Param78,000972 095E 0008 		RETURNHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 131500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm00973 095F 0AFA 		INCF	Param7A,F00974 0960 0BF9 		DECFSZ	Param79,F00975 0961 2958 		GOTO	match_data00976 0962 0008 		RETURN00977 0963 	; 00978 0963 	;===================================================================================================00979 0963 	; Skip an incoming value, return 0 if end of message00980 0963 	; Entry: none00981 0963 	; Exit: Param78=atend00982 0963 	; RAM used: Param71, Param78 (verified 1/23/03)00983 0963 	; Calls:(1+1) getch_net00984 0963 	;00985 0963 20A4 	skip_6bytes	CALL	getch_net00986 0964 20A4 		CALL	getch_net00987 0965 20A4 	skip_lword	CALL	getch_net00988 0966 20A4 		CALL	getch_net00989 0967 20A4 	skip_word	CALL	getch_net00990 0968 20A4 	skip_byte	CALL	getch_net00991 0969 01F8 		CLRF	Param78	;assume atend00992 096A 1CA6 		BTFSS	atend	; return(!atend);00993 096B 1478 		BSF	Param78,0	;OK return(true)00994 096C 0008 		RETURN00995 096D 	;00996 096D 	;================================================================================================00997 096D 	; Put a byte into the network buffer at (txbuff+txin) RAM bank 100998 096D 	; Entry: W = byte to put00999 096D 	; Exit: value from W is in Param78 & W (aka W is unchanged)01000 096D 	; RAM used: Param78, FSR (verified 1/23/03)01001 096D 	; Calls:(0+0) check_byte_W01002 096D 	; 01003 096D 00F8 	putch_net_W	MOVWF	Param78	;save the byte to be put01004 096E 		mBank001004 096E 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001004 096F 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101005 0970 	; if (txin < TXBUFFLEN) 01006 0970 3040 		MOVLW	TXBUFFLEN01007 0971 0254 		SUBWF	txin,W01008 0972 1803 		BTFSC	STATUS,C01009 0973 297B 		GOTO	putch_net_W_101010 0974 0854 		MOVF	txin,W	; txbuff[txin++] = b;01011 0975 0AD4 		INCF	txin,F01012 0976 3EA0 		ADDLW	txbuff	;0x0A0.. RAM01013 0977 0084 		MOVWF	FSR01014 0978 1383 		BCF	STATUS,IRP01015 0979 0878 		MOVF	Param78,W01016 097A 0080 		MOVWF	INDF01017 097B 0878 	putch_net_W_1	MOVF	Param78,W	; check_byte(b); 01018 097C 28C1 		GOTO	check_byte_W01019 097D 	;01020 097D 	;====================================================================================================01021 097D 	; Sends rack to putch_net_W01022 097D 	; Entry: none01023 097D 	; Exit: none01024 097D 	; RAM used: Param78, Param79, Param7A, FSR (verified 1/23/03)01025 097D 	; Calls:(1+0) putch_net_W01026 097D 	;01027 097D 3062 	put_rack	MOVLW	rack_b301028 097E 2984 		GOTO	put_4Data01029 097F 	;01030 097F 	;====================================================================================================01031 097F 	; Sends rseq to putch_net_W01032 097F 	; Entry: none01033 097F 	; Exit: none01034 097F 	; RAM used: Param78, Param79, Param7A, FSR (verified 1/23/03)01035 097F 	; Calls:(1+0) putch_net_W01036 097F 	;01037 097F 305E 	put_rseq	MOVLW	rseq_b301038 0980 2984 		GOTO	put_4Data01039 0981 	;01040 0981 	;====================================================================================================01041 0981 	; Sends remip to putch_net_W01042 0981 	; Entry: none01043 0981 	; Exit: none01044 0981 	; RAM used: Param78, Param79, Param7A, FSR (verified 1/23/03)01045 0981 	; Calls:(1+0) putch_net_W01046 0981 	;01047 0981 3056 	put_remip	MOVLW	remip_b301048 0982 2984 		GOTO	put_4Data01049 0983 	;01050 0983 	;====================================================================================================01051 0983 	; Sends myip to putch_net_W01052 0983 	; Entry: none01053 0983 	; Exit: none01054 0983 	; RAM used: Param78, Param79, Param7A, FSR (verified 1/23/03)01055 0983 	; Calls:(1+0) putch_net_W01056 0983 	;01057 0983 3030 	put_MyIP	MOVLW	myip_b301058 0984 	;01059 0984 	;==========================================================================================01060 0984 	; Sends 4 bytes pointed to by W to putch_net_W01061 0984 	; Entry: W = ptr01062 0984 	; Exit: none01063 0984 	; RAM used: Param78, Param79, Param7A, FSR (verified 1/23/03)01064 0984 	; Calls:(1+0) putch_net_W01065 0984 	;01066 0984 00FA 	put_4Data	MOVWF	Param7A01067 0985 3004 		MOVLW	0x0401068 0986 00F9 		MOVWF	Param7901069 0987 	;01070 0987 	;==========================================================================================Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 132500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm01071 0987 	; Sends bytes from Param7A to Param7A+Param79-1 to putch_net_W01072 0987 	; Entry: Param7A=ptr to data, Param79=length of data01073 0987 	; Exit: none01074 0987 	; RAM used: Param78, Param79, Param7A, FSR (verified 1/23/03)01075 0987 	; Calls:(1+0) putch_net_W01076 0987 	;01077 0987 1383 	put_data	BCF	STATUS,IRP01078 0988 087A 		MOVF	Param7A,W01079 0989 0084 		MOVWF	FSR01080 098A 0800 		MOVF	INDF,W01081 098B 216D 		CALL	putch_net_W01082 098C 0AFA 		INCF	Param7A,F01083 098D 0BF9 		DECFSZ	Param79,F01084 098E 2987 		GOTO	put_data01085 098F 0008 		RETURN01086 0990 	; 01087 0990 	;==========================================================================================01088 0990 	; Sends bytes from Param7A to Param7A+Param79-1 to putch_net_W (banks 2 and 3)01089 0990 	; Entry: Param7A=ptr to data, Param79=length of data01090 0990 	; Exit: none01091 0990 	; RAM used: Param78, Param79, Param7A, FSR (verified 1/23/03)01092 0990 	; Calls:(1+0) putch_net_W01093 0990 	;01094 0990 1783 	put_data2	BSF	STATUS,IRP01095 0991 087A 		MOVF	Param7A,W01096 0992 0084 		MOVWF	FSR01097 0993 0800 		MOVF	INDF,W01098 0994 216D 		CALL	putch_net_W01099 0995 0AFA 		INCF	Param7A,F01100 0996 0BF9 		DECFSZ	Param79,F01101 0997 2990 		GOTO	put_data201102 0998 0008 		RETURN01103 0999 	; 01104 0999 	;===================================================================================01105 0999 	; Put the given data into the NIC's RAM01106 0999 	; Entry: Param78=ptr to first byte, Param79=Number of bytes to send01107 0999 	; Exit:01108 0999 	; RAM used: Param71, Param78, Param79, FSR (verified 1/23/03)01109 0999 	; Calls:(1+0) outnic_ISR40, outnic_RBCR0_W, outnic_RBCR1_0, outnic_CMDR_W, outnicD78W, innic01110 0999 	;01111 0999 0879 	putnic_data	MOVF	Param79,W	; Round length up to an even value01112 099A 3901 		ANDLW	0x01	01113 099B 07F9 		ADDWF	Param79,F01114 099C 	;01115 099C 2768 		CALL	outnic_ISR40	;Clear remote DMA interrupt flag01116 099D 0879 		MOVF	Param79,W01117 099E 2754 		CALL	outnic_RBCR0_W	; outnic(RBCR0, len); Byte count01118 099F 274F 		CALL	outnic_RBCR1_0	; outnic(RBCR1, 0);01119 09A0 3012 		MOVLW	0x12	; outnic(CMDR, 0x12) Start, DMA remote write01120 09A1 2758 		CALL	outnic_CMDR_W01121 09A2 	; while (len--)  O/P bytes01122 09A2 0878 		MOVF	Param78,W01123 09A3 0084 		MOVWF	FSR	; 78 is now free01124 09A4 1383 		BCF	STATUS,IRP01125 09A5 		01126 09A5 0800 	putnic_data_L1	MOVF	INDF,W	; outnic(DATAPORT, *data++); 01127 09A6 00F8 		MOVWF	Param7801128 09A7 3010 		MOVLW	DATAPORT01129 09A8 275B 		CALL	outnicD78W01130 09A9 	;01131 09A9 0A84 		INCF	FSR,F01132 09AA 0BF9 		DECFSZ	Param79,F01133 09AB 29A5 		GOTO	putnic_data_L101134 09AC 	;01135 09AC 	; Count = 255; Done: must ensure DMA complete01136 09AC 30FF 		MOVLW	0xFF01137 09AD 00F9 		MOVWF	Param79	;reuse 79 as Count01138 09AE 	; while (Count && (innic(ISR)&0x40)==0) 01139 09AE 2718 	putnic_data_L2	CALL	innic_ISR01140 09AF 1A78 		BTFSC	Param78,401141 09B0 0008 		RETURN01142 09B1 0BF9 		DECFSZ	Param79,F	; Count--; 01143 09B2 29AE 		GOTO	putnic_data_L201144 09B3 0008 		RETURN01145 09B4 	;01146 09B4 	;===================================================================================01147 09B4 	; Put Ethernet packet into buffer given data at txbuff and len Param7D01148 09B4 	;01149 09B4 	; Entry: Dest(MAC) nicin.eth.srce, nicin.eth.pcol, Data at txbuff, dlen=txin01150 09B4 	; Exit: none01151 09B4 	; RAM used: Param71, Param78, Param79, Param7A, Param7B (verified 1/23/03)01152 09B4 	; Calls:(1+1) outnic_ISR_0A(1+0), setnic_addr(1+1), putnic_data(1+1)01153 09B4 	;01154 09B4 	;  starting at the beginning (TXSTART) putnic_data:01155 09B4 	;   Target's MAC address (6 bytes) nicin.eth.srce01156 09B4 	;   My MAC Address (6 bytes) myeth01157 09B4 	;   Ethernet proticol (2 bytes) nicin.eth.pcol01158 09B4 	;   The Data starting at txbuff (Param7D bytes)01159 09B4 	;   01160 09B4 2765 	put_ether	CALL	outnic_ISR_0A	;Clear interrupt flags01161 09B5 3040 		MOVLW	TXSTART	; setnic_addr(TXSTART); 01162 09B6 00FB 		MOVWF	Param7B	01163 09B7 01FA 		CLRF	Param7A	; low byte01164 09B8 2014 		CALL	setnic_addr01165 09B9 	;01166 09B9 3042 		MOVLW	nicin.eth.srce	; putnic_data(nicin.eth.srce, MACLEN); 01167 09BA 00F8 		MOVWF	Param7801168 09BB 3006 		MOVLW	MACLEN01169 09BC 00F9 		MOVWF	Param7901170 09BD 2199 		CALL	putnic_dataHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 133500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm01171 09BE 	;01172 09BE 302A 		MOVLW	myeth0	; putnic_data(myeth, MACLEN);01173 09BF 00F8 		MOVWF	Param7801174 09C0 3006 		MOVLW	MACLEN01175 09C1 00F9 		MOVWF	Param7901176 09C2 2199 		CALL	putnic_data01177 09C3 	;01178 09C3 3048 		MOVLW	nicin.eth.pcol	; putnic_data(&nicin.eth.pcol, 2); 01179 09C4 00F8 		MOVWF	Param7801180 09C5 3002 		MOVLW	0x0201181 09C6 00F9 		MOVWF	Param7901182 09C7 2199 		CALL	putnic_data01183 09C8 	;01184 09C8 30A0 		MOVLW	txbuff	; putnic_data(data, dlen); 01185 09C9 00F8 		MOVWF	Param7801186 09CA 0854 		MOVF	txin,W01187 09CB 00F9 		MOVWF	Param7901188 09CC 2999 		GOTO	putnic_data01189 09CD 	;01190 09CD 	;======================================================================================01191 09CD 	; Transmit the Ethernet frame01192 09CD 	; Entry:  dlen.l=Param7C, dlen.h=Param7D01193 09CD 	; Exit:01194 09CD 	; RAM used: Param71, Param78, Param7C, Param7D (verified 1/23/03)01195 09CD 	; Calls:(1+0) outnicD78W, outnic_CMDR_W01196 09CD 	;01197 09CD 300E 	xmit_ether	MOVLW	ETHHDR_LEN	; Add ethernet frame header len to data len01198 09CE 07FC 		ADDWF	Param7C,F	;  dlen = dlen+MACLEN+MACLEN+201199 09CF 1803 		BTFSC	STATUS,C	;  Dest MAC, Src MAC, pcol01200 09D0 0AFD 		INCF	Param7D,F01201 09D1 	; if (dlen < MINFRAME) 01202 09D1 08FD 		MOVF	Param7D,F01203 09D2 1D03 		BTFSS	STATUS,Z01204 09D3 29DA 		GOTO	xmit_ether_1	;>=0x100 bytes01205 09D4 303C 		MOVLW	MINFRAME01206 09D5 027C 		SUBWF	Param7C,W01207 09D6 1803 		BTFSC	STATUS,C01208 09D7 29DA 		GOTO	xmit_ether_1	;>=MINFRAME01209 09D8 	;01210 09D8 303C 		MOVLW	MINFRAME	; dlen = MINFRAME; Constrain length01211 09D9 00FC 		MOVWF	Param7C01212 09DA 	;01213 09DA 087C 	xmit_ether_1	MOVF	Param7C,W	; outnic(TBCR0, dlen.l) Set Tx length regs01214 09DB 00F8 		MOVWF	Param7801215 09DC 3005 		MOVLW	TBCR001216 09DD 275B 		CALL	outnicD78W01217 09DE 	;									01218 09DE 087D 		MOVF	Param7D,W	; outnic(TBCR1, dlen.h);01219 09DF 00F8 		MOVWF	Param7801220 09E0 3006 		MOVLW	TBCR101221 09E1 275B 		CALL	outnicD78W01222 09E2 3024 		MOVLW	NICTXCMD	; Transmit the packet01223 09E3 2F58 		GOTO	outnic_CMDR_W01224 09E4 	;01225 09E4 	;  01226 09E4 	;=====================================================================================01227 09E4 	;=====================================================================================01228 09E4 	; Scan the ARP cache for an IP(remip_b0) load into ram if found.01229 09E4 	; If IP=255 then make it MAC:FF:FF:FF:FF:FF:FF01230 09E4 	;01231 09E4 	; Entry: remip_b0=IP of Target01232 09E4 	; Exit: if Found ARP record is moved into ram01233 09E4 	;	if pending try again01234 09E4 	;	copy ar_sha to nicin.eth.srce01235 09E4 	;       if not found try to find it on network01236 09E4 	;       ae_state will be pending or resolved01237 09E4 	;01238 09E4 	; RAM used: Param70, Param78, Param79, Param7A, Param7B, Param7C, FSR01239 09E4 	; Calls:(1+4) arp_find(1+3), arp_get(1+2), MemMove_Low (1+0), send_ARP_Req(1+4), arp_add_or_replace(1+4)01240 09E4 	;01241 09E4 	Locate_ARP	mBank001241 09E4 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001241 09E5 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101242 09E6 	; Subnet mask is 255.255.255.0 so use the first01243 09E6 	; three octets of my IP address01244 09E6 3003 		MOVLW	0x03	; count01245 09E7 00F9 		MOVWF	Param7901246 09E8 30DB 		MOVLW	ar_spa	; dest01247 09E9 00FA 		MOVWF	Param7A01248 09EA 3030 		MOVLW	myip_b3	; source01249 09EB 00FB 		MOVWF	Param7B01250 09EC 2103 		CALL	MemMove_Low	; do the move01251 09ED 0859 		MOVF	remip_b0,W01252 09EE 1683 		BSF	_RP0	;bank 101253 09EF 00DE 		MOVWF	ar_spa+301254 09F0 	;01255 09F0 	; handle broadcast address01256 09F0 1283 		BCF	_RP0	;bank 001257 09F1 3CFF 		SUBLW	0xFF01258 09F2 		SKPNZ		;IP Address = 255?01258 09F2 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z01259 09F3 2A15 		GOTO	Locate_ARP_255	; Yes01260 09F4 	;01261 09F4 221F 		CALL	arp_find01262 09F5 	;01263 09F5 08F8 		MOVF	Param78,F01264 09F6 		SKPZ01264 09F6 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z01265 09F7 29FC 		GOTO	Locate_ARP_Gotit	01266 09F8 	;Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 134500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm01267 09F8 1683 		BSF	_RP0	;bank 101268 09F9 01D1 		CLRF	ae_attempts01269 09FA 1283 		BCF	_RP0	;bank 001270 09FB 2ADC 		GOTO	send_ARP_Req	;not found make first attempt to 01271 09FC 				; find it on the network01272 09FC 	;01273 09FC 226D 	Locate_ARP_Gotit	CALL	arp_get	;move arp record into ram01274 09FD 1683 		BSF	_RP0	;bank 101275 09FE 3001 		MOVLW	AS_PENDING01276 09FF 0250 		SUBWF	ae_state,W	;W=ae_state-AS_PENDING01277 0A00 1283 		BCF	_RP0	;bank 001278 0A01 		SKPZ		;skip if pending01278 0A01 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z01279 0A02 2A04 		GOTO	NotPending	;not pending must be resolved01280 0A03 	;01281 0A03 22DC 		CALL	send_ARP_Req	; try the network again01282 0A04 	;01283 0A04 	; This record must be resolved, we wouldn't have loaded a free one.01284 0A04 3006 	NotPending	MOVLW	MACLEN	;move the hardware address (MAC)01285 0A05 00F9 		MOVWF	Param79	; to nicin.eth.srce01286 0A06 30D5 		MOVLW	ar_sha01287 0A07 00FB 		MOVWF	Param7B01288 0A08 3042 		MOVLW	nicin.eth.srce01289 0A09 00FA 		MOVWF	Param7A01290 0A0A 2103 		CALL	MemMove_Low01291 0A0B 	;01292 0A0B 1683 		BSF	_RP0	;bank 101293 0A0C 		if ARPsNeverDie01294 0A0C 08D2 		MOVF	ae_ttl,F01295 0A0D 		else01297 0A0D 		endif01298 0A0D 		SKPNZ01298 0A0D 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z01299 0A0E 01D0 		CLRF	ae_state	; if TTL is 0x00 mark this record free01300 0A0F 2264 		CALL	arp_add_or_replace01301 0A10 1683 	Locate_ARP_MarkResvd	BSF	_RP0	;bank 101302 0A11 3002 		MOVLW	AS_RESOLVED	; change the ram version of this01303 0A12 00D0 		MOVWF	ae_state	; record back to resolved01304 0A13 1283 		BCF	_RP0	;bank 001305 0A14 0008 		RETURN01306 0A15 	;01307 0A15 30FF 	Locate_ARP_255	MOVLW	0xFF01308 0A16 00C2 		MOVWF	nicin.eth.srce01309 0A17 00C3 		MOVWF	nicin.eth.srce+101310 0A18 00C4 		MOVWF	nicin.eth.srce+201311 0A19 00C5 		MOVWF	nicin.eth.srce+301312 0A1A 00C6 		MOVWF	nicin.eth.srce+401313 0A1B 00C7 		MOVWF	nicin.eth.srce+501314 0A1C 2A10 		GOTO	Locate_ARP_MarkResvd01315 0A1D 	;01316 0A1D 	;=====================================================================================							 01317 0A1D 	; Find an free ARP cache record01318 0A1D 	;01319 0A1D 	; Entry: none01320 0A1D 	; Exit: Param78=(0=not found, cache entry #  1..32)01321 0A1D 	; RAM used:Param70, Param78, Param79, Param7A, FSR (verified 1/25/03)01322 0A1D 	; Calls:(1+1) SRAM_Read, SRAM_OffsetAddr, SRAM_ReadPI01323 0A1D 	; 01324 0A1D 1470 	arp_findfree	BSF	Param70,0	;look for a free one01325 0A1E 2A20 		GOTO	arp_find_A	01326 0A1F 	;01327 0A1F 	;=====================================================================================01328 0A1F 	; Find an ARP in the ARP cache01329 0A1F 	;01330 0A1F 	; Entry: ar_spa01331 0A1F 	; Exit: Param78=(0=not found, cache entry #  1..32)01332 0A1F 	; RAM used:Param70, Param78, Param79, Param7A, FSR (verified 1/25/03)01333 0A1F 	; Calls:(1+1) SRAM_Read(1+1), SRAM_OffsetAddr(1+0), SRAM_ReadPI (1+1)01334 0A1F 	; 01335 0A1F 1070 	arp_find	BCF	Param70,0	;don't look for a free one01336 0A20 	arp_find_A	mBank301336 0A20 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001336 0A21 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP101337 0A22 3000 		MOVLW	high evARPcache01338 0A23 00A1 		MOVWF	SRAM_Addr201339 0A24 30F8 		MOVLW	low evARPcache01340 0A25 00A0 		MOVWF	SRAM_Addr101341 0A26 019F 		CLRF	SRAM_Addr001342 0A27 3001 		MOVLW	0x0101343 0A28 00F9 		MOVWF	Param79	;entry 101344 0A29 	arp_find_L1	mCall1To0	SRAM_Read01344 0A29 118A      M		BCF	PCLATH,3		BCF	PCLATH,301344 0A2A 2268      M		CALL	SRAM_Read		CALL	Destination01344 0A2B 158A      M		BSF	PCLATH,3		BSF	PCLATH,301344 0A2C 120A      M		BCF	PCLATH,4		BCF	PCLATH,401345 0A2D 3C00 		SUBLW	AS_FREE01346 0A2E 1870 		BTFSC	Param70,0	;looking for a free one01347 0A2F 2A5A 		GOTO	arp_find_Free01348 0A30 1903 		BTFSC	STATUS,Z	;skip if entry is not free01349 0A31 2A4F 		GOTO	arp_find_next	; it was free01350 0A32 	;01351 0A32 300B 		MOVLW	ar_spa-ae_state	;0x0B01352 0A33 		mCall1To0	SRAM_OffsetAddr	;add W to SRAM address01352 0A33 118A      M		BCF	PCLATH,3		BCF	PCLATH,301352 0A34 2209      M		CALL	SRAM_OffsetAddr		CALL	Destination01352 0A35 158A      M		BSF	PCLATH,3		BSF	PCLATH,301352 0A36 120A      M		BCF	PCLATH,4		BCF	PCLATH,401353 0A37 3004 		MOVLW	IPAddrLEN01354 0A38 00FA 		MOVWF	Param7A	;len01355 0A39 30DB 		MOVLW	ar_spa	; Source Protocol AddressHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 135500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm01356 0A3A 0084 		MOVWF	FSR01357 0A3B 	;This would put the 8th address on the stack01358 0A3B 	;	CALL	MemComp_SRAM	;Param78=(1=matched, 0=not)01359 0A3B 	; so do it in-line.01360 0A3B 01F8 		CLRF	Param78	;default to not matched01361 0A3C 1383 		BCF	STATUS,IRP01362 0A3D 	arp_find_L2	mCall1To0	SRAM_ReadPI01362 0A3D 118A      M		BCF	PCLATH,3		BCF	PCLATH,301362 0A3E 2252      M		CALL	SRAM_ReadPI		CALL	Destination01362 0A3F 158A      M		BSF	PCLATH,3		BSF	PCLATH,301362 0A40 120A      M		BCF	PCLATH,4		BCF	PCLATH,401363 0A41 0200 		SUBWF	INDF,W01364 0A42 1D03 		BTFSS	STATUS,Z	;skip if a match01365 0A43 2A49 		GOTO	arp_find_noMatch01366 0A44 0A84 		INCF	FSR,F01367 0A45 0BFA 		DECFSZ	Param7A,F01368 0A46 2A3D 		GOTO	arp_find_L201369 0A47 3001 		MOVLW	0x0101370 0A48 00F8 		MOVWF	Param7801371 0A49 	;01372 0A49 	;fix the SRAM address to point to the beginning of this record01373 0A49 30F0 	arp_find_noMatch	MOVLW	ARP_TELEN_mask01374 0A4A 		mBank301374 0A4A 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP001374 0A4B 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP101375 0A4C 059F 		ANDWF	SRAM_Addr0,F01376 0A4D 1878 		BTFSC	Param78,0	;matched?01377 0A4E 2A5F 		GOTO	arp_find_found	;yes01378 0A4F 	;01379 0A4F 3020 	arp_find_next	MOVLW	ARP_TSIZE01380 0A50 0279 		SUBWF	Param79,W	;W=Param79-W01381 0A51 1903 		BTFSC	STATUS,Z	;last entry?01382 0A52 2A5D 		GOTO	arp_find_not	;yes01383 0A53 0AF9 		INCF	Param79,F01384 0A54 3010 		MOVLW	ARP_TELEN01385 0A55 		mCall1To0	SRAM_OffsetAddr	;add W to SRAM address01385 0A55 118A      M		BCF	PCLATH,3		BCF	PCLATH,301385 0A56 2209      M		CALL	SRAM_OffsetAddr		CALL	Destination01385 0A57 158A      M		BSF	PCLATH,3		BSF	PCLATH,301385 0A58 120A      M		BCF	PCLATH,4		BCF	PCLATH,401386 0A59 2A29 		GOTO	arp_find_L101387 0A5A 	;01388 0A5A 1903 	arp_find_Free	BTFSC	STATUS,Z	;skip if entry is not free01389 0A5B 2A5F 		GOTO	arp_find_found	; it was free01390 0A5C 2A4F 		GOTO	arp_find_next01391 0A5D 		GOTO	arp_find_next01392 0A5D 01F8 	arp_find_not	CLRF	Param7801393 0A5E 2A61 		GOTO	arp_find_end01394 0A5F 	;01395 0A5F 0879 	arp_find_found	MOVF	Param79,W01396 0A60 00F8 		MOVWF	Param7801397 0A61 	S1_Bank0Rtn01398 0A61 	arp_find_end	mBank001398 0A61 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001398 0A62 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101399 0A63 0008 		RETURN01400 0A64 	;01401 0A64 	;====================================================================================01402 0A64 	;Add this AR address pair to the cache01403 0A64 	; if this IP is found in the cache then replace the arp record01404 0A64 	; if this IP is not found then add it to the cache01405 0A64 	;01406 0A64 	; Entry: The ARP record (ae_state..ar_spa)01407 0A64 	; Exit: none01408 0A64 	; RAM used:Param70, Param78, Param79, Param7A, FSR (verified 1/25/03)01409 0A64 	; Calls:(1+2) arp_find(1+2), arp_findfree(1+2) (SRAM_Read, SRAM_OffsetAddr, MemComp_SRAM),01410 0A64 	;	 MemMove_SRAM (SRAM_WritePI)01411 0A64 	;01412 0A64 221F 	arp_add_or_replace	CALL	arp_find01413 0A65 0878 		MOVF	Param78,W	;0=not found01414 0A66 1903 		BTFSC	STATUS,Z	;skip if found01415 0A67 	;01416 0A67 	;=====================================================================================01417 0A67 	; Add a new ARP record to the ARP cache01418 0A67 	;01419 0A67 	; Entry: The ARP record (ae_state..ar_spa)01420 0A67 	; Exit: none01421 0A67 	; RAM used:Param70, Param78, Param79, Param7A, FSR (verified 1/25/03)01422 0A67 	; Calls:(1+2) arp_findfree (1+2),01423 0A67 	;	 MemMove_SRAM (SRAM_WritePI), arp_Replace01424 0A67 	; 01425 0A67 221D 	arp_add	CALL	arp_findfree01426 0A68 	;01427 0A68 	;missing code: test for cache full & kill oldest01428 0A68 	;01429 0A68 	;====================================================================================01430 0A68 	; Move an ARP record into ram 01431 0A68 	; Entry: ARP record in ram (ae_state..ar_spa), SRAM_Addr01432 0A68 	; Exit: none01433 0A68 	; RAM used: Param78, Param7A, FSR (verified 2/4/03)01434 0A68 	; Calls:(1+2) MemMove_SRAM(SRAM_WritePI)01435 0A68 	;01436 0A68 3010 	arp_Replace	MOVLW	ARP_TELEN01437 0A69 00FA 		MOVWF	Param7A01438 0A6A 30D0 		MOVLW	ae_state01439 0A6B 0084 		MOVWF	FSR01440 0A6C 2911 		GOTO	MemMove_SRAM01441 0A6D 	;01442 0A6D 	;=====================================================================================01443 0A6D 	; Move an ARP record into ramHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 136500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm01444 0A6D 	;01445 0A6D 	; Entry: SRAM_Addr >> start of ARP record01446 0A6D 	; Exit: ARP record in ram ae_state..ar_spa01447 0A6D 	; RAM used: Param7A, FSR (verified 2/4/03)01448 0A6D 	; Calls:(1+1) MemMoveFrom_SRAM(SRAM_ReadPI)01449 0A6D 	;01450 0A6D 3010 	arp_get	MOVLW	ARP_TELEN01451 0A6E 00FA 		MOVWF	Param7A01452 0A6F 30D0 		MOVLW	ae_state01453 0A70 0084 		MOVWF	FSR01454 0A71 291B 		GOTO	MemMoveFrom_SRAM01455 0A72 	;01456 0A72 	;=====================================================================================01457 0A72 	; Handle an incoming ARP message01458 0A72 	;01459 0A72 	; Entry:01460 0A72 	; Exit:01461 0A72 	; RAM used: Param70:0, Param78, Param79, Param7A, Param7D, FSR01462 0A72 	; Calls:(1+3) match_word(1+2), match_byteW(1+1), skip_6bytes, getch_net, putch_net_W,01463 0A72 	;	put_ether, xmit_ether01464 0A72 	;	01465 0A72 	;01466 0A72 	; ARP/RARP message format: this all goes into the Data field in the Ethernet Frame (type PCOL_ARP)01467 0A72 	;   Hardware Type (2 bytes) ethernet=1, HTYPE01468 0A72 	;   Proticol Type (2 bytes) IP type=0x0800, ARPPRO01469 0A72 	;   Hardware Address Length (HLEN) (1 byte) ethernet=6, MACLEN01470 0A72 	;   Proticol Addres Length (PLEN) (1 byte) IPv4=4, IPAddrLEN01471 0A72 	;   Operation (2 bytes) 1 ARPREQ, 2 ARPRESP, 3 RARPREQ, or 4 RARPSESP01472 0A72 	;   Sender's Hardware Address (MAC)01473 0A72 	;   Sender's IP Address01474 0A72 	;   Target's Hardware Address (MAC)01475 0A72 	;   Target's IP Address (MAC)01476 0A72 	;01477 0A72 	; if (match_word(HTYPE) &&    Hardware type = HTYPE01478 0A72 	arp_recv	01479 0A72 		if ARPtesting01486 0A72 		endif01487 0A72 	;01488 0A72 3000 		MOVLW	high HTYPE01489 0A73 00F5 		MOVWF	Param7501490 0A74 3001 		MOVLW	low HTYPE01491 0A75 2145 		CALL	match_word01492 0A76 1C78 		BTFSS	Param78,001493 0A77 0008 		RETURN01494 0A78 	;01495 0A78 	; match_word(ARPPRO) &&   ARP protocol = ARPPRO01496 0A78 3008 		MOVLW	high ARPPRO01497 0A79 00F5 		MOVWF	Param7501498 0A7A 3000 		MOVLW	low ARPPRO01499 0A7B 2145 		CALL	match_word01500 0A7C 1C78 		BTFSS	Param78,001501 0A7D 0008 		RETURN01502 0A7E 	;01503 0A7E 	; Hardware & IP lengths 01504 0A7E 3006 		MOVLW	MACLEN	; match_byte(MACLEN)01505 0A7F 214A 		CALL	match_byteW01506 0A80 1C78 		BTFSS	Param78,001507 0A81 0008 		RETURN01508 0A82 	;01509 0A82 3004 		MOVLW	IPAddrLEN	; match_byte(IPAddrLEN)01510 0A83 214A 		CALL	match_byteW01511 0A84 1C78 		BTFSS	Param78,001512 0A85 0008 		RETURN01513 0A86 	;01514 0A86 	; move the next 22 bytes ar_op..ar_tpa01515 0A86 30D3 		MOVLW	ar_op01516 0A87 00FA 		MOVWF	Param7A01517 0A88 3016 		MOVLW	d'22'01518 0A89 20F9 		CALL	get_Ndata01519 0A8A 18A6 		BTFSC	atend	; if (!atend) skip01520 0A8B 0008 		RETURN		; messaage was too short01521 0A8C 	;01522 0A8C 	; Target IP addr (me?) verify that we are the target01523 0A8C 3004 		MOVLW	0x04	; count01524 0A8D 00F9 		MOVWF	Param7901525 0A8E 3030 		MOVLW	myip_b3	; block 101526 0A8F 00FA 		MOVWF	Param7A01527 0A90 30E5 		MOVLW	ar_tpa	; block 201528 0A91 00FB 		MOVWF	Param7B01529 0A92 2131 		CALL	MemComp_Low	; do the test01530 0A93 1C78 		BTFSS	Param78,0	; skip if the IPs match01531 0A94 0008 		RETURN01532 0A95 	;01533 0A95 	; ok, so what is it?  Operation (2 bytes) 1 ARPREQ or 2 ARPRESP01534 0A95 	;01535 0A95 		if ARPtesting01544 0A95 		endif01545 0A95 	;01546 0A95 1683 		BSF	STATUS,RP0	; Bank101547 0A96 08D3 		MOVF	ar_op,F01548 0A97 1D03 		BTFSS	STATUS,Z	; skip if high byte = 001549 0A98 0008 		RETURN01550 0A99 3001 		MOVLW	low ARPREQ01551 0A9A 0254 		SUBWF	ar_op+1,W01552 0A9B 1903 		BTFSC	STATUS,Z	; if (ar_op != ARPREQ) skip01553 0A9C 2AA2 		GOTO	HandleARPReq01554 0A9D 	;01555 0A9D 3002 		MOVLW	low ARPRESP01556 0A9E 0254 		SUBWF	ar_op+1,W01557 0A9F 1903 		BTFSC	STATUS,ZHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 137500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm01558 0AA0 2AA9 		GOTO	HandleARPResp01559 0AA1 0008 		RETURN		;it's something else01560 0AA2 	;01561 0AA2 	;01562 0AA2 	; move sender's ip address to remip01563 0AA2 3004 	HandleARPReq	MOVLW	0x04	; count01564 0AA3 00F9 		MOVWF	Param7901565 0AA4 3056 		MOVLW	remip_b3	; dest01566 0AA5 00FA 		MOVWF	Param7A01567 0AA6 30DB 		MOVLW	ar_spa	; source01568 0AA7 00FB 		MOVWF	Param7B01569 0AA8 2103 		CALL	MemMove_Low	; do the move01570 0AA9 	;01571 0AA9 		if ARPtesting01576 0AA9 		endif01577 0AA9 	;01578 0AA9 	;Add this AR address pair to the cache01579 0AA9 	; if this IP is found in the cache then replace the arp record01580 0AA9 	; if this IP is not found then add it to the cache01581 0AA9 	;01582 0AA9 1683 	HandleARPResp	BSF	STATUS,RP0	; Bank101583 0AAA 3002 		MOVLW	AS_RESOLVED01584 0AAB 00D0 		MOVWF	ae_state01585 0AAC 300A 		MOVLW	ATTL_Max	; set time to live at max01586 0AAD 00D2 		MOVWF	ae_ttl01587 0AAE 2264 		CALL	arp_add_or_replace01588 0AAF 	;01589 0AAF 	;01590 0AAF 		if ARPtesting01623 0AAF 		endif01624 0AAF 	;01625 0AAF 	; if it was an arp responce we're done01626 0AAF 1683 		BSF	STATUS,RP0	; Bank101627 0AB0 0854 		MOVF	ar_op+1,W01628 0AB1 1283 		BCF	STATUS,RP0	; Bank001629 0AB2 3C02 		SUBLW	low ARPRESP01630 0AB3 1903 		BTFSC	STATUS,Z01631 0AB4 0008 		RETURN01632 0AB5 	;01633 0AB5 	;01634 0AB5 	;OK, so it's a valid arp req. so build an arp resp to send back.01635 0AB5 	; fall through to send_ARP_Resp01636 0AB5 	;==============================================================================01637 0AB5 	; Sends an ARP responce01638 0AB5 	; Entry:Sender(myeth, myip), Target(nicin.eth.srce, remip)01639 0AB5 	; Exit: none01640 0AB5 	; RAM used: Param70:1, Param71, Param78, Param79, Param7A, 01641 0AB5 	;	Param7B, Param7C, Param7D, FSR (verified 1/25/03)01642 0AB5 	; Calls:(1+2) putch_net_W(1+0), put_data(1+1), put_MyIP(1+1), put_remip(1+1),01643 0AB5 	;	 Put_ether(1+2)(outnic_ISR_0A(1+0), setnic_addr(1+1), putnic_data(1+1)),01644 0AB5 	;	 xmit_ether(1+0) (outnicD78W, outnic_CMDR_W)01645 0AB5 	;01646 0AB5 10F0 	send_ARP_Resp	BCF	Param70,101647 0AB6 	put_ARP_Header	mBank001647 0AB6 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001647 0AB7 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101648 0AB8 01D4 		CLRF	txin	; txin = 0; 01649 0AB9 	;01650 0AB9 3000 		MOVLW	high HTYPE	; Hardware type 01651 0ABA 216D 		CALL	putch_net_W01652 0ABB 3001 		MOVLW	low HTYPE01653 0ABC 216D 		CALL	putch_net_W01654 0ABD 	;01655 0ABD 3008 		MOVLW	high ARPPRO	; ARP protocol01656 0ABE 216D 		CALL	putch_net_W01657 0ABF 3000 		MOVLW	low ARPPRO01658 0AC0 216D 		CALL	putch_net_W01659 0AC1 	;01660 0AC1 3006 		MOVLW	MACLEN	; Hardware address length01661 0AC2 216D 		CALL	putch_net_W01662 0AC3 3004 		MOVLW	IPAddrLEN	; Protocol address length01663 0AC4 216D 		CALL	putch_net_W01664 0AC5 	;01665 0AC5 18F0 		BTFSC	Param70,101666 0AC6 0008 		RETURN01667 0AC7 	;01668 0AC7 3000 		MOVLW	high ARPRESP	; ARP response 01669 0AC8 216D 		CALL	putch_net_W01670 0AC9 3002 		MOVLW	low ARPRESP01671 0ACA 216D 		CALL	putch_net_W01672 0ACB 	; source MAC (mine)01673 0ACB 302A 	send_ARP_1	MOVLW	myeth0	; put_data(myeth, MACLEN); My MAC addr 01674 0ACC 00FA 		MOVWF	Param7A	;ptr01675 0ACD 3006 		MOVLW	MACLEN01676 0ACE 00F9 		MOVWF	Param79	;len01677 0ACF 2187 		CALL	put_data01678 0AD0 	; source IP (mine)01679 0AD0 2183 		CALL	put_MyIP	01680 0AD1 	; target MAC (where the req. came from)01681 0AD1 3042 		MOVLW	nicin.eth.srce	; put_data(nicin.eth.srce, MACLEN);   Remote MAC addr 01682 0AD2 00FA 		MOVWF	Param7A	;ptr01683 0AD3 3006 		MOVLW	MACLEN01684 0AD4 00F9 		MOVWF	Param79	;len01685 0AD5 2187 		CALL	put_data01686 0AD6 	;01687 0AD6 	; target IP addr (the other guy)01688 0AD6 2181 		CALL	put_remip01689 0AD7 	;01690 0AD7 21B4 		CALL	put_ether	; put_ether(txbuff, txin); Send to NIC 01691 0AD8 	;Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 138500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm01692 0AD8 		if ARPtesting01723 0AD8 		endif01724 0AD8 	;01725 0AD8 	;01726 0AD8 0854 		MOVF	txin,W	; xmit_ether(txin); Transmit 01727 0AD9 00FC 		MOVWF	Param7C	;len01728 0ADA 01FD 		CLRF	Param7D	;hi byte=0, arp's are small01729 0ADB 29CD 		GOTO	xmit_ether01730 0ADC 	;  01731 0ADC 	;==============================================================================01732 0ADC 	; Sends an ARP request01733 0ADC 	; Entry:Sender(myeth, myip), Target IP(remip_b0), ae_attempts01734 0ADC 	; Exit: none01735 0ADC 	; RAM used:Param70, Param71, Param78, Param79, Param7A, 01736 0ADC 	;	Param7B, Param7C, Param7D (verified 1/25/03)01737 0ADC 	; Calls:(1+3) put_ARP_Header(1+2), putch_net_W(0), MemMove_Low(0), Put_ether(1+2)(outnic_ISR_0A, setnic_addr, putnic_data),01738 0ADC 	;	 xmit_ether(1+0) (outnicD78W, outnic_CMDR_W), arp_add_or_replace (1+3)01739 0ADC 	;01740 0ADC 	; ARP/RARP message format: this all goes into the Data field in the Ethernet Frame (type PCOL_ARP)01741 0ADC 	;   Hardware Type (2 bytes) ethernet=1, HTYPE01742 0ADC 	;   Proticol Type (2 bytes) IP type=0x0800, ARPPRO01743 0ADC 	;   Hardware Address Length (HLEN) (1 byte) ethernet=6, MACLEN01744 0ADC 	;   Proticol Addres Length (PLEN) (1 byte) IPv4=4, IPAddrLEN01745 0ADC 	;   Operation (2 bytes) 1 ARPREQ, 2 ARPRESP, 3 RARPREQ, or 4 RARPSESP01746 0ADC 	;   Sender's Hardware Address (MAC)01747 0ADC 	;   Sender's IP Address01748 0ADC 	;   Target's Hardware Address (MAC)01749 0ADC 	;   Target's IP Address (MAC)01750 0ADC 	;01751 0ADC 14F0 	send_ARP_Req	BSF	Param70,1	;Only load the header01752 0ADD 22B6 		CALL	put_ARP_Header01753 0ADE 	;01754 0ADE 3000 		MOVLW	high ARPREQ	; put_word(ARPRESP); ARP response 01755 0ADF 216D 		CALL	putch_net_W01756 0AE0 3001 		MOVLW	low ARPREQ01757 0AE1 216D 		CALL	putch_net_W01758 0AE2 	;hardware protocol01759 0AE2 3008 		MOVLW	high PCOL_ARP01760 0AE3 00C8 		MOVWF	nicin.eth.pcol01761 0AE4 3006 		MOVLW	low PCOL_ARP01762 0AE5 00C9 		MOVWF	nicin.eth.pcol+101763 0AE6 	; setup MAC and IP of target01764 0AE6 30FF 		MOVLW	0xFF	;FFFFFFFFFFFF (everyone)01765 0AE7 00C2 		MOVWF	nicin.eth.srce01766 0AE8 00C3 		MOVWF	nicin.eth.srce+101767 0AE9 00C4 		MOVWF	nicin.eth.srce+201768 0AEA 00C5 		MOVWF	nicin.eth.srce+301769 0AEB 00C6 		MOVWF	nicin.eth.srce+401770 0AEC 00C7 		MOVWF	nicin.eth.srce+501771 0AED 	; Subnet mask is 255.255.255.0 so use the first01772 0AED 	; three octets of my IP address01773 0AED 0830 		MOVF	myip_b3,W01774 0AEE 00D6 		MOVWF	remip_b301775 0AEF 0831 		MOVF	myip_b2,W01776 0AF0 00D7 		MOVWF	remip_b201777 0AF1 0832 		MOVF	myip_b1,W01778 0AF2 00D8 		MOVWF	remip_b101779 0AF3 	;01780 0AF3 	; Save a pending AR record01781 0AF3 1683 		BSF	STATUS,RP0	; Bank101782 0AF4 3001 		MOVLW	AS_PENDING01783 0AF5 00D0 		MOVWF	ae_state01784 0AF6 0AD1 		INCF	ae_attempts,F01785 0AF7 01D2 		CLRF	ae_ttl01786 0AF8 	;01787 0AF8 3008 		MOVLW	high PCOL_ARP01788 0AF9 00D3 		MOVWF	ar_op01789 0AFA 3006 		MOVLW	low PCOL_ARP01790 0AFB 00D4 		MOVWF	ar_op+101791 0AFC 	;01792 0AFC 30FF 		MOVLW	0xFF01793 0AFD 00D5 		MOVWF	ar_sha01794 0AFE 00D6 		MOVWF	ar_sha+101795 0AFF 00D7 		MOVWF	ar_sha+201796 0B00 00D8 		MOVWF	ar_sha+301797 0B01 00D9 		MOVWF	ar_sha+401798 0B02 00DA 		MOVWF	ar_sha+501799 0B03 	;01800 0B03 3004 		MOVLW	0x04	; count01801 0B04 00F9 		MOVWF	Param7901802 0B05 3056 		MOVLW	remip_b3	; dest01803 0B06 00FA 		MOVWF	Param7A01804 0B07 30DB 		MOVLW	ar_spa	; source01805 0B08 00FB 		MOVWF	Param7B01806 0B09 2103 		CALL	MemMove_Low	; do the move01807 0B0A 	;01808 0B0A 2264 		CALL	arp_add_or_replace01809 0B0B 	;01810 0B0B 2ACB 		GOTO	send_ARP_1	;not bank sensitive01811 0B0C 	;01812 0B0C 		if UsesUDP01813 0B0C 	;==============================================================================================01814 0B0C 	; Send a UDP datagram given data in txbuff and len txin01815 0B0C 	;01816 0B0C 	; Entry: Data at txbuff, txin=length of data01817 0B0C 	;	locport, remport, nicin.eth.srce, remip01818 0B0C 	; Exit: none01819 0B0C 	; RAM used: Param71, Param7A, Param7B, Param7C, FSR01820 0B0C 	; Calls:(1+2) setnic_addr(0+1)(Param71, Param7A, Param7B), putnic_checkbyte(0+1), put_ip(1+1), put_udp01821 0B0C 	;	tcp_xmit_2(1+2)Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 139500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm01822 0B0C 	;01823 0B0C 	UDP_Send	mBank001823 0B0C 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001823 0B0D 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101824 0B0E 01CD 		CLRF	checklo	; checkhi = checklo = 001825 0B0F 01CC 		CLRF	checkhi01826 0B10 1126 		BCF	checkflag	; checkflag = 001827 0B11 01CA 		CLRF	tpxdlen01828 0B12 01CB 		CLRF	tpxdlen+101829 0B13 	;hardware protocol01830 0B13 3008 		MOVLW	high PCOL_IP	;0x080001831 0B14 00C8 		MOVWF	nicin.eth.pcol01832 0B15 3000 		MOVLW	low PCOL_IP01833 0B16 00C9 		MOVWF	nicin.eth.pcol+101834 0B17 	;01835 0B17 	;  O/P data to buffer, calc checksum 01836 0B17 	;01837 0B17 	; setnic_addr((TXSTART*256)+ETHERHEADER_LEN+IPHDR_LEN+UDPHDR_LEN)01838 0B17 3040 		MOVLW	TXSTART01839 0B18 00FB 		MOVWF	Param7B01840 0B19 302A 		MOVLW	ETHERHEADER_LEN+IPHDR_LEN+UDPHDR_LEN01841 0B1A 00FA 		MOVWF	Param7A01842 0B1B 2014 		CALL	setnic_addr01843 0B1C 	;01844 0B1C 	;move data to NIC01845 0B1C 0854 		MOVF	txin,W	; Param7C=len of data at txbuff01846 0B1D 00FC 		MOVWF	Param7C01847 0B1E 30A0 		MOVLW	low txbuff01848 0B1F 0084 		MOVWF	FSR01849 0B20 1383 		BCF	STATUS,IRP01850 0B21 0800 	UDP_Send_L1	MOVF	INDF,W01851 0B22 2388 		CALL	putnic_checkbyte01852 0B23 0A84 		INCF	FSR,F01853 0B24 0BFC 		DECFSZ	Param7C,F01854 0B25 2B21 		GOTO	UDP_Send_L101855 0B26 	;01856 0B26 	;=======================================01857 0B26 	; move checksum to data checksum01858 0B26 	;01859 0B26 	; Entry: Data at txbuff, txin=length of data01860 0B26 	;	locport, remport, nicin.eth.srce, remip01861 0B26 	; Exit: none01862 0B26 	; RAM used: Param71, Param7A, Param7B, Param7C, FSR01863 0B26 	; Calls:(1+2) put_ip(1+1), put_udp, tcp_xmit_2(1+2)01864 0B26 	;01865 0B26 084C 	UDP_Send_E2	MOVF	checkhi,W	; Save data checksum 01866 0B27 00CE 		MOVWF	d_checkhi01867 0B28 084D 		MOVF	checklo,W01868 0B29 00CF 		MOVWF	d_checklo01869 0B2A 	;01870 0B2A 084A 		MOVF	tpxdlen,W	;iplen:=tpxdlen+IPHDR_LEN+UDPHDR_LEN01871 0B2B 00EA 		MOVWF	iplen_b001872 0B2C 084B 		MOVF	tpxdlen+1,W01873 0B2D 00EB 		MOVWF	iplen_b101874 0B2E 301C 		MOVLW	IPHDR_LEN+UDPHDR_LEN01875 0B2F 07EA 		ADDWF	iplen_b0,F01876 0B30 1803 		BTFSC	STATUS,C01877 0B31 0AEB 		INCF	iplen_b1,F01878 0B32 	; IP header 01879 0B32 3011 		MOVLW	PUDP	;d'17'01880 0B33 00D5 		MOVWF	ipcol01881 0B34 	;01882 0B34 235E 		CALL	put_ip	; IP header01883 0B35 2337 		CALL	put_udp	; UDP header 01884 0B36 	;01885 0B36 		if UDPtesting01900 0B36 		endif01901 0B36 	;01902 0B36 2E61 		GOTO	tcp_xmit_201903 0B37 	;01904 0B37 	;==============================================================================================01905 0B37 	; Put a UDP header into the buffer (txbuff+txin)01906 0B37 	;01907 0B37 	; Entry:d_checkhi, d_checklo, locport, remport01908 0B37 	; Exit:01909 0B37 	; RAM used:01910 0B37 	; Calls:(1+1) putch_net_W(0), check_MyIP(1+0), check_remip(1+0), check_byte_W(0), put_ip(1+1)01911 0B37 	;01912 0B37 	put_udp	mBank001912 0B37 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001912 0B38 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101913 0B39 1126 		BCF	checkflag	; checkflag = 0; Ensure we're on an even byte 01914 0B3A 084E 		MOVF	d_checkhi,W	; checkhi = d_checkhi Retrieve data checksum 01915 0B3B 00CC 		MOVWF	checkhi01916 0B3C 084F 		MOVF	d_checklo,W	; checklo = d_checklo; 01917 0B3D 00CD 		MOVWF	checklo01918 0B3E 	;Source Port01919 0B3E 085B 		MOVF	locport_b1,W01920 0B3F 216D 		CALL	putch_net_W01921 0B40 085A 		MOVF	locport_b0,W01922 0B41 216D 		CALL	putch_net_W01923 0B42 	;Dest Port01924 0B42 085D 		MOVF	remport_b1,W01925 0B43 216D 		CALL	putch_net_W01926 0B44 085C 		MOVF	remport_b0,W01927 0B45 216D 		CALL	putch_net_W01928 0B46 	;01929 0B46 	;Message length (2 bytes) including header (8..1480)01930 0B46 3008 		MOVLW	UDPHDR_LEN	; len = tpxdlen + UDPHDR_LEN; 01931 0B47 074A 		ADDWF	tpxdlen,W	; len of data in nic ramHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 140500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm01932 0B48 00FC 		MOVWF	Param7C01933 0B49 084B 		MOVF	tpxdlen+1,W01934 0B4A 1803 		BTFSC	STATUS,C01935 0B4B 3E01 		ADDLW	0x0101936 0B4C 00FD 		MOVWF	Param7D01937 0B4D 216D 		CALL	putch_net_W01938 0B4E 087C 		MOVF	Param7C,W01939 0B4F 216D 		CALL	putch_net_W01940 0B50 	;01941 0B50 	;01942 0B50 	;01943 0B50 	;Checksum the pseudo header Src IP, Dest IP, 0x00 byte, IP protocol, length01944 0B50 20DF 		CALL	check_MyIP01945 0B51 	;01946 0B51 20DD 		CALL	check_remip01947 0B52 	;01948 0B52 0103 		CLRW01949 0B53 20C1 		CALL	check_byte_W01950 0B54 0855 		MOVF	ipcol,W01951 0B55 20C1 		CALL	check_byte_W01952 0B56 	;01953 0B56 087D 		MOVF	Param7D,W	; check_word(len);01954 0B57 20C1 		CALL	check_byte_W01955 0B58 087C 		MOVF	Param7C,W01956 0B59 20C1 		CALL	check_byte_W01957 0B5A 	;01958 0B5A 	; Send checksum 01959 0B5A 	; csum includes Data, pseudo header(src IP, Dest IP,0,ipcol,UDP msg len (UDPHDR_LEN+data len)),01960 0B5A 	;  UDP header(Src port, dest port,msg len(UDPHDR_LEN+data len))01961 0B5A 	;01962 0B5A 094C 		COMF	checkhi,W01963 0B5B 216D 		CALL	putch_net_W01964 0B5C 	;01965 0B5C 094D 		COMF	checklo,W01966 0B5D 296D 		GOTO	putch_net_W01967 0B5E 	;01968 0B5E 	;01969 0B5E 		endif01970 0B5E 	;==============================================================================================01971 0B5E 	; Send out an IP datagram header, given data length01972 0B5E 	; Entry:iplen=total len of datagram01973 0B5E 	; Exit:01974 0B5E 	; RAM used:Param78, Param79, Param7A, FSR (verified 1/23/03)01975 0B5E 	; Calls:(1+1) putch_net_W, check_byte_W, check_MyIP, check_remip, put_MyIP, put_remip01976 0B5E 	;01977 0B5E 	put_ip	mBank001977 0B5E 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP001977 0B5F 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP101978 0B60 01D4 		CLRF	txin	; txin = 0; 01979 0B61 01CD 		CLRF	checklo	; checklo = 0  Clear checksum 01980 0B62 01CC 		CLRF	checkhi	; checkhi = 001981 0B63 1126 		BCF	checkflag	; checkflag = 001982 0B64 	;01983 0B64 3045 		MOVLW	0x45	; Version & hdr len01984 0B65 216D 		CALL	putch_net_W01985 0B66 	;01986 0B66 0103 		CLRW		; Service=001987 0B67 216D 		CALL	putch_net_W01988 0B68 	;01989 0B68 086B 		MOVF	iplen_b1,W	; iplen01990 0B69 216D 		CALL	putch_net_W01991 0B6A 086A 		MOVF	iplen_b0,W01992 0B6B 216D 		CALL	putch_net_W01993 0B6C 	;01994 0B6C 0103 		CLRW		; Ident word=001995 0B6D 216D 		CALL	putch_net_W01996 0B6E 1703 		BSF	STATUS,RP1	;Bank 201997 0B6F 0ACA 		INCF	IPDatagramID,F	; ++id 01998 0B70 084A 		MOVF	IPDatagramID,W01999 0B71 216D 		CALL	putch_net_W02000 0B72 	;02001 0B72 0103 		CLRW		; Flags & fragment offset 02002 0B73 216D 		CALL	putch_net_W02003 0B74 0103 		CLRW02004 0B75 216D 		CALL	putch_net_W02005 0B76 	;02006 0B76 3064 		MOVLW	0x64	; Time To Live=10002007 0B77 216D 		CALL	putch_net_W02008 0B78 0855 		MOVF	ipcol,W	; Protocol=ipcol  02009 0B79 216D 		CALL	putch_net_W02010 0B7A 	;02011 0B7A 	; check_lword(myip) Include addresses in checksum02012 0B7A 20DF 		CALL	check_MyIP02013 0B7B 	;02014 0B7B 20DD 		CALL	check_remip	; check_lword(remip); 02015 0B7C 	;02016 0B7C 094C 		COMF	checkhi,W	; Checksum 02017 0B7D 216D 		CALL	putch_net_W02018 0B7E 094D 		COMF	checklo,W02019 0B7F 216D 		CALL	putch_net_W02020 0B80 	;02021 0B80 	; myip  Source & destination IP addrs 02022 0B80 2183 		CALL	put_MyIP02023 0B81 	; 02024 0B81 	; remip02025 0B81 2981 		GOTO	put_remip02026 0B82 	;02027 0B82 	;=========================================================================================02028 0B82 	; Put the given byte into the NIC's RAM02029 0B82 	; Entry: Param78Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 141500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm02030 0B82 	; Exit: Param78 is unchanged02031 0B82 	; RAM used: Param70, Param78, Param71 (verified 10/2/02)02032 0B82 	; Calls:(1+0) outnic_RBCR0_1, outnic_RBCR1_0, outnic_CMDR_W, outnicD78W02033 0B82 	;02034 0B82 2753 	putnic_byte	CALL	outnic_RBCR0_1	; outnic(RBCR0, 1) Byte count02035 0B83 274F 		CALL	outnic_RBCR1_0	; outnic(RBCR1, 0); 02036 0B84 3012 		MOVLW	0x12	; outnic(CMDR, 0x12);02037 0B85 2758 		CALL	outnic_CMDR_W	; Start, DMA remote write02038 0B86 3010 		MOVLW	DATAPORT	; outnic(DATAPORT, b); 02039 0B87 2F5B 		GOTO	outnicD78W02040 0B88 	;02041 0B88 	;===================================================================================02042 0B88 	; Put the given byte into the NIC's RAM and add it to checksum02043 0B88 	; Entry: W02044 0B88 	; Exit: Value from W is in Param78, tpxdlen++02045 0B88 	; RAM used: Param78, Param71 (verified 10/2/02)02046 0B88 	; Calls:(1+0) check_byte_W, putnic_byte02047 0B88 	;02048 0B88 00F8 	putnic_checkbyte	MOVWF	Param78	; check_byte(b); 02049 0B89 20C1 		CALL	check_byte_W02050 0B8A 	; inline copy of putnic_byte to save a stack word02051 0B8A 	;	CALL	putnic_byte02052 0B8A 	;02053 0B8A 2753 		CALL	outnic_RBCR0_1	; outnic(RBCR0, 1) Byte count02054 0B8B 274F 		CALL	outnic_RBCR1_0	; outnic(RBCR1, 0); 02055 0B8C 3012 		MOVLW	0x12	; outnic(CMDR, 0x12);02056 0B8D 2758 		CALL	outnic_CMDR_W	; Start, DMA remote write02057 0B8E 3010 		MOVLW	DATAPORT	; outnic(DATAPORT, b); 02058 0B8F 275B 		CALL	outnicD78W02059 0B90 	;02060 0B90 0ACA 		INCF	tpxdlen,F	; tpxdlen++02061 0B91 1903 		BTFSC	STATUS,Z02062 0B92 0ACB 		INCF	tpxdlen+1,F02063 0B93 3400 		RETLW	0002064 0B94 	;02065 0B94 	;================================================================================================02066 0B94 	; Converts a byte value to a string02067 0B94 	; output to putnic_checkbyte is '000'..'255'02068 0B94 	; Entry: W = byte  '000'..'255'02069 0B94 	; Exit: none02070 0B94 	; RAM used: Param71:0, Param77, Param78, Param7902071 0B94 	; Calls:(1+3) Disp_decbyteW, putnic_checkbyte02072 0B94 	;02073 0B94 	Dec_Put_n_Check	mBank002073 0B94 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP002073 0B95 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP102074 0B96 1627 		BSF	NumsToNic02075 0B97 		mCall1To0	Disp_decbyteW02075 0B97 118A      M		BCF	PCLATH,3		BCF	PCLATH,302075 0B98 20BC      M		CALL	Disp_decbyteW		CALL	Destination02075 0B99 158A      M		BSF	PCLATH,3		BSF	PCLATH,302075 0B9A 120A      M		BCF	PCLATH,4		BCF	PCLATH,402076 0B9B 1227 		BCF	NumsToNic02077 0B9C 0008 		RETURN02078 0B9D 	;02079 0B9D 	;===============================================================================================02080 0B9D 	; 16 bit version of Dec_Put_n_Check02081 0B9D 	; output to putnic_checkbyte is '00000'..'65535'02082 0B9D 	; Enrty: Param77:Param76  16 bit value02083 0B9D 	; Exit: none02084 0B9D 	; RAM used: Param76, Param77, Param78, Param79, Param7A02085 0B9D 	; Calls: (1+3) Disp_decword, putnic_checkbyte02086 0B9D 	;02087 0B9D 	DecWPut_n_Check	mBank002087 0B9D 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP002087 0B9E 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP102088 0B9F 1627 		BSF	NumsToNic02089 0BA0 		mCall1To0	Disp_decword02089 0BA0 118A      M		BCF	PCLATH,3		BCF	PCLATH,302089 0BA1 20F8      M		CALL	Disp_decword		CALL	Destination02089 0BA2 158A      M		BSF	PCLATH,3		BSF	PCLATH,302089 0BA3 120A      M		BCF	PCLATH,4		BCF	PCLATH,402090 0BA4 1227 		BCF	NumsToNic02091 0BA5 0008 		RETURN02092 0BA6 	;02093 0BA6 		if Uses3BNums02094 0BA6 	;===============================================================================================02095 0BA6 	; 24 bit version of Disp_decbyteW02096 0BA6 	; output to DisplaysW is '00000000'..'16777215'02097 0BA6 	; Enrty: Param77:Param76:Param74  24 bit value little endian02098 0BA6 	; Exit: none02099 0BA6 	; RAM used: Param74,Param76, Param77, Param78, Param79, Param7A, Param7B02100 0BA6 	; Calls: (1+3) Disp_dec3B, putnic_checkbyte02101 0BA6 	;02102 0BA6 	Dec3BPut_n_Check	mBank002102 0BA6 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP002102 0BA7 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP102103 0BA8 1627 		BSF	NumsToNic02104 0BA9 		mCall1To0	Disp_dec3B02104 0BA9 118A      M		BCF	PCLATH,3		BCF	PCLATH,302104 0BAA 2178      M		CALL	Disp_dec3B		CALL	Destination02104 0BAB 158A      M		BSF	PCLATH,3		BSF	PCLATH,302104 0BAC 120A      M		BCF	PCLATH,4		BCF	PCLATH,402105 0BAD 1227 		BCF	NumsToNic02106 0BAE 0008 		RETURN02107 0BAF 	;02108 0BAF 		endif02109 0BAF 	;===============================================================================================02110 0BAF 	; Copy a block from NIC Rx to Tx buffers (not crossing page boundaries)02111 0BAF 	; Entry: Param79=dest, Param7A=srce, Param7B=lenHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 142500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm02112 0BAF 	; Exit: none02113 0BAF 	; RAM used: Param79, Param7A, Param7B02114 0BAF 	; Calls: (1+1) outnic_ISR40, outnic_RSPR0_W, outnic_RSPR1_W, getnic_byte,02115 0BAF 	;	outnic_RSPR0_W, outnic_RSPR1_W, putnic_byte02116 0BAF 	;02117 0BAF 2768 	copy_rx_tx	CALL	outnic_ISR40	; outnic(ISR, 0x40) Clear remote DMA interrupt flag02118 0BB0 300E 		MOVLW	ETHERHEADER_LEN	; dest += sizeof(ETHERHEADER);02119 0BB1 07F9 		ADDWF	Param79,F02120 0BB2 3012 		MOVLW	NICETHERHEADER_LEN	; srce += sizeof(NICETHERHEADER);02121 0BB3 07FA 		ADDWF	Param7A,F02122 0BB4 	; while (len--) 02123 0BB4 087A 	copy_rx_tx_L1	MOVF	Param7A,W	; outnic(RSAR0, srce);02124 0BB5 2740 		CALL	outnic_RSPR0_W02125 0BB6 0835 		MOVF	curr_rx_page,W	; outnic(RSAR1, curr_rx_page); 02126 0BB7 2743 		CALL	outnic_RSPR1_W02127 0BB8 20A0 		CALL	getnic_byte	; b = getnic_byte();02128 0BB9 	;02129 0BB9 0879 		MOVF	Param79,W	; outnic(RSAR0, dest); 02130 0BBA 2740 		CALL	outnic_RSPR0_W02131 0BBB 3040 		MOVLW	TXSTART	; outnic(RSAR1, TXSTART); 02132 0BBC 2743 		CALL	outnic_RSPR1_W02133 0BBD 2382 		CALL	putnic_byte	;Param7802134 0BBE 	;02135 0BBE 0AFA 		INCF	Param7A,F	; srce++;02136 0BBF 0AF9 		INCF	Param79,F	; dest++;02137 0BC0 0BFB 		DECFSZ	Param7B,F	; len--02138 0BC1 2BB4 		GOTO	copy_rx_tx_L102139 0BC2 0008 		RETURN		; we're done02140 0BC3 	;02141 0BC3 	;========================================================================================	02142 0BC3 	; Checksum the given number of bytes in the Rx NIC buffer02143 0BC3 	;02144 0BC3 	; Entry: Param76=len.l, Param77=len.h02145 0BC3 	; Exit: checklo, checkhi are updated02146 0BC3 	; RAM used: Param71, Param76, Param77, Param78 (verified 1/30/03)02147 0BC3 	; Calls:(1+0) outnic_ISR40, outnic_RBCR0_W, outnic_RBCR1_W, outnic_CMDR_0A, innic, check_byte_W02148 0BC3 	; 		02149 0BC3 2768 	check_rxbytes	CALL	outnic_ISR40	; outnic(ISR, 0x40) Clear remote DMA interrupt flag02150 0BC4 0876 		MOVF	Param76,W02151 0BC5 2754 		CALL	outnic_RBCR0_W	; outnic(RBCR0, len); Byte count02152 0BC6 	;02153 0BC6 0877 		MOVF	Param77,W	; outnic(RBCR1, len>>8); 02154 0BC7 2750 		CALL	outnic_RBCR1_W02155 0BC8 2757 		CALL	outnic_CMDR_0A	; outnic(CMDR, 0x0a) Start, DMA remote read02156 0BC9 	; repeat Get bytes 02157 0BC9 271E 	check_rxbytes_L1	CALL	innic_Data	; W = innic(DATAPORT)02158 0BCA 20C1 		CALL	check_byte_W	; check_byte(W);02159 0BCB 	;02160 0BCB 0BF6 		DECFSZ	Param76,F	;len:=len-102161 0BCC 2BC9 		GOTO	check_rxbytes_L102162 0BCD 0877 		MOVF	Param77,W02163 0BCE 1903 		BTFSC	STATUS,Z02164 0BCF 0008 		RETURN		;until len=002165 0BD0 03F7 		DECF	Param77,F02166 0BD1 2BC9 		GOTO	check_rxbytes_L102167 0BD2 	;02168 0BD2 	;=======================================================================================02169 0BD2 	; Inrement rseq02170 0BD2 	;02171 0BD2 0FE1 	IncRSeq	INCFSZ	rseq_b0,F	; rseq=rseq+1   Adjust Tx ack for SYN 02172 0BD3 2BD9 		GOTO	IncRSeq_end02173 0BD4 0FE0 		INCFSZ	rseq_b1,F02174 0BD5 2BD9 		GOTO	IncRSeq_end02175 0BD6 0FDF 		INCFSZ	rseq_b2,F02176 0BD7 2BD9 		GOTO	IncRSeq_end02177 0BD8 0ADE 		INCF	rseq_b3,F02178 0BD9 0008 	IncRSeq_end	RETURN02179 0BDA 	; 02180 0BDA 	;=======================================================================================02181 0BDA 	; Get an IP datagram02182 0BDA 	;02183 0BDA 	; Entry: data in NIC buffer, Bank002184 0BDA 	; Exit:02185 0BDA 	; RAM used:02186 0BDA 	; Calls:(1+4) match_byteW, getch_net, skip_word, skip_byte,02187 0BDA 	;	tcp_recv, tcp_handler02188 0BDA 	; 02189 0BDA 1126 	ip_recv	BCF	checkflag	; checkflag = 0 Clear checksum 02190 0BDB 01CD 		CLRF	checklo	; checklo = 0 02191 0BDC 01CC 		CLRF	checkhi	; checkhi = 002192 0BDD 	;02193 0BDD 3045 		MOVLW	0x45	; Version02194 0BDE 214A 		CALL	match_byteW02195 0BDF 	;02196 0BDF 2168 		CALL	skip_byte	;Servive Type02197 0BE0 	;02198 0BE0 20A4 		CALL	getch_net	;length of datagram02199 0BE1 00EB 		MOVWF	iplen_b102200 0BE2 20A4 		CALL	getch_net02201 0BE3 00EA 		MOVWF	iplen_b002202 0BE4 	;02203 0BE4 2165 		CALL	skip_lword	;datagram ID, Frags, Fragment offset02204 0BE5 	;02205 0BE5 2168 		CALL	skip_byte	;Time to live02206 0BE6 	;02207 0BE6 20A4 		CALL	getch_net	;Protocol02208 0BE7 00D5 		MOVWF	ipcol02209 0BE8 	;02210 0BE8 2167 		CALL	skip_word	;checksum 02211 0BE9 	;Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 143500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm02212 0BE9 20EC 		CALL	get_remip	;source IP address02213 0BEA 18A6 		BTFSC	atend02214 0BEB 0008 		RETURN		;Data Too Short!02215 0BEC 	;02216 0BEC 		if AllowReceiveBroadcast02233 0BEC 		else02234 0BEC 	;destination IP address is me02235 0BEC 2154 		CALL	match_MyIP02236 0BED 1C78 		BTFSS	Param78,002237 0BEE 0008 		RETURN02238 0BEF 		endif02239 0BEF 	;02240 0BEF 	; if checkhi=0xff and checklo=0xff then Checksum is OK 02241 0BEF 0A4C 		INCF	checkhi,W02242 0BF0 		SKPZ02242 0BF0 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z02243 0BF1 0008 		RETURN02244 0BF2 	;02245 0BF2 0A4D 		INCF	checklo,W02246 0BF3 		SKPZ02246 0BF3 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z02247 0BF4 0008 		RETURN02248 0BF5 	;02249 0BF5 	;OK, It seems to be a valid IP proticol, but which one?02250 0BF5 		if UsesUDP02251 0BF5 	; if (ipcol == PUDP)02252 0BF5 3011 		MOVLW	PUDP	; User Datagram Protocol? 02253 0BF6 0255 		SUBWF	ipcol,W02254 0BF7 		SKPNZ02254 0BF7 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z02255 0BF8 2E6A 		GOTO	UDP_recv	; goto UDP handler02256 0BF9 		endif02257 0BF9 	;02258 0BF9 	; if (ipcol == PICMP)02259 0BF9 3001 		MOVLW	PICMP	; ICMP? 02260 0BFA 0255 		SUBWF	ipcol,W02261 0BFB 		SKPNZ02261 0BFB 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z02262 0BFC 2DAF 		GOTO	icmp_recv	; goto ping handler 	02263 0BFD 	;02264 0BFD 3006 		MOVLW	PTCP	; else if (ipcol == PTCP)   TCP segment? 02265 0BFE 0255 		SUBWF	ipcol,W02266 0BFF 		SKPZ02266 0BFF 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z02267 0C00 0008 		RETURN		;I don't know this pcol, dump it.02268 0C01 	;02269 0C01 	; fall through to tcp_recv02270 0C01 	;02271 0C01 	;02272 0C01 	;02273 0C01 	;======================================================================================================02274 0C01 	; Test a TCP segment to see if it is valid02275 0C01 	; Entry: NIC buffer pointer points to first byte of TCP Header02276 0C01 	; Exit: NIC buffer pointer points to first byte of TCP Data02277 0C01 	;       if this is a Valid TCP segment then we fall through to tcp_handler02278 0C01 	; RAM used: Param76, Param77, Param78, Param79, Param7A, Param7B02279 0C01 	; Calls:(1+2++) getch_net, skip_6bytes, check_byte_W, getnic_addr, setnic_addr02280 0C01 	;02281 0C01 	;tcp_recv02282 0C01 01CD 		CLRF	checklo	; checkhi = checklo = 0; 02283 0C02 01CC 		CLRF	checkhi02284 0C03 	;02285 0C03 20A4 		CALL	getch_net	;Source Port02286 0C04 00DD 		MOVWF	remport_b102287 0C05 20A4 		CALL	getch_net02288 0C06 00DC 		MOVWF	remport_b002289 0C07 	;02290 0C07 20A4 		CALL	getch_net	;Destination Port02291 0C08 00DB 		MOVWF	locport_b102292 0C09 20A4 		CALL	getch_net02293 0C0A 00DA 		MOVWF	locport_b002294 0C0B 	;02295 0C0B 20EE 		CALL	get_rseq	;Sequence Number02296 0C0C 	;02297 0C0C 20F6 		CALL	get_rack	;Acknowledge number02298 0C0D 18A6 		BTFSC	atend02299 0C0E 0008 		RETURN02300 0C0F 	;02301 0C0F 20A4 		CALL	getch_net02302 0C10 00F7 		MOVWF	Param77	;header len (upper 4 bits only)02303 0C11 0CF7 		RRF	Param77,F	; make hlen into header length02304 0C12 0CF7 		RRF	Param77,F	; in bytes not long words02305 0C13 303C 		MOVLW	0x3C	; don't overrun the buffer02306 0C14 05F7 		ANDWF	Param77,F	; 0x00,0x04..0x3C02307 0C15 18A6 		BTFSC	atend02308 0C16 0008 		RETURN02309 0C17 	;02310 0C17 20A4 		CALL	getch_net	;flags02311 0C18 00E6 		MOVWF	rflags	;lower 6 bits02312 0C19 18A6 		BTFSC	atend02313 0C1A 0008 		RETURN02314 0C1B 	;02315 0C1B 	; skip:  Window, csum, urgent ptr 02316 0C1B 2163 		CALL	skip_6bytes02317 0C1C 18A6 		BTFSC	atend02318 0C1D 0008 		RETURN02319 0C1E 	;02320 0C1E 	; Check the pseudo header AND the data then restore the NIC buffer ptr to the02321 0C1E 	;  beginning of the Data field.02322 0C1E 1070 		BCF	Param70,0	;use CheckPseudo inlineHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 144500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm02323 0C1F 	;===============================================================================02324 0C1F 	; Check the pseudo header.02325 0C1F 	;02326 0C1F 	; Entry: Param70,0=102327 0C1F 	; Exit: Param7B:Param7A address to the params used by setnic_addr02328 0C1F 	; RAM used:02329 0C1F 	; Calls:(1+1) check_MyIP(1+0), check_remip, check_byte_W, getnic_addr02330 0C1F 	;02331 0C1F 	; iplen = iplen-IPHDR_LEN; Get TCP segment length 02332 0C1F 3014 	CheckPseudo	MOVLW	IPHDR_LEN02333 0C20 02EA 		SUBWF	iplen_b0,F02334 0C21 1C03 		BTFSS	STATUS,C02335 0C22 03EB 		DECF	iplen_b1,F02336 0C23 	;02337 0C23 	;Include the pseudo header in the csum (8 bytes)02338 0C23 	; Source IP Address, Dest IP Address, 0x00 byte, ipcol byte, message length word02339 0C23 	;02340 0C23 	; check_lword(myip.l)02341 0C23 20DF 		CALL	check_MyIP02342 0C24 	; check_lword(remip.l)02343 0C24 20DD 		CALL	check_remip02344 0C25 	;02345 0C25 0103 		CLRW		; check_byte(0)02346 0C26 20C1 		CALL	check_byte_W02347 0C27 	;02348 0C27 0855 		MOVF	ipcol,W	; check_byte(ipcol)02349 0C28 20C1 		CALL	check_byte_W02350 0C29 	;02351 0C29 086B 		MOVF	iplen_b1,W	; check_word(iplen)02352 0C2A 20C1 		CALL	check_byte_W02353 0C2B 086A 		MOVF	iplen_b0,W02354 0C2C 20C1 		CALL	check_byte_W02355 0C2D 	;end of pseudo header02356 0C2D 	;02357 0C2D 	; rxout = hlen + IPHDR_LEN; Skip over options if any02358 0C2D 3014 		MOVLW	IPHDR_LEN02359 0C2E 0777 		ADDWF	Param77,W02360 0C2F 00D2 		MOVWF	rxout02361 0C30 01D3 		CLRF	rxout+102362 0C31 	; rpdlen = iplen - rxout + IPHDR_LEN;	02363 0C31 086A 		MOVF	iplen_b0,W02364 0C32 00E8 		MOVWF	rpdlen_b002365 0C33 086B 		MOVF	iplen_b1,W02366 0C34 00E9 		MOVWF	rpdlen_b102367 0C35 0852 		MOVF	rxout,W02368 0C36 02E8 		SUBWF	rpdlen_b0,F02369 0C37 1C03 		BTFSS	STATUS,C02370 0C38 03E9 		DECF	rpdlen_b1,F02371 0C39 3014 		MOVLW	IPHDR_LEN02372 0C3A 07E8 		ADDWF	rpdlen_b0,F02373 0C3B 1803 		BTFSC	STATUS,C02374 0C3C 0AE9 		INCF	rpdlen_b1,F02375 0C3D 	; addr = getnic_addr()  Save the current location (start of data)02376 0C3D 2019 		CALL	getnic_addr02377 0C3E 0879 		MOVF	Param79,W	;move address to the params02378 0C3F 00FB 		MOVWF	Param7B	;used by setnic_addr.02379 0C40 0878 		MOVF	Param78,W02380 0C41 00FA 		MOVWF	Param7A02381 0C42 	;02382 0C42 1870 		BTFSC	Param70,002383 0C43 0008 		RETURN		;CheckPseudo was called so return02384 0C44 	;02385 0C44 	; check the rest of the bytes in the datagram, but leave them in the rx buffer02386 0C44 	; check_rxbytes(iplen-TCPHDR_LEN);  77:76=byte count02387 0C44 086A 		MOVF	iplen_b0,W	;iplen02388 0C45 00F6 		MOVWF	Param7602389 0C46 3014 		MOVLW	TCPHDR_LEN02390 0C47 02F6 		SUBWF	Param76,F02391 0C48 086B 		MOVF	iplen_b1,W02392 0C49 00F7 		MOVWF	Param7702393 0C4A 1C03 		BTFSS	STATUS,C02394 0C4B 03F7 		DECF	Param77,F02395 0C4C 23C3 		CALL	check_rxbytes02396 0C4D 	;02397 0C4D 	; restore ptr so next byte we get is the first data byte02398 0C4D 	; setnic_addr(addr) 02399 0C4D 2014 		CALL	setnic_addr02400 0C4E 	;02401 0C4E 	; if (checkhi=0xff) and (checklo=0xff) then this data is a valid TCP segment02402 0C4E 0A4C 		INCF	checkhi,W02403 0C4F 		SKPZ02403 0C4F 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z02404 0C50 0008 		RETURN		;bad csum02405 0C51 0A4D 		INCF	checklo,W02406 0C52 		SKPZ02406 0C52 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z02407 0C53 0008 		RETURN		;bad scum02408 0C54 	;02409 0C54 	;this is a valid TCP segment so go handle it02410 0C54 	;02411 0C54 	;02412 0C54 	;02413 0C54 	;====================================================================================================02414 0C54 	; Handle an incoming TCP segment02415 0C54 	;  RST bit is set: Do nothing02416 0C54 	;  SYN bit is set: rseq++02417 0C54 	;     if it is a valid port then send SYN,ACK  our SYN number is concount<<1602418 0C54 	;       else send ACK,RST02419 0C54 	;  FIN bit is set: send ACK  rseq=rseq+1+rpdlen02420 0C54 	;  ACK bit not set: send ACKHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 145500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm02421 0C54 	;  ACK bit is set: send data FIN and ACK02422 0C54 	; Entry: A valid TCP segment is in the NIC's ram02423 0C54 	; Exit: 02424 0C54 	; RAM used:02425 0C54 	; Calls:(1+2+) Add_rseq_rpdlen, IncRSeq, tcp_xmit02426 0C54 	;  May branch to http_recv, daytime_handler, DataPort_handler or TFTPPort_handler.02427 0C54 	;02428 0C54 	;tcp_handler02429 0C54 01CB 		CLRF	tpxdlen+1	; tpxdlen = 0;  Assume no Tx data02430 0C55 01CA 		CLRF	tpxdlen02431 0C56 01CF 		CLRF	d_checklo	; Set data csum to zero.02432 0C57 01CE 		CLRF	d_checkhi	;  If ACK only no data is sent.02433 0C58 1126 		BCF	checkflag	; checkflag = 002434 0C59 	;02435 0C59 	;plan on sending an acknowledgement02436 0C59 3010 		MOVLW	TACK	; tflags = TACK  ..and just sending an ack 02437 0C5A 00E7 		MOVWF	tflags	;02438 0C5B 	;02439 0C5B 	; if (rflags & TRST) RESET received? 02440 0C5B 0866 		MOVF	rflags,W02441 0C5C 3904 		ANDLW	TRST02442 0C5D 1D03 		BTFSS	STATUS,Z02443 0C5E 0008 		RETURN		;Resets are ignored02444 0C5F 	;02445 0C5F 	; if (rflags & TSYN) SYN received? 02446 0C5F 0866 		MOVF	rflags,W02447 0C60 3902 		ANDLW	TSYN02448 0C61 1903 		BTFSC	STATUS,Z02449 0C62 2C8B 		GOTO	tcp_handler_TFIN02450 0C63 	;02451 0C63 	;TSYN recieved: Synchronize sequence numbers02452 0C63 23D2 		CALL	IncRSeq02453 0C64 	;02454 0C64 	;*** check to see if this segment is for one of our ports ***02455 0C64 	;02456 0C64 	; if (locport=DAYPORT) goto tcp_handler_GoodPort02457 0C64 08DB 		MOVF	locport_b1,F02458 0C65 1D03 		BTFSS	STATUS,Z02459 0C66 2C89 		GOTO	tcp_handler_BadPort02460 0C67 300D 		MOVLW	low DAYPORT02461 0C68 025A 		SUBWF	locport_b0,W02462 0C69 1903 		BTFSC	STATUS,Z02463 0C6A 2C7C 		GOTO	tcp_handler_GoodPort02464 0C6B 	;02465 0C6B 	; if (locport=HTTPORT) goto tcp_handler_GoodPort02466 0C6B 3050 		MOVLW	low HTTPORT02467 0C6C 025A 		SUBWF	locport_b0,W02468 0C6D 1903 		BTFSC	STATUS,Z02469 0C6E 2C7C 		GOTO	tcp_handler_GoodPort02470 0C6F 	;02471 0C6F 	;if (locport=IPDATAPORT) goto tcp_handler_GoodPort02472 0C6F 3057 		MOVLW	low IPDATAPORT02473 0C70 025A 		SUBWF	locport_b0,W02474 0C71 1903 		BTFSC	STATUS,Z02475 0C72 2C7C 		GOTO	tcp_handler_GoodPort02476 0C73 	;02477 0C73 	;if (locport=TTFTPtoEEROMPort) goto tcp_handler_GoodPort	02478 0C73 		if TTFTPtoEEROM02479 0C73 3045 		MOVLW	low TTFTPtoEEROMPort02480 0C74 025A 		SUBWF	locport_b0,W02481 0C75 1903 		BTFSC	STATUS,Z02482 0C76 2C7C 		GOTO	tcp_handler_GoodPort02483 0C77 		endif02484 0C77 	;02485 0C77 	;if (locport=TTFTPtoEEROMPort) goto tcp_handler_GoodPort	02486 0C77 		if TTFTPtoSRAM02487 0C77 303B 		MOVLW	low TTFTPtoSRAMPort02488 0C78 025A 		SUBWF	locport_b0,W02489 0C79 1903 		BTFSC	STATUS,Z02490 0C7A 2C7C 		GOTO	tcp_handler_GoodPort02491 0C7B 		endif02492 0C7B 	;02493 0C7B 		if UsesRS232BufIO02498 0C7B 		endif02499 0C7B 	;02500 0C7B 2C89 		GOTO	tcp_handler_BadPort	; Unrecognised port02501 0C7C 	;02502 0C7C 	; Recognised port02503 0C7C 30FF 	tcp_handler_GoodPort	MOVLW	0xFF02504 0C7D 00E4 		MOVWF	rack_b1	; rack.w[0] = 0xffff; 02505 0C7E 00E5 		MOVWF	rack_b002506 0C7F 0837 		MOVF	concount_b1,W	; rack.w[1] = concount++; 02507 0C80 00E2 		MOVWF	rack_b302508 0C81 0836 		MOVF	concount_b0,W02509 0C82 00E3 		MOVWF	rack_b202510 0C83 0AB6 		INCF	concount_b0,F02511 0C84 1903 		BTFSC	STATUS,Z02512 0C85 0AB7 		INCF	concount_b1,F02513 0C86 		INCF	concount_b1,F02514 0C86 3012 		MOVLW	TSYN+TACK	; tflags=TSYN+TACK  Send SYN ACK 02515 0C87 00E7 	tcp_handler_Ret	MOVWF	tflags02516 0C88 2E4D 		GOTO	tcp_xmit	; ..do it 02517 0C89 	; 02518 0C89 	; Unrecognised port02519 0C89 3014 	tcp_handler_BadPort	MOVLW	TRST+TACK	; tflags=TRST+TACK  Send reset 02520 0C8A 2C87 		GOTO	tcp_handler_Ret02521 0C8B 	; 02522 0C8B 	; if (rflags & TFIN)  Received FIN? 02523 0C8B 0866 	tcp_handler_TFIN	MOVF	rflags,W02524 0C8C 3901 		ANDLW	TFINHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 146500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm02525 0C8D 1903 		BTFSC	STATUS,Z02526 0C8E 2CA3 		GOTO	tcp_handler_TACK02527 0C8F 	;Received FIN rseq=rseq+1    Ack all incoming data + FIN 02528 0C8F 23D2 		CALL	IncRSeq02529 0C90 	;02530 0C90 2492 		CALL	Add_rseq_rpdlen02531 0C91 2E4D 		GOTO	tcp_xmit02532 0C92 	;02533 0C92 	;02534 0C92 0869 	Add_rseq_rpdlen	MOVF	rpdlen_b1,W	;rseq=rseq+rpdlen02535 0C93 07E0 		ADDWF	rseq_b1,F	; add the high byte02536 0C94 3001 		MOVLW	0x0102537 0C95 1803 		BTFSC	STATUS,C02538 0C96 07DF 		ADDWF	rseq_b2,F	; carry was set02539 0C97 1803 		BTFSC	STATUS,C02540 0C98 07DE 		ADDWF	rseq_b3,F	; carry was set again02541 0C99 	;02542 0C99 0868 		MOVF	rpdlen_b0,W02543 0C9A 07E1 		ADDWF	rseq_b0,F02544 0C9B 3001 		MOVLW	0x0102545 0C9C 1803 		BTFSC	STATUS,C02546 0C9D 07E0 		ADDWF	rseq_b1,F02547 0C9E 1803 		BTFSC	STATUS,C02548 0C9F 07DF 		ADDWF	rseq_b2,F02549 0CA0 1803 		BTFSC	STATUS,C02550 0CA1 07DE 		ADDWF	rseq_b3,F02551 0CA2 0008 		RETURN02552 0CA3 	;02553 0CA3 	; if (rflags & TACK)  ACK received? 02554 0CA3 0866 	tcp_handler_TACK	MOVF	rflags,W02555 0CA4 3910 		ANDLW	TACK02556 0CA5 1903 		BTFSC	STATUS,Z02557 0CA6 2E4D 		GOTO	tcp_xmit	;ack bit was not set02558 0CA7 	; 02559 0CA7 	; if (rpdlen)  Adjust Tx ack for Rx data 02560 0CA7 0868 		MOVF	rpdlen_b0,W02561 0CA8 0469 		IORWF	rpdlen_b1,W02562 0CA9 		SKPZ02562 0CA9 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z02563 0CAA 	;02564 0CAA 	;Data came in so it must be acknowledged02565 0CAA 2492 		CALL	Add_rseq_rpdlen	; rseq=rseq+rpdlen02566 0CAB 	;02567 0CAB 	; if (locport=HTTPORT and rpdlen<>0) then goto the http handler02568 0CAB 01F8 		CLRF	Param78	;002569 0CAC 08DB 		MOVF	locport_b1,F02570 0CAD 1D03 		BTFSS	STATUS,Z02571 0CAE 0008 		RETURN		;all of our ports02572 0CAF 3050 		MOVLW	HTTPORT	; start with 0x0002573 0CB0 025A 		SUBWF	locport_b0,W02574 0CB1 1903 		BTFSC	STATUS,Z02575 0CB2 2CC8 		GOTO	tcp_PortDispatch02576 0CB3 	;02577 0CB3 	; if (locport=DAYPORT and rack.w[0]=0) then goto then daytime handler02578 0CB3 3002 		MOVLW	0x0202579 0CB4 00F8 		MOVWF	Param78	;202580 0CB5 300D 		MOVLW	DAYPORT02581 0CB6 025A 		SUBWF	locport_b0,W02582 0CB7 1903 		BTFSC	STATUS,Z02583 0CB8 2CC8 		GOTO	tcp_PortDispatch02584 0CB9 	;02585 0CB9 		if UsesTCPIPDataPort02592 0CB9 		endif02593 0CB9 	;02594 0CB9 3005 		MOVLW	0x0502595 0CBA 00F8 		MOVWF	Param78	;502596 0CBB 		if TTFTPtoEEROM02597 0CBB 3045 		MOVLW	low TTFTPtoEEROMPort02598 0CBC 025A 		SUBWF	locport_b0,W02599 0CBD 1903 		BTFSC	STATUS,Z02600 0CBE 2CC8 		GOTO	tcp_PortDispatch02601 0CBF 		endif02602 0CBF 	;	02603 0CBF 0AF8 		INCF	Param78,F	;602604 0CC0 		if TTFTPtoSRAM02605 0CC0 303B 		MOVLW	low TTFTPtoSRAMPort02606 0CC1 025A 		SUBWF	locport_b0,W02607 0CC2 1903 		BTFSC	STATUS,Z02608 0CC3 2CC8 		GOTO	tcp_PortDispatch02609 0CC4 		endif02610 0CC4 	;02611 0CC4 0AF8 		INCF	Param78,F	;702612 0CC5 		if UsesRS232BufIO02617 0CC5 		endif02618 0CC5 0AF8 		INCF	Param78,F	;8 not used02619 0CC6 0AF8 		INCF	Param78,F	;902620 0CC7 	;Not a valid port02621 0CC7 0008 		RETURN		;no more ports02622 0CC8 	;02623 0CC8 	;-------------------------------------02624 0CC8 	;02625 0CC8 0868 	tcp_PortDispatch	MOVF	rpdlen_b0,W	;there must be some data02626 0CC9 0469 		IORWF	rpdlen_b1,W02627 0CCA 1903 		BTFSC	STATUS,Z	;Data length = 0?02628 0CCB 0008 		RETURN		; Yes02629 0CCC 0878 		MOVF	Param78,W02630 0CCD 		mPCLGoto02630 0CCD      M		if	$ & 0x0100		if $ & 0x010002630 0CCD      M		else			else02630 0CCD 100A      M		BCF	PCLATH,0		BCF	PCLATH,0Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 147500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm02630 0CCE      M		endif			endif02630 0CCE      M		if	$ & 0x0200		if $ & 0x020002630 0CCE      M		else			else02630 0CCE 108A      M		BCF	PCLATH,1		BCF	PCLATH,102630 0CCF      M		endif			endif02630 0CCF      M		if	$ & 0x0400		if $ & 0x040002630 0CCF 150A      M		BSF	PCLATH,2		BSF	PCLATH,202630 0CD0      M		else			else02630 0CD0      M		endif			endif02630 0CD0      M				;02630 0CD0 0782      M		ADDWF	PCL,F		ADDWF	PCL,F02631 0CD1 160A 		BSF	PCLATH,4	;002632 0CD2 29A6 		GOTO	http_recv	;  not used02633 0CD3 2CDA 		GOTO	daytime_handler	;202634 0CD4 	;02635 0CD4 		if UsesTCPIPDataPort02638 0CD4 		else02639 0CD4 0000 		NOP02640 0CD5 0008 		RETURN		;changed from nop 4/13/0402641 0CD6 		endif02642 0CD6 	;02643 0CD6 		if TTFTPtoEEROM02644 0CD6 2D6F 		GOTO	TFTPPortE_handler	;502645 0CD7 		else02647 0CD7 		endif02648 0CD7 	;02649 0CD7 		if TTFTPtoSRAM02650 0CD7 2D10 		GOTO	TFTPPortS_handler	;602651 0CD8 		else02653 0CD8 		endif02654 0CD8 	;02655 0CD8 		if UsesRS232BufIO02658 0CD8 		else02659 0CD8 0000 		NOP02660 0CD9 0008 		RETURN02661 0CDA 		endif02662 0CDA 	;02663 0CDA 	;========================================================================================02664 0CDA 	; Respond to an Daytime request   Prepare daytime data 02665 0CDA 	; The DayPort port 13 is used to set and read the clock.02666 0CDA 	;02667 0CDA 	; Entry:02668 0CDA 	; Exit:02669 0CDA 	; RAM used: Param71, Param78, Param79, Param7A, Param7B, Param7D, Param7F, FSR (verified 1/30/03)02670 0CDA 	; Calls:(1+3) getch_net, setnic_addr, putnic_checkbyte(1+0), PutString(1+2)02671 0CDA 	; 02672 0CDA 01F9 	daytime_handler	CLRF	Param79	;i=0;02673 0CDB 	;buffer the command in romdir.f.name02674 0CDB 20A4 	daytime_handler_L2	CALL	getch_net	;send one char to disp02675 0CDC 18A6 		BTFSC	atend02676 0CDD 2CE9 		GOTO	daytime_handler_2	;atend02677 0CDE 3017 		MOVLW	low romdir.f.name02678 0CDF 0779 		ADDWF	Param79,W	;i02679 0CE0 0084 		MOVWF	FSR02680 0CE1 1783 		BSF	STATUS,IRP02681 0CE2 0878 		MOVF	Param78,W02682 0CE3 0080 		MOVWF	INDF	;romdir.f.name+Param7902683 0CE4 0AF9 		INCF	Param79,F02684 0CE5 300C 		MOVLW	ROM_FNAMELEN02685 0CE6 0279 		SUBWF	Param79,W02686 0CE7 1D03 		BTFSS	STATUS,Z	;12 chars max02687 0CE8 2CDB 		GOTO	daytime_handler_L2	02688 0CE9 	;02689 0CE9 24FA 	daytime_handler_2	CALL	Std_TCP_Setup02690 0CEA 	;02691 0CEA 3017 		MOVLW	low romdir.f.name02692 0CEB 0084 		MOVWF	FSR02693 0CEC 1783 		BSF	STATUS,IRP02694 0CED 303D 		MOVLW	'='	; one letter command to set time?02695 0CEE 0200 		SUBWF	INDF,W02696 0CEF 1D03 		BTFSS	STATUS,Z02697 0CF0 2CF1 		GOTO	daytime_Read02698 0CF1 	;02699 0CF1 	daytime_Write	02700 0CF1 		if HasRTC02716 0CF1 		endif02717 0CF1 	;02718 0CF1 	daytime_Read02719 0CF1 		if HasRTC02737 0CF1 		else02738 0CF1 	;02739 0CF1 3012 		MOVLW	Str_DAYMSGPtr	;"No daytime msg\r\n"02740 0CF2 2504 		CALL	PutString02741 0CF3 	;02742 0CF3 		endif02743 0CF3 	;02744 0CF3 3011 		MOVLW	TFIN+TACK	; tflags = TFIN+TACK  Ack & close connection 02745 0CF4 00E7 	Do_TCP_Wflags	MOVWF	tflags02746 0CF5 084C 		MOVF	checkhi,W	; d_checkhi = checkhi   Save checksum 02747 0CF6 00CE 		MOVWF	d_checkhi02748 0CF7 084D 		MOVF	checklo,W	; d_checklo = checklo02749 0CF8 00CF 		MOVWF	d_checklo02750 0CF9 	;02751 0CF9 2E4D 		GOTO	tcp_xmit	; ..do it 02752 0CFA 	;02753 0CFA 	;=====================================================================================================02754 0CFA 	; Clear checksum, setnic_addr((TXSTART*256)+ETHERHEADER_LEN+IPHDR_LEN+TCPHDR_LEN)02755 0CFA 	;02756 0CFA 	; Entry: none02757 0CFA 	; Exit: noneHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 148500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm02758 0CFA 	; RAM used: Param71, Param7A, Param7B (verified 1/23/03)02759 0CFA 	; Calls:(0+1) setnic_addr(1+0)02760 0CFA 	;02761 0CFA 	Std_TCP_Setup	mBank002761 0CFA 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP002761 0CFB 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP102762 0CFC 01CD 		CLRF	checklo	;checkhi = checklo = 0; 02763 0CFD 01CC 		CLRF	checkhi02764 0CFE 1126 		BCF	checkflag	; checkflag = 0; 02765 0CFF 	;02766 0CFF 	; setnic_addr((TXSTART*256)+ETHERHEADER_LEN+IPHDR_LEN+TCPHDR_LEN)02767 0CFF 3040 		MOVLW	TXSTART02768 0D00 00FB 		MOVWF	Param7B02769 0D01 3036 		MOVLW	ETHERHEADER_LEN+IPHDR_LEN+TCPHDR_LEN02770 0D02 00FA 		MOVWF	Param7A02771 0D03 2814 		GOTO	setnic_addr02772 0D04 	;02773 0D04 	;02774 0D04 	;=========================================================================================02775 0D04 	; Send string number (W) to IP frame buffer02776 0D04 	; Param7D=CharCount, Param7F=StringNumber02777 0D04 	; (putnic_checkbyte:Param78, Param71)02778 0D04 	;02779 0D04 	; Entry: W = string number02780 0D04 	; Exit: none02781 0D04 	; RAM used: Param71, Param78, Param7D, Param7F (verified 1/30/03)02782 0D04 	; Calls:(1+2) putnic_checkbyte,StringDispatch02783 0D04 	;02784 0D04 00FF 	PutString	MOVWF	Param7F02785 0D05 01FD 		CLRF	Param7D	;CharCount=002786 0D06 	PutString_L1	02787 0D06 		if CodeMemStrings02789 0D06 		endif02790 0D06 		if SRAM_Strings02791 0D06 		mCall1To0	StringDispatch	;Get the next Char02791 0D06 118A      M		BCF	PCLATH,3		BCF	PCLATH,302791 0D07 2255      M		CALL	StringDispatch		CALL	Destination02791 0D08 158A      M		BSF	PCLATH,3		BSF	PCLATH,302791 0D09 120A      M		BCF	PCLATH,4		BCF	PCLATH,402792 0D0A 		endif02793 0D0A 0AFD 		INCF	Param7D,F	;CharCount:=CharCount+102794 0D0B 3800 		IORLW	0x00	;set Z if last char02795 0D0C 1903 		BTFSC	STATUS,Z02796 0D0D 0008 		RETURN		;00 = done02797 0D0E 2388 		CALL	putnic_checkbyte	;Put the Char02798 0D0F 2D06 		GOTO	PutString_L102799 0D10 	;02800 0D10 	;02801 0D10 		if TTFTPtoSRAM02802 0D10 	;02803 0D10 	;========================================================================================02804 0D10 	; Handler for the TFTP Port SRAM version02805 0D10 	;  if length is zero then send 256 bytes from SRAM starting at Address and ACK02806 0D10 	;  if length is greater than zero (1..1024) then write this data to SRAM and 02807 0D10 	;    send length bytes from SRAM starting at Address and ACK.02808 0D10 	;  if the MSb of the length is set then send 1..1024 bytes from SRAM starting at Address and ACK.02809 0D10 	;02810 0D10 	; Entry:next NIC byte to read is first byte of TCP segment's data field02811 0D10 	; Exit: tcp_xmit02812 0D10 	; RAM used: Param71, Param78, Param79, Param7A, Param7B, Param7C, Param7D, FSR (verified 4/29/04)02813 0D10 	; Calls:(1+2) getch_net, SRAM_WritePI, TFTPPortS_ReadAll, TFTPPortS_Read02814 0D10 	;02815 0D10 3093 	TFTPPortS_handler	MOVLW	low SRAM_Len02816 0D11 0084 		MOVWF	FSR02817 0D12 1783 		BSF	_IRP02818 0D13 3005 		MOVLW	0x05	;move 5 bytes02819 0D14 00F9 		MOVWF	Param7902820 0D15 	;02821 0D15 20A4 	TFTPPortS_handler_L2	CALL	getch_net	; get SRAM_Len..SRAM_DestAddr002822 0D16 0080 		MOVWF	INDF02823 0D17 0A84 		INCF	FSR,F02824 0D18 0BF9 		DECFSZ	Param79,F02825 0D19 2D15 		GOTO	TFTPPortS_handler_L202826 0D1A 	;02827 0D1A 18A6 		BTFSC	atend02828 0D1B 0008 		RETURN		; bad data, too short02829 0D1C 	;02830 0D1C 	; If length of data is 0x00 goto TFTPPortS_ReadAll and read 256 bytes.02831 0D1C 		mBank302831 0D1C 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP002831 0D1D 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP102832 0D1E 		MOVFW	SRAM_Len02832 0D1E 0813      M		MOVF	SRAM_Len,W		MOVF	src,W02833 0D1F 0414 		IORWF	SRAM_Len_Lo,W02834 0D20 		SKPNZ02834 0D20 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z02835 0D21 2D42 		GOTO	TFTPPortS_ReadAll02836 0D22 	;02837 0D22 	; If SRAM_Len,7 is set then go copy the data from SRAM to the NICs buffer02838 0D22 1F93 		BTFSS	SRAM_Len,7	;Is the read only flag set?02839 0D23 2D27 		GOTO	TFTPPortS_handler_1	; No02840 0D24 3007 		MOVLW	0x0702841 0D25 0593 		ANDWF	SRAM_Len,F02842 0D26 2D47 		GOTO	TFTPPortS_Read02843 0D27 	;02844 0D27 	; Move SRAM_Len bytes of data into SRAM02845 0D27 0813 	TFTPPortS_handler_1	MOVF	SRAM_Len,W02846 0D28 3907 		ANDLW	0x07	;Len 0x0001..0x040002847 0D29 				; the MSb is the read only flag.02848 0D29 00FA 		MOVWF	Param7AHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 149500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm02849 0D2A 0814 		MOVF	SRAM_Len_Lo,W02850 0D2B 00F9 		MOVWF	Param7902851 0D2C 0815 		MOVF	SRAM_DestAddr2,W02852 0D2D 00A1 		MOVWF	SRAM_Addr202853 0D2E 0816 		MOVF	SRAM_DestAddr1,W02854 0D2F 00A0 		MOVWF	SRAM_Addr102855 0D30 0817 		MOVF	SRAM_DestAddr0,W02856 0D31 009F 		MOVWF	SRAM_Addr002857 0D32 	;02858 0D32 20A4 	TFTPPortS_handler_L1	CALL	getch_net	; get the next data byte02859 0D33 18A6 		BTFSC	atend02860 0D34 0008 		RETURN		; bad data, too short02861 0D35 		mCall1To0	SRAM_WritePI02861 0D35 118A      M		BCF	PCLATH,3		BCF	PCLATH,302861 0D36 2236      M		CALL	SRAM_WritePI		CALL	Destination02861 0D37 158A      M		BSF	PCLATH,3		BSF	PCLATH,302861 0D38 120A      M		BCF	PCLATH,4		BCF	PCLATH,402862 0D39 	;02863 0D39 3001 		MOVLW	0x0102864 0D3A 02F9 		SUBWF	Param79,F02865 0D3B 		SUBBF	Param7A,F02865 0D3B 1C03      M		BTFSS	STATUS,C		BTFSS	STATUS,C02865 0D3C 03FA      M		DECF	Param7A,F		DECF	dest,W_or_F02866 0D3D 0879 		MOVF	Param79,W02867 0D3E 047A 		IORWF	Param7A,W02868 0D3F 		SKPZ02868 0D3F 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z02869 0D40 2D32 		GOTO	TFTPPortS_handler_L102870 0D41 2D47 		GOTO	TFTPPortS_Read02871 0D42 	;02872 0D42 	;========================================================================================================02873 0D42 	; Read 256 bytes from SRAM into NIC buffer and send it (tflags  Ack & close & Push)02874 0D42 	;02875 0D42 	; Entry: SRAM_DestAddr02876 0D42 	; Exit: tcp_xmit02877 0D42 	; RAM used: Param71, Param78, Param79, Param7A, Param7B, Param7C, Param7D, FSR (verified 4/29/04)02878 0D42 	; Calls:(1+2) TFTPPortS_Read02879 0D42 	;02880 0D42 	TFTPPortS_ReadAll	mBank302880 0D42 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP002880 0D43 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP102881 0D44 3001 		MOVLW	0x0102882 0D45 0093 		MOVWF	SRAM_Len	;make len=0x010002883 0D46 0194 		CLRF	SRAM_Len_Lo02884 0D47 	;02885 0D47 	; fall through to TFTPPortS_Read02886 0D47 	;02887 0D47 	;=========================================================================================================02888 0D47 	; Read SRAM_Len bytes from the SRAM into the nic buffer and send it (tflags  Ack & close & Push)02889 0D47 	;02890 0D47 	; Entry: SRAM_Len, SRAM_DestAddr02891 0D47 	; Exit: tcp_xmit02892 0D47 	; RAM used: Param71, Param78, Param79, Param7A, Param7B, Param7C, Param7D, FSR (verified 4/29/04)02893 0D47 	; Calls:(1+2) setnic_addr, putnic_checkbyte, SRAM_ReadPI, tcp_xmit02894 0D47 	;02895 0D47 	; Send data to nic buffer, calc checksum 02896 0D47 	; 1069 bytes max (IPHDR_LEN+TCPHDR_LEN+lenWord+Address+1024 Data)02897 0D47 	;02898 0D47 24FA 	TFTPPortS_Read	CALL	Std_TCP_Setup02899 0D48 3028 		MOVLW	IPHDR_LEN+TCPHDR_LEN	;txin = IPHDR_LEN + TCPHDR_LEN02900 0D49 00D4 		MOVWF	txin02901 0D4A 	;02902 0D4A 	;Move length and address (5 bytes) to NIC buffer02903 0D4A 3093 		MOVLW	low SRAM_Len02904 0D4B 0084 		MOVWF	FSR02905 0D4C 1783 		BSF	_IRP02906 0D4D 3005 		MOVLW	0x0502907 0D4E 00F9 		MOVWF	Param7902908 0D4F 0800 	TFTPPortS_Read_L1	MOVF	INDF,W02909 0D50 2388 		CALL	putnic_checkbyte02910 0D51 0A84 		INCF	FSR,F02911 0D52 0BF9 		DECFSZ	Param79,F02912 0D53 2D4F 		GOTO	TFTPPortS_Read_L102913 0D54 	;02914 0D54 		mBank302914 0D54 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP002914 0D55 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP102915 0D56 0813 		MOVF	SRAM_Len,W02916 0D57 00FA 		MOVWF	Param7A02917 0D58 0814 		MOVF	SRAM_Len_Lo,W02918 0D59 00F9 		MOVWF	Param7902919 0D5A 0815 		MOVF	SRAM_DestAddr2,W02920 0D5B 00A1 		MOVWF	SRAM_Addr202921 0D5C 0816 		MOVF	SRAM_DestAddr1,W02922 0D5D 00A0 		MOVWF	SRAM_Addr102923 0D5E 0817 		MOVF	SRAM_DestAddr0,W02924 0D5F 009F 		MOVWF	SRAM_Addr002925 0D60 	;	02926 0D60 	TFTPPortS_Read_L2	mCall1To0	SRAM_ReadPI02926 0D60 118A      M		BCF	PCLATH,3		BCF	PCLATH,302926 0D61 2252      M		CALL	SRAM_ReadPI		CALL	Destination02926 0D62 158A      M		BSF	PCLATH,3		BSF	PCLATH,302926 0D63 120A      M		BCF	PCLATH,4		BCF	PCLATH,402927 0D64 2388 		CALL	putnic_checkbyte02928 0D65 	;02929 0D65 3001 		MOVLW	0x0102930 0D66 02F9 		SUBWF	Param79,F02931 0D67 		SUBBF	Param7A,F02931 0D67 1C03      M		BTFSS	STATUS,C		BTFSS	STATUS,C02931 0D68 03FA      M		DECF	Param7A,F		DECF	dest,W_or_FHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 150500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm02932 0D69 0879 		MOVF	Param79,W02933 0D6A 047A 		IORWF	Param7A,W02934 0D6B 		SKPZ02934 0D6B 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z02935 0D6C 2D60 		GOTO	TFTPPortS_Read_L202936 0D6D 	;02937 0D6D 3019 	TFTPPortS_Read_1	MOVLW	TFIN+TACK+TPUSH	; tflags  Ack & close & Push02938 0D6E 2CF4 		GOTO	Do_TCP_Wflags	; ..do it02939 0D6F 	;02940 0D6F 		endif02941 0D6F 	;02942 0D6F 		if TTFTPtoEEROM02943 0D6F 	;========================================================================================02944 0D6F 	; Handler for the TFTP Port, EEROM version.02945 0D6F 	;  This handler moves data in and out of the eeROM via port 69 "TFTPPort" Trivial FTP.02946 0D6F 	;  if length is zero then send 32 bytes from eeROM starting at Address and ACK02947 0D6F 	;  if length is greater than zero (1..32) then write this data to eeROM and 02948 0D6F 	;    send length bytes from eeROM starting at Address and ACK02949 0D6F 	;  TFTP data len is limited to the serial eeprom write buffer limit of 32 bytes02950 0D6F 	;    WriteEEROM could be modified to handle multipul write cycles02951 0D6F 	;  if EnableEEROMCopy=1 then eeROMbuff.len,7 causes CopyEEROMtoSRAM to be called with02952 0D6F 	;   the lower 4 bits of eeROMbuff.len as the bank number.02953 0D6F 	;  if EnableEEROMCopy=1 then eeROMbuff.len,6 causes EraseEEROM to be called.02954 0D6F 	;02955 0D6F 	; Entry:next NIC byte to read is first byte of TCP segment's data field02956 0D6F 	; Exit:02957 0D6F 	; RAM used:Param79, Param7A, Param7C FSR02958 0D6F 	; Calls:(1+2) getch_net(1+0), WriteEEROM(1+1), DelayWmS_D08(1+0+0), ReadEEROM, setnic_addr, putnic_checkbyte02959 0D6F 	;02960 0D6F 3023 	TFTPPortE_handler	MOVLW	low eeROMbuff.len02961 0D70 0084 		MOVWF	FSR02962 0D71 		mBankISel	eeROMbuff.len02962 0D71      M		if	eeROMbuff.len & 0x0100		if dest & 0x010002962 0D71 1783      M		BSF	STATUS,IRP		BSF	STATUS,IRP02962 0D72      M		else			else02962 0D72      M		endif			endif02963 0D72 3004 		MOVLW	0x0402964 0D73 00F9 		MOVWF	Param79	;bytes to move02965 0D74 	;02966 0D74 20A4 	TFTPPortE_handler_L2	CALL	getch_net	; get the len02967 0D75 0080 		MOVWF	INDF02968 0D76 0A84 		INCF	FSR,F02969 0D77 0BF9 		DECFSZ	Param79,F02970 0D78 2D74 		GOTO	TFTPPortE_handler_L202971 0D79 	;02972 0D79 18A6 		BTFSC	atend02973 0D7A 0008 		RETURN		; bad data, too short02974 0D7B 	;02975 0D7B 	; if length of data is 0x00 goto TFTPPortE_ReadAll02976 0D7B 	;02977 0D7B 		mBank202977 0D7B 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP002977 0D7C 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP102978 0D7D 		MOVFW	eeROMbuff.len02978 0D7D 0823      M		MOVF	eeROMbuff.len,W		MOVF	src,W02979 0D7E 00FC 		MOVWF	Param7C02980 0D7F 		SKPNZ02980 0D7F 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z02981 0D80 2D93 		GOTO	TFTPPortE_ReadAll02982 0D81 	;02983 0D81 	; tx EEROM to SRAM?02984 0D81 		if EnableEEROMCopy03011 0D81 		endif03012 0D81 	;03013 0D81 	; test for valid length 1..3203014 0D81 	TFTPPortE_handler_1	MOVFW	eeROMbuff.len03014 0D81 0823      M		MOVF	eeROMbuff.len,W		MOVF	src,W03015 0D82 3C20 		SUBLW	eeROMBuffLen	; 20-Len03016 0D83 		SKPNB		; skip if not borrow03016 0D83 1C03      M		BTFSS	STATUS,C		BTFSS	STATUS,C03017 0D84 2A61 		GOTO	S1_Bank0Rtn	; len>2003018 0D85 	;03019 0D85 	; read Param7C bytes of data into buffer03020 0D85 20A4 	TFTPPortE_handler_L1	CALL	getch_net	; get the next data byte03021 0D86 18A6 		BTFSC	atend03022 0D87 0008 		RETURN		; bad data, too short03023 0D88 0080 		MOVWF	INDF03024 0D89 0A84 		INCF	FSR,F03025 0D8A 0BFC 		DECFSZ	Param7C,F03026 0D8B 2D85 		GOTO	TFTPPortE_handler_L103027 0D8C 	;03028 0D8C 	;03029 0D8C 	;write data wait 5ms then read the data03030 0D8C 		mCall1To0	WriteEEROM03030 0D8C 118A      M		BCF	PCLATH,3		BCF	PCLATH,303030 0D8D 24AB      M		CALL	WriteEEROM		CALL	Destination03030 0D8E 158A      M		BSF	PCLATH,3		BSF	PCLATH,303030 0D8F 120A      M		BCF	PCLATH,4		BCF	PCLATH,403031 0D90 3005 		MOVLW	0x0503032 0D91 200A 		CALL	DelayWmS_D0803033 0D92 2D97 		GOTO	TFTPPortE_Read03034 0D93 	;03035 0D93 	;==========================================================================================================03036 0D93 	; Read eeROMBuffLen bytes of data into NIC buffer and send it (tflags  Ack & close & Push)03037 0D93 	;03038 0D93 	; Entry: eeROMbuff.Addr03039 0D93 	; Exit: tcp_xmit03040 0D93 	; Calls:() TFTPPortE_Read03041 0D93 	; RAM used:03042 0D93 	;Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 151500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm03043 0D93 	TFTPPortE_ReadAll	mBank203043 0D93 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003043 0D94 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP103044 0D95 3020 		MOVLW	eeROMBuffLen03045 0D96 00A3 		MOVWF	eeROMbuff.len03046 0D97 	;03047 0D97 	; fall through to TFTPPortE_Read03048 0D97 	;03049 0D97 	;==========================================================================================================03050 0D97 	; Read eeROMbuff.len bytes of data into NIC buffer and send it (tflags  Ack & close & Push)03051 0D97 	;03052 0D97 	; Entry: eeROMbuff.len, eeROMbuff.Addr03053 0D97 	; Exit: tcp_xmit03054 0D97 	; Calls:(1+2) Std_TCP_Setup, ReadEEROM, putnic_checkbyte, tcp_xmit03055 0D97 	; RAM used: Param78, Param79, FSR03056 0D97 	; 03057 0D97 	; Send data to nic buffer, calc checksum 03058 0D97 	; 76 bytes max (IPHDR_LEN+TCPHDR_LEN+lenByte+Address+32 Data)03059 0D97 24FA 	TFTPPortE_Read	CALL	Std_TCP_Setup03060 0D98 3028 		MOVLW	IPHDR_LEN+TCPHDR_LEN	;txin = IPHDR_LEN + TCPHDR_LEN03061 0D99 00D4 		MOVWF	txin03062 0D9A 		mCall1To0	ReadEEROM03062 0D9A 118A      M		BCF	PCLATH,3		BCF	PCLATH,303062 0D9B 249F      M		CALL	ReadEEROM		CALL	Destination03062 0D9C 158A      M		BSF	PCLATH,3		BSF	PCLATH,303062 0D9D 120A      M		BCF	PCLATH,4		BCF	PCLATH,403063 0D9E 	;03064 0D9E 	;03065 0D9E 3023 		MOVLW	low eeROMbuff.len03066 0D9F 0084 		MOVWF	FSR03067 0DA0 00FA 		MOVWF	Param7A	; read next byte from here03068 0DA1 1783 		BSF	STATUS,IRP03069 0DA2 0800 		MOVF	INDF,W03070 0DA3 3E04 		ADDLW	0x04	; address and length header03071 0DA4 00F9 		MOVWF	Param79	; bytes to read03072 0DA5 	;	03073 0DA5 087A 	TFTPPortE_Read_L2	MOVF	Param7A,W03074 0DA6 0084 		MOVWF	FSR03075 0DA7 1783 		BSF	STATUS,IRP03076 0DA8 0800 		MOVF	INDF,W03077 0DA9 2388 		CALL	putnic_checkbyte03078 0DAA 0AFA 		INCF	Param7A,F03079 0DAB 0BF9 		DECFSZ	Param79,F03080 0DAC 2DA5 		GOTO	TFTPPortE_Read_L203081 0DAD 	;03082 0DAD 3019 		MOVLW	TFIN+TACK+TPUSH	; tflags = TFIN+TACK  Ack & close connection03083 0DAE 2CF4 		GOTO	Do_TCP_Wflags03084 0DAF 	;	03085 0DAF 		endif03086 0DAF 	;=========================================================================================03087 0DAF 	; Respond to an ICMP echo request message (aka ping)03088 0DAF 	;03089 0DAF 	; Entry:03090 0DAF 	; Exit: 03091 0DAF 	; RAM used: ICMP header checksum (2 bytes) Param7B, Param7C03092 0DAF 	; Calls:(1+) match_byteW, getch_net, skip_byte, put_ip, putch_net_W,03093 0DAF 	;	put_ether, copy_rx_tx, xmit_ether03094 0DAF 	;03095 0DAF 	icmp_recv	mBank003095 0DAF 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003095 0DB0 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103096 0DB1 1126 		BCF	checkflag	; checkflag = 0 Clear checksum 03097 0DB2 01CD 		CLRF	checklo	; checklo = 0 03098 0DB3 01CC 		CLRF	checkhi	; checkhi = 003099 0DB4 01E9 		CLRF	rpdlen_b1	; rpdlen = 0; 03100 0DB5 01E8 		CLRF	rpdlen_b003101 0DB6 	;03102 0DB6 3008 		MOVLW	ICMP_ERequest	;ICMP type = ICMP_ERequest03103 0DB7 214A 		CALL	match_byteW03104 0DB8 1C78 		BTFSS	Param78,003105 0DB9 0008 		RETURN03106 0DBA 	;03107 0DBA 0103 		CLRW		;ICMP Code = 003108 0DBB 214A 		CALL	match_byteW03109 0DBC 1C78 		BTFSS	Param78,003110 0DBD 0008 		RETURN03111 0DBE 	;03112 0DBE 20A4 		CALL	getch_net	; get_word(csum)03113 0DBF 00FC 		MOVWF	Param7C03114 0DC0 20A4 		CALL	getch_net03115 0DC1 00FB 		MOVWF	Param7B03116 0DC2 18A6 		BTFSC	atend03117 0DC3 0008 		RETURN03118 0DC4 	; 03119 0DC4 	; Check data 03120 0DC4 2168 	icmp_recv_L1	CALL	skip_byte03121 0DC5 1C78 		BTFSS	Param78,003122 0DC6 2DCB 		GOTO	icmp_recv_1	; we already read the last byte03123 0DC7 	;03124 0DC7 0FE8 		INCFSZ	rpdlen_b0,F	; rpdlen++;03125 0DC8 2DC4 		GOTO	icmp_recv_L103126 0DC9 0AE9 		INCF	rpdlen_b1,F03127 0DCA 2DC4 		GOTO	icmp_recv_L103128 0DCB 	;03129 0DCB 0A4C 	icmp_recv_1	INCF	checkhi,W	;checkhi=0xff03130 0DCC 1D03 		BTFSS	STATUS,Z03131 0DCD 0008 		RETURN		;bad csum03132 0DCE 0A4D 		INCF	checklo,W	;checklo=0xff03133 0DCF 1D03 		BTFSS	STATUS,Z03134 0DD0 0008 		RETURN		;bad csumHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 152500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm03135 0DD1 	;03136 0DD1 08E9 		MOVF	rpdlen_b1,F	;rpdlen<=MAXPING_LEN03137 0DD2 1D03 		BTFSS	STATUS,Z03138 0DD3 0008 		RETURN		;>=0x100, too big03139 0DD4 	;03140 0DD4 30D5 		MOVLW	MAXPING_LEN+103141 0DD5 0268 		SUBWF	rpdlen_b0,W03142 0DD6 1803 		BTFSC	STATUS,C03143 0DD7 0008 		RETURN		;it should have borrowed03144 0DD8 	; If OK and not bcast.. 03145 0DD8 235E 		CALL	put_ip	;IP header 03146 0DD9 3000 		MOVLW	ICMP_EReply	; ICMP type 03147 0DDA 216D 		CALL	putch_net_W03148 0DDB 0103 		CLRW		; ICMP code (0)03149 0DDC 216D 		CALL	putch_net_W03150 0DDD 	; recalculate the ICMP checksum for resp03151 0DDD 	;  we changed the ICMP type, which is a MSB from 0x08 to 0x0003152 0DDD 3008 		MOVLW	0x08	; csum = csum+0x080003153 0DDE 07FC 		ADDWF	Param7C,F03154 0DDF 	; if (csum < 0x0800)	  ..including hi-lo carry 03155 0DDF 3008 		MOVLW	0x0803156 0DE0 027C 		SUBWF	Param7C,W03157 0DE1 1803 		BTFSC	STATUS,C03158 0DE2 2DE6 		GOTO	icmp_recv_203159 0DE3 	;03160 0DE3 0AFB 		INCF	Param7B,F	; csum++; 03161 0DE4 1903 		BTFSC	STATUS,Z03162 0DE5 0AFC 		INCF	Param7C,F03163 0DE6 	;03164 0DE6 087C 	icmp_recv_2	MOVF	Param7C,W	; put_word(csum);   ICMP checksum 03165 0DE7 216D 		CALL	putch_net_W03166 0DE8 087B 		MOVF	Param7B,W03167 0DE9 216D 		CALL	putch_net_W03168 0DEA 	; Move what we have so far to the NIC tx buffer03169 0DEA 	;  adding the ethernet header03170 0DEA 21B4 		CALL	put_ether	; put_ether(txbuff, txin);03171 0DEB 	; Send ICMP echo response03172 0DEB 	; send back the last 4 bytes of the ICMP header and the data,03173 0DEB 	;  don't look at it just copy it from the NICs rx buffer03174 0DEB 	;  to the NICs tx buffer03175 0DEB 0854 		MOVF	txin,W	; copy_rx_tx(txin, IPHDR_LEN+ICMPHDR_LEN, rpdlen); 03176 0DEC 00F9 		MOVWF	Param7903177 0DED 3018 		MOVLW	IPHDR_LEN+ICMPHDR_LEN03178 0DEE 00FA 		MOVWF	Param7A03179 0DEF 0868 		MOVF	rpdlen_b0,W03180 0DF0 00FB 		MOVWF	Param7B03181 0DF1 23AF 		CALL	copy_rx_tx03182 0DF2 	; xmit_ether(IPHDR_LEN+ICMPHDR_LEN+rpdlen);03183 0DF2 3018 		MOVLW	IPHDR_LEN+ICMPHDR_LEN03184 0DF3 0768 		ADDWF	rpdlen_b0,W03185 0DF4 00FC 		MOVWF	Param7C03186 0DF5 0869 		MOVF	rpdlen_b1,W03187 0DF6 1803 		BTFSC	STATUS,C03188 0DF7 3E01 		ADDLW	0x0103189 0DF8 00FD 		MOVWF	Param7D03190 0DF9 29CD 		GOTO	xmit_ether	; transmit the ethernet frame03191 0DFA 	;03192 0DFA 	;03193 0DFA 	;====================================================================================	03194 0DFA 	; Put out a TCP segment header. (Source Port..Options)03195 0DFA 	; Data checksum must have already been computed.03196 0DFA 	;03197 0DFA 	; Entry: none03198 0DFA 	; Exit:03199 0DFA 	; RAM used: Param78, Param79, Param7A, Param7C, Param7D, FSR (verified 1/30/03)03200 0DFA 	; Calls:(1+1) putch_net_W, put_rack, put_rseq, check_MyIP, check_remip, check_byte_W03201 0DFA 	;03202 0DFA 	put_tcp	mBank003202 0DFA 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003202 0DFB 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103203 0DFC 1126 		BCF	checkflag	; checkflag = 0; Ensure we're on an even byte 03204 0DFD 084E 		MOVF	d_checkhi,W	; checkhi = d_checkhi Retrieve data checksum 03205 0DFE 00CC 		MOVWF	checkhi03206 0DFF 084F 		MOVF	d_checklo,W	; checklo = d_checklo; 03207 0E00 00CD 		MOVWF	checklo03208 0E01 	;Source Port03209 0E01 085B 		MOVF	locport_b1,W03210 0E02 216D 		CALL	putch_net_W03211 0E03 085A 		MOVF	locport_b0,W03212 0E04 216D 		CALL	putch_net_W03213 0E05 	;Dest Port03214 0E05 085D 		MOVF	remport_b1,W03215 0E06 216D 		CALL	putch_net_W03216 0E07 085C 		MOVF	remport_b0,W03217 0E08 216D 		CALL	putch_net_W03218 0E09 	;Sequence number03219 0E09 217D 		CALL	put_rack03220 0E0A 	;Acknowledgment Number03221 0E0A 217F 		CALL	put_rseq03222 0E0B 	;03223 0E0B 	;TCP header length03224 0E0B 	;if TSYN flag is set then header len is 4 bytes more because the MSS value is in the options area03225 0E0B 0867 		MOVF	tflags,W03226 0E0C 3902 		ANDLW	TSYN03227 0E0D 1903 		BTFSC	STATUS,Z03228 0E0E 2E11 		GOTO	put_tcp_103229 0E0F 3060 		MOVLW	TCPSYN_LEN*403230 0E10 2E12 		GOTO	put_tcp_203231 0E11 3050 	put_tcp_1	MOVLW	TCPHDR_LEN*403232 0E12 216D 	put_tcp_2	CALL	putch_net_WHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 153500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm03233 0E13 	;the reserved bits are always 0's03234 0E13 	; Code bits03235 0E13 0867 		MOVF	tflags,W03236 0E14 216D 		CALL	putch_net_W03237 0E15 	;Window size03238 0E15 300B 		MOVLW	high TCP_WDWSize03239 0E16 216D 		CALL	putch_net_W03240 0E17 30B8 		MOVLW	low TCP_WDWSize03241 0E18 216D 		CALL	putch_net_W03242 0E19 	;03243 0E19 084A 		MOVF	tpxdlen,W	; len = tpxdlen + TCPHDR_LEN; 03244 0E1A 3E14 		ADDLW	TCPHDR_LEN03245 0E1B 00FC 		MOVWF	Param7C	;low len03246 0E1C 084B 		MOVF	tpxdlen+1,W03247 0E1D 00FD 		MOVWF	Param7D	;high len03248 0E1E 1803 		BTFSC	STATUS,C03249 0E1F 0AFD 		INCF	Param7D,F	;high len03250 0E20 	;03251 0E20 	; if (tflags & TSYN) If sending SYN, send MSS option 03252 0E20 0867 		MOVF	tflags,W03253 0E21 3902 		ANDLW	TSYN03254 0E22 1903 		BTFSC	STATUS,Z03255 0E23 2E34 		GOTO	put_tcp_303256 0E24 	;  03257 0E24 	; Put MSS in buffer after TCP header 03258 0E24 3004 		MOVLW	0x04	; txin += 4;03259 0E25 07D4 		ADDWF	txin,F	; skip csum & urgent ptr03260 0E26 	;03261 0E26 3004 		MOVLW	TCPOPT_LEN	; len += TCPOPT_LEN; 03262 0E27 07FC 		ADDWF	Param7C,F03263 0E28 1803 		BTFSC	STATUS,C03264 0E29 0AFD 		INCF	Param7D,F03265 0E2A 	;Options (32 bits)03266 0E2A 3002 		MOVLW	0x02	; putch_net(2); 03267 0E2B 216D 		CALL	putch_net_W03268 0E2C 3004 		MOVLW	0x04	; putch_net(4); 03269 0E2D 216D 		CALL	putch_net_W03270 0E2E 	;03271 0E2E 3005 		MOVLW	high TCP_MSS03272 0E2F 216D 		CALL	putch_net_W03273 0E30 30B4 		MOVLW	low TCP_MSS03274 0E31 216D 		CALL	putch_net_W03275 0E32 	;03276 0E32 	; txin =txin-(TCPOPT_LEN + 4);  Go back to checksum in header 03277 0E32 3008 		MOVLW	TCPOPT_LEN+403278 0E33 02D4 		SUBWF	txin,F03279 0E34 	;03280 0E34 	;Checksum the pseudo header Src IP, Dest IP, 0x00 byte, IP protocol, length03281 0E34 20DF 	put_tcp_3	CALL	check_MyIP03282 0E35 	;03283 0E35 20DD 		CALL	check_remip03284 0E36 	;03285 0E36 0103 		CLRW03286 0E37 20C1 		CALL	check_byte_W03287 0E38 3006 		MOVLW	PTCP03288 0E39 20C1 		CALL	check_byte_W03289 0E3A 	;03290 0E3A 087D 		MOVF	Param7D,W	; check_word(len);03291 0E3B 20C1 		CALL	check_byte_W03292 0E3C 087C 		MOVF	Param7C,W03293 0E3D 20C1 		CALL	check_byte_W03294 0E3E 	;03295 0E3E 	; Send checksum 03296 0E3E 094C 		COMF	checkhi,W03297 0E3F 216D 		CALL	putch_net_W03298 0E40 	;03299 0E40 094D 		COMF	checklo,W03300 0E41 216D 		CALL	putch_net_W03301 0E42 	;03302 0E42 0103 		CLRW		;Urgent ptr (not used)03303 0E43 216D 		CALL	putch_net_W03304 0E44 0103 		CLRW03305 0E45 216D 		CALL	putch_net_W03306 0E46 	;03307 0E46 	; if (tflags & TSYN)	  Adjust Tx ptr if sending MSS option 03308 0E46 0867 		MOVF	tflags,W03309 0E47 3902 		ANDLW	TSYN03310 0E48 1903 		BTFSC	STATUS,Z03311 0E49 0008 		RETURN03312 0E4A 	;re-adjust buffer offset03313 0E4A 3004 		MOVLW	TCPOPT_LEN	; txin=txin+TCPOPT_LEN; 03314 0E4B 07D4 		ADDWF	txin,F03315 0E4C 0008 		RETURN03316 0E4D 	;03317 0E4D 	;===========================================================================================03318 0E4D 	; Transmit a TCP segment03319 0E4D 	;03320 0E4D 	; Entry:data at txbuff, txin=data length, data csum in d_checkhi,d_checklo03321 0E4D 	;	tpxdlen = length of data in NIC buffer 03322 0E4D 	; Exit:03323 0E4D 	; RAM used: Param71, Param78, Param79, Param7A, Param7B, Param7C, Param7D, FSR (verified 1/30/03)03324 0E4D 	; Calls:(1+2) put_ip, put_tcp, put_ether, xmit_ether03325 0E4D 	; 03326 0E4D 	tcp_xmit	mBank003326 0E4D 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP003326 0E4E 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103327 0E4F 084A 		MOVF	tpxdlen,W	;iplen:=tpxdlen+IPHDR_LEN+TCPHDR_LEN03328 0E50 00EA 		MOVWF	iplen_b003329 0E51 084B 		MOVF	tpxdlen+1,W03330 0E52 00EB 		MOVWF	iplen_b1Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 154500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm03331 0E53 3028 		MOVLW	IPHDR_LEN+TCPHDR_LEN03332 0E54 07EA 		ADDWF	iplen_b0,F03333 0E55 1803 		BTFSC	STATUS,C03334 0E56 0AEB 		INCF	iplen_b1,F03335 0E57 	; if (tflags & TSYN) allow for MSS option 03336 0E57 0867 		MOVF	tflags,W03337 0E58 3902 		ANDLW	TSYN03338 0E59 1903 		BTFSC	STATUS,Z03339 0E5A 2E5F 		GOTO	tcp_xmit_103340 0E5B 	;03341 0E5B 3004 		MOVLW	TCPOPT_LEN	; iplen += TCPOPT_LEN; 03342 0E5C 07EA 		ADDWF	iplen_b0,F03343 0E5D 1803 		BTFSC	STATUS,C03344 0E5E 0AEB 		INCF	iplen_b1,F03345 0E5F 	; IP header 03346 0E5F 235E 	tcp_xmit_1	CALL	put_ip	; IP header03347 0E60 25FA 		CALL	put_tcp	; TCP header 03348 0E61 				; put_ether(txbuff, txin);  Send to NIC03349 0E61 	;03350 0E61 	;====================================03351 0E61 	; Transmit ethernet header and data03352 0E61 	;03353 0E61 	; Calls:(1+2) put_ether(1+1), xmit_ether(1+0)03354 0E61 	;03355 0E61 21B4 	tcp_xmit_2	CALL	put_ether	; Ethernet header and data03356 0E62 	;03357 0E62 0854 		MOVF	txin,W	; xmit_ether(txin+tpxdlen);  Transmit 03358 0E63 074A 		ADDWF	tpxdlen,W03359 0E64 00FC 		MOVWF	Param7C03360 0E65 084B 		MOVF	tpxdlen+1,W03361 0E66 00FD 		MOVWF	Param7D03362 0E67 1803 		BTFSC	STATUS,C03363 0E68 0AFD 		INCF	Param7D,F	;carry03364 0E69 	;03365 0E69 29CD 		GOTO	xmit_ether03366 0E6A 	; 03367 0E6A 		if UsesUDP03368 0E6A 	;======================================================================================================03369 0E6A 	; Test a User Datagram to see if it is valid03370 0E6A 	; 03371 0E6A 	; Entry: NIC buffer pointer points to first byte of UDP Header03372 0E6A 	; Exit: NIC buffer pointer points to first byte of the datagram Data field03373 0E6A 	;       if this is a Valid UDP datagram we fall through to udp_handler03374 0E6A 	; RAM used: Param76, Param77, Param78, Param79, Param7A, Param7B03375 0E6A 	; Calls:(1+ ) getch_net, skip_word, check_byte_W, getnic_addr, setnic_addr, check_rxbytes03376 0E6A 	;03377 0E6A 01CD 	UDP_recv	CLRF	checklo	; checkhi = checklo = 0; 03378 0E6B 01CC 		CLRF	checkhi03379 0E6C 	;03380 0E6C 		if UDPtesting03385 0E6C 		endif03386 0E6C 	;03387 0E6C 	; Source Port (2 bytes) 0 or where to send replies03388 0E6C 20A4 		CALL	getch_net03389 0E6D 00DD 		MOVWF	remport_b103390 0E6E 20A4 		CALL	getch_net03391 0E6F 00DC 		MOVWF	remport_b003392 0E70 	; Destination Port (2 bytes) application port03393 0E70 20A4 		CALL	getch_net03394 0E71 00DB 		MOVWF	locport_b103395 0E72 20A4 		CALL	getch_net03396 0E73 00DA 		MOVWF	locport_b003397 0E74 	;03398 0E74 		if UDPtesting03400 0E74 		endif03401 0E74 	;03402 0E74 	; Message length (2 bytes) including header (8..1480)03403 0E74 20A4 		CALL	getch_net03404 0E75 00FD 		MOVWF	Param7D03405 0E76 20A4 		CALL	getch_net03406 0E77 00FC 		MOVWF	Param7C03407 0E78 18A6 		BTFSC	atend03408 0E79 0008 		RETURN03409 0E7A 	;03410 0E7A 	; skip:  csum 03411 0E7A 2167 		CALL	skip_word03412 0E7B 18A6 		BTFSC	atend03413 0E7C 0008 		RETURN03414 0E7D 	;03415 0E7D 1470 		BSF	Param70,003416 0E7E 01F7 		CLRF	Param7703417 0E7F 241F 		CALL	CheckPseudo03418 0E80 	;03419 0E80 	; check the rest of the bytes in the datagram, but leave them in the rx buffer03420 0E80 	; check_rxbytes(iplen-TCPHDR_LEN);  77:76=byte count03421 0E80 086A 		MOVF	iplen_b0,W	;iplen03422 0E81 00F6 		MOVWF	Param7603423 0E82 3008 		MOVLW	UDPHDR_LEN03424 0E83 02F6 		SUBWF	Param76,F03425 0E84 086B 		MOVF	iplen_b1,W03426 0E85 00F7 		MOVWF	Param7703427 0E86 1C03 		BTFSS	STATUS,C03428 0E87 03F7 		DECF	Param77,F03429 0E88 23C3 		CALL	check_rxbytes03430 0E89 	;03431 0E89 	; restore ptr so next byte we get is the first data byte03432 0E89 	; setnic_addr(addr) 03433 0E89 2014 		CALL	setnic_addr03434 0E8A 	; if (checkhi=0xff) and (checklo=0xff) then this data is a valid UPD datagram03435 0E8A 	;Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 155500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm03436 0E8A 0A4C 		INCF	checkhi,W03437 0E8B 1D03 		BTFSS	STATUS,Z03438 0E8C 0008 		RETURN		;bad csum03439 0E8D 0A4D 		INCF	checklo,W03440 0E8E 1D03 		BTFSS	STATUS,Z03441 0E8F 0008 		RETURN		;bad scum03442 0E90 	;03443 0E90 	; fall through to udp_handler03444 0E90 	;==============================================================================================03445 0E90 	; Handle an incomming UDP datagram03446 0E90 	; Entry: A valid datagram data field in the NIC's ram03447 0E90 	;        Param7C, Param7D= Length of data LSB, MSB03448 0E90 	; Exit:03449 0E90 	; RAM used:03450 0E90 	; Calls:()03451 0E90 	;03452 0E90 	udp_handler03453 0E90 	;03454 0E90 		if UDPtesting03457 0E90 		endif03458 0E90 	;03459 0E90 3000 	udp_handler_Ports	MOVLW	high TermPort03460 0E91 025B 		SUBWF	locport_b1,W03461 0E92 1D03 		BTFSS	STATUS,Z03462 0E93 2E98 		GOTO	udp_handler_Ports103463 0E94 3039 		MOVLW	low TermPort03464 0E95 025A 		SUBWF	locport_b0,W03465 0E96 1903 		BTFSC	STATUS,Z03466 0E97 2EA1 		GOTO	udp_handler_TermPort03467 0E98 	;03468 0E98 3000 	udp_handler_Ports1	MOVLW	high IPDATAPORT03469 0E99 025B 		SUBWF	locport_b1,W03470 0E9A 1D03 		BTFSS	STATUS,Z03471 0E9B 2EA0 		GOTO	udp_handler_Ports203472 0E9C 3057 		MOVLW	low IPDATAPORT03473 0E9D 025A 		SUBWF	locport_b0,W03474 0E9E 1903 		BTFSC	STATUS,Z03475 0E9F 2EA3 		GOTO	udp_handler_DataPort03476 0EA0 	;03477 0EA0 	udp_handler_Ports2			; Unrecognised port03478 0EA0 	;03479 0EA0 0008 		RETURN03480 0EA1 	;03481 0EA1 	; Recognised ports03482 0EA1 	;03483 0EA1 160A 	udp_handler_TermPort	BSF	PCLATH,4	;segment 303484 0EA2 297B 		GOTO	UDP_Term_Handler	;udp port 57 handler in segment 303485 0EA3 	;03486 0EA3 	;03487 0EA3 160A 	udp_handler_DataPort	BSF	PCLATH,4	;segment 303488 0EA4 2AD9 		GOTO	UDP_Data_Handler	;udp port 87 handler in segment 303489 0EA5 	;03490 0EA5 		endif03491 0EA5 	;03492 0EA5 	;=================================================================================03493 0EA5 	; Set NIC reset signal high (Active)03494 0EA5 	;03495 0EA5 	; Entry: none03496 0EA5 	; Exit: none03497 0EA5 	; RAM used: Param77, Param78, Param79 (verified 3/14/05)03498 0EA5 	; Calls:(1+1) DelayWmS_D08, WriteLDO_0_D0803499 0EA5 	;03500 0EA5 3020 	reset_ether	MOVLW	0x2003501 0EA6 200A 		CALL	DelayWmS_D08	; power up delay03502 0EA7 		mBank303502 0EA7 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP003502 0EA8 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP103503 0EA9 1428 		BSF	CMD_LDO_0,NIC_Reset03504 0EAA 280F 		GOTO	WriteLDO_0_D0803505 0EAB 	;03506 0EAB 	;03507 0EAB 	;========================================================================================03508 0EAB 	; Initialise NIC.03509 0EAB 	; Loops forever if NIC error.03510 0EAB 	;03511 0EAB 	; Entry: none03512 0EAB 	; Exit: none03513 0EAB 	; RAM used: Param70, Param71, Param77, Param78, Param79, FSR03514 0EAB 	; Calls: (1+4) reset_ether, DelayWmS_D08, innic, outnicD78W, PrintString_D08,03515 0EAB 	;	outnic_CMDR_W, outnic_BNRY_W, outnic_ISR_FF, outnic_RCR_W, outnic_TCR_W03516 0EAB 	; 03517 0EAB 26A5 	init_ether	CALL	reset_ether03518 0EAC 3002 		MOVLW	0x02	; delay_ms(2);03519 0EAD 200A 		CALL	DelayWmS_D0803520 0EAE 	; un-reset ether03521 0EAE 		mBank303521 0EAE 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP003521 0EAF 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP103522 0EB0 1028 		BCF	CMD_LDO_0,NIC_Reset03523 0EB1 200F 		CALL	WriteLDO_0_D0803524 0EB2 	;03525 0EB2 3002 		MOVLW	0x02	; delay_ms(2); 03526 0EB3 200A 		CALL	DelayWmS_D0803527 0EB4 2714 		CALL	innic_NE_RESET	; outnic(NE_RESET, innic(NE_RESET)) Do reset 03528 0EB5 301F 		MOVLW	NE_RESET03529 0EB6 275B 		CALL	outnicD78W03530 0EB7 3002 		MOVLW	0x02	; delay_ms(2); 03531 0EB8 200A 		CALL	DelayWmS_D0803532 0EB9 	; if ((innic(ISR) & 0x80) == 0)  Report if failed03533 0EB9 2718 		CALL	innic_ISRHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 156500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm03534 0EBA 1BF8 		BTFSC	Param78,703535 0EBB 2EC3 		GOTO	init_ether_NoErr03536 0EBC 	;03537 0EBC 	;Display the error string03538 0EBC 		if UsesLCD03539 0EBC 3000 		MOVLW	NICinitErrStrPtr	;"\nNIC init err " 03540 0EBD 2005 		CALL	PrintString_D08	;loop until init'd or forever03541 0EBE 		mCall1To0	Delay1Sec	;delay 1 second03541 0EBE 118A      M		BCF	PCLATH,3		BCF	PCLATH,303541 0EBF 22E8      M		CALL	Delay1Sec		CALL	Destination03541 0EC0 158A      M		BSF	PCLATH,3		BSF	PCLATH,303541 0EC1 120A      M		BCF	PCLATH,4		BCF	PCLATH,403542 0EC2 		endif03543 0EC2 2EAB 		GOTO	init_ether03544 0EC3 	;03545 0EC3 3021 	init_ether_NoErr	MOVLW	0x21	; outnic(CMDR, 0x21) Stop, DMA abort, page 0 03546 0EC4 2758 		CALL	outnic_CMDR_W03547 0EC5 3002 		MOVLW	0x02	; delay_ms(2) ..wait to take effect 03548 0EC6 200A 		CALL	DelayWmS_D0803549 0EC7 3048 		MOVLW	DCRVAL	; outnic(DCR, DCRVAL); 03550 0EC8 00F8 		MOVWF	Param7803551 0EC9 300E 		MOVLW	DCR03552 0ECA 275B 		CALL	outnicD78W03553 0ECB 0103 		CLRW		; outnic(RBCR0, 0) Clear remote byte count  03554 0ECC 2754 		CALL	outnic_RBCR0_W03555 0ECD 274F 		CALL	outnic_RBCR1_0	; outnic(RBCR1, 0); 03556 0ECE 3020 		MOVLW	0x20	; outnic(RCR, 0x20) Rx monitor mode03557 0ECF 274C 		CALL	outnic_RCR_W03558 0ED0 3002 		MOVLW	0x02	; outnic(TCR, 0x02) Tx internal loopback 03559 0ED1 2749 		CALL	outnic_TCR_W03560 0ED2 	;03561 0ED2 3040 		MOVLW	TXSTART	; outnic(TPSR, TXSTART) Set Tx start page 03562 0ED3 00F8 		MOVWF	Param7803563 0ED4 3004 		MOVLW	TPSR03564 0ED5 275B 		CALL	outnicD78W03565 0ED6 	;03566 0ED6 3046 		MOVLW	RXSTART	; outnic(PSTART, RXSTART) Set Rx start, stop, boundary03567 0ED7 00F8 		MOVWF	Param7803568 0ED8 3001 		MOVLW	PSTART03569 0ED9 275B 		CALL	outnicD78W03570 0EDA 	;03571 0EDA 305F 		MOVLW	RXSTOP	; outnic(PSTOP, RXSTOP); 03572 0EDB 00F8 		MOVWF	Param7803573 0EDC 3002 		MOVLW	PSTOP03574 0EDD 275B 		CALL	outnicD78W03575 0EDE 	;03576 0EDE 305E 		MOVLW	RXSTOP-1	; outnic(BNRY, (BYTE)(RXSTOP-1));03577 0EDF 2746 		CALL	outnic_BNRY_W03578 0EE0 2760 		CALL	outnic_ISR_FF	; outnic(ISR, 0xff) Clear interrupt flags03579 0EE1 	;03580 0EE1 01F8 		CLRF	Param78	; outnic(IMR, 0) Mask all interrupts03581 0EE2 300F 		MOVLW	IMR03582 0EE3 275B 		CALL	outnicD78W03583 0EE4 	;03584 0EE4 3061 		MOVLW	0x61	; outnic(CMDR, 0x61) Stop, DMA abort, page 103585 0EE5 2758 		CALL	outnic_CMDR_W03586 0EE6 3002 		MOVLW	0x02	; delay_ms(2); 03587 0EE7 200A 		CALL	DelayWmS_D0803588 0EE8 	; Set Physical addr (MAC address) (6 bytes)03589 0EE8 3001 		MOVLW	PAR003590 0EE9 00FA 		MOVWF	Param7A	;nic reg address03591 0EEA 302A 		MOVLW	myeth003592 0EEB 0084 		MOVWF	FSR	;data ptr03593 0EEC 1383 		BCF	STATUS,IRP03594 0EED 3006 		MOVLW	MACLEN03595 0EEE 00F9 		MOVWF	Param79	;Count03596 0EEF 0800 	init_ether_L1	MOVF	INDF,W	;myeth0..myeth503597 0EF0 00F8 		MOVWF	Param78	;data03598 0EF1 087A 		MOVF	Param7A,W03599 0EF2 275B 		CALL	outnicD78W	; outnic(PAR0+i, myeth[i]); 03600 0EF3 0AFA 		INCF	Param7A,F03601 0EF4 0A84 		INCF	FSR,F03602 0EF5 0BF9 		DECFSZ	Param79,F03603 0EF6 2EEF 		GOTO	init_ether_L103604 0EF7 	;03605 0EF7 	; for (i=0; i<8; i++) Multicast accept-all03606 0EF7 01FA 		CLRF	Param7A	;Count03607 0EF8 3008 		MOVLW	MAR003608 0EF9 00F9 		MOVWF	Param79	;addr03609 0EFA 30FF 		MOVLW	0xFF03610 0EFB 00F8 		MOVWF	Param78	;data03611 0EFC 3008 	init_ether_L2	MOVLW	0x0803612 0EFD 027A 		SUBWF	Param7A,W03613 0EFE 1803 		BTFSC	STATUS,C03614 0EFF 2F05 		GOTO	init_ether_1	;exit loop03615 0F00 0879 		MOVF	Param79,W	; outnic(MAR0+i, 0xff); 03616 0F01 275B 		CALL	outnicD78W03617 0F02 0AFA 		INCF	Param7A,F03618 0F03 0AF9 		INCF	Param79,F03619 0F04 2EFC 		GOTO	init_ether_L203620 0F05 	;03621 0F05 	; outnic(CURRP, RXSTART+1) Set current Rx page03622 0F05 3047 	init_ether_1	MOVLW	RXSTART+103623 0F06 00F8 		MOVWF	Param7803624 0F07 3007 		MOVLW	CURRP03625 0F08 275B 		CALL	outnicD78W03626 0F09 	; next_page = RXSTART + 1; 03627 0F09 3047 		MOVLW	RXSTART+103628 0F0A 00B4 		MOVWF	next_page03629 0F0B 3020 		MOVLW	0x20	; outnic(CMDR, 0x20) DMA abort, page 0Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 157500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm03630 0F0C 2758 		CALL	outnic_CMDR_W03631 0F0D 3004 		MOVLW	0x04	; outnic(RCR, 0x04) Accept broadcasts 03632 0F0E 274C 		CALL	outnic_RCR_W03633 0F0F 0103 		CLRW		; outnic(TCR, 0) Normal Tx operation03634 0F10 2749 		CALL	outnic_TCR_W03635 0F11 2760 		CALL	outnic_ISR_FF	; outnic(ISR, 0xff) Clear interrupt flags03636 0F12 3022 		MOVLW	0x22	; outnic(CMDR, 0x22) Start NIC03637 0F13 2F58 		GOTO	outnic_CMDR_W03638 0F14 	;03639 0F14 	;=======================================================================================03640 0F14 	;=======================================================================================03641 0F14 	;  Input a byte from NIC register NE_RESET03642 0F14 	;03643 0F14 	; Entry: none03644 0F14 	; Exit: W & Param78=Data03645 0F14 	; RAM used: Param78 (verified 10/2/02)03646 0F14 	; Calls:(0) none03647 0F14 	;03648 0F14 301F 	innic_NE_RESET	MOVLW	NE_RESET03649 0F15 2F1F 		GOTO	innic03650 0F16 	;03651 0F16 	;=======================================================================================03652 0F16 	;  Input a byte from NIC register CURRP, current page reg for rd and wr03653 0F16 	;03654 0F16 	; Entry: none03655 0F16 	; Exit: W & Param78=Data03656 0F16 	; RAM used: Param78 (verified 10/2/02)03657 0F16 	; Calls:(0) none03658 0F16 	;03659 0F16 3007 	innic_CURRP	MOVLW	CURRP03660 0F17 2F1F 		GOTO	innic03661 0F18 	;03662 0F18 	;=======================================================================================03663 0F18 	;  Input a byte from NIC register ISR, interrupt status reg for rd and wr03664 0F18 	;03665 0F18 	; Entry: none03666 0F18 	; Exit: W & Param78=Data03667 0F18 	; RAM used: Param78 (verified 10/2/02)03668 0F18 	; Calls:(0) none03669 0F18 	;03670 0F18 3007 	innic_ISR	MOVLW	ISR03671 0F19 2F1F 		GOTO	innic03672 0F1A 	;03673 0F1A 	;=======================================================================================03674 0F1A 	;  Input a byte from NIC register RSAR0, low byte of remote start addr03675 0F1A 	;03676 0F1A 	; Entry: none03677 0F1A 	; Exit: W & Param78=Data03678 0F1A 	; RAM used: Param78 (verified 10/2/02)03679 0F1A 	; Calls:(0) none03680 0F1A 	;03681 0F1A 3008 	innic_RSAR0	MOVLW	RSAR003682 0F1B 2F1F 		GOTO	innic03683 0F1C 	;03684 0F1C 	;=======================================================================================03685 0F1C 	;  Input a byte from NIC register RSAR1, hi byte of remote start addr03686 0F1C 	;03687 0F1C 	; Entry: none03688 0F1C 	; Exit: W & Param78=Data03689 0F1C 	; RAM used: Param78 (verified 10/2/02)03690 0F1C 	; Calls:(0) none03691 0F1C 	;03692 0F1C 3009 	innic_RSAR1	MOVLW	RSAR103693 0F1D 2F1F 		GOTO	innic03694 0F1E 	;03695 0F1E 	;=======================================================================================03696 0F1E 	;  Input a byte from NIC register DATAPORT03697 0F1E 	;03698 0F1E 	; Entry: none03699 0F1E 	; Exit: W & Param78=Data03700 0F1E 	; RAM used: Param78 (verified 10/2/02)03701 0F1E 	; Calls:(0) none03702 0F1E 	;03703 0F1E 3010 	innic_Data	MOVLW	DATAPORT03704 0F1F 	;03705 0F1F 	; fall trough to innic03706 0F1F 	;=======================================================================================03707 0F1F 	;  Input a byte from a NIC register03708 0F1F 	;03709 0F1F 	; Entry: W=Address03710 0F1F 	; Exit: W & Param78=Data03711 0F1F 	; RAM used: Param78 (verified 10/2/02)03712 0F1F 	; Calls:(0) none03713 0F1F 	;03714 0F1F 	innic	03715 0F1F 		if UsesRS232BufIO03719 0F1F 		endif03720 0F1F 		mSet8bitAddr03720 0F1F 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103720 0F20 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP0	;Bank003720 0F21 0088      M		MOVWF	PORTD		MOVWF	PORTD03720 0F22 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1	;Bank303720 0F23 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP003720 0F24 00A2      M		MOVWF	CurrentAddr0		MOVWF	CurrentAddr003720 0F25 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP1	;Bank103720 0F26 3000      M		MOVLW	All_Out		MOVLW	All_Out03720 0F27 0088      M		MOVWF	TRISD		MOVWF	TRISD03720 0F28 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP0	;Bank003720 0F29 0806      M		MOVF	PORTB,W		MOVF	PORTB,W03720 0F2A 39F0      M		ANDLW	AddressMask		ANDLW	AddressMaskHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 158500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm03720 0F2B 3800      M		IORLW	Select0		IORLW	Select003720 0F2C 0086      M		MOVWF	PORTB		MOVWF	PORTB03720 0F2D 1206      M		BCF	PORTB,SelectEnable		BCF	PORTB,SelectEnable03720 0F2E 1606      M		BSF	PORTB,SelectEnable		BSF	PORTB,SelectEnable03721 0F2F 		mReadData	SelectNIC03721 0F2F 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP0	;Bank103721 0F30 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103721 0F31 30FF      M		MOVLW	All_In		MOVLW	All_In03721 0F32 0088      M		MOVWF	TRISD		MOVWF	TRISD03721 0F33 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP0	;Bank003721 0F34 0806      M		MOVF	PORTB,W		MOVF	PORTB,W03721 0F35 39F0      M		ANDLW	AddressMask		ANDLW	AddressMask03721 0F36 3804      M		IORLW	SelectNIC		IORLW	arg103721 0F37 0086      M		MOVWF	PORTB		MOVWF	PORTB03721 0F38 1206      M		BCF	PORTB,SelectEnable		BCF	PORTB,SelectEnable03721 0F39 1286      M		BCF	PORTB,IORead		BCF	PORTB,IORead03721 0F3A 0000      M		NOP			NOP		;wait 200nS03721 0F3B 0808      M		MOVF	PORTD,W		MOVF	PORTD,W03721 0F3C 1686      M		BSF	PORTB,IORead		BSF	PORTB,IORead03721 0F3D 1606      M		BSF	PORTB,SelectEnable		BSF	PORTB,SelectEnable03722 0F3E 00F8 		MOVWF	Param7803723 0F3F 		if UsesRS232BufIO03725 0F3F 		endif03726 0F3F 0008 		RETURN03727 0F40 	;03728 0F40 	;============================================================================================03729 0F40 	; Data in W to RSAR003730 0F40 	; entry:W=value for RSAR003731 0F40 	; exit: none03732 0F40 	; RAM used: Param71 (verified 10/2/02)03733 0F40 	; Calls: (0) outnic_W03734 0F40 	;03735 0F40 00F1 	outnic_RSPR0_W	MOVWF	Param7103736 0F41 3008 		MOVLW	RSAR003737 0F42 2F6B 		GOTO	outnic_W03738 0F43 	;03739 0F43 	;===========================================================================03740 0F43 	; Data in W to RSAR103741 0F43 	; entry:W=value for RSAR103742 0F43 	; exit: none03743 0F43 	; RAM used: Param71 (verified 10/2/02)03744 0F43 	; Calls: (0) outnic_W03745 0F43 	;03746 0F43 00F1 	outnic_RSPR1_W	MOVWF	Param7103747 0F44 3009 		MOVLW	RSAR103748 0F45 2F6B 		GOTO	outnic_W03749 0F46 	;03750 0F46 	;===========================================================================03751 0F46 	; Data in W to BNRY03752 0F46 	; entry:W=value for BNRY03753 0F46 	; exit: none03754 0F46 	; RAM used: Param71 (verified 10/2/02)03755 0F46 	; Calls: (0) outnic_W03756 0F46 	;03757 0F46 00F1 	outnic_BNRY_W	MOVWF	Param7103758 0F47 3003 		MOVLW	BNRY03759 0F48 2F6B 		GOTO	outnic_W03760 0F49 	;03761 0F49 	;===========================================================================03762 0F49 	; Data in W to TCR03763 0F49 	; entry:W=value for TCR03764 0F49 	; exit: none03765 0F49 	; RAM used: Param71 (verified 10/2/02)03766 0F49 	; Calls: (0) outnic_W03767 0F49 	;03768 0F49 00F1 	outnic_TCR_W	MOVWF	Param7103769 0F4A 300D 		MOVLW	TCR03770 0F4B 2F6B 		GOTO	outnic_W03771 0F4C 	;03772 0F4C 	;===========================================================================03773 0F4C 	; Data in W to RCR03774 0F4C 	; entry:W=value for RCR03775 0F4C 	; exit: none03776 0F4C 	; RAM used: Param71 (verified 10/2/02)03777 0F4C 	; Calls: (0) outnic_W03778 0F4C 	;03779 0F4C 00F1 	outnic_RCR_W	MOVWF	Param7103780 0F4D 300C 		MOVLW	RCR03781 0F4E 2F6B 		GOTO	outnic_W03782 0F4F 	;03783 0F4F 	;===========================================================================03784 0F4F 	; Set Hi byte of Byte Count to zero03785 0F4F 	; entry:none03786 0F4F 	; exit: none03787 0F4F 	; RAM used: Param71 (verified 10/2/02)03788 0F4F 	; Calls: (0) outnic_W03789 0F4F 	;03790 0F4F 0103 	outnic_RBCR1_0	CLRW03791 0F50 	;03792 0F50 	;03793 0F50 	;===========================================================================03794 0F50 	; Set Hi byte of Byte Count03795 0F50 	; entry: W=byte count03796 0F50 	; exit: none03797 0F50 	; RAM used: Param71 (verified 10/2/02)03798 0F50 	; Calls: (0) outnic_W03799 0F50 	;03800 0F50 00F1 	outnic_RBCR1_W	MOVWF	Param7103801 0F51 300B 		MOVLW	RBCR103802 0F52 2F6B 		GOTO	outnic_WHighland Greeley PIC.asm   "NIC Stuff"                                   Page: 159500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm03803 0F53 	;03804 0F53 	;===========================================================================03805 0F53 	; Set low byte of Byte Count to 103806 0F53 	; entry: none03807 0F53 	; exit: none03808 0F53 	; RAM used: Param71 (verified 10/2/02)03809 0F53 	; Calls: (0) outnic_W03810 0F53 	;03811 0F53 3001 	outnic_RBCR0_1	MOVLW	0x0103812 0F54 	;03813 0F54 	;===========================================================================03814 0F54 	; Set low byte of Byte Count03815 0F54 	; entry: W=byte count03816 0F54 	; exit: none03817 0F54 	; RAM used: Param71 (verified 10/2/02)03818 0F54 	; Calls: (0) outnic_W03819 0F54 	;03820 0F54 00F1 	outnic_RBCR0_W	MOVWF	Param7103821 0F55 300A 		MOVLW	RBCR003822 0F56 2F6B 		GOTO	outnic_W03823 0F57 	;03824 0F57 	;03825 0F57 	;===========================================================================03826 0F57 	; outnic(CMDR, 0x0a) Start, DMA remote read03827 0F57 	; entry: none03828 0F57 	; exit: none03829 0F57 	; RAM used: Param71 (verified 10/2/02)03830 0F57 	; Calls: (0) outnic_CMDR_W, outnic_W03831 0F57 	;03832 0F57 300A 	outnic_CMDR_0A	MOVLW	0x0A03833 0F58 	; fall through to outnic_CMDR_W03834 0F58 	;03835 0F58 	;===========================================================================03836 0F58 	; Data in W to CMDR03837 0F58 	; entry: W=Data03838 0F58 	; exit: none03839 0F58 	; RAM used: Param71 (verified 10/2/02)03840 0F58 	; Calls: (0) outnic_W03841 0F58 	;03842 0F58 00F1 	outnic_CMDR_W	MOVWF	Param7103843 0F59 0103 		CLRW03844 0F5A 2F6B 		GOTO	outnic_W03845 0F5B 	;03846 0F5B 	;===========================================================================03847 0F5B 	; outnicD78W   Data in Param78 Address in W03848 0F5B 	; entry: W=Addr, Param78=Data03849 0F5B 	; exit: Param78 unchanged03850 0F5B 	; RAM used: Param70, Param71, Param78 (verified 10/2/02)03851 0F5B 	; Calls: (0) outnic_W03852 0F5B 	;03853 0F5B 00F0 	outnicD78W	MOVWF	Param7003854 0F5C 0878 		MOVF	Param78,W03855 0F5D 00F1 		MOVWF	Param7103856 0F5E 0870 		MOVF	Param70,W03857 0F5F 2F6B 		GOTO	outnic_W03858 0F60 	;03859 0F60 	;===============================================================03860 0F60 	; outnic(ISR, 0xff);  Clear interrupt flags03861 0F60 	; Entry: none03862 0F60 	; Exit: none03863 0F60 	; RAM used: Param71 (verified 10/2/02)03864 0F60 	; Calls: (0) outnic_ISR, outnic_W03865 0F60 	;03866 0F60 30FF 	outnic_ISR_FF	MOVLW	0xFF03867 0F61 00F1 		MOVWF	Param7103868 0F62 2F6A 		GOTO	outnic_ISR03869 0F63 		GOTO	outnic_ISR03870 0F63 	;03871 0F63 	;===============================================================03872 0F63 	; Data in W to ISR03873 0F63 	; outnic(ISR, W);  Clear interrupt flags03874 0F63 	; Entry: W=value for ISR03875 0F63 	; Exit: none03876 0F63 	; RAM used: Param71 (verified 10/2/02)03877 0F63 	; Calls: (0) outnic_ISR, outnic_W03878 0F63 	;03879 0F63 00F1 	outnit_ISR_W	MOVWF	Param7103880 0F64 2F6A 		GOTO	outnic_ISR03881 0F65 	;03882 0F65 	;===============================================================03883 0F65 	; outnic(ISR, 0x0A);  Clear interrupt flags03884 0F65 	; Entry: none03885 0F65 	; Exit: none03886 0F65 	; RAM used: Param71 (verified 10/2/02)03887 0F65 	; Calls: (0) outnic_ISR, outnic_W03888 0F65 	;03889 0F65 300A 	outnic_ISR_0A	MOVLW	0x0A03890 0F66 00F1 		MOVWF	Param7103891 0F67 2F6A 		GOTO	outnic_ISR03892 0F68 		GOTO	outnic_ISR03893 0F68 	;03894 0F68 	;===============================================================03895 0F68 	; outnic(ISR, 0x40) Clear remote DMA interrupt flag03896 0F68 	; Entry: none03897 0F68 	; Exit: none03898 0F68 	; RAM used: Param71 (verified 10/2/02)03899 0F68 	; Calls: (0) outnic_ISR, outnic_W03900 0F68 	;03901 0F68 3040 	outnic_ISR40	MOVLW	0x4003902 0F69 00F1 		MOVWF	Param71Highland Greeley PIC.asm   "NIC Stuff"                                   Page: 160500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:NICStuff.asm03903 0F6A 	;03904 0F6A 	;===============================================================03905 0F6A 	; Write the value in Param71 to the NICs ISR register03906 0F6A 	;03907 0F6A 	; Entry: Param71=value for ISR03908 0F6A 	; Exit: none03909 0F6A 	; RAM used: Param71 (verified 10/2/02)03910 0F6A 	; Calls: (0) outnic_W03911 0F6A 	;03912 0F6A 3007 	outnic_ISR	MOVLW	ISR03913 0F6B 	;03914 0F6B 	;===========================================================================03915 0F6B 	; Output a byte to a NIC register03916 0F6B 	; Entry: Param70=Address, Param71=Data03917 0F6B 	; Exit: none03918 0F6B 	; RAM used: Param71 (verified 10/2/02)03919 0F6B 	; Calls: (0) none03920 0F6B 	;03921 0F6B 	outnic_W	03922 0F6B 		if UsesRS232BufIO03926 0F6B 		endif03927 0F6B 		mSet8bitAddr03927 0F6B 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP103927 0F6C 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP0	;Bank003927 0F6D 0088      M		MOVWF	PORTD		MOVWF	PORTD03927 0F6E 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1	;Bank303927 0F6F 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP003927 0F70 00A2      M		MOVWF	CurrentAddr0		MOVWF	CurrentAddr003927 0F71 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP1	;Bank103927 0F72 3000      M		MOVLW	All_Out		MOVLW	All_Out03927 0F73 0088      M		MOVWF	TRISD		MOVWF	TRISD03927 0F74 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP0	;Bank003927 0F75 0806      M		MOVF	PORTB,W		MOVF	PORTB,W03927 0F76 39F0      M		ANDLW	AddressMask		ANDLW	AddressMask03927 0F77 3800      M		IORLW	Select0		IORLW	Select003927 0F78 0086      M		MOVWF	PORTB		MOVWF	PORTB03927 0F79 1206      M		BCF	PORTB,SelectEnable		BCF	PORTB,SelectEnable03927 0F7A 1606      M		BSF	PORTB,SelectEnable		BSF	PORTB,SelectEnable03928 0F7B 		mWriteData	SelectNIC,Param7103928 0F7B 0871      M		MOVF	Param71,W		MOVF	Data,W03928 0F7C 0088      M		MOVWF	PORTD		MOVWF	PORTD03928 0F7D      M				;03928 0F7D 0806      M		MOVF	PORTB,W		MOVF	PORTB,W03928 0F7E 39F0      M		ANDLW	AddressMask		ANDLW	AddressMask03928 0F7F 3804      M		IORLW	SelectNIC		IORLW	arg103928 0F80 0086      M		MOVWF	PORTB		MOVWF	PORTB03928 0F81 1206      M		BCF	PORTB,SelectEnable		BCF	PORTB,SelectEnable03928 0F82 1306      M		BCF	PORTB,IOWrite		BCF	PORTB,IOWrite03928 0F83 1706      M		BSF	PORTB,IOWrite		BSF	PORTB,IOWrite	03928 0F84 1606      M		BSF	PORTB,SelectEnable		BSF	PORTB,SelectEnable03929 0F85 		if UsesRS232BufIO03931 0F85 		endif03932 0F85 0008 		RETURN03933 0F86 	;03934 0F86 	;03935 0F86 	;03936 0F86 	;01013 0F86 		include	Main.asm	; 0x100000001 0F86 		subtitle	"Main.asm"00002 0F86 		page00003 0F86 	;============================================================================================00004 0F86 	;00005 0F86 	;  FileName: Main.asm00006 0F86 	;  Date: 2/9/201300007 0F86 	;  File Version: 1.0.100008 0F86 	;  00009 0F86 	;  Author: David M. Flynn00010 0F86 	;  Company: HPRR00011 0F86 	;  Project: TCC00012 0F86 	;00013 0F86 	;============================================================================================00014 0F86 	; Notes:00015 0F86 	;  This file is common to all TCC computers.00016 0F86 	;  It calls SetupDMFEIO at startup, and DoDMFEIO each pass through the event loop.00017 0F86 	;00018 0F86 	;============================================================================================00019 0F86 	; Revision History00020 0F86 	;00021 0F86 	; 1.0.1 2/9/2013	Changed "Call DoDMFEIO" to GOTO and DoDMFEIO_RTN00022 0F86 	; 1.0   9/6/2004	First Reved version.00023 0F86 	;00024 0F86 	;============================================================================================00025 0F86 		ORG	0x100000026 1000 	;00027 1000 	; IP addresses of CPU's00028 1000 007C 	UDP_RxIP_HIGY	EQU	d'124'	;Highland/Greeley Panel00029 1000 007D 	UDP_RxIP_Tcc	EQU	d'125'	;TCC Display00030 1000 007E 	UDP_RxIP_Sig	EQU	d'126'	;Signals00031 1000 007F 	UDP_RxIP_MP	EQU	d'127'	;Main Panel, This is me00032 1000 	;IP 128 in not used00033 1000 0081 	UDP_RxIP_BPKB	EQU	d'129'	;Block power keyboard00034 1000 0082 	UDP_RxIP_CT	EQU	d'130'	;Casper Tower00035 1000 0083 	UDP_RxIP_VW	EQU	d'131'	;Vista and Westend Yards00036 1000 0084 	UDP_RxIP_OT	EQU	d'132'	;Overview Tower00037 1000 0085 	UDP_RxIP_C1	EQU	d'133'	;CAB 100038 1000 0086 	UDP_RxIP_C2	EQU	d'134'	;CAB 200039 1000 0087 	UDP_RxIP_C3	EQU	d'135'	;CAB 300040 1000 0088 	UDP_RxIP_C4	EQU	d'136'	;CAB 400041 1000 0089 	UDP_RxIP_C5	EQU	d'137'	;CAB 5Highland Greeley PIC.asm   "Main.asm"                                    Page: 161500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Main.asm00042 1000 008A 	UDP_RxIP_AT	EQU	d'138'	;Arcadia Tower00043 1000 008B 	UDP_RxIP_BT	EQU	d'139'	;Baker Tower00044 1000 008C 	UDP_RxIP_DT	EQU	d'140'	;Dawson Tower00045 1000 008D 	UDP_RxIP_BV	EQU	d'141'	;Bayshore Valley Traction Co.00046 1000 008E 	UDP_RxIP_DM	EQU	d'142'	;Delmar Passenger Terminal00047 1000 	;00048 1000 0001 	kUDP_DataType_LoSM	EQU	0x0100049 1000 0002 	kUDP_DataType_HiSM	EQU	0x0200050 1000 0003 	kUDP_DataType_BkPwr	EQU	0x0300051 1000 0004 	kUDP_DataType_BkOcc	EQU	0x0400052 1000 0005 	kUDP_DataType_BlkCmd	EQU	0x0500053 1000 0006 	kUDP_DataType_BkPwr2	EQU	0x0600054 1000 0007 	kUDP_DataType_BlkCmd2	EQU	0x0700055 1000 0008 	kUDP_DataType_IN	EQU	0x08	;Signal System Inputs (optical block detectors, etc)00056 1000 	;00057 1000 	;00058 1000 	; Name	(additional stack words required) Description00059 1000 	;================================================================================================00060 1000 	;calls outside this segment00061 1000 	;Disp_decbyteW_D10	(1+1+2)00062 1000 	;lcd_gotoxy_D10	(1+1+0) Go to an X-Y position on the display, top left is 0, 0 (W,Param78)00063 1000 	;PrintString_D10	(1+1+2)00064 1000 	;Disp_Hex_Byte_D10	(1+1+2) (testing only)00065 1000 	;DisplaysW_D10	(1+1+1)00066 1000 	;00067 1000 	;=============================================================================00068 1000 	;segment 2 routines00069 1000 	;00070 1000 	;Main	(1+4) Program entry point00071 1000 	;  MainLoop00072 1000 	;  InitSvsMode00073 1000 	;    TestSW200074 1000 	;    TestSW300075 1000 	;    TestSW400076 1000 	;  MainLoop_IP00077 1000 	;00078 1000 	;DispStrLine100079 1000 	;DispIP00080 1000 	;00081 1000 	;OnTheTick	(1+0) Routines that run once every 1/20th of a second00082 1000 	;  StopWater00083 1000 	;  StartWater00084 1000 	;  StartSpent00085 1000 	;  StopSpent00086 1000 	;  AutoFillStop00087 1000 	;  UpdatePnlCount00088 1000 	;00089 1000 	;ClearRam	(1+0) Clear all RAM00090 1000 	;00091 1000 	;WritePwrUpRec00092 1000 	;OnTheHalfSecond	Routines that run once every 1/2 of a second00093 1000 	;SetSRAM_evWater	(0) Set the SRAM address for access to the next byte in the Water event record00094 1000 	;SetupOldPulses	(0) The pulse counters come up random so preload old pulses to avoid an error00095 1000 	;00096 1000 	;=============================================================================00097 1000 	;00098 1000 	;Dispatch routines (this is segment 2)00099 1000 	;00100 1000 	;segment 000101 1000 	;	if UsesLCD00102 1000 	;Disp_decbyteW_D10	mCall2To0	Disp_decbyteW00103 1000 	;	RETURN00104 1000 	;00105 1000 	Disp_decword_D10	mCall2To0	Disp_decword00105 1000 120A      M		BCF	PCLATH,4		BCF	PCLATH,400105 1001 20F8      M		CALL	Disp_decword		CALL	Destination00105 1002 118A      M		BCF	PCLATH,3		BCF	PCLATH,300105 1003 160A      M		BSF	PCLATH,4		BSF	PCLATH,400106 1004 0008 		RETURN00107 1005 	;00108 1005 3003 	lcd_GotoLine3	MOVLW	0x0300109 1006 280C 		GOTO	lcd_GotoLineW_D1000110 1007 3002 	lcd_GotoLine2	MOVLW	0x0200111 1008 280C 		GOTO	lcd_GotoLineW_D1000112 1009 3001 	lcd_GotoLine1	MOVLW	0x0100113 100A 280C 		GOTO	lcd_GotoLineW_D1000114 100B 0103 	lcd_GotoLine0	CLRW00115 100C 	;00116 100C 	lcd_GotoLineW_D10	mCall2To0	lcd_GotoLineW00116 100C 120A      M		BCF	PCLATH,4		BCF	PCLATH,400116 100D 2353      M		CALL	lcd_GotoLineW		CALL	Destination00116 100E 118A      M		BCF	PCLATH,3		BCF	PCLATH,300116 100F 160A      M		BSF	PCLATH,4		BSF	PCLATH,400117 1010 0008 		RETURN00118 1011 	;00119 1011 	lcd_gotoxy_D10	mCall2To0	lcd_gotoxy	;top left is 0,0 (W,Param78)00119 1011 120A      M		BCF	PCLATH,4		BCF	PCLATH,400119 1012 2355      M		CALL	lcd_gotoxy		CALL	Destination00119 1013 118A      M		BCF	PCLATH,3		BCF	PCLATH,300119 1014 160A      M		BSF	PCLATH,4		BSF	PCLATH,400120 1015 0008 		RETURN00121 1016 	;00122 1016 	PrintString_D10	mCall2To0	PrintString00122 1016 120A      M		BCF	PCLATH,4		BCF	PCLATH,400122 1017 209F      M		CALL	PrintString		CALL	Destination00122 1018 118A      M		BCF	PCLATH,3		BCF	PCLATH,300122 1019 160A      M		BSF	PCLATH,4		BSF	PCLATH,400123 101A 0008 		RETURN00124 101B 	;00125 101B 	Disp_Hex_Byte_D10	mCall2To0	Disp_Hex_ByteHighland Greeley PIC.asm   "Main.asm"                                    Page: 162500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Main.asm00125 101B 120A      M		BCF	PCLATH,4		BCF	PCLATH,400125 101C 239A      M		CALL	Disp_Hex_Byte		CALL	Destination00125 101D 118A      M		BCF	PCLATH,3		BCF	PCLATH,300125 101E 160A      M		BSF	PCLATH,4		BSF	PCLATH,400126 101F 0008 		RETURN00127 1020 	;00128 1020 	;00129 1020 	;Disp_Dot	MOVLW	'.'00130 1020 	;	GOTO	DisplaysW_D1000131 1020 3020 	Disp_Space	MOVLW	' '00132 1021 2823 		GOTO	DisplaysW_D1000133 1022 303A 	Disp_Colon	MOVLW	':'00134 1023 	DisplaysW_D10	mCall2To0	DisplaysW00134 1023 120A      M		BCF	PCLATH,4		BCF	PCLATH,400134 1024 23AB      M		CALL	DisplaysW		CALL	Destination00134 1025 118A      M		BCF	PCLATH,3		BCF	PCLATH,300134 1026 160A      M		BSF	PCLATH,4		BSF	PCLATH,400135 1027 0008 		RETURN00136 1028 		endif		;if UsesLCD00137 1028 	;00138 1028 		if UsesDataLogging00141 1028 		endif00142 1028 	;00143 1028 	;ReadEEROM_D10	mCall2To0	ReadEEROM00144 1028 	;	RETURN00145 1028 	;00146 1028 	;WriteEEROM_D10	mCall2To0	WriteEEROM00147 1028 	;	RETURN00148 1028 	;00149 1028 	WriteEEP79W_D10	mCall2To0	WriteEEP79W00149 1028 120A      M		BCF	PCLATH,4		BCF	PCLATH,400149 1029 23D6      M		CALL	WriteEEP79W		CALL	Destination00149 102A 118A      M		BCF	PCLATH,3		BCF	PCLATH,300149 102B 160A      M		BSF	PCLATH,4		BSF	PCLATH,400150 102C 0008 		RETURN00151 102D 	;00152 102D 	SRAM_Read_D10	mCall2To0	SRAM_Read00152 102D 120A      M		BCF	PCLATH,4		BCF	PCLATH,400152 102E 2268      M		CALL	SRAM_Read		CALL	Destination00152 102F 118A      M		BCF	PCLATH,3		BCF	PCLATH,300152 1030 160A      M		BSF	PCLATH,4		BSF	PCLATH,400153 1031 0008 		RETURN00154 1032 	;00155 1032 	;SRAM_NextAddr_D10	mCall2To0	SRAM_NextAddr00156 1032 	;	RETURN00157 1032 	;00158 1032 	;Delay1Sec_D10	mCall2To0	Delay1Sec00159 1032 	;	RETURN00160 1032 	;00161 1032 	DelayWmS_D10	mCall2To0	DelayWmS00161 1032 120A      M		BCF	PCLATH,4		BCF	PCLATH,400161 1033 22EC      M		CALL	DelayWmS		CALL	Destination00161 1034 118A      M		BCF	PCLATH,3		BCF	PCLATH,300161 1035 160A      M		BSF	PCLATH,4		BSF	PCLATH,400162 1036 0008 		RETURN00163 1037 	;00164 1037 	;DelayWuS_D10	mCall2To0	DelayWuS00165 1037 	;	RETURN00166 1037 	;00167 1037 	;WriteLDO_0_D10	mCall2To0	WriteLDO_000168 1037 	;	RETURN00169 1037 	;00170 1037 	;WriteLDO_1_D10	mCall2To0	WriteLDO_100171 1037 	;	RETURN00172 1037 	;00173 1037 	ReadEEwW_D10	mCall2To0	ReadEEwW00173 1037 120A      M		BCF	PCLATH,4		BCF	PCLATH,400173 1038 23C7      M		CALL	ReadEEwW		CALL	Destination00173 1039 118A      M		BCF	PCLATH,3		BCF	PCLATH,300173 103A 160A      M		BSF	PCLATH,4		BSF	PCLATH,400174 103B 0008 		RETURN00175 103C 	;00176 103C 	DispIP_D10	mCall2To0	DispIP00176 103C 120A      M		BCF	PCLATH,4		BCF	PCLATH,400176 103D 2583      M		CALL	DispIP		CALL	Destination00176 103E 118A      M		BCF	PCLATH,3		BCF	PCLATH,300176 103F 160A      M		BSF	PCLATH,4		BSF	PCLATH,400177 1040 0008 		RETURN00178 1041 	;00179 1041 	;DispIP_E2_D10	mCall2To0	DispIP_E200180 1041 	;	RETURN00181 1041 	;00182 1041 	;DispMAC_D10	mCall2To0	DispMAC00183 1041 	;	RETURN00184 1041 	;00185 1041 	;DispMAC_E2_D10	mCall2To0	DispMAC_E200186 1041 	;	RETURN00187 1041 	;00188 1041 	;Disp_decbyteW2pl_D10	mCall2To0	Disp_decbyteW2pl00189 1041 	;	RETURN00190 1041 	;00191 1041 	SRAM_ReadPI_D10	mCall2To0	SRAM_ReadPI00191 1041 120A      M		BCF	PCLATH,4		BCF	PCLATH,400191 1042 2252      M		CALL	SRAM_ReadPI		CALL	Destination00191 1043 118A      M		BCF	PCLATH,3		BCF	PCLATH,300191 1044 160A      M		BSF	PCLATH,4		BSF	PCLATH,400192 1045 0008 		RETURN00193 1046 	;00194 1046 	SRAM_WritePI_D10	mCall2To0	SRAM_WritePI00194 1046 120A      M		BCF	PCLATH,4		BCF	PCLATH,4Highland Greeley PIC.asm   "Main.asm"                                    Page: 163500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Main.asm00194 1047 2236      M		CALL	SRAM_WritePI		CALL	Destination00194 1048 118A      M		BCF	PCLATH,3		BCF	PCLATH,300194 1049 160A      M		BSF	PCLATH,4		BSF	PCLATH,400195 104A 0008 		RETURN00196 104B 	;00197 104B 	SRAM_Write_D10	mCall2To0	SRAM_Write00197 104B 120A      M		BCF	PCLATH,4		BCF	PCLATH,400197 104C 223A      M		CALL	SRAM_Write		CALL	Destination00197 104D 118A      M		BCF	PCLATH,3		BCF	PCLATH,300197 104E 160A      M		BSF	PCLATH,4		BSF	PCLATH,400198 104F 0008 		RETURN00199 1050 	;00200 1050 	SRAM_ReadDR_D10	mCall2To0	SRAM_ReadDR00200 1050 120A      M		BCF	PCLATH,4		BCF	PCLATH,400200 1051 224B      M		CALL	SRAM_ReadDR		CALL	Destination00200 1052 118A      M		BCF	PCLATH,3		BCF	PCLATH,300200 1053 160A      M		BSF	PCLATH,4		BSF	PCLATH,400201 1054 0008 		RETURN00202 1055 	;00203 1055 	;Disp_decbyteW3pl_D10	mCall2To0	Disp_decbyteW3pl00204 1055 	;	RETURN00205 1055 	;00206 1055 	ReadEE79_D10	mCall2To0	ReadEE7900206 1055 120A      M		BCF	PCLATH,4		BCF	PCLATH,400206 1056 23C3      M		CALL	ReadEE79		CALL	Destination00206 1057 118A      M		BCF	PCLATH,3		BCF	PCLATH,300206 1058 160A      M		BSF	PCLATH,4		BSF	PCLATH,400207 1059 0008 		RETURN00208 105A 	;00209 105A 	;write_nonvol_D10	mCall2To0	write_nonvol00210 105A 	;	RETURN00211 105A 	;00212 105A 		if UsesSeg0DataAccess00213 105A 	GetBlkOwnerX_D10	mCall2To0	GetBlkOwnerX00213 105A 120A      M		BCF	PCLATH,4		BCF	PCLATH,400213 105B 25A4      M		CALL	GetBlkOwnerX		CALL	Destination00213 105C 118A      M		BCF	PCLATH,3		BCF	PCLATH,300213 105D 160A      M		BSF	PCLATH,4		BSF	PCLATH,400214 105E 0008 		RETURN00215 105F 		if UsesGetCabNumX00216 105F 	GetCabNumX_D10	mCall2To0	GetCabNumX00216 105F 120A      M		BCF	PCLATH,4		BCF	PCLATH,400216 1060 25AD      M		CALL	GetCabNumX		CALL	Destination00216 1061 118A      M		BCF	PCLATH,3		BCF	PCLATH,300216 1062 160A      M		BSF	PCLATH,4		BSF	PCLATH,400217 1063 0008 		RETURN00218 1064 		endif00219 1064 	GetSMTableHighX_D10	mCall2To0	GetSMTableHighX00219 1064 120A      M		BCF	PCLATH,4		BCF	PCLATH,400219 1065 25E1      M		CALL	GetSMTableHighX		CALL	Destination00219 1066 118A      M		BCF	PCLATH,3		BCF	PCLATH,300219 1067 160A      M		BSF	PCLATH,4		BSF	PCLATH,400220 1068 0008 		RETURN00221 1069 	GetGet_1X_D10	mCall2To0	GetGet_1X00221 1069 120A      M		BCF	PCLATH,4		BCF	PCLATH,400221 106A 25E2      M		CALL	GetGet_1X		CALL	Destination00221 106B 118A      M		BCF	PCLATH,3		BCF	PCLATH,300221 106C 160A      M		BSF	PCLATH,4		BSF	PCLATH,400222 106D 0008 		RETURN00223 106E 	GetGet_Read_D10	mCall2To0	GetGet_Read00223 106E 120A      M		BCF	PCLATH,4		BCF	PCLATH,400223 106F 25E5      M		CALL	GetGet_Read		CALL	Destination00223 1070 118A      M		BCF	PCLATH,3		BCF	PCLATH,300223 1071 160A      M		BSF	PCLATH,4		BSF	PCLATH,400224 1072 0008 		RETURN00225 1073 	SetSMTableHighX_D10	mCall2To0	SetSMTableHighX00225 1073 120A      M		BCF	PCLATH,4		BCF	PCLATH,400225 1074 25EB      M		CALL	SetSMTableHighX		CALL	Destination00225 1075 118A      M		BCF	PCLATH,3		BCF	PCLATH,300225 1076 160A      M		BSF	PCLATH,4		BSF	PCLATH,400226 1077 0008 		RETURN00227 1078 	GetCurBlkY_D10	mCall2To0	GetCurBlkY00227 1078 120A      M		BCF	PCLATH,4		BCF	PCLATH,400227 1079 25EE      M		CALL	GetCurBlkY		CALL	Destination00227 107A 118A      M		BCF	PCLATH,3		BCF	PCLATH,300227 107B 160A      M		BSF	PCLATH,4		BSF	PCLATH,400228 107C 0008 		RETURN00229 107D 	GetSMDispPtrY_D10	mCall2To0	GetSMDispPtrY00229 107D 120A      M		BCF	PCLATH,4		BCF	PCLATH,400229 107E 25F6      M		CALL	GetSMDispPtrY		CALL	Destination00229 107F 118A      M		BCF	PCLATH,3		BCF	PCLATH,300229 1080 160A      M		BSF	PCLATH,4		BSF	PCLATH,400230 1081 0008 		RETURN00231 1082 	GetBlockCmdTableX_D10	mCall2To0	GetBlockCmdTableX00231 1082 120A      M		BCF	PCLATH,4		BCF	PCLATH,400231 1083 25FE      M		CALL	GetBlockCmdTableX		CALL	Destination00231 1084 118A      M		BCF	PCLATH,3		BCF	PCLATH,300231 1085 160A      M		BSF	PCLATH,4		BSF	PCLATH,400232 1086 0008 		RETURN00233 1087 	SetBlockCmdTableX_D10	mCall2To0	SetBlockCmdTableX00233 1087 120A      M		BCF	PCLATH,4		BCF	PCLATH,400233 1088 2600      M		CALL	SetBlockCmdTableX		CALL	Destination00233 1089 118A      M		BCF	PCLATH,3		BCF	PCLATH,300233 108A 160A      M		BSF	PCLATH,4		BSF	PCLATH,400234 108B 0008 		RETURN00235 108C 	GetBlockCmdTable2X_D10	mCall2To0	GetBlockCmdTable2X00235 108C 120A      M		BCF	PCLATH,4		BCF	PCLATH,400235 108D 2603      M		CALL	GetBlockCmdTable2X		CALL	Destination00235 108E 118A      M		BCF	PCLATH,3		BCF	PCLATH,300235 108F 160A      M		BSF	PCLATH,4		BSF	PCLATH,4Highland Greeley PIC.asm   "Main.asm"                                    Page: 164500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Main.asm00236 1090 0008 		RETURN00237 1091 	SetBlockCmdTable2X_D10	mCall2To0	SetBlockCmdTable2X00237 1091 120A      M		BCF	PCLATH,4		BCF	PCLATH,400237 1092 2605      M		CALL	SetBlockCmdTable2X		CALL	Destination00237 1093 118A      M		BCF	PCLATH,3		BCF	PCLATH,300237 1094 160A      M		BSF	PCLATH,4		BSF	PCLATH,400238 1095 0008 		RETURN00239 1096 	GetBlockPwrTableX_D10	mCall2To0	GetBlockPwrTableX00239 1096 120A      M		BCF	PCLATH,4		BCF	PCLATH,400239 1097 2608      M		CALL	GetBlockPwrTableX		CALL	Destination00239 1098 118A      M		BCF	PCLATH,3		BCF	PCLATH,300239 1099 160A      M		BSF	PCLATH,4		BSF	PCLATH,400240 109A 0008 		RETURN00241 109B 	SetBlockPwrTableX_D10	mCall2To0	SetBlockPwrTableX00241 109B 120A      M		BCF	PCLATH,4		BCF	PCLATH,400241 109C 260A      M		CALL	SetBlockPwrTableX		CALL	Destination00241 109D 118A      M		BCF	PCLATH,3		BCF	PCLATH,300241 109E 160A      M		BSF	PCLATH,4		BSF	PCLATH,400242 109F 0008 		RETURN00243 10A0 	SetSet_1X_D10	mCall2To0	SetSet_1X00243 10A0 120A      M		BCF	PCLATH,4		BCF	PCLATH,400243 10A1 260C      M		CALL	SetSet_1X		CALL	Destination00243 10A2 118A      M		BCF	PCLATH,3		BCF	PCLATH,300243 10A3 160A      M		BSF	PCLATH,4		BSF	PCLATH,400244 10A4 0008 		RETURN00245 10A5 	GetBlockPwrTable2X_D10	mCall2To0	GetBlockPwrTable2X00245 10A5 120A      M		BCF	PCLATH,4		BCF	PCLATH,400245 10A6 2614      M		CALL	GetBlockPwrTable2X		CALL	Destination00245 10A7 118A      M		BCF	PCLATH,3		BCF	PCLATH,300245 10A8 160A      M		BSF	PCLATH,4		BSF	PCLATH,400246 10A9 0008 		RETURN00247 10AA 	SetBlockPwrTable2X_D10	mCall2To0	SetBlockPwrTable2X00247 10AA 120A      M		BCF	PCLATH,4		BCF	PCLATH,400247 10AB 2616      M		CALL	SetBlockPwrTable2X		CALL	Destination00247 10AC 118A      M		BCF	PCLATH,3		BCF	PCLATH,300247 10AD 160A      M		BSF	PCLATH,4		BSF	PCLATH,400248 10AE 0008 		RETURN00249 10AF 	GetSMTableX_D10	mCall2To0	GetSMTableX00249 10AF 120A      M		BCF	PCLATH,4		BCF	PCLATH,400249 10B0 2619      M		CALL	GetSMTableX		CALL	Destination00249 10B1 118A      M		BCF	PCLATH,3		BCF	PCLATH,300249 10B2 160A      M		BSF	PCLATH,4		BSF	PCLATH,400250 10B3 0008 		RETURN00251 10B4 	SetSMTableX_D10	mCall2To0	SetSMTableX00251 10B4 120A      M		BCF	PCLATH,4		BCF	PCLATH,400251 10B5 261B      M		CALL	SetSMTableX		CALL	Destination00251 10B6 118A      M		BCF	PCLATH,3		BCF	PCLATH,300251 10B7 160A      M		BSF	PCLATH,4		BSF	PCLATH,400252 10B8 0008 		RETURN00253 10B9 		else00275 10B9 		endif00276 10B9 	;00277 10B9 	;=================================================================================================00278 10B9 	; Definitions for filesystem00279 10B9 	; 00280 10B9 	; The filesystem is in 1 or 2 ROMs (32k bytes each). At the start of the first ROM is a 00281 10B9 	; directory of 1 or more filename blocks, each of which have pointers to 00282 10B9 	; data blocks. The end of the directory is marked by a dummy length of FFFFh 00283 10B9 	; 00284 10B9 	; All the files include the appropriate HTTP headers. 00285 10B9 	; 00286 10B9 	; 00287 10B9 	; Filename block structure00288 10B9 	; WORD len;	Length of file in bytes00289 10B9 	; WORD start;	Start address of file data in ROM00290 10B9 	; WORD check;	TCP checksum of file00291 10B9 	; BYTE flags;	Embedded Gateway Interface (EGI) flags00292 10B9 	; char name[ROM_FNAMELEN]; Lower-case filename with extension00293 10B9 	; 	00294 10B9 	;00295 10B9 	;====================================================================================00296 10B9 	;====================================================================================00297 10B9 	; Entry: none00298 10B9 	; Exit: doesn't00299 10B9 	; RAM used:00300 10B9 	; Calls:(1+4) StandardInits, read_nonvol, 00301 10B9 	;	user_config, init_ether, Disp_decbyteW_D10, scan_io,00302 10B9 	;	get_ether, lcd_gotoxy, arp_recv, ip_recv00303 10B9 	;00304 10B9 	Main	mCall2To0	StandardInits00304 10B9 120A      M		BCF	PCLATH,4		BCF	PCLATH,400304 10BA 2005      M		CALL	StandardInits		CALL	Destination00304 10BB 118A      M		BCF	PCLATH,3		BCF	PCLATH,300304 10BC 160A      M		BSF	PCLATH,4		BSF	PCLATH,400305 10BD 	;00306 10BD 		mCall2To0	SetupDataROM00306 10BD 120A      M		BCF	PCLATH,4		BCF	PCLATH,400306 10BE 24B8      M		CALL	SetupDataROM		CALL	Destination00306 10BF 118A      M		BCF	PCLATH,3		BCF	PCLATH,300306 10C0 160A      M		BSF	PCLATH,4		BSF	PCLATH,400307 10C1 	;00308 10C1 	;00309 10C1 	; while (!read_nonvol() || !USER_BUTTON)  If csum error, or button 00310 10C1 	InitDoOver	mCall2To0	read_nonvol	;myeth4, myeth5, myip00310 10C1 120A      M		BCF	PCLATH,4		BCF	PCLATH,400310 10C2 23F9      M		CALL	read_nonvol		CALL	Destination00310 10C3 118A      M		BCF	PCLATH,3		BCF	PCLATH,300310 10C4 160A      M		BSF	PCLATH,4		BSF	PCLATH,400311 10C5 	;00312 10C5 08F8 		MOVF	Param78,F	;1=okHighland Greeley PIC.asm   "Main.asm"                                    Page: 165500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Main.asm00313 10C6 		SKPZ00313 10C6 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00314 10C7 28CA 		GOTO	GoForEther	;MAC address ok and not button00315 10C8 	;00316 10C8 	;Error!  No MAC address00317 10C8 2711 	NoMACError	CALL	write_nonvol_D1000318 10C9 	;00319 10C9 28C1 		GOTO	InitDoOver	;loop until we have a MAC address00320 10CA 		GOTO	InitDoOver	;loop until we have a MAC address00321 10CA 	;00322 10CA 	GoForEther	mCall2To1	init_ether	;Init Ethernet 00322 10CA 158A      M		BSF	PCLATH,3		BSF	PCLATH,300322 10CB 120A      M		BCF	PCLATH,4		BCF	PCLATH,400322 10CC 26AB      M		CALL	init_ether		CALL	Destination00322 10CD 118A      M		BCF	PCLATH,3		BCF	PCLATH,300322 10CE 160A      M		BSF	PCLATH,4		BSF	PCLATH,400323 10CF 	;00324 10CF 	;00325 10CF 	;00326 10CF 	;00327 10CF 		mCall2To3	SetupDMFEIO00327 10CF 158A      M		BSF	PCLATH,3		BSF	PCLATH,300327 10D0 23F1      M		CALL	SetupDMFEIO		CALL	Destination00327 10D1 118A      M		BCF	PCLATH,3		BCF	PCLATH,300327 10D2 160A      M		BSF	PCLATH,4		BSF	PCLATH,400328 10D3 		mBank000328 10D3 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000328 10D4 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100329 10D5 17A5 		BSF	DispLSpaces00330 10D6 25DD 		CALL	StartRunMode00331 10D7 	;00332 10D7 		if StartupInSvsMode00333 10D7 1428 		BSF	ServiceMode00334 10D8 259E 		CALL	StartSvsMode00335 10D9 		endif00336 10D9 	;=================================================================================================00337 10D9 	;=================================================================================================00338 10D9 	;00339 10D9 	;        Main loop...00340 10D9 	;00341 10D9 	;=================================================================================================00342 10D9 	;00343 10D9 	MainLoop	mCall2To0	scan_io	; Scan I/O, check timer00343 10D9 120A      M		BCF	PCLATH,4		BCF	PCLATH,400343 10DA 2462      M		CALL	scan_io		CALL	Destination00343 10DB 118A      M		BCF	PCLATH,3		BCF	PCLATH,300343 10DC 160A      M		BSF	PCLATH,4		BSF	PCLATH,400344 10DD 	;00345 10DD 	;---------------------------------------------------------------00346 10DD 	;User Button Command Intrerpeter00347 10DD 	;00348 10DD 254B 		CALL	ButtonDispatch00349 10DE 118A 		BCF	PCLATH,3	;ButtonDispatch may return00350 10DF 160A 		BSF	PCLATH,4	; from a long goto00351 10E0 	;00352 10E0 	;=========================================================================================================00353 10E0 	;=========================================================================================================00354 10E0 	;00355 10E0 	; Look for incoming ethernet frames00356 10E0 	;00357 10E0 	; if (get_ether())  Get Ethernet frame.. 00358 10E0 		mCall2To1	get_ether00358 10E0 158A      M		BSF	PCLATH,3		BSF	PCLATH,300358 10E1 120A      M		BCF	PCLATH,4		BCF	PCLATH,400358 10E2 2039      M		CALL	get_ether		CALL	Destination00358 10E3 118A      M		BCF	PCLATH,3		BCF	PCLATH,300358 10E4 160A      M		BSF	PCLATH,4		BSF	PCLATH,400359 10E5 	;00360 10E5 	;=========================================================================================================00361 10E5 	;00362 10E5 292D 		GOTO	DoDMFEIO00363 10E6 	DoDMFEIO_RTN00364 10E6 	;00365 10E6 158A 		BSF	PCLATH,300366 10E7 160A 		BSF	PCLATH,400367 10E8 2C24 		GOTO	Do_UDP_DataXmit00368 10E9 	Do_UDP_DataXmit_Rtn00369 10E9 	;=========================================================================================================00370 10E9 	;00371 10E9 28D9 		GOTO	MainLoop00372 10EA 	;00373 10EA 	;====================================================================================================00374 10EA 	;============================================================================================00375 10EA 	; Displays the string # in W on line 000376 10EA 00F5 	DispStrLine0	MOVWF	Param7500377 10EB 0103 		CLRW		; goto(0,0)00378 10EC 28F5 		GOTO	DispStrLineN00379 10ED 	;00380 10ED 	;====================================00381 10ED 	; Displays the string # in W on line 100382 10ED 00F5 	DispStrLine1	MOVWF	Param7500383 10EE 3001 		MOVLW	0x01	; goto(0,1)00384 10EF 28F5 		GOTO	DispStrLineN00385 10F0 	;00386 10F0 	;====================================00387 10F0 	; Displays the string # in W on line 200388 10F0 00F5 	DispStrLine2	MOVWF	Param7500389 10F1 3002 		MOVLW	0x02	; goto(0,2)00390 10F2 28F5 		GOTO	DispStrLineN00391 10F3 	;Highland Greeley PIC.asm   "Main.asm"                                    Page: 166500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Main.asm00392 10F3 	;====================================00393 10F3 	; Displays the string # in W on line 300394 10F3 00F5 	DispStrLine3	MOVWF	Param7500395 10F4 3003 		MOVLW	0x03	; goto(0,3)00396 10F5 	;00397 10F5 200C 	DispStrLineN	CALL	lcd_GotoLineW_D1000398 10F6 0875 		MOVF	Param75,W00399 10F7 2816 		GOTO	PrintString_D1000400 10F8 	;00401 10F8 	DoErrorDisplay00402 10F8 	MainB0Rtn	mBank000402 10F8 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000402 10F9 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100403 10FA 0008 		RETURN00404 10FB 	;====================================================================================================00405 10FB 	;00406 10FB 28F8 	ShowRunScrn00	GOTO	MainB0Rtn00407 10FC 	;00408 10FC 	;====================================================================================================00409 10FC 	; Routines that run once every 1/20th of a second00410 10FC 	; Entry: none00411 10FC 	; Exit: none00412 10FC 	; RAM used: 00413 10FC 	; Calls: 00414 10FC 	;00415 10FC 	OnTheTick 	mBank300415 10FC 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000415 10FD 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100416 10FE 08AC 		MOVF	BeepTimer,F00417 10FF 		SKPZ00417 10FF 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00418 1100 03AC 		DECF	BeepTimer,F00419 1101 	;00420 1101 08AA 		MOVF	BtnDeBounceTimer,F00421 1102 		SKPZ00421 1102 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00422 1103 03AA 		DECF	BtnDeBounceTimer,F00423 1104 28F8 		GOTO	MainB0Rtn00424 1105 	;00425 1105 	;=============================================================================================00426 1105 	;Routines that run once every 1/2 of a second00427 1105 	;00428 1105 	;00429 1105 158A 	OnTheHalfSecond	BSF	PCLATH,300430 1106 2C1D 		GOTO	HPRROnTheHalf00431 1107 2F80 	HPRROnTheHalf_RTN	GOTO	DispIdleDispatch00432 1108 	;00433 1108 	;=============================================================================================00434 1108 	;00435 1108 	;=============================================================================================00436 1108 	; end of Main.asm00437 1108 	;00438 1108 	;00439 1108 	;00440 1108 	;00441 1108 	;00442 1108 	;00443 1108 	;00444 1108 	;00445 1108 	;00446 1108 	;00447 1108 	;00448 1108 	;00449 1108 	;01014 1108 		include	Highland Greeley IO.asm00001 1108 		subtitle	"Highland Greeley.ASM"00002 1108 		page00003 1108 	;===========================================================================================00004 1108 	;00005 1108 	;  FileName: Highland Greeley.ASM00006 1108 	;  Date: 9/18/0400007 1108 	;  File Version: 2.000008 1108 	;  00009 1108 	;  Author: David M. Flynn00010 1108 	;  Company: Oxford V.U.E., Inc.00011 1108 	;00012 1108 	;============================================================================================00013 1108 	; Notes:00014 1108 	;00015 1108 	;  This file is the main loop for Highlad Greeley00016 1108 	;00017 1108 	;============================================================================================00018 1108 	; Revision History00019 1108 	;00020 1108 	; 2.0     9/18/04	Start of conversion from 650200021 1108 	;00022 1108 	;============================================================================================00023 1108 	; Conditionals00024 1108 	;00025 1108 	;============================================================================================00026 1108 	;00027 1108 	; Name	(additional stack words required) Description00028 1108 	;================================================================================================00029 1108 	;DoDMFEIO	Called by main loop00030 1108 	;GETBTN	Test for a user button press00031 1108 	;DoBtn	Process a user button00032 1108 	;StorBtn	Store the button number00033 1108 	;FindRTNum	compare RTBtn1..5 with Rout Select Table00034 1108 	;DoTest	Turn off outputs 0/0/0..127 - 0/1/0..127Highland Greeley PIC.asm   "Highland Greeley.ASM"                        Page: 167500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley IO.asm00035 1108 	;SORTBTNS	Sort the buttons RTBtn1..RTBtn400036 1108 	;GetBST_Y	Get a value from the Button Sort Table00037 1108 	;ClearSMLeds	SM FEEDBACK LEDS00038 1108 	;00039 1108 	;in SMTable each Byte represents one Switch Machine00040 1108 	; bit0 = Has been sent to TCC Com I/O00041 1108 	; bit1 = unused00042 1108 	; bit2 = unused00043 1108 	; bit3 = unused00044 1108 	; bit4 = unused00045 1108 	; bit5 = Feed Back00046 1108 	; bit6 = Command if 1 then bit 7 will also be 100047 1108 	; bit7 = Control00048 1108 	;00049 1108 	;SMControlMask	EQU	0x7F00050 1108 	;SMFBMask	EQU	0xDF00051 1108 	;SMChangedMask	EQU	0xFE00052 1108 	;SMCnFMask	EQU	0xA000053 1108 	;SMCMDMask	EQU	0x4000054 1108 	;00055 1108 	InputC_D10	mCall2To3	InputC00055 1108 158A      M		BSF	PCLATH,3		BSF	PCLATH,300055 1109 2385      M		CALL	InputC		CALL	Destination00055 110A 118A      M		BCF	PCLATH,3		BCF	PCLATH,300055 110B 160A      M		BSF	PCLATH,4		BSF	PCLATH,400056 110C 0008 		RETURN00057 110D 	OutputC_D10	mCall2To3	OutputC00057 110D 158A      M		BSF	PCLATH,3		BSF	PCLATH,300057 110E 2330      M		CALL	OutputC		CALL	Destination00057 110F 118A      M		BCF	PCLATH,3		BCF	PCLATH,300057 1110 160A      M		BSF	PCLATH,4		BSF	PCLATH,400058 1111 0008 		RETURN00059 1112 	InputB_D10	mCall2To3	InputB00059 1112 158A      M		BSF	PCLATH,3		BSF	PCLATH,300059 1113 238A      M		CALL	InputB		CALL	Destination00059 1114 118A      M		BCF	PCLATH,3		BCF	PCLATH,300059 1115 160A      M		BSF	PCLATH,4		BSF	PCLATH,400060 1116 0008 		RETURN00061 1117 	OutputB_D10	mCall2To3	OutputB00061 1117 158A      M		BSF	PCLATH,3		BSF	PCLATH,300061 1118 2335      M		CALL	OutputB		CALL	Destination00061 1119 118A      M		BCF	PCLATH,3		BCF	PCLATH,300061 111A 160A      M		BSF	PCLATH,4		BSF	PCLATH,400062 111B 0008 		RETURN00063 111C 	InputA_D10	mCall2To3	InputA00063 111C 158A      M		BSF	PCLATH,3		BSF	PCLATH,300063 111D 238E      M		CALL	InputA		CALL	Destination00063 111E 118A      M		BCF	PCLATH,3		BCF	PCLATH,300063 111F 160A      M		BSF	PCLATH,4		BSF	PCLATH,400064 1120 0008 		RETURN00065 1121 	OutputA_D10	mCall2To3	OutputA00065 1121 158A      M		BSF	PCLATH,3		BSF	PCLATH,300065 1122 2339      M		CALL	OutputA		CALL	Destination00065 1123 118A      M		BCF	PCLATH,3		BCF	PCLATH,300065 1124 160A      M		BSF	PCLATH,4		BSF	PCLATH,400066 1125 0008 		RETURN00067 1126 	;00068 1126 		if UsesSpeaker00074 1126 		endif00075 1126 	;00076 1126 	;Push_D10	mCall2To0	Push00077 1126 	;	mBank300078 1126 	;	RETURN00079 1126 	Pop_D10	mCall2To0	Pop00079 1126 120A      M		BCF	PCLATH,4		BCF	PCLATH,400079 1127 22D7      M		CALL	Pop		CALL	Destination00079 1128 118A      M		BCF	PCLATH,3		BCF	PCLATH,300079 1129 160A      M		BSF	PCLATH,4		BSF	PCLATH,400080 112A 		mBank300080 112A 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000080 112B 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100081 112C 0008 		RETURN00082 112D 	;00083 112D 	;CONSTANTS ******************************************00084 112D 	;00085 112D 0005 	kMaxRetry	EQU	0x0500086 112D 	;00087 112D 0002 	LastSMNumber	EQU	0x000200088 112D 0040 	EastBound	EQU	0x4000089 112D 0020 	WestBound	EQU	0x2000090 112D 	;00091 112D 0010 	Cab1Mask	EQU	0x1000092 112D 0008 	Cab2Mask	EQU	0x0800093 112D 0004 	Cab3Mask	EQU	0x0400094 112D 0002 	Cab4Mask	EQU	0x0200095 112D 0001 	Cab5Mask	EQU	0x0100096 112D 000F 	Cab1InvertMask	EQU	0x0F00097 112D 0017 	Cab2InvertMask	EQU	0x1700098 112D 001B 	Cab3InvertMask	EQU	0x1B00099 112D 001D 	Cab4InvertMask	EQU	0x1D00100 112D 001E 	Cab5InvertMask	EQU	0x1E00101 112D 	;00102 112D 	;=============================================================00103 112D 	;         ********** MAIN ***********00104 112D 	;=============================================================00105 112D 	;00106 112D 	; Calls:(1+) 00107 112D 	;00108 112D 	DoDMFEIO	00109 112D 		if UsePsuedoResetHighland Greeley PIC.asm   "Highland Greeley.ASM"                        Page: 168500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley IO.asm00112 112D 		endif00113 112D 	;00114 112D 	;00115 112D 		mBank300115 112D 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000115 112E 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100116 112F 1C1E 		BTFSS	UDP_DataReceived	;Has any data arrived?00117 1130 2966 		GOTO	MainLoop_E2	; No00118 1131 101E 		BCF	UDP_DataReceived00119 1132 	;00120 1132 		include RecBlkPwr.inc00001 1132 	;====================================00002 1132 	;00003 1132 0819 	Receive_BlockPwr	MOVF	SRAM_UDP_Rx_DT,W00004 1133 3C03 		SUBLW	kUDP_DataType_BkPwr00005 1134 		SKPZ00005 1134 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00006 1135 293F 		GOTO	Receive_BlockPwr_End00007 1136 	;00008 1136 081C 		MOVF	SRAM_DestAddr1_Rx,W00009 1137 3C04 		SUBLW	low evUDP_BlockPwrTable00010 1138 		SKPZ00010 1138 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00011 1139 2966 		GOTO	MainLoop_E200012 113A 	;00013 113A 		mCall2To0	CopyUDPBlockPwrTable00013 113A 120A      M		BCF	PCLATH,4		BCF	PCLATH,400013 113B 265E      M		CALL	CopyUDPBlockPwrTable		CALL	Destination00013 113C 118A      M		BCF	PCLATH,3		BCF	PCLATH,300013 113D 160A      M		BSF	PCLATH,4		BSF	PCLATH,400014 113E 2966 		GOTO	MainLoop_E200015 113F 	;00016 113F 	Receive_BlockPwr_End00017 113F 	;====================================00018 113F 	;00019 113F 0819 	Receive_BlockPwr2	MOVF	SRAM_UDP_Rx_DT,W00020 1140 3C06 		SUBLW	kUDP_DataType_BkPwr200021 1141 		SKPZ00021 1141 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00022 1142 294C 		GOTO	Receive_BlockPwr2_End00023 1143 	;00024 1143 081C 		MOVF	SRAM_DestAddr1_Rx,W00025 1144 3C06 		SUBLW	low evUDP_BlockPwrTable200026 1145 		SKPZ00026 1145 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00027 1146 2966 		GOTO	MainLoop_E200028 1147 	;00029 1147 		mCall2To0	CopyUDPBlockPwrTable200029 1147 120A      M		BCF	PCLATH,4		BCF	PCLATH,400029 1148 2675      M		CALL	CopyUDPBlockPwrTable2		CALL	Destination00029 1149 118A      M		BCF	PCLATH,3		BCF	PCLATH,300029 114A 160A      M		BSF	PCLATH,4		BSF	PCLATH,400030 114B 2966 		GOTO	MainLoop_E200031 114C 	;00032 114C 	;00033 114C 	Receive_BlockPwr2_End00034 114C 	;===================================00035 114C 	;00036 114C 0819 	Receive_SMLow	MOVF	SRAM_UDP_Rx_DT,W00037 114D 3C01 		SUBLW	kUDP_DataType_LoSM00038 114E 		SKPZ00038 114E 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00039 114F 2959 		GOTO	Receive_SMLow_End00040 1150 	;00041 1150 081C 		MOVF	SRAM_DestAddr1_Rx,W00042 1151 3C02 		SUBLW	low evUDP_SMTable00043 1152 		SKPZ00043 1152 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00044 1153 2966 		GOTO	MainLoop_E200045 1154 	;00046 1154 		mCall2To0	CopyUDPSMTable00046 1154 120A      M		BCF	PCLATH,4		BCF	PCLATH,400046 1155 268C      M		CALL	CopyUDPSMTable		CALL	Destination00046 1156 118A      M		BCF	PCLATH,3		BCF	PCLATH,300046 1157 160A      M		BSF	PCLATH,4		BSF	PCLATH,400047 1158 2966 		GOTO	MainLoop_E200048 1159 	;00049 1159 	Receive_SMLow_End00050 1159 	;=====================================00051 1159 	;00052 1159 0819 	Receive_SMHigh	MOVF	SRAM_UDP_Rx_DT,W00053 115A 3C02 		SUBLW	kUDP_DataType_HiSM00054 115B 		SKPZ00054 115B 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00055 115C 2966 		GOTO	Receive_SMHigh_End00056 115D 	;00057 115D 081C 		MOVF	SRAM_DestAddr1_Rx,W00058 115E 3C03 		SUBLW	low evUDP_SMTableHigh00059 115F 		SKPZ00059 115F 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00060 1160 2966 		GOTO	MainLoop_E200061 1161 	;00062 1161 		mCall2To0	CopyUDPSMTableHigh00062 1161 120A      M		BCF	PCLATH,4		BCF	PCLATH,400062 1162 26A3      M		CALL	CopyUDPSMTableHigh		CALL	Destination00062 1163 118A      M		BCF	PCLATH,3		BCF	PCLATH,300062 1164 160A      M		BSF	PCLATH,4		BSF	PCLATH,400063 1165 2966 		GOTO	MainLoop_E200064 1166 	;00065 1166 	Receive_SMHigh_EndHighland Greeley PIC.asm   "Highland Greeley.ASM"                        Page: 169500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:RecBlkPwr.inc00066 1166 	;======================================================================================00121 1166 	;00122 1166 	;======================================================================================00123 1166 	; Enters here when no UDP packet was received00124 1166 	;00125 1166 	MainLoop_E2	mBank300125 1166 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000125 1167 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100126 1168 	;00127 1168 		if UsesSpeaker00142 1168 		endif00143 1168 	;00144 1168 	MainLoop_1	mCall2To0	SyncBlkPwr	;kill old 0x00 block cmds00144 1168 120A      M		BCF	PCLATH,4		BCF	PCLATH,400144 1169 261E      M		CALL	SyncBlkPwr		CALL	Destination00144 116A 118A      M		BCF	PCLATH,3		BCF	PCLATH,300144 116B 160A      M		BSF	PCLATH,4		BSF	PCLATH,400145 116C 		mCall2To0	SyncSMs	;kill Valid bits if Cmd = Ctrl00145 116C 120A      M		BCF	PCLATH,4		BCF	PCLATH,400145 116D 2642      M		CALL	SyncSMs		CALL	Destination00145 116E 118A      M		BCF	PCLATH,3		BCF	PCLATH,300145 116F 160A      M		BSF	PCLATH,4		BSF	PCLATH,400146 1170 	;	00147 1170 		mBank000147 1170 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000147 1171 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100148 1172 1828 		BTFSC	ServiceMode00149 1173 28E6 		GOTO	DoDMFEIO_RTN00150 1174 	;00151 1174 	;00152 1174 		mBank300152 1174 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000152 1175 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100153 1176 2194 		CALL	GETBTN00154 1177 3800 		IORLW	0x00	; rgm: ?00155 1178 		SKPNZ00155 1178 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00156 1179 297B 		GOTO	GETEVNT100157 117A 29B2 		GOTO	DoBtn00158 117B 	DoBtn_RTN00159 117B 	;00160 117B 	GETEVNT1	mCall2To3	DETECT00160 117B 158A      M		BSF	PCLATH,3		BSF	PCLATH,300160 117C 24A7      M		CALL	DETECT		CALL	Destination00160 117D 118A      M		BCF	PCLATH,3		BCF	PCLATH,300160 117E 160A      M		BSF	PCLATH,4		BSF	PCLATH,400161 117F 	;00162 117F 	;===================================00163 117F 	;SET RDY LEDS00164 117F 	;00165 117F 302F 		MOVLW	low LocalReady	00166 1180 00B7 		MOVWF	CurBlk00167 1181 3001 		MOVLW	high LocalReady00168 1182 00B8 		MOVWF	CurBlk+100169 1183 01AF 		CLRF	OActive	;Default to off00170 1184 185B 		BTFSC	RSIP	;Route select in progress?00171 1185 2988 		GOTO	ML4A	; Yes00172 1186 195B 		BTFSC	LEDLocalReady00173 1187 17AF 		BSF	OActive,700174 1188 2117 	ML4A	CALL	OutputB_D1000175 1189 	;00176 1189 302E 		MOVLW	low MainlineReady00177 118A 00B7 		MOVWF	CurBlk00178 118B 3001 		MOVLW	high MainlineReady00179 118C 00B8 		MOVWF	CurBlk+100180 118D 01AF 		CLRF	OActive	;Default to off00181 118E 185B 		BTFSC	RSIP	;Route select in progress?00182 118F 2992 		GOTO	ML5A	; Yes00183 1190 19DB 		BTFSC	LEDMainlineReady00184 1191 17AF 		BSF	OActive,700185 1192 2117 	ML5A	CALL	OutputB_D1000186 1193 28E6 		GOTO	DoDMFEIO_RTN00187 1194 	;00188 1194 	;00189 1194 	;====================================================================================00190 1194 	; Test for a user button press00191 1194 	;00192 1194 	; Entry: none00193 1194 	; Exit: W=0x00 or btn number00194 1194 	; RAM Used:00195 1194 	; Calls:() InputB_D10, CLICK00196 1194 	;00197 1194 	GETBTN	MOVFW	BtnTemp	00197 1194 0862      M		MOVF	BtnTemp,W		MOVF	src,W00198 1195 00B7 		MOVWF	CurBlk00199 1196 		MOVFW	BtnTemp+100199 1196 0863      M		MOVF	BtnTemp+1,W		MOVF	src,W00200 1197 00B8 		MOVWF	CurBlk+100201 1198 2112 	GETBTN1	CALL	InputB_D1000202 1199 1FB3 		BTFSS	IActive,7	;Active?00203 119A 29A5 		GOTO	GETBTN2	; no00204 119B 0837 		MOVF	CurBlk,W00205 119C 0261 		SUBWF	LastBtn,W	;debounce00206 119D 		SKPNZ00206 119D 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00207 119E 29AB 		GOTO	GETBTN4	00208 119F 0837 		MOVF	CurBlk,W00209 11A0 00E1 		MOVWF	LastBtn00210 11A1 	;00211 11A1 		if UsesSpeakerHighland Greeley PIC.asm   "Highland Greeley.ASM"                        Page: 170500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley IO.asm00213 11A1 		endif00214 11A1 	;00215 11A1 0861 		MOVF	LastBtn,W00216 11A2 3880 		IORLW	0x80	;good Btn set hi bit00217 11A3 00F8 		MOVWF	Param7800218 11A4 0008 		RETURN00219 11A5 	;00220 11A5 0837 	GETBTN2	MOVF	CurBlk,W00221 11A6 0261 		SUBWF	LastBtn,W	;clr debounce if that00222 11A7 		SKPZ00222 11A7 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00223 11A8 29AB 		GOTO	GETBTN4	; was it00224 11A9 30FF 		MOVLW	0xFF00225 11AA 00E1 		MOVWF	LastBtn00226 11AB 03E2 	GETBTN4	DECF	BtnTemp,F	;Next button00227 11AC 1FE2 		BTFSS	BtnTemp,700228 11AD 29B0 		GOTO	GETBTN300229 11AE 303F 		MOVLW	0x3F00230 11AF 00E2 		MOVWF	BtnTemp00231 11B0 01F8 	GETBTN3	CLRF	Param7800232 11B1 3400 		RETLW	0x0000233 11B2 	;00234 11B2 	;=======================================================================================00235 11B2 	; Process a user button00236 11B2 	;00237 11B2 	; Entry: W=Btn number00238 11B2 	; Exit: none00239 11B2 	; RAM Used:00240 11B2 	; Calls:(1+7) StorBtn, SORTBTNS, FindRTNum, SetMLRoute, ClearRTBtns, DoMLUnable,00241 11B2 	;	SetLocalRoute(7), DoLocalUnable 00242 11B2 	;00243 11B2 393F 	DoBtn	ANDLW	0x3F00244 11B3 00F8 		MOVWF	Param7800245 11B4 	;tc00246 11B4 	;	MOVWF	Param7A00247 11B4 	;	CALL	Disp_Hex_Byte_D1000248 11B4 	;	mBank300249 11B4 	;	MOVF	Param7A,W00250 11B4 	;	MOVWF	Param7800251 11B4 	;etc00252 11B4 3C3F 		SUBLW	MLEnterBtn00253 11B5 		SKPZ00253 11B5 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00254 11B6 29C0 		GOTO	DoBtn200255 11B7 	;Enter (Main Line)00256 11B7 220D 		CALL	StorBtn00257 11B8 2271 		CALL	SORTBTNS00258 11B9 223B 		CALL	FindRTNum00259 11BA 3800 		IORLW	0x0000260 11BB 		SKPNZ		;Valid route?00260 11BB 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00261 11BC 29BE 		GOTO	DoBtn_1	; No00262 11BD 2B38 		GOTO	SetMLRoute00263 11BE 	;00264 11BE 2370 	DoBtn_1	CALL	DoMLUnable00265 11BF 29CC 		GOTO	SetMLRoute_RTN00266 11C0 	;00267 11C0 	;ENTER (LOCAL)	00268 11C0 0878 	DoBtn2	MOVF	Param78,W00269 11C1 3C3E 		SUBLW	LocalEnterBtn00270 11C2 		SKPZ00270 11C2 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00271 11C3 29CE 		GOTO	DoBtn300272 11C4 	;00273 11C4 220D 		CALL	StorBtn00274 11C5 2271 		CALL	SORTBTNS00275 11C6 223B 		CALL	FindRTNum00276 11C7 	;tc00277 11C7 	;	MOVWF	Param7A00278 11C7 	;	CALL	Disp_Hex_Byte_D1000279 11C7 	;	mBank300280 11C7 	;	MOVF	Param7A,W00281 11C7 	;	MOVWF	Param7800282 11C7 	;etc00283 11C7 3800 		IORLW	0x0000284 11C8 		SKPNZ		;Valid route?00284 11C8 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00285 11C9 29CB 		GOTO	DoBtn2_1	; No00286 11CA 2ABD 		GOTO	SetLocalRoute00287 11CB 	;00288 11CB 22E6 	DoBtn2_1	CALL	DoLocalUnable00289 11CC 	SetMLRoute_RTN00290 11CC 	SetLocalRoute_RTN00291 11CC 222E 	DoBtn2_2	CALL	ClearRTBtns00292 11CD 297B 		GOTO	DoBtn_RTN00293 11CE 	;00294 11CE 	;00295 11CE 	;Clear (Main Line)00296 11CE 0878 	DoBtn3	MOVF	Param78,W00297 11CF 3C30 		SUBLW	MLClearBtn00298 11D0 		SKPZ00298 11D0 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00299 11D1 29FF 		GOTO	DoBtn400300 11D2 	;00301 11D2 303F 		MOVLW	MLEnterBtn00302 11D3 220D 		CALL	StorBtn00303 11D4 2271 		CALL	SORTBTNS00304 11D5 223B 		CALL	FindRTNum00305 11D6 00F8 		MOVWF	Param7800306 11D7 08F8 		MOVF	Param78,FHighland Greeley PIC.asm   "Highland Greeley.ASM"                        Page: 171500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley IO.asm00307 11D8 		SKPZ00307 11D8 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00308 11D9 29E4 		GOTO	DoBtn3_100309 11DA 		00310 11DA 085C 		MOVF	OML1,W00311 11DB 		00312 11DB 242E 		CALL	ClrRT00313 11DC 		MOVFW	OML200313 11DC 085D      M		MOVF	OML2,W		MOVF	src,W00314 11DD 		00315 11DD 242E 		CALL	ClrRT00316 11DE 085E 		MOVF	OML3,W00317 11DF 242E 		CALL	ClrRT00318 11E0 01DC 		CLRF	OML100319 11E1 01DD 		CLRF	OML200320 11E2 01DE 		CLRF	OML300321 11E3 	;00322 11E3 		if UsesSpeaker00324 11E3 		endif00325 11E3 	;00326 11E3 29CC 		GOTO	DoBtn2_200327 11E4 	;00328 11E4 01F3 	DoBtn3_1	CLRF	YReg00329 11E5 0878 		MOVF	Param78,W00330 11E6 025E 		SUBWF	OML3,W00331 11E7 		SKPZ00331 11E7 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00332 11E8 29ED 		GOTO	DoBtn3_200333 11E9 		00334 11E9 		MOVFW	YReg00334 11E9 0873      M		MOVF	YReg,W		MOVF	src,W00335 11EA 00DE 		MOVWF	OML300336 11EB 242E 		CALL	ClrRT00337 11EC 29CC 		GOTO	DoBtn2_200338 11ED 	;00339 11ED 0878 	DoBtn3_2	MOVF	Param78,W00340 11EE 025D 		SUBWF	OML2,W00341 11EF 		SKPZ00341 11EF 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00342 11F0 29F5 		GOTO	DoBtn3_300343 11F1 		00344 11F1 		MOVFW	YReg00344 11F1 0873      M		MOVF	YReg,W		MOVF	src,W00345 11F2 00DD 		MOVWF	OML200346 11F3 242E 		CALL	ClrRT00347 11F4 29CC 		GOTO	DoBtn2_200348 11F5 	;00349 11F5 0878 	DoBtn3_3	MOVF	Param78,W00350 11F6 025C 		SUBWF	OML1,W00351 11F7 		SKPZ00351 11F7 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00352 11F8 29FD 		GOTO	DoBtn3_400353 11F9 		GOTO	DoBtn3_400354 11F9 		MOVFW	YReg00354 11F9 0873      M		MOVF	YReg,W		MOVF	src,W00355 11FA 00DC 		MOVWF	OML100356 11FB 242E 		CALL	ClrRT00357 11FC 29CC 		GOTO	DoBtn2_200358 11FD 	;00359 11FD 2370 	DoBtn3_4	CALL	DoMLUnable00360 11FE 29CC 		GOTO	DoBtn2_200361 11FF 	;00362 11FF 	;Clear (Local)00363 11FF 0878 	DoBtn4	MOVF	Param78,W	00364 1200 3C31 		SUBLW	LocalClearBtn	00365 1201 		SKPZ00365 1201 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00366 1202 2A07 		GOTO	DoBtn500367 1203 	;00368 1203 085F 		MOVF	OLOC,W00369 1204 01DF 		CLRF	OLOC00370 1205 242E 		CALL	ClrRT00371 1206 29CC 		GOTO	DoBtn2_200372 1207 	;00373 1207 0878 	DoBtn5	MOVF	Param78,W00374 1208 3C32 		SUBLW	TestBtn00375 1209 		SKPNZ00375 1209 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00376 120A 2A5B 		GOTO	DoTest00377 120B 220D 		CALL	StorBtn00378 120C 297B 		GOTO	DoBtn_RTN	00379 120D 	;	00380 120D 	;00381 120D 	;==================================================================================00382 120D 	; Store the button number00383 120D 	;00384 120D 	; Entry: Param78=BtnNum00385 120D 	; Exit:00386 120D 	;00387 120D 30D6 	StorBtn	MOVLW	RTBtn1-100388 120E 0084 		MOVWF	FSR00389 120F 1783 		BSF	_IRP00390 1210 01F9 		CLRF	Param7900391 1211 0A84 	StorBtn_1	INCF	FSR,F00392 1212 1B80 		BTFSC	INDF,700393 1213 2A19 		GOTO	StorBtn100394 1214 0AF9 		INCF	Param79,F00395 1215 0879 		MOVF	Param79,W00396 1216 3C04 		SUBLW	kLastRTBtn00397 1217 		SKPZHighland Greeley PIC.asm   "Highland Greeley.ASM"                        Page: 172500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley IO.asm00397 1217 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00398 1218 2A11 		GOTO	StorBtn_100399 1219 	;00400 1219 0878 	StorBtn1	MOVF	Param78,W00401 121A 0080 		MOVWF	INDF00402 121B 145B 		BSF	RSIP	;set route select in process flag00403 121C 	;00404 121C 1CDB 		BTFSS	LEDMainlineUnable	;kill unable LEDs00405 121D 2A25 		GOTO	StorBtn_200406 121E 3021 		MOVLW	low MainlineUnable00407 121F 00B7 		MOVWF	CurBlk00408 1220 3001 		MOVLW	high MainlineUnable00409 1221 00B8 		MOVWF	CurBlk+100410 1222 01AF 		CLRF	OActive00411 1223 10DB 		BCF	LEDMainlineUnable00412 1224 2117 		CALL	OutputB_D1000413 1225 	;	00414 1225 1E5B 	StorBtn_2	BTFSS	LEDLocalUnable00415 1226 0008 		RETURN00416 1227 3020 		MOVLW	low LocalUnable00417 1228 00B7 		MOVWF	CurBlk00418 1229 3001 		MOVLW	high LocalUnable00419 122A 00B8 		MOVWF	CurBlk+100420 122B 01AF 		CLRF	OActive00421 122C 125B 		BCF	LEDLocalUnable00422 122D 2917 		GOTO	OutputB_D1000423 122E 	;00424 122E 	;======================================================================================00425 122E 	; Clear the Route buttons00426 122E 	;00427 122E 	; Calls:() FindAllUsedSMs, ClearSMLeds, SetSMLeds00428 122E 	;00429 122E 3080 	ClearRTBtns	MOVLW	0x8000430 122F 00D7 		MOVWF	RTBtn100431 1230 00D8 		MOVWF	RTBtn200432 1231 00D9 		MOVWF	RTBtn300433 1232 00DA 		MOVWF	RTBtn400434 1233 105B 		BCF	RSIP00435 1234 248D 		CALL	FindAllUsedSMs00436 1235 22AE 		CALL	ClearSMLeds00437 1236 		mCall2To3	SetSMLeds00437 1236 158A      M		BSF	PCLATH,3		BSF	PCLATH,300437 1237 24CE      M		CALL	SetSMLeds		CALL	Destination00437 1238 118A      M		BCF	PCLATH,3		BCF	PCLATH,300437 1239 160A      M		BSF	PCLATH,4		BSF	PCLATH,400438 123A 0008 		RETURN00439 123B 	;======================================================================================00440 123B 	;compare RTBtn1..5 with Rout Select Table00441 123B 	;return Acc=0 or Acc=RtNum00442 123B 	;00443 123B 30D7 	FindRTNum	MOVLW	RTBtn100444 123C 0084 		MOVWF	FSR00445 123D 1783 		BSF	_IRP00446 123E 01F3 		CLRF	YReg00447 123F 30F0 		MOVLW	low RouteSelectTable00448 1240 00C9 		MOVWF	RTTemp00449 1241 3011 		MOVLW	high RouteSelectTable00450 1242 00CA 		MOVWF	RTTemp+100451 1243 250F 	FindRTNum_L1	CALL	GetRTTempY00452 1244 0200 		SUBWF	INDF,W00453 1245 		SKPZ00453 1245 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00454 1246 2A4F 		GOTO	FindRTNum3	;not IT00455 1247 0A84 		INCF	FSR,F00456 1248 0AF3 		INCF	YReg,F00457 1249 0873 		MOVF	YReg,W00458 124A 3C04 		SUBLW	kLastRTBtn00459 124B 		SKPZ00459 124B 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00460 124C 2A43 		GOTO	FindRTNum_L100461 124D 250F 		CALL	GetRTTempY	;Found IT00462 124E 0008 		RETURN00463 124F 	;00464 124F 30D7 	FindRTNum3	MOVLW	RTBtn100465 1250 0084 		MOVWF	FSR00466 1251 01F3 		CLRF	YReg00467 1252 3005 		MOVLW	0x05	;bytes per table entry00468 1253 07C9 		ADDWF	RTTemp,F00469 1254 		ADDCF	RTTemp+1,F00469 1254 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00469 1255 0ACA      M		INCF	RTTemp+1,F		INCF	dest,W_or_F00470 1256 	;00471 1256 250F 		CALL	GetRTTempY00472 1257 3800 		IORLW	0x0000473 1258 		SKPZ00473 1258 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00474 1259 2A43 		GOTO	FindRTNum_L100475 125A 0008 		RETURN00476 125B 	;00477 125B 	;==========================================================================================00478 125B 	; Turn off outputs 0/0/0..127 - 0/1/0..12700479 125B 	;00480 125B 01B7 	DoTest	CLRF	CurBlk	;IO Address 0x000000481 125C 01B8 		CLRF	CurBlk+100482 125D 17AF 		BSF	OActive,7	;Set output00483 125E 2117 	DoTest_L1	CALL	OutputB_D1000484 125F 0AB7 		INCF	CurBlk,F00485 1260 1FB7 		BTFSS	CurBlk,7	;All of Slot 0 Bd X?00486 1261 2A5E 		GOTO	DoTest_L1	; No00487 1262 01B7 		CLRF	CurBlkHighland Greeley PIC.asm   "Highland Greeley.ASM"                        Page: 173500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley IO.asm00488 1263 0AB8 		INCF	CurBlk+1,F	;Board 100489 1264 1CB8 		BTFSS	CurBlk+1,1	;Board 2?00490 1265 2A5E 		GOTO	DoTest_L1	; No00491 1266 	;00492 1266 2194 	DoTest2	CALL	GETBTN00493 1267 0878 		MOVF	Param78,W00494 1268 		SKPNZ00494 1268 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00495 1269 2A66 		GOTO	DoTest200496 126A 393F 		ANDLW	0x3F	;Button mask00497 126B 00F8 		MOVWF	Param78	;may want to use later00498 126C 3C32 		SUBLW	TestBtn	;Compare w/ test button00499 126D 		SKPNZ		;TestBtn?00499 126D 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00500 126E 2A70 		GOTO	DoTest3	; Yes00501 126F 2A66 		GOTO	DoTest2	;ALWAYS00502 1270 	;00503 1270 28B9 	DoTest3	GOTO	Main00504 1271 	;00505 1271 	;===================================================================================================00506 1271 	; Sort the buttons RTBtn1..RTBtn400507 1271 	;00508 1271 1BD8 	SORTBTNS	BTFSC	RTBtn2,700509 1272 0008 		RETURN		;NO SORT IF ONE OR LESS BTNS00510 1273 	;00511 1273 1783 		BSF	_IRP00512 1274 3003 		MOVLW	kLastRTBtn-1	;RTBtn400513 1275 00F2 		MOVWF	XReg00514 1276 	; Find last used button00515 1276 229D 	SBTNS_L1	CALL	Get_RTBtn1_X00516 1277 1F80 		BTFSS	INDF,700517 1278 2A7B 		GOTO	SBTNS200518 1279 03F2 		DECF	XReg,F00519 127A 2A76 		GOTO	SBTNS_L100520 127B 	;00521 127B 0372 	SBTNS2	DECF	XReg,W00522 127C 00C9 		MOVWF	RTTemp	;0..2 OR RTBtn1..RTBtn300523 127D 01F2 	SBTNS5	CLRF	XReg00524 127E 229D 	SBTNS4	CALL	Get_RTBtn1_X00525 127F 00F3 		MOVWF	YReg00526 1280 22A5 		CALL	GetBST_Y00527 1281 3800 		IORLW	0x0000528 1282 		SKPNZ00528 1282 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00529 1283 2A97 		GOTO	SBTNS3	;IF RTBtnn = 0 THEN next00530 1284 	;00531 1284 00F9 		MOVWF	Param79	; ELSE IF RTBtnn+1<RTBtnn00532 1285 22A2 		CALL	Get_RTBtn2_X00533 1286 00F3 		MOVWF	YReg	;RTBtn(XReg+1)00534 1287 22A5 		CALL	GetBST_Y00535 1288 00F8 		MOVWF	Param7800536 1289 0879 		MOVF	Param79,W00537 128A 0278 		SUBWF	Param78,W	;  W = RTBtn(XReg+1)-RTBtn(XReg)00538 128B 		BC	SBTNS3	;  if RTBtnn <= RTBtnn+1 don't swap00538 128B 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00538 128C 2A97      M		GOTO	SBTNS3		GOTO	dest00539 128D 	;00540 128D 	; Swap RTBtn(XReg)<>RTBtn(XReg+1)00541 128D 229D 		CALL	Get_RTBtn1_X00542 128E 00F8 		MOVWF	Param78	;Param78=RTBtn(XReg)00543 128F 0A84 		INCF	FSR,F00544 1290 0800 		MOVF	INDF,W	;W=RTBtn(XReg+1)00545 1291 0384 		DECF	FSR,F00546 1292 0080 		MOVWF	INDF	;RTBtn(XReg)=W00547 1293 0A84 		INCF	FSR,F00548 1294 0878 		MOVF	Param78,W00549 1295 0080 		MOVWF	INDF	;RTBtn(XReg+1)=Param7800550 1296 2A7D 		GOTO	SBTNS5	; START OVER00551 1297 	;00552 1297 	; Next00553 1297 	;00554 1297 0872 	SBTNS3	MOVF	XReg,W00555 1298 0249 		SUBWF	RTTemp,W00556 1299 		SKPNZ00556 1299 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00557 129A 0008 		RETURN00558 129B 0AF2 		INCF	XReg,F00559 129C 2A7E 		GOTO	SBTNS400560 129D 	;00561 129D 	;=====================00562 129D 	;00563 129D 0872 	Get_RTBtn1_X	MOVF	XReg,W	00564 129E 3ED7 		ADDLW	RTBtn100565 129F 0084 	Get_RTBtn1_X_1	MOVWF	FSR00566 12A0 0800 		MOVF	INDF,W00567 12A1 0008 		RETURN00568 12A2 	;00569 12A2 0872 	Get_RTBtn2_X	MOVF	XReg,W	00570 12A3 3ED8 		ADDLW	RTBtn200571 12A4 2A9F 		GOTO	Get_RTBtn1_X_100572 12A5 	;00573 12A5 	;====================================================================================================00574 12A5 	; Get a value from the Button Sort Table00575 12A5 	;00576 12A5 3000 	GetBST_Y	MOVLW	high BST00577 12A6 3E10 		ADDLW	low evDataROM00578 12A7 00A0 		MOVWF	SRAM_Addr100579 12A8 30E0 		MOVLW	low BST00580 12A9 0773 		ADDWF	YReg,W00581 12AA 009F 		MOVWF	SRAM_Addr0Highland Greeley PIC.asm   "Highland Greeley.ASM"                        Page: 174500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley IO.asm00582 12AB 		ADDCF	SRAM_Addr1,F00582 12AB 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00582 12AC 0AA0      M		INCF	SRAM_Addr1,F		INCF	dest,W_or_F00583 12AD 286E 		GOTO	GetGet_Read_D1000584 12AE 	;00585 12AE 	;00586 12AE 	;==================================================================================================00587 12AE 	;  SM FEEDBACK LEDS00588 12AE 	;SMBits was set by command interp.00589 12AE 	;00590 12AE 302F 	ClearSMLeds	MOVLW	SMCount	;for SMTemp=47 downto 0 do00591 12AF 00E4 		MOVWF	SMTemp00592 12B0 	ClearSMLeds_1	MOVFW	SMTemp00592 12B0 0864      M		MOVF	SMTemp,W		MOVF	src,W00593 12B1 240E 		CALL	SMToPTR00594 12B2 01AF 		CLRF	OActive00595 12B3 3004 		MOVLW	SMLEDA00596 12B4 00F3 		MOVWF	YReg	00597 12B5 2121 		CALL	OutputA_D1000598 12B6 3006 		MOVLW	SMLEDB00599 12B7 00F3 		MOVWF	YReg	00600 12B8 2121 		CALL	OutputA_D1000601 12B9 03E4 		DECF	SMTemp,F00602 12BA 		SKPZ00602 12BA 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00603 12BB 2AB0 		GOTO	ClearSMLeds_100604 12BC 0008 		RETURN00605 12BD 	;00606 12BD 	;00607 12BD 	;00608 12BD 	;01015 12BD 		include	HIGY.Routes.asm00001 12BD 		subtitle	"HIGY.Routes.asm"00002 12BD 		page00003 12BD 	;===========================================================================================00004 12BD 	;00005 12BD 	;  FileName: HIGY.Routes.asm00006 12BD 	;  Date: 9/18/0400007 12BD 	;  File Version: 2.000008 12BD 	;  00009 12BD 	;  Author: David M. Flynn00010 12BD 	;  Company: Highland Pacific Railroad00011 12BD 	;00012 12BD 	;============================================================================================00013 12BD 	; Notes:00014 12BD 	;00015 12BD 	;  This file is the route selector for Highlad Greeley00016 12BD 	;00017 12BD 	;============================================================================================00018 12BD 	; Revision History00019 12BD 	;00020 12BD 	; 2.0     9/18/04	Start of conversion from 650200021 12BD 	;00022 12BD 	;============================================================================================00023 12BD 	; Conditionals00024 12BD 	;00025 12BD 	;============================================================================================00026 12BD 	;00027 12BD 	; Name	(additional stack words required) Description00028 12BD 	;============================================================================================00029 12BD 	;SetLocalRoute	Highland Greeley Route SELECTOR00030 12BD 	;Get_SMBits_Y	W=(SMBits,Y)00031 12BD 	;Set_SMBits_X	(SMBits,X)=Param7800032 12BD 	;Get_SMBits2_Y	W=(SMBits2,Y)00033 12BD 	;Set_SMBits2_Y	(SMBits2,Y)=Param7800034 12BD 	;Check4Conflict	Check for a conflict between a new requested route (SMBits) and the other active routes (SMBits2)00035 12BD 	;SetMLRoute	Setup one MainLine Route00036 12BD 	;TestStackEmpty	Z set if empty00037 12BD 	;SetRT	Set Route W=Route Number00038 12BD 	;  DoGotoLongCmd00039 12BD 	;  DoGosubCmd00040 12BD 	;  DoGosubLongCmd00041 12BD 	;SMToPTR	Convert an SM number in W to Address in CurBlk00042 12BD 	;RlyToPtr	Convert Relay number in W to Output Number in CurBlk00043 12BD 	;ClrRT	Clear Route00044 12BD 	;FindAllUsedSMs	Find all the used SMs in all active routes (SMBits  2 bits per SM )00045 12BD 	;FINDSMS	Find a SM in active routes00046 12BD 	;GetRTTempY	Get data from SRAM (RTTemp),Y00047 12BD 	;RTTOPTR	W=Route# 0..25500048 12BD 	;GetPtrTempY	Param78,W = (PtrTemp+evDataROM+Y)00049 12BD 	;DoSMSet	W= SM#, Param79,0=MSb of SM#00050 12BD 	;============================================================================================00051 12BD 	; Highland Greeley Route SELECTOR 00052 12BD 	;00053 12BD 	; **** Set Local Route ****00054 12BD 	;00055 12BD 	; Entry: W=Route#, 00056 12BD 	; Exit:00057 12BD 	; Calls:(1+6) FindAllUsedSMs(6), Get_SMBits_Y, Set_SMBits2_Y, SetRT, OutputB_D1000058 12BD 	; RAM Used: Param78, Param7900059 12BD 	;00060 12BD 00F9 	SetLocalRoute	MOVWF	Param7900061 12BE 085F 		MOVF	OLOC,W00062 12BF 00CB 		MOVWF	SaveOldLocal	00063 12C0 01DF 		CLRF	OLOC00064 12C1 248D 		CALL	FindAllUsedSMs	;find the used SMs in the ML00065 12C2 	;00066 12C2 300B 		MOVLW	0x0B	; for Y:=11 downto 000067 12C3 00F3 		MOVWF	YReg	; routes and move them toHighland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 175500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00068 12C4 22EF 	SetLcRT1	CALL	Get_SMBits_Y00069 12C5 2303 		CALL	Set_SMBits2_Y	; here00070 12C6 03F3 		DECF	YReg,F00071 12C7 1FF3 		BTFSS	YReg,700072 12C8 2AC4 		GOTO	SetLcRT100073 12C9 	;00074 12C9 		MOVFW	Param7900074 12C9 0879      M		MOVF	Param79,W		MOVF	src,W00075 12CA 00DF 		MOVWF	OLOC00076 12CB 	;00077 12CB 		MOVFW	OML100077 12CB 085C      M		MOVF	OML1,W		MOVF	src,W00078 12CC 00CC 		MOVWF	SaveOldML1	00079 12CD 01DC 		CLRF	OML100080 12CE 	;00081 12CE 		MOVFW	OML200081 12CE 085D      M		MOVF	OML2,W		MOVF	src,W00082 12CF 00CD 		MOVWF	SaveOldML2	00083 12D0 01DD 		CLRF	OML200084 12D1 	;00085 12D1 		MOVFW	OML300085 12D1 085E      M		MOVF	OML3,W		MOVF	src,W00086 12D2 00CE 		MOVWF	SaveOldML3	00087 12D3 01DE 		CLRF	OML300088 12D4 	;00089 12D4 248D 		CALL	FindAllUsedSMs	;find the used SMs in the 00090 12D5 084C 		MOVF	SaveOldML1,W	; requested local rt00091 12D6 00DC 		MOVWF	OML100092 12D7 084D 		MOVF	SaveOldML2,W00093 12D8 00DD 		MOVWF	OML200094 12D9 084E 		MOVF	SaveOldML3,W00095 12DA 00DE 		MOVWF	OML300096 12DB 230B 		CALL	Check4Conflict00097 12DC 18E7 		BTFSC	SMFound00098 12DD 2AE4 		GOTO	SetLcRT300099 12DE 	;00100 12DE 084B 		MOVF	SaveOldLocal,W	;no Conflict00101 12DF 242E 		CALL	ClrRT00102 12E0 155B 		BSF	LEDLocalReady00103 12E1 085F 		MOVF	OLOC,W00104 12E2 237A 		CALL	SetRT00105 12E3 29CC 		GOTO	SetLocalRoute_RTN00106 12E4 	;00107 12E4 084B 	SetLcRT3	MOVF	SaveOldLocal,W	;rout conflict00108 12E5 00DF 		MOVWF	OLOC00109 12E6 	; why was this here?	CALL	SetRT00110 12E6 3020 	DoLocalUnable	MOVLW	low LocalUnable00111 12E7 00B7 		MOVWF	CurBlk00112 12E8 3001 		MOVLW	high LocalUnable00113 12E9 00B8 		MOVWF	CurBlk+100114 12EA 17AF 		BSF	OActive,700115 12EB 165B 		BSF	LEDLocalUnable00116 12EC 115B 		BCF	LEDLocalReady00117 12ED 2117 		CALL	OutputB_D1000118 12EE 	;00119 12EE 		if UsesSpeaker00121 12EE 		endif00122 12EE 29CC 		GOTO	SetLocalRoute_RTN00123 12EF 	;00124 12EF 	;==================================================================================================00125 12EF 	; Entry: YReg00126 12EF 	; Exit:  W=(SMBits,Y)00127 12EF 	; Calls: none00128 12EF 	; Ram used:FSR00129 12EF 	;00130 12EF 304B 	Get_SMBits_Y	MOVLW	SMBits00131 12F0 0773 		ADDWF	YReg,W00132 12F1 0084 		MOVWF	FSR00133 12F2 1783  a		BSF	STATUS,IRP	;bankisel00133 12F3 		BankISel	SMBits00134 12F3 0800 		MOVF	INDF,W00135 12F4 0008 		RETURN00136 12F5 	;00137 12F5 	;==================================================================================================00138 12F5 	; Entry: W=data, XReg=offset 0..B00139 12F5 	; Exit:  (SMBits,X)=Param7800140 12F5 	; Calls: none00141 12F5 	; Ram used:FSR00142 12F5 	;00143 12F5 00F8 	Set_SMBits_X	MOVWF	Param7800144 12F6 304B 		MOVLW	SMBits00145 12F7 0772 		ADDWF	XReg,W00146 12F8 0084 		MOVWF	FSR00147 12F9 1783  a		BSF	STATUS,IRP	;bankisel00147 12FA 		BankISel	SMBits00148 12FA 0878 		MOVF	Param78,W00149 12FB 0080 		MOVWF	INDF00150 12FC 0008 		RETURN00151 12FD 	;00152 12FD 	;==================================================================================================00153 12FD 	; Entry: YReg00154 12FD 	; Exit:  W=(SMBits2,Y)00155 12FD 	; Calls: none00156 12FD 	; Ram used:FSR00157 12FD 	;00158 12FD 3057 	Get_SMBits2_Y	MOVLW	SMBits200159 12FE 0773 		ADDWF	YReg,W00160 12FF 0084 		MOVWF	FSR00161 1300 1783  a		BSF	STATUS,IRP	;bankisel00161 1301 		BankISel	SMBits2Highland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 176500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00162 1301 0800 		MOVF	INDF,W00163 1302 0008 		RETURN00164 1303 	;00165 1303 	;==================================================================================================00166 1303 	; Entry: Param78, YReg00167 1303 	; Exit:  (SMBits2,Y)=Param7800168 1303 	; Calls: none00169 1303 	; Ram used:FSR00170 1303 	;00171 1303 00F8 	Set_SMBits2_Y	MOVWF	Param7800172 1304 3057 		MOVLW	SMBits200173 1305 0773 		ADDWF	YReg,W00174 1306 0084 		MOVWF	FSR00175 1307 1783  a		BSF	STATUS,IRP	;bankisel00175 1308 		BankISel	SMBits200176 1308 0878 		MOVF	Param78,W00177 1309 0080 		MOVWF	INDF00178 130A 0008 		RETURN00179 130B 	;00180 130B 	;==================================================================================================00181 130B 	;Check for a conflict between a new requested route (SMBits)00182 130B 	; and the other active routes (SMBits2)00183 130B 	; return SMFound=1 if conflict else 000184 130B 	;00185 130B 	; Entry: SMBits, SMBits200186 130B 	; Exit: SMFound=1=conflict00187 130B 	; RAM used: Param78,Param79,Param7A,Param7B,Param7C,FSR00188 130B 	; Calls:(1+0) Get_SMBits_Y, Get_SMBits2_Y, Check4Conflict_400189 130B 	;00190 130B 10E7 	Check4Conflict	BCF	SMFound	;assume no conflict00191 130C 300B 		MOVLW	0x0B	;for Y:=11 downto 000192 130D 00F3 		MOVWF	YReg00193 130E 	;00194 130E 22EF 	Check4Conflict_L1	CALL	Get_SMBits_Y	;4 SMs from requested route00195 130F 		SKPNZ00195 130F 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00196 1310 2B25 		GOTO	Check4Conflict_2	;none are used so don't test00197 1311 	;00198 1311 00FA 		MOVWF	Param7A	;new SM's00199 1312 22FD 		CALL	Get_SMBits2_Y00200 1313 00FB 		MOVWF	Param7B	;existing route's SMs00201 1314 3004 		MOVLW	0x0400202 1315 00FC 		MOVWF	Param7C00203 1316 	;00204 1316 3003 	Check4Conflict_L2	MOVLW	0x0300205 1317 057A 		ANDWF	Param7A,W00206 1318 		SKPNZ00206 1318 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00207 1319 2B1F 		GOTO	Check4Conflict_1	;  not used00208 131A 00F9 		MOVWF	Param79	;save those 2 bits00209 131B 3003 		MOVLW	0x0300210 131C 057B 		ANDWF	Param7B,W00211 131D 		SKPZ00211 131D 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00212 131E 232B 		CALL	Check4Conflict_400213 131F 	;00214 131F 0CFA 	Check4Conflict_1	RRF	Param7A,F00215 1320 0CFA 		RRF	Param7A,F00216 1321 0CFB 		RRF	Param7B,F00217 1322 0CFB 		RRF	Param7B,F00218 1323 0BFC 		DECFSZ	Param7C,F00219 1324 2B16 		GOTO	Check4Conflict_L200220 1325 	;00221 1325 18E7 	Check4Conflict_2	BTFSC	SMFound00222 1326 0008 		RETURN00223 1327 03F3 		DECF	YReg,F00224 1328 1FF3 		BTFSS	YReg,700225 1329 2B0E 		GOTO	Check4Conflict_L100226 132A 0008 		RETURN00227 132B 	;00228 132B 	;we got here because both sets of bits are non zero00229 132B 	;  the requested route's bits are in Param79 and the established route's are in the W00230 132B 	;If the established route uses the SM with SetSM or ClrSM then it is a conflict00231 132B 	; 00=not found, 10=set or cleared, 01=cleared by ClrSMNU, 11=set by SetSMNU00232 132B 	;00233 132B 00F8 	Check4Conflict_4	MOVWF	Param7800234 132C 3C02 		SUBLW	0x02	;SetSM or ClrSM00235 132D 		SKPNZ00235 132D 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00236 132E 2B36 		GOTO	Check4Conflict_300237 132F 	;If the requested route uses the SM with SetSM or ClrSM then it is a conflict00238 132F 0879 		MOVF	Param79,W00239 1330 3C02 		SUBLW	0x02	;SetSM or ClrSM00240 1331 		SKPNZ00240 1331 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00241 1332 2B36 		GOTO	Check4Conflict_300242 1333 	;If both are not the same SetSMNU or ClrSMNU that is a conflict00243 1333 0879 		MOVF	Param79,W00244 1334 0278 		SUBWF	Param78,W00245 1335 		SKPZ00245 1335 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00246 1336 	;00247 1336 14E7 	Check4Conflict_3	BSF	SMFound00248 1337 0008 		RETURN00249 1338 	;00250 1338 	;================================================================================================00251 1338 	;Setup one MainLine Route00252 1338 	;00253 1338 	; Entry: W=route number00254 1338 	; Exit: noneHighland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 177500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00255 1338 	; RAM used: Param7A00256 1338 	; Calls: 00257 1338 	;00258 1338 00FA 	SetMLRoute	MOVWF	Param7A00259 1339 025C 		SUBWF	OML1,W00260 133A 		SKPNZ		;same as Old ML 1?00260 133A 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00261 133B 29CC 		GOTO	SetMLRoute_RTN	; Yes00262 133C 	;00263 133C 087A 		MOVF	Param7A,W00264 133D 025D 		SUBWF	OML2,W00265 133E 		SKPNZ		;same as Old ML 2?00265 133E 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00266 133F 29CC 		GOTO	SetMLRoute_RTN	; Yes00267 1340 	;00268 1340 08DE 		MOVF	OML3,F00269 1341 		SKPZ		;At least 1 ML route unused?00269 1341 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00270 1342 29CC 		GOTO	SetMLRoute_RTN	; no00271 1343 	;00272 1343 248D 		CALL	FindAllUsedSMs00273 1344 		MOVFW	OML100273 1344 085C      M		MOVF	OML1,W		MOVF	src,W00274 1345 00CC 		MOVWF	SaveOldML1	00275 1346 087A 		MOVF	Param7A,W00276 1347 00DC 		MOVWF	OML100277 1348 	;00278 1348 		MOVFW	OML200278 1348 085D      M		MOVF	OML2,W		MOVF	src,W00279 1349 00CD 		MOVWF	SaveOldML2	00280 134A 01DD 		CLRF	OML200281 134B 	;00282 134B 		MOVFW	OLOC00282 134B 085F      M		MOVF	OLOC,W		MOVF	src,W00283 134C 00CB 		MOVWF	SaveOldLocal	00284 134D 01DF 		CLRF	OLOC00285 134E 	;00286 134E 300C 		MOVLW	0x0C00287 134F 00F3 		MOVWF	YReg00288 1350 22EF 	SetML1RT_L1	CALL	Get_SMBits_Y00289 1351 2303 		CALL	Set_SMBits2_Y00290 1352 0BF3 		DECFSZ	YReg,F00291 1353 2B50 		GOTO	SetML1RT_L100292 1354 	;00293 1354 248D 		CALL	FindAllUsedSMs00294 1355 	;00295 1355 		MOVFW	SaveOldLocal00295 1355 084B      M		MOVF	SaveOldLocal,W		MOVF	src,W00296 1356 00DF 		MOVWF	OLOC00297 1357 		MOVFW	SaveOldML100297 1357 084C      M		MOVF	SaveOldML1,W		MOVF	src,W00298 1358 00DC 		MOVWF	OML100299 1359 		MOVFW	SaveOldML200299 1359 084D      M		MOVF	SaveOldML2,W		MOVF	src,W00300 135A 00DD 		MOVWF	OML200301 135B 230B 		CALL	Check4Conflict00302 135C 18E7 		BTFSC	SMFound00303 135D 2B70 		GOTO	DoMLUnable00304 135E 1967 		BTFSC	SMFound200305 135F 2B70 		GOTO	DoMLUnable00306 1360 	;00307 1360 	;00308 1360 087A 		MOVF	Param7A,W00309 1361 08DC 		MOVF	OML1,F00310 1362 		SKPZ00310 1362 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00311 1363 2B67 		GOTO	SetML1RT2_100312 1364 00DC 		MOVWF	OML1	;no Conflict00313 1365 237A 		CALL	SetRT00314 1366 29CC 		GOTO	SetMLRoute_RTN00315 1367 	;00316 1367 08DD 	SetML1RT2_1	MOVF	OML2,F00317 1368 		SKPZ00317 1368 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00318 1369 2B6D 		GOTO	SetML1RT2_200319 136A 00DD 		MOVWF	OML200320 136B 237A 		CALL	SetRT00321 136C 29CC 		GOTO	SetMLRoute_RTN00322 136D 	;00323 136D 00DE 	SetML1RT2_2	MOVWF	OML300324 136E 237A 		CALL	SetRT00325 136F 29CC 		GOTO	SetMLRoute_RTN00326 1370 	;	00327 1370 	;	00328 1370 3021 	DoMLUnable	MOVLW	low MainlineUnable00329 1371 00B7 		MOVWF	CurBlk00330 1372 3001 		MOVLW	high MainlineUnable00331 1373 00B8 		MOVWF	CurBlk+100332 1374 17AF 		BSF	OActive,700333 1375 14DB 		BSF	LEDMainlineUnable00334 1376 2117 		CALL	OutputB_D1000335 1377 		if UsesSpeaker00337 1377 		endif00338 1377 29CC 		GOTO	SetMLRoute_RTN00339 1378 	;00340 1378 	;================================================================================================00341 1378 	; Entry: none00342 1378 	; Exit: Z00343 1378 	; RAM used:00344 1378 	; Calls:(0) noneHighland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 178500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00345 1378 	;00346 1378 0891 	TestStackEmpty	MOVF	StackPtr,F00347 1379 0008 		RETURN00348 137A 	;00349 137A 	;=================================================================================================00350 137A 	; ***** Set Route *****00351 137A 	; Entry: W=Route Number00352 137A 	; Exit: none00353 137A 	; RAM used:00354 137A 	; Calls:()  00355 137A 	;00356 137A 3800 	SetRT	IORLW	0x0000357 137B 		SKPNZ00357 137B 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00358 137C 0008 		RETURN00359 137D 	;00360 137D 2518 		CALL	RTTOPTR	;returns Y=000361 137E 01F3 	SetRTA_1	CLRF	YReg00362 137F 	;00363 137F 	;00364 137F 250F 	SetRT0	CALL	GetRTTempY00365 1380 	;00366 1380 	;do ReturnCmd command00367 1380 0878 		MOVF	Param78,W00368 1381 3CFF 		SUBLW	ReturnCmd00369 1382 		SKPZ00369 1382 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00370 1383 2B8C 		GOTO	SetRT100371 1384 	;00372 1384 2378 		CALL	TestStackEmpty	;Stack empty?00373 1385 		SKPNZ		00373 1385 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00374 1386 0008 		RETURN		; Yes00375 1387 	;00376 1387 2126 		CALL	Pop_D10	;No, Pop Hi ptr00377 1388 00CA 		MOVWF	RTTemp+100378 1389 2126 		CALL	Pop_D10	;Low ptr00379 138A 00C9 		MOVWF	RTTemp00380 138B 2B7E 		GOTO	SetRTA_100381 138C 	;00382 138C 	;00383 138C 	;Do Gosub command00384 138C 0878 	SetRT1	MOVF	Param78,W00385 138D 3C0F 		SUBLW	gosub00386 138E 		SKPZ00386 138E 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00387 138F 2B92 		GOTO	SetRT200388 1390 	;00389 1390 23E0 		CALL	DoGosubCmd00390 1391 2B7A 		GOTO	SetRT00391 1392 	;00392 1392 	;Do Gosub Long command00393 1392 0878 	SetRT2	MOVF	Param78,W00394 1393 3C0E 		SUBLW	gosubLong00395 1394 		SKPZ00395 1394 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00396 1395 2B98 		GOTO	SetRT300397 1396 	;00398 1396 23F3 		CALL	DoGosubLongCmd00399 1397 2B7E 		GOTO	SetRTA_100400 1398 	;00401 1398 	;Do Goto command00402 1398 0878 	SetRT3	MOVF	Param78,W00403 1399 3CFE 		SUBLW	gotoCmd00404 139A 		SKPZ00404 139A 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00405 139B 2B9F 		GOTO	SetRT400406 139C 	;00407 139C 0AF3 		INCF	YReg,F00408 139D 250F 		CALL	GetRTTempY00409 139E 2B7A 		GOTO	SetRT00410 139F 	;00411 139F 	;Do Goto Long command00412 139F 0878 	SetRT4	MOVF	Param78,W00413 13A0 3CFD 		SUBLW	gotoLong00414 13A1 		SKPZ00414 13A1 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00415 13A2 2BA5 		GOTO	SetRT500416 13A3 	;00417 13A3 23D6 		CALL	DoGotoLongCmd00418 13A4 2B7E 		GOTO	SetRTA_1	00419 13A5 	;00420 13A5 	;Do Rotate Turn Table Command00421 13A5 0878 	SetRT5	MOVF	Param78,W00422 13A6 3CFC 		SUBLW	RotateTT00423 13A7 		SKPZ00423 13A7 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00424 13A8 2BB5 		GOTO	SetRT600425 13A9 	;00426 13A9 0AF3 		INCF	YReg,F	;Skip Hi byte00427 13AA 0AF3 		INCF	YReg,F00428 13AB 250F 		CALL	GetRTTempY00429 13AC 00E8 		MOVWF	SCount00430 13AD 0AF3 		INCF	YReg,F00431 13AE 250F 		CALL	GetRTTempY00432 13AF 00E9 		MOVWF	SCount+100433 13B0 0A73 		INCF	YReg,W00434 13B1 07C9 		ADDWF	RTTemp,F00435 13B2 		ADDCF	RTTemp+1,F00435 13B2 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,CHighland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 179500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00435 13B3 0ACA      M		INCF	RTTemp+1,F		INCF	dest,W_or_F00436 13B4 	;	mCall2To3	TTDoRotate00437 13B4 2B7E 		GOTO	SetRTA_100438 13B5 	;00439 13B5 	;Do Set or Clear command00440 13B5 0878 	SetRT6	MOVF	Param78,W00441 13B6 00AF 		MOVWF	OActive00442 13B7 3901 		ANDLW	ClrSM	;SM cmd's have lo bit=100443 13B8 		SKPNZ		;Is an SM Cmd?00443 13B8 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00444 13B9 2BCD 		GOTO	SetRT7	; No00445 13BA 	;00446 13BA 	; SetRT treats ClrSM and ClrSMNU the same.00447 13BA 0AF3 		INCF	YReg,F00448 13BB 250F 		CALL	GetRTTempY	;Get offset to SM table00449 13BC 240E 		CALL	SMToPTR	;CurBlk=(Ptr)00450 13BD 	;00451 13BD 0A73 		INCF	YReg,W	;RTTemp+=YReg00452 13BE 07C9 		ADDWF	RTTemp,F00453 13BF 		ADDCF	RTTemp+1,F00453 13BF 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00453 13C0 0ACA      M		INCF	RTTemp+1,F		INCF	dest,W_or_F00454 13C1 	;00455 13C1 3000 		MOVLW	0x0000456 13C2 1BAF 		BTFSC	OActive,700457 13C3 3040 		MOVLW	SMCMDMask00458 13C4 00FC 		MOVWF	Param7C00459 13C5 3001 		MOVLW	RealSMNum+100460 13C6 00F3 		MOVWF	YReg00461 13C7 2078 		CALL	GetCurBlkY_D1000462 13C8 00F9 		MOVWF	Param79	;MSB of SMnum00463 13C9 03F3 		DECF	YReg,F00464 13CA 2078 		CALL	GetCurBlkY_D1000465 13CB 2533 		CALL	DoSMSet00466 13CC 	;00467 13CC 2B7E 		GOTO	SetRTA_100468 13CD 	;00469 13CD 	;Do Set or Clear Relay commands (4)00470 13CD 0AF3 	SetRT7	INCF	YReg,F00471 13CE 250F 		CALL	GetRTTempY00472 13CF 2422 		CALL	RlyToPtr00473 13D0 0A73 		INCF	YReg,W00474 13D1 07C9 		ADDWF	RTTemp,F00475 13D2 		ADDCF	RTTemp+1,F00475 13D2 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00475 13D3 0ACA      M		INCF	RTTemp+1,F		INCF	dest,W_or_F00476 13D4 2117 		CALL	OutputB_D1000477 13D5 2B7E 		GOTO	SetRTA_100478 13D6 	;00479 13D6 	;00480 13D6 	;=====================================================================================00481 13D6 	;00482 13D6 0AF3 	DoGotoLongCmd	INCF	YReg,F00483 13D7 0AF3 		INCF	YReg,F00484 13D8 250F 		CALL	GetRTTempY00485 13D9 00F9 		MOVWF	Param7900486 13DA 0AF3 		INCF	YReg,F00487 13DB 250F 		CALL	GetRTTempY00488 13DC 00CA 		MOVWF	RTTemp+100489 13DD 		MOVFW	Param7900489 13DD 0879      M		MOVF	Param79,W		MOVF	src,W00490 13DE 00C9 		MOVWF	RTTemp00491 13DF 0008 		RETURN00492 13E0 	;00493 13E0 	;=====================================================================================00494 13E0 	;00495 13E0 	; Calls:(1+2) Push(2)00496 13E0 	;00497 13E0 0873 	DoGosubCmd	MOVF	YReg,W00498 13E1 3E02 		ADDLW	0x0200499 13E2 0749 		ADDWF	RTTemp,W00500 13E3 		mCall2To0	Push	;low ptr00500 13E3 120A      M		BCF	PCLATH,4		BCF	PCLATH,400500 13E4 22C4      M		CALL	Push		CALL	Destination00500 13E5 118A      M		BCF	PCLATH,3		BCF	PCLATH,300500 13E6 160A      M		BSF	PCLATH,4		BSF	PCLATH,400501 13E7 		mBank300501 13E7 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000501 13E8 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100502 13E9 		ADDCF	RTTemp+1,W00502 13E9 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00502 13EA 0A4A      M		INCF	RTTemp+1,W		INCF	dest,W_or_F00503 13EB 		mCall2To0	Push	;Hi Ptr00503 13EB 120A      M		BCF	PCLATH,4		BCF	PCLATH,400503 13EC 22C4      M		CALL	Push		CALL	Destination00503 13ED 118A      M		BCF	PCLATH,3		BCF	PCLATH,300503 13EE 160A      M		BSF	PCLATH,4		BSF	PCLATH,400504 13EF 		mBank300504 13EF 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000504 13F0 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100505 13F1 0AF3 		INCF	YReg,F00506 13F2 2D0F 		GOTO	GetRTTempY00507 13F3 	;00508 13F3 	;=====================================================================================00509 13F3 	;00510 13F3 0873 	DoGosubLongCmd	MOVF	YReg,W00511 13F4 3E04 		ADDLW	0x0400512 13F5 0749 		ADDWF	RTTemp,W00513 13F6 		mCall2To0	Push	;Push low ptr00513 13F6 120A      M		BCF	PCLATH,4		BCF	PCLATH,4Highland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 180500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00513 13F7 22C4      M		CALL	Push		CALL	Destination00513 13F8 118A      M		BCF	PCLATH,3		BCF	PCLATH,300513 13F9 160A      M		BSF	PCLATH,4		BSF	PCLATH,400514 13FA 		mBank300514 13FA 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000514 13FB 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100515 13FC 		ADDCF	RTTemp+1,W00515 13FC 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00515 13FD 0A4A      M		INCF	RTTemp+1,W		INCF	dest,W_or_F00516 13FE 		mCall2To0	Push	;Push Hi Ptr00516 13FE 120A      M		BCF	PCLATH,4		BCF	PCLATH,400516 13FF 22C4      M		CALL	Push		CALL	Destination00516 1400 118A      M		BCF	PCLATH,3		BCF	PCLATH,300516 1401 160A      M		BSF	PCLATH,4		BSF	PCLATH,400517 1402 		mBank300517 1402 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000517 1403 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100518 1404 0AF3 		INCF	YReg,F	;skip dead byte00519 1405 0AF3 		INCF	YReg,F	;LSB of dest00520 1406 250F 		CALL	GetRTTempY00521 1407 00F9 		MOVWF	Param7900522 1408 0AF3 		INCF	YReg,F	;MSB of dest00523 1409 250F 		CALL	GetRTTempY00524 140A 00CA 		MOVWF	RTTemp+100525 140B 		MOVFW	Param7900525 140B 0879      M		MOVF	Param79,W		MOVF	src,W00526 140C 00C9 		MOVWF	RTTemp00527 140D 0008 		RETURN00528 140E 	;00529 140E 	;=====================================================================================00530 140E 	;Convert an SM number in W to Address in CurBlk00531 140E 	; CurBlk:=(W-1)*8+FirstSMsData00532 140E 	;00533 140E 00B7 	SMToPTR	MOVWF	CurBlk00534 140F 03B7 		DECF	CurBlk,F	;SM:=SM-100535 1410 01B8 		CLRF	CurBlk+100536 1411 	;00537 1411 241A 		CALL	CurBlkX800538 1412 	;00539 1412 30C5 		MOVLW	low FirstSMsData00540 1413 07B7 		ADDWF	CurBlk,F00541 1414 		ADDCF	CurBlk+1,F00541 1414 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00541 1415 0AB8      M		INCF	CurBlk+1,F		INCF	dest,W_or_F00542 1416 3007 		MOVLW	high FirstSMsData00543 1417 3E10 		ADDLW	low evDataROM00544 1418 07B8 		ADDWF	CurBlk+1,F00545 1419 0008 		RETURN00546 141A 	;00547 141A 	CurBlkX8	CLRC00547 141A 1003      M		BCF	STATUS,C		BCF	STATUS,C00548 141B 0DB7 		RLF	CurBlk,F	;SM:=SM*800549 141C 0DB8 		RLF	CurBlk+1,F00550 141D 0DB7 		RLF	CurBlk,F00551 141E 0DB8 		RLF	CurBlk+1,F00552 141F 0DB7 		RLF	CurBlk,F00553 1420 0DB8 		RLF	CurBlk+1,F00554 1421 0008 		RETURN00555 1422 	;00556 1422 	;==========================================================================================00557 1422 	;Convert Relay number in W to Output Number in CurBlk00558 1422 	; CurBlk:=W/128*256+0x1000+(W mod 128)00559 1422 	;00560 1422 00B7 	RlyToPtr	MOVWF	CurBlk00561 1423 00B8 		MOVWF	CurBlk+100562 1424 307F 		MOVLW	0x7F00563 1425 05B7 		ANDWF	CurBlk,F00564 1426 3080 		MOVLW	0x80	;div 128 * 25600565 1427 05B8 		ANDWF	CurBlk+1,F	; keep the high bit00566 1428 		CLRC		00566 1428 1003      M		BCF	STATUS,C		BCF	STATUS,C00567 1429 0DB8 		RLF	CurBlk+1,F	; roll the high bit00568 142A 0DB8 		RLF	CurBlk+1,F	; around to the low bit00569 142B 3010 		MOVLW	0x10	;add 0x100000570 142C 04B8 		IORWF	CurBlk+1,F00571 142D 0008 		RETURN00572 142E 	;00573 142E 	;==========================================================================================00574 142E 	;Clear Route00575 142E 	;00576 142E 	; Entry: Route Number in W00577 142E 	; Exit: 00578 142E 	;00579 142E 3800 	ClrRT	IORLW	0x0000580 142F 		SKPNZ00580 142F 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00581 1430 0008 		RETURN00582 1431 	;00583 1431 2518 		CALL	RTTOPTR00584 1432 01F3 	ClrRTA_1	CLRF	YReg	00585 1433 250F 	ClrRT0	CALL	GetRTTempY00586 1434 	; return command00587 1434 0878 		MOVF	Param78,W00588 1435 3CFF 		SUBLW	ReturnCmd	00589 1436 		SKPZ00589 1436 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00590 1437 2C40 		GOTO	ClrRT100591 1438 	;00592 1438 2378 		CALL	TestStackEmpty00593 1439 		SKPNZHighland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 181500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00593 1439 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00594 143A 0008 		RETURN00595 143B 2126 		CALL	Pop_D10	;Hi ptr00596 143C 00CA 		MOVWF	RTTemp+100597 143D 2126 		CALL	Pop_D10	;Low ptr00598 143E 00C9 		MOVWF	RTTemp00599 143F 2C32 		GOTO	ClrRTA_100600 1440 	;00601 1440 	;Do Gosub00602 1440 0878 	ClrRT1	MOVF	Param78,W00603 1441 3C0F 		SUBLW	gosub	00604 1442 		SKPZ00604 1442 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00605 1443 2C46 		GOTO	ClrRT200606 1444 	;00607 1444 23E0 		CALL	DoGosubCmd00608 1445 2C2E 		GOTO	ClrRT00609 1446 	;00610 1446 	;Do Gosub Long00611 1446 0878 	ClrRT2	MOVF	Param78,W00612 1447 3C0E 		SUBLW	gosubLong	00613 1448 		SKPZ00613 1448 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00614 1449 2C4C 		GOTO	ClrRT300615 144A 	;00616 144A 23F3 		CALL	DoGosubLongCmd00617 144B 2C32 		GOTO	ClrRTA_100618 144C 	;00619 144C 	;Do gotoCmd command00620 144C 0878 	ClrRT3	MOVF	Param78,W00621 144D 3CFE 		SUBLW	gotoCmd00622 144E 		SKPZ00622 144E 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00623 144F 2C53 		GOTO	ClrRT400624 1450 	;00625 1450 0AF3 		INCF	YReg,F00626 1451 250F 		CALL	GetRTTempY00627 1452 2C2E 		GOTO	ClrRT00628 1453 	;00629 1453 	;Do Goto Long command	00630 1453 0878 	ClrRT4	MOVF	Param78,W00631 1454 3CFD 		SUBLW	gotoLong00632 1455 		SKPZ00632 1455 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00633 1456 2C59 		GOTO	ClrRT500634 1457 	;00635 1457 23D6 		CALL	DoGotoLongCmd00636 1458 2C32 		GOTO	ClrRTA_1	00637 1459 	;00638 1459 	;Do Rotate Turn Table Command: do nothing00639 1459 0878 	ClrRT5	MOVF	Param78,W00640 145A 3CFC 		SUBLW	RotateTT00641 145B 		SKPZ00641 145B 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00642 145C 2C62 		GOTO	ClrRT600643 145D 	;00644 145D 0AF3 		INCF	YReg,F	;Hi byte00645 145E 0AF3 		INCF	YReg,F	;Lo Step00646 145F 0AF3 		INCF	YReg,F	;Hi Step00647 1460 0AF3 		INCF	YReg,F	;Next CMD00648 1461 2C33 		GOTO	ClrRT000649 1462 	;00650 1462 	;Do SetSM and ClrSM command: do nothing00651 1462 0878 	ClrRT6	MOVF	Param78,W00652 1463 3C01 		SUBLW	ClrSM00653 1464 		SKPNZ00653 1464 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00654 1465 2C6A 		GOTO	ClrRT6_100655 1466 	;00656 1466 0878 		MOVF	Param78,W00657 1467 3C81 		SUBLW	SetSM00658 1468 		SKPZ00658 1468 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00659 1469 2C6D 		GOTO	ClrRT700660 146A 	;00661 146A 0AF3 	ClrRT6_1	INCF	YReg,F00662 146B 0AF3 		INCF	YReg,F00663 146C 2C33 		GOTO	ClrRT000664 146D 	;00665 146D 	;Do SetRly00666 146D 0878 	ClrRT7	MOVF	Param78,W00667 146E 3C82 		SUBLW	SetRlyNC00668 146F 		SKPNZ00668 146F 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00669 1470 2C6A 		GOTO	ClrRT6_1	;do nothing for SetRlyNC00670 1471 	;00671 1471 0878 		MOVF	Param78,W00672 1472 3C00 		SUBLW	ClrRly00673 1473 		SKPNZ00673 1473 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00674 1474 2C6A 		GOTO	ClrRT6_1	;do nothing for ClrRly00675 1475 	;00676 1475 0878 		MOVF	Param78,W00677 1476 3C80 		SUBLW	SetRly00678 1477 		SKPZ00678 1477 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00679 1478 2C83 		GOTO	ClrRT800680 1479 	;00681 1479 0AF3 		INCF	YReg,F00682 147A 250F 		CALL	GetRTTempYHighland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 182500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00683 147B 2422 		CALL	RlyToPtr00684 147C 0A73 		INCF	YReg,W00685 147D 07C9 		ADDWF	RTTemp,F00686 147E 		ADDCF	RTTemp+1,F00686 147E 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00686 147F 0ACA      M		INCF	RTTemp+1,F		INCF	dest,W_or_F00687 1480 01AF 		CLRF	OActive00688 1481 2117 		CALL	OutputB_D1000689 1482 2C32 		GOTO	ClrRTA_100690 1483 	;00691 1483 	;by default must be ClrRlyNS command00692 1483 0AF3 	ClrRT8	INCF	YReg,F00693 1484 250F 		CALL	GetRTTempY00694 1485 2422 		CALL	RlyToPtr00695 1486 0A73 		INCF	YReg,W00696 1487 07C9 		ADDWF	RTTemp,F00697 1488 		ADDCF	RTTemp+1,F00697 1488 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00697 1489 0ACA      M		INCF	RTTemp+1,F		INCF	dest,W_or_F00698 148A 17AF 		BSF	OActive,700699 148B 2117 		CALL	OutputB_D1000700 148C 2C32 		GOTO	ClrRTA_100701 148D 	;00702 148D 	;===================================================================================================00703 148D 	;Find all the used SMs in all active routes00704 148D 	;IN: none00705 148D 	;OUT: SMBits  2 bits per SM 00706 148D 	; 00=not found, 10=set or cleared, 01=cleared by ClrSMNU, 11=set by SetSMNU00707 148D 	;00708 148D 	; Calls:(0+5) Set_SMBits_X, FINDSMS(5)00709 148D 	;00710 148D 300B 	FindAllUsedSMs	MOVLW	0x0B	;for X:=11 downto 000711 148E 00F2 		MOVWF	XReg00712 148F 	;00713 148F 3000 	FindAllUsedSMs_L1	MOVLW	0x0000714 1490 22F5 		CALL	Set_SMBits_X	;Clear all 96 bits00715 1491 03F2 		DECF	XReg,F00716 1492 1FF2 		BTFSS	XReg,700717 1493 2C8F 		GOTO	FindAllUsedSMs_L100718 1494 	;00719 1494 3030 		MOVLW	SMCount+1	;for x:=48 downto 100720 1495 00E4 		MOVWF	SMTemp00721 1496 10E7 	FindAllUsedSMs_L2	BCF	SMFound00722 1497 1167 		BCF	SMFound200723 1498 2CB6 		GOTO	FINDSMS00724 1499 	FINDSMS_RTN00725 1499 	;00726 1499 3002 		MOVLW	0x0200727 149A 00F8 		MOVWF	Param78	;2 bits00728 149B 1003 		BCF	_C00729 149C 18E7 		BTFSC	SMFound	;1st valid bit to carry00730 149D 1403 		BSF	_C00731 149E 	;00732 149E 	FindAllUsedSMs_L3	00733 149E 1283  a		BCF	STATUS,RP0	;banksel00733 149F 1703  a		BSF	STATUS,RP1	;banksel00733 14A0 		BankSel	SMBits	;bank200734 14A0 0DCB 		RLF	SMBits,F00735 14A1 0DCC 		RLF	SMBits+1,F00736 14A2 0DCD 		RLF	SMBits+2,F00737 14A3 0DCE 		RLF	SMBits+3,F00738 14A4 0DCF 		RLF	SMBits+4,F00739 14A5 0DD0 		RLF	SMBits+5,F00740 14A6 0DD1 		RLF	SMBits+6,F00741 14A7 0DD2 		RLF	SMBits+7,F00742 14A8 0DD3 		RLF	SMBits+8,F00743 14A9 0DD4 		RLF	SMBits+9,F00744 14AA 0DDB 		RLF	SMBits+10,F00745 14AB 0DDC 		RLF	SMBits+11,F00746 14AC 		mBank300746 14AC 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000746 14AD 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100747 14AE 1003 		BCF	_C00748 14AF 1967 		BTFSC	SMFound2	;2nd valid bit to carry00749 14B0 1403 		BSF	_C00750 14B1 0BF8 		DECFSZ	Param78,F00751 14B2 2C9E 		GOTO	FindAllUsedSMs_L300752 14B3 	;00753 14B3 0BE4 		DECFSZ	SMTemp,F00754 14B4 2C96 		GOTO	FindAllUsedSMs_L200755 14B5 0008 		RETURN	00756 14B6 	;00757 14B6 	;=================================================================================00758 14B6 	;Find a SM in active routes00759 14B6 	;00760 14B6 	;Entry: SMTemp SM to find00761 14B6 	;Exit: SMFound:SMFound200762 14B6 	; 00=not found, 10=set or cleared, 01=cleared by ClrSMNU, 11=set by SetSMNU00763 14B6 	;Uses: RTtemp, YReg00764 14B6 	;00765 14B6 	; Calls:(1+4) RTTOPTR(0), GetRTTempY(3), TestStackEmpty(0), Pop_D10, DoGosubCmd(4),00766 14B6 	;	DoGosubLongCmd, DoGotoLongCmd00767 14B6 	;00768 14B6 085F 	FINDSMS	MOVF	OLOC,W00769 14B7 24BD 		CALL	FINDSM00770 14B8 085C 		MOVF	OML1,W00771 14B9 24BD 		CALL	FINDSM00772 14BA 085D 		MOVF	OML2,W00773 14BB 24BD 		CALL	FINDSM00774 14BC 085E 		MOVF	OML3,WHighland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 183500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00775 14BD 	;00776 14BD 3800 	FINDSM	IORLW	0x0000777 14BE 		SKPNZ00777 14BE 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00778 14BF 2C99 		GOTO	FINDSMS_RTN00779 14C0 	;00780 14C0 2518 	FINDSMA	CALL	RTTOPTR00781 14C1 01F3 	FINDSMA_1	CLRF	YReg00782 14C2 250F 	FINDSM0	CALL	GetRTTempY	;SRAM (RTTemp,Y)00783 14C3 	;00784 14C3 	;do ReturnCmd command00785 14C3 0878 		MOVF	Param78,W00786 14C4 3CFF 		SUBLW	ReturnCmd	00787 14C5 		SKPZ00787 14C5 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00788 14C6 2CCF 		GOTO	FINDSM100789 14C7 	;00790 14C7 2378 		CALL	TestStackEmpty00791 14C8 		SKPNZ00791 14C8 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00792 14C9 2C99 		GOTO	FINDSMS_RTN00793 14CA 	;00794 14CA 2126 		CALL	Pop_D10	;Hi ptr00795 14CB 00CA 		MOVWF	RTTemp+100796 14CC 2126 		CALL	Pop_D10	;Low ptr00797 14CD 00C9 		MOVWF	RTTemp00798 14CE 2CC1 		GOTO	FINDSMA_100799 14CF 	;00800 14CF 	;Do Gosub command00801 14CF 0878 	FINDSM1	MOVF	Param78,W00802 14D0 3C0F 		SUBLW	gosub	00803 14D1 		SKPZ00803 14D1 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00804 14D2 2CD5 		GOTO	FINDSM200805 14D3 	;00806 14D3 23E0 		CALL	DoGosubCmd00807 14D4 2CC0 		GOTO	FINDSMA	;of rout A00808 14D5 	;00809 14D5 	;do Gosub Long command00810 14D5 0878 	FINDSM2	MOVF	Param78,W00811 14D6 3C0E 		SUBLW	gosubLong	00812 14D7 		SKPZ00812 14D7 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00813 14D8 2CDB 		GOTO	FINDSM300814 14D9 	;00815 14D9 23F3 		CALL	DoGosubLongCmd00816 14DA 2CC1 		GOTO	FINDSMA_1	;of rout A00817 14DB 	;00818 14DB 	;do gotoCmd command00819 14DB 0878 	FINDSM3	MOVF	Param78,W00820 14DC 3CFE 		SUBLW	gotoCmd00821 14DD 		SKPZ00821 14DD 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00822 14DE 2CE2 		GOTO	FINDSM400823 14DF 	;00824 14DF 0AF3 		INCF	YReg,F00825 14E0 250F 		CALL	GetRTTempY00826 14E1 2CBD 		GOTO	FINDSM	00827 14E2 	;00828 14E2 	;do gotoLong command00829 14E2 0878 	FINDSM4	MOVF	Param78,W00830 14E3 3CFD 		SUBLW	gotoLong00831 14E4 		SKPZ00831 14E4 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00832 14E5 2CE8 		GOTO	FINDSM500833 14E6 	;00834 14E6 23D6 		CALL	DoGotoLongCmd00835 14E7 2CC1 		GOTO	FINDSMA_1	00836 14E8 	;00837 14E8 	;do SetSM or ClrSM command00838 14E8 0878 	FINDSM5	MOVF	Param78,W00839 14E9 3C01 		SUBLW	ClrSM00840 14EA 		SKPNZ00840 14EA 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00841 14EB 2CF0 		GOTO	FINDSM5_100842 14EC 	;00843 14EC 0878 		MOVF	Param78,W00844 14ED 3C81 		SUBLW	SetSM	00845 14EE 		SKPZ00845 14EE 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00846 14EF 2CF6 		GOTO	FINDSM600847 14F0 	;00848 14F0 0AF3 	FINDSM5_1	INCF	YReg,F00849 14F1 250F 		CALL	GetRTTempY00850 14F2 0264 		SUBWF	SMTemp,W00851 14F3 		SKPNZ00851 14F3 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00852 14F4 14E7 		BSF	SMFound00853 14F5 2D0D 		GOTO	FINDSM8_100854 14F6 	;00855 14F6 	;do SetSMNU or ClrSMNU command00856 14F6 0878 	FINDSM6	MOVF	Param78,W00857 14F7 3C03 		SUBLW	ClrSMNU00858 14F8 		SKPZ00858 14F8 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00859 14F9 2D00 		GOTO	FINDSM700860 14FA 	;00861 14FA 0AF3 		INCF	YReg,F00862 14FB 250F 		CALL	GetRTTempY00863 14FC 0264 		SUBWF	SMTemp,W	;is this the SM we're looking for?Highland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 184500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00864 14FD 		SKPNZ00864 14FD 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00865 14FE 1567 		BSF	SMFound2	;Yes00866 14FF 2D0D 		GOTO	FINDSM8_100867 1500 	;00868 1500 0878 	FINDSM7	MOVF	Param78,W00869 1501 3C83 		SUBLW	SetSMNU00870 1502 		SKPZ00870 1502 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00871 1503 2D0C 		GOTO	FINDSM8	;must be SetRly or ClrRly00872 1504 	;00873 1504 0AF3 		INCF	YReg,F00874 1505 250F 		CALL	GetRTTempY00875 1506 0264 		SUBWF	SMTemp,W	;is this the SM we're looking for?00876 1507 		SKPZ00876 1507 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00877 1508 2D0D 		GOTO	FINDSM8_1	;No00878 1509 14E7 		BSF	SMFound	;Yes00879 150A 1567 		BSF	SMFound200880 150B 2D0D 		GOTO	FINDSM8_100881 150C 	;00882 150C 	;ignor set and clr rly commands (4)00883 150C 0AF3 	FINDSM8	INCF	YReg,F00884 150D 0AF3 	FINDSM8_1	INCF	YReg,F00885 150E 2CC2 		GOTO	FINDSM000886 150F 	;00887 150F 	;=========================================================================================00888 150F 	; Get data from SRAM (RTTemp),Y00889 150F 	;00890 150F 	; Entry: YReg, bank300891 150F 	; Exit: Param78 & W = RTTemp Data, Bank300892 150F 	; RAM Used: YReg, Param7800893 150F 	; Calls: (0+3) SRAM_Read_D1000894 150F 	;00895 150F 	;6502:	LDA	(RTTemp),Y00896 150F 	;PIC16:	CALL	GetRTTempY00897 150F 	;00898 150F 084A 	GetRTTempY	MOVF	RTTemp+1,W00899 1510 3E10 		ADDLW	low evDataROM00900 1511 00A0 		MOVWF	SRAM_Addr100901 1512 0849 		MOVF	RTTemp,W00902 1513 0773 		ADDWF	YReg,W00903 1514 009F 		MOVWF	SRAM_Addr000904 1515 		ADDCF	SRAM_Addr1,F00904 1515 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00904 1516 0AA0      M		INCF	SRAM_Addr1,F		INCF	dest,W_or_F00905 1517 286E 		GOTO	GetGet_Read_D1000906 1518 	;00907 1518 	;=============================================================================================00908 1518 	;Entry: W=Route# 0..255,00909 1518 	;Exit: RTTemp=Route Pointer to SRAM Data00910 1518 	;00911 1518 	; Calls:(0) None00912 1518 	;00913 1518 1003 	RTTOPTR	BCF	_C00914 1519 01E6 		CLRF	PtrTemp+100915 151A 00E5 		MOVWF	PtrTemp00916 151B 0DE5 		RLF	PtrTemp,F	;RT:=RT*200917 151C 0DE6 		RLF	PtrTemp+1,F00918 151D 	;00919 151D 304C 		MOVLW	low PRT00	;RT:=RT+offsetToPRT0000920 151E 07E5 		ADDWF	PtrTemp,F00921 151F 		ADDCF	PtrTemp+1,F00921 151F 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00921 1520 0AE6      M		INCF	PtrTemp+1,F		INCF	dest,W_or_F00922 1521 3010 		MOVLW	high PRT0000923 1522 07E6 		ADDWF	PtrTemp+1,F00924 1523 	;00925 1523 01F3 		CLRF	YReg	;RTTemp=(PtrTemp+evDataROM)00926 1524 252A 		CALL	GetPtrTempY00927 1525 00C9 		MOVWF	RTTemp00928 1526 0AF3 		INCF	YReg,F00929 1527 252A 		CALL	GetPtrTempY00930 1528 00CA 		MOVWF	RTTemp+100931 1529 0008 		RETURN00932 152A 	;00933 152A 	;=========================================================================================00934 152A 	; Get data from SRAM (PtrTemp),Y00935 152A 	;00936 152A 	; Entry: YReg, bank300937 152A 	; Exit: Param78 & W = SMData, Bank300938 152A 	; RAM Used: YReg, Param7800939 152A 	; Calls: (0+3) SRAM_Read00940 152A 	;00941 152A 	;6502:	LDA	(PtrTemp),Y00942 152A 	;PIC16:	CALL	GetPtrTempY00943 152A 	;00944 152A 0866 	GetPtrTempY	MOVF	PtrTemp+1,W00945 152B 3E10 		ADDLW	low evDataROM00946 152C 00A0 		MOVWF	SRAM_Addr100947 152D 0865 		MOVF	PtrTemp,W00948 152E 0773 		ADDWF	YReg,W00949 152F 009F 		MOVWF	SRAM_Addr000950 1530 		ADDCF	SRAM_Addr1,F00950 1530 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00950 1531 0AA0      M		INCF	SRAM_Addr1,F		INCF	dest,W_or_F00951 1532 286E 		GOTO	GetGet_Read_D1000952 1533 	;00953 1533 	;=============================================================================================00954 1533 	; Entry:W= SM #, Param79=MSb of SM#, Param7C=SMCMDMask or 0x00Highland Greeley PIC.asm   "HIGY.Routes.asm"                             Page: 185500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:HIGY.Routes.asm00955 1533 	;00956 1533 	; Calls:(1+3) GetSMTableX_D10, GetSMTableHighX_D10, SetSMTableX_D10, SetSMTableHighX_D1000957 1533 	;00958 1533 00F2 	DoSMSet	MOVWF	XReg00959 1534 1C79 		BTFSS	Param79,0	;High SM?00960 1535 20AF 		CALL	GetSMTableX_D10	; No00961 1536 1879 		BTFSC	Param79,0	;High SM?00962 1537 2064 		CALL	GetSMTableHighX_D10	; Yes00963 1538 39A0 		ANDLW	SMCnFMask	;Keep Control and FB bits00964 1539 047C 		IORWF	Param7C,W	;Combine w/ CMD bit00965 153A 3801 		IORLW	b'00000001'	;Set Valid Data Flag00966 153B 00F8 		MOVWF	Param7800967 153C 39C0 		ANDLW	0xC0	;Ctrl and Cmd00968 153D 		SKPNZ		;Both off?00968 153D 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00969 153E 0008 		RETURN		; Yes00970 153F 	;00971 153F 0878 		MOVF	Param78,W00972 1540 3AC0 		XORLW	0xC0	;Ctrl and Cmd00973 1541 		SKPNZ		;Both on?00973 1541 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00974 1542 0008 		RETURN		; Yes00975 1543 	;00976 1543 0878 		MOVF	Param78,W00977 1544 1C79 		BTFSS	Param79,0	;High SM?00978 1545 15D5 		BSF	SMTableLowChngFlag	; No00979 1546 1879 		BTFSC	Param79,0	;High SM?00980 1547 1655 		BSF	SMTableHiChngFlag	; Yes00981 1548 1C79 		BTFSS	Param79,0	;High SM?00982 1549 28B4 		GOTO	SetSMTableX_D10	; No00983 154A 2873 		GOTO	SetSMTableHighX_D10	; Yes00984 154B 	;01016 154B 	;	include	HIGY.TTProg.asm01017 154B 		include	Dispatch.asm00001 154B 		subtitle	"Dispatch.asm"00002 154B 		page00003 154B 	;============================================================================================00004 154B 	;00005 154B 	;  FileName: Dispatch.asm00006 154B 	;  Date: 5/5/200800007 154B 	;  File Version: 1.2.200008 154B 	;  00009 154B 	;  Author: David M. Flynn00010 154B 	;  Company: Oxford V.U.E., Inc.00011 154B 	;00012 154B 	;============================================================================================00013 154B 	; Notes:00014 154B 	;        This file is the menu dispatcher for use with the buttons on the GP CPU board.00015 154B 	;00016 154B 	;  In a file at the end of segment 2 you must add the following custom routines:00017 154B 	;00018 154B 	;	RunOrService00019 154B 	;	SvsMdTtlXtras00020 154B 	;   and constants:00021 154B 	;	kLastSvsScrn00022 154B 	;	kLastNormScrn00023 154B 	;00024 154B 	; Indirect Service Modes:00025 154B 	;  	constant	UsesIndirectSvsMd=100026 154B 	;  SvsModeSet	EQU	Mode_Metal	;0..7 value used to select mode set00027 154B 	;   must be in bank 300028 154B 	; 00029 154B 	;  SvsMdTblPtr	;First svs md of each set, 8 word table (big engien, MSB first)00030 154B 	;  SvsMdTblLENum	;Last Entry of each set, (SvsMdTblPtr+(SvsModeSet*2)) + (SvsMdTblLENum+SvsModeSet)00031 154B 	;00032 154B 	;============================================================================================00033 154B 	; Revision History00034 154B 	;00035 154B 	; 1.2.2 4/5/2008	Added UseVUE8Btns LDI2 Btns00036 154B 	; 1.2.1 6/2/2007	Added conditional assm's (opt-in)00037 154B 	; 1.2   11/9/2004	Added indirect servive mode support.  UsesIndirectSvsMd, SvsModeSet00038 154B 	; 1.1.2 10/22/2004	Added range checking of ScrnNumber to StartSvsMode and StartRunMode00039 154B 	; 1.1.1 8/27/2004	Added UsesBootloader test for BL_SetCode and call SetUIPBit.00040 154B 	; 1.1   7/9/2004	Added IdleR2C7, IdleR2C9, etc.00041 154B 	; 1.0   3/17/2004	Copied from VUE-7.00042 154B 	;00043 154B 	;============================================================================================00044 154B 	;00045 154B 	; Name	(additional stack words required) Description00046 154B 	;============================================================================================00047 154B 	;00048 154B 	; ButtonDispatch	(0+) User Button Command Intrerpeter00049 154B 	;00050 154B 	; PrevSvsMode	() Previous Service mode screen00051 154B 	; NextSvsMode	() Next Service mode screen00052 154B 	; StartSvsMode	() Start service mode00053 154B 	;  StartSvsModeX00054 154B 	; PrevRunMode	() Previous Run mode screen00055 154B 	; NextRunMode	() Next Run mode screen00056 154B 	; StartRunMode	() Start Run mode00057 154B 	;  StartRunModeX00058 154B 	;00059 154B 	; lcd_gotoW2	(0+2) Goto the char W on the 3rd line00060 154B 	; IdleHexByte	(0+4) Display Byte at (W) in bank 2 or 3 w/ Disp_Hex_Byte_D1000061 154B 	; Idle2plDec	(0+4) Display Byte at (W) in bank 2 or 3 w/ Disp_decbyteW2pl_D1000062 154B 	; Idle3plDec	(0+4) Display Byte at (W) in bank 2 or 3 w/ Disp_decbyteW3pl_D1000063 154B 	; IdleR2C1	() lcd Goto Row 2 (3rd line) Col 100064 154B 	; IdleR2C4	() lcd Goto Row 2 (3rd line) Col 400065 154B 	; IdleR2C6	() lcd Goto Row 2 (3rd line) Col 6Highland Greeley PIC.asm   "Dispatch.asm"                                Page: 186500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Dispatch.asm00066 154B 	; IdleR2C7	() lcd Goto Row 2 (3rd line) Col 700067 154B 	; IdleR2C8	() lcd Goto Row 2 (3rd line) Col 800068 154B 	; IdleR2C9	() lcd Goto Row 2 (3rd line) Col 900069 154B 	; IdleR2C12	() lcd Goto Row 2 (3rd line) Col 1200070 154B 	; IdleR2C14	() lcd Goto Row 2 (3rd line) Col 1400071 154B 	; IdleR2C15	() lcd Goto Row 2 (3rd line) Col 1500072 154B 	; IdleR2C16	() lcd Goto Row 2 (3rd line) Col 1600073 154B 	; IdleR2C17	() lcd Goto Row 2 (3rd line) Col 1800074 154B 	; 00075 154B 	;00076 154B 	;============================================================================================00077 154B 	;00078 154B 		ifndef	UsesIndirectSvsMd00080 154B 		endif00081 154B 	;00082 154B 		ifndef	BtnDebounceTime00084 154B 		endif00085 154B 		ifndef	CGIBtnDebounceTime00087 154B 		endif00088 154B 		ifndef	BtnDeBounceTimer00090 154B 		endif00091 154B 		ifndef	UseVUE8Btns00093 154B 		endif00094 154B 	;00095 154B 	;============================================================================================00096 154B 	;User Button Command Intrerpeter00097 154B 	;00098 154B 	; Entry: evPtrAcid00099 154B 	; Exit: none00100 154B 	; RAM used: Param78,Param79,Param7A00101 154B 	; Calls:(0+) RunOrService00102 154B 	;00103 154B 	ButtonDispatch	00104 154B 		if UseVUE8Btns00142 154B 		else00143 154B 	;00144 154B 		mBank300144 154B 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000144 154C 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100145 154D 0827 		MOVF	CurrentLDI_0,W00146 154E 3A3F 		XORLW	0x3F	; make btns pos logic00147 154F 393F 		ANDLW	0x3F00148 1550 00F8 		MOVWF	Param7800149 1551 		endif00150 1551 	;00151 1551 		mBank000151 1551 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000151 1552 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100152 1553 08F8 		MOVF	Param78,F00153 1554 		SKPNZ00153 1554 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00154 1555 2D70 		GOTO	NoButton00155 1556 	; a button is down so reset the debounce timer00156 1556 		mBank300156 1556 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000156 1557 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100157 1558 3002 		MOVLW	BtnDebounceTime00158 1559 00AA 		MOVWF	BtnDeBounceTimer00159 155A 	;00160 155A 		if UsesBootloader00161 155A 	;Bootloader trigger, if the correct buttons are down then set the bit to trigger00162 155A 	; loading next time a reset occures.00163 155A 3018 		MOVLW	BL_SetCode	;BootLoader button combo00164 155B 0278 		SUBWF	Param78,W	;Button bits (positive logic)00165 155C 		SKPZ00165 155C 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00166 155D 2D65 		GOTO	NoBootload00167 155E 		mCall2To3	SetUIPBit00167 155E 158A      M		BSF	PCLATH,3		BSF	PCLATH,300167 155F 270F      M		CALL	SetUIPBit		CALL	Destination00167 1560 118A      M		BCF	PCLATH,3		BCF	PCLATH,300167 1561 160A      M		BSF	PCLATH,4		BSF	PCLATH,400168 1562 302F 		MOVLW	StrResetNowPtr00169 1563 20F3 		CALL	DispStrLine300170 1564 2D64 	BD_Stop	GOTO	BD_Stop00171 1565 	NoBootload00172 1565 		endif00173 1565 	;00174 1565 		mBank000174 1565 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000174 1566 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100175 1567 	;00176 1567 1925 		BTFSC	BtnDebounce00177 1568 0008 		RETURN00178 1569 1525 		BSF	BtnDebounce00179 156A 	;00180 156A 	; Convert button bits to a number 0..500181 156A 01F9 		CLRF	Param7900182 156B 0CF8 	BD_L1	RRF	Param78,F00183 156C 1803 		BTFSC	STATUS,C00184 156D 2FE3 		GOTO	RunOrService00185 156E 0AF9 		INCF	Param79,F00186 156F 2D6B 		GOTO	BD_L100187 1570 	;00188 1570 	NoButton	mBank300188 1570 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000188 1571 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100189 1572 		TSTF	BtnDeBounceTimer00189 1572 08AA      M		MOVF	BtnDeBounceTimer,F		MOVF	src,F00190 1573 		mBank0Highland Greeley PIC.asm   "Dispatch.asm"                                Page: 187500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Dispatch.asm00190 1573 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000190 1574 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100191 1575 		SKPZ00191 1575 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00192 1576 2D85 		GOTO	DoDebounceCGI00193 1577 1125 		BCF	BtnDebounce00194 1578 08A9 		MOVF	CGI_BtnQueued,F00195 1579 		SKPNZ00195 1579 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00196 157A 0008 		RETURN00197 157B 	; a CGI button is down so reset the debounce timer00198 157B 		mBank300198 157B 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000198 157C 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100199 157D 300A 		MOVLW	CGIBtnDebounceTime00200 157E 00AA 		MOVWF	BtnDeBounceTimer00201 157F 		mBank000201 157F 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000201 1580 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100202 1581 	;	00203 1581 0329 		DECF	CGI_BtnQueued,W00204 1582 01A9 		CLRF	CGI_BtnQueued00205 1583 00F9 		MOVWF	Param7900206 1584 2FE3 		GOTO	RunOrService00207 1585 	;00208 1585 01A9 	DoDebounceCGI	CLRF	CGI_BtnQueued00209 1586 0008 		RETURN00210 1587 	;00211 1587 	;===========================================================================================00212 1587 	; Previous Service mode screen00213 1587 	;00214 1587 	; Entry: ScrnNumber00215 1587 	; Exit: ScrnNumber-- wraped00216 1587 	; RAM used: Param7800217 1587 	; Calls:(1+2) SaveSvsScrnNumber, SRAM_Read_D1000218 1587 	;00219 1587 	PrevSvsMode	mBank000219 1587 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000219 1588 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100220 1589 		TSTF	ScrnNumber00220 1589 08A3      M		MOVF	ScrnNumber,F		MOVF	src,F00221 158A 		SKPNZ00221 158A 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00222 158B 2D8E 		GOTO	PrevIsLast00223 158C 03A3 		DECF	ScrnNumber,F00224 158D 2D99 		GOTO	SaveSvsScrnNumber00225 158E 	;00226 158E 	PrevIsLast00227 158E 		if UsesIndirectSvsMd00231 158E 		else00232 158E 	;00233 158E 300C 		MOVLW	kLastSvsScrn00234 158F 	;00235 158F 		endif00236 158F 	;00237 158F 00A3 		MOVWF	ScrnNumber00238 1590 2D99 		GOTO	SaveSvsScrnNumber00239 1591 	;00240 1591 		if UsesIndirectSvsMd00280 1591 		endif00281 1591 	;00282 1591 	;===========================================================================================00283 1591 	; Next Service mode screen00284 1591 	;00285 1591 	; Entry: ScrnNumber00286 1591 	; Exit: ScrnNumber++ wraped00287 1591 	; RAM used:00288 1591 	; Calls:(1+) StartSvsModeX,WriteEEP79W_D1000289 1591 	;00290 1591 	NextSvsMode	00291 1591 		if UsesIndirectSvsMd00295 1591 		else00296 1591 	;00297 1591 		mBank000297 1591 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000297 1592 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100298 1593 300C 		MOVLW	kLastSvsScrn00299 1594 	;00300 1594 		endif00301 1594 	;00302 1594 0223 		SUBWF	ScrnNumber,W	;Current scrn - last00303 1595 30FF 		MOVLW	0xFF00304 1596 		SKPB		;skip if index<last00304 1596 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00305 1597 00A3 		MOVWF	ScrnNumber	;-100306 1598 0AA3 		INCF	ScrnNumber,F	;add 100307 1599 	;00308 1599 300D 	SaveSvsScrnNumber	MOVLW	eSvsScrnNumber00309 159A 00F9 		MOVWF	Param7900310 159B 0823 		MOVF	ScrnNumber,W00311 159C 2028 		CALL	WriteEEP79W_D10	;1+000312 159D 2DA7 		GOTO	StartSvsModeX00313 159E 	;	00314 159E 	;===========================================================================================00315 159E 	; Start service mode00316 159E 	;00317 159E 	; Entry: ScrnNumber00318 159E 	; Exit: ScrnNumber++ wraped00319 159E 	; RAM used: Param7C00320 159E 	; Calls:(1+) StartSvsModeX,ReadEEwW_D10,DispStrLine0,Disp_decbyteW2pl_D10,SRAM_ReadDR_D10,Highland Greeley PIC.asm   "Dispatch.asm"                                Page: 188500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Dispatch.asm00321 159E 	;	DispStrLine1,SvsMdTtlXtras,DispStrLine2,DispStrLine3,PrintString_D1000322 159E 	;00323 159E 300D 	StartSvsMode	MOVLW	eSvsScrnNumber00324 159F 2037 		CALL	ReadEEwW_D10	;1+000325 15A0 00A3 		MOVWF	ScrnNumber00326 15A1 	;00327 15A1 		if UsesIndirectSvsMd00329 15A1 		else00330 15A1 300C 		MOVLW	kLastSvsScrn00331 15A2 		endif00332 15A2 	;00333 15A2 00F8 		MOVWF	Param7800334 15A3 0A78 		INCF	Param78,W00335 15A4 0223 		SUBWF	ScrnNumber,W	;Current scrn - last+100336 15A5 		SKPB		;skip if index < last+100336 15A5 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00337 15A6 01A3 		CLRF	ScrnNumber00338 15A7 	;00339 15A7 1428 	StartSvsModeX	BSF	ServiceMode00340 15A8 		mLED5_ON		; Service LED on00340 15A8 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100340 15A9 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000340 15AA 12A8      M		BCF	CMD_LDO_0,LED5		BCF	CMD_LDO_0,LED500340 15AB      M		if	UsesVUE8LEDs		if UsesVUE8LEDs00340 15AB      M		endif			endif00340 15AB 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100340 15AC 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000341 15AD 	;00342 15AD 3019 		MOVLW	SvsModeStrPtr	;'Service Mode '00343 15AE 20EA 		CALL	DispStrLine0	;Display the SvsMode string00344 15AF 	;00345 15AF 		if UsesIndirectSvsMd00347 15AF 		else00348 15AF 		MOVFW	ScrnNumber00348 15AF 0823      M		MOVF	ScrnNumber,W		MOVF	src,W00349 15B0 		endif00350 15B0 	;00351 15B0 00FC 		MOVWF	Param7C	;Param7C=Service Mode Number00352 15B1 25F8 		CALL	Disp_decbyteW2pl_D1000353 15B2 	;00354 15B2 087C 		MOVF	Param7C,W00355 15B3 3E00 		ADDLW	SvsModeTitles	;offset to title's str ptr00356 15B4 2050 		CALL	SRAM_ReadDR_D10	;get str ptr00357 15B5 3800 		IORLW	0x0000358 15B6 		SKPZ		;was the ptr zero00358 15B6 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00359 15B7 20ED 		CALL	DispStrLine1	; No, display it00360 15B8 	;00361 15B8 2752 		CALL	SvsMdTtlXtras00362 15B9 	;00363 15B9 087C 		MOVF	Param7C,W00364 15BA 3E0D 		ADDLW	SvsModeInfoLines	;offset to info's str ptr00365 15BB 2050 		CALL	SRAM_ReadDR_D10	;get str ptr00366 15BC 3800 		IORLW	0x0000367 15BD 		SKPZ		;was the ptr zero00367 15BD 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00368 15BE 20F0 		CALL	DispStrLine200369 15BF 	;00370 15BF 301B 		MOVLW	Str_NextPtr00371 15C0 20F3 		CALL	DispStrLine300372 15C1 087C 		MOVF	Param7C,W00373 15C2 3E1A 		ADDLW	SvsModeCmdLines00374 15C3 2050 		CALL	SRAM_ReadDR_D10	;get str ptr00375 15C4 		SKPNZ00375 15C4 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00376 15C5 2DC7 		GOTO	SSM_NextOnly00377 15C6 2016 		CALL	PrintString_D1000378 15C7 0008 	SSM_NextOnly	RETURN00379 15C8 	;00380 15C8 	;===========================================================================================00381 15C8 	; Previous Run mode screen00382 15C8 	;00383 15C8 	; Entry: ScrnNumber00384 15C8 	; Exit: ScrnNumber-- wraped00385 15C8 	; RAM used:00386 15C8 	; Calls:(0+) SaveRunScrnNumber00387 15C8 	;00388 15C8 	PrevRunMode	TSTF	ScrnNumber00388 15C8 08A3      M		MOVF	ScrnNumber,F		MOVF	src,F00389 15C9 		SKPNZ00389 15C9 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00390 15CA 2DCD 		GOTO	PrevIsLastR00391 15CB 03A3 		DECF	ScrnNumber,F00392 15CC 2DD8 		GOTO	SaveRunScrnNumber00393 15CD 3001 	PrevIsLastR	MOVLW	kLastNormScrn00394 15CE 00A3 		MOVWF	ScrnNumber00395 15CF 2DD8 		GOTO	SaveRunScrnNumber00396 15D0 	;00397 15D0 	;===========================================================================================00398 15D0 	; Next Run mode screen00399 15D0 	;00400 15D0 	; Entry: ScrnNumber00401 15D0 	; Exit: ScrnNumber++ wraped00402 15D0 	; RAM used:00403 15D0 	; Calls:(1+) StartRunModeX,WriteEEP79W_D1000404 15D0 	;00405 15D0 	NextRunMode	mBank000405 15D0 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000405 15D1 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100406 15D2 0823 		MOVF	ScrnNumber,WHighland Greeley PIC.asm   "Dispatch.asm"                                Page: 189500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Dispatch.asm00407 15D3 3C01 		SUBLW	kLastNormScrn00408 15D4 30FF 		MOVLW	0xFF00409 15D5 		SKPNZ00409 15D5 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00410 15D6 00A3 		MOVWF	ScrnNumber	;-100411 15D7 0AA3 		INCF	ScrnNumber,F	;add 100412 15D8 300C 	SaveRunScrnNumber	MOVLW	eScrnNumber00413 15D9 00F9 		MOVWF	Param7900414 15DA 0823 		MOVF	ScrnNumber,W00415 15DB 2028 		CALL	WriteEEP79W_D1000416 15DC 2DE3 		GOTO	StartRunModeX00417 15DD 	;	00418 15DD 	;============================================================================================00419 15DD 	; Start Run mode00420 15DD 	;00421 15DD 	; Entry: none00422 15DD 	; Exit: ScrnNumber=0, ServiceMode=False00423 15DD 	; RAM used:00424 15DD 	; Calls:(1+) ReadEEwW_D10,DispStrLine0,DispIP,lcd_GotoLineW_D10,Disp_Hex_Byte_D1000425 15DD 	;00426 15DD 300C 	StartRunMode	MOVLW	eScrnNumber00427 15DE 2037 		CALL	ReadEEwW_D1000428 15DF 00A3 		MOVWF	ScrnNumber00429 15E0 3C01 		SUBLW	kLastNormScrn	;kLastNormScrn-ScrnNumber00430 15E1 		SKPNB00430 15E1 1C03      M		BTFSS	STATUS,C		BTFSS	STATUS,C00431 15E2 01A3 		CLRF	ScrnNumber00432 15E3 1028 	StartRunModeX	BCF	ServiceMode00433 15E4 		mLED5_OFF		; Service LED OFF00433 15E4 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100433 15E5 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000433 15E6 16A8      M		BSF	CMD_LDO_0,LED5		BSF	CMD_LDO_0,LED500433 15E7      M		if	UsesVUE8LEDs		if UsesVUE8LEDs00433 15E7      M		endif			endif00433 15E7 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100433 15E8 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000434 15E9 300F 		MOVLW	SIGNONStrPtr	;'Baume Limiter v1.0d1'00435 15EA 20EA 		CALL	DispStrLine000436 15EB 2E0B 		GOTO	RunMdTtlXtras00437 15EC 	;00438 15EC 	;===========================================================================================00439 15EC 	; Goto the char W on the 3rd line00440 15EC 	;00441 15EC 	; Entry: Char Position in W (0..19)00442 15EC 	; Exit: none00443 15EC 	; RAM Used:Param78, Param79 (Verified 2/1/04)00444 15EC 	; Calls:(0+2) lcd_gotoxy_D1000445 15EC 	;00446 15EC 00F9 	lcd_gotoW2	MOVWF	Param7900447 15ED 3002 		MOVLW	d'2'	;3rd line00448 15EE 00F8 		MOVWF	Param7800449 15EF 0879 		MOVF	Param79,W00450 15F0 2811 		GOTO	lcd_gotoxy_D1000451 15F1 	;00452 15F1 	;===========================================================================================00453 15F1 	; Display the hex byte at (W) in bank 2 or 300454 15F1 	;00455 15F1 	; Entry: W = address of byte to display00456 15F1 	; Exit: none00457 15F1 	; RAM Used:Param76, Param79, FSR00458 15F1 	; Calls:(0+4) Disp_Hex_Byte_D1000459 15F1 	;00460 15F1 0084 	IdleHexByte	MOVWF	FSR00461 15F2 1783 		BSF	_IRP00462 15F3 0800 		MOVF	INDF,W00463 15F4 281B 		GOTO	Disp_Hex_Byte_D1000464 15F5 	;00465 15F5 	;===========================================================================================00466 15F5 	; Display the Decimal byte at (W) in bank 2 or 300467 15F5 	;00468 15F5 	; Entry: W = address of byte to display00469 15F5 	; Exit: none00470 15F5 	; RAM Used: Param71:0, Param77, Param78, Param79, FSR00471 15F5 	; Calls:(0+4) Disp_decbyteW2pl_D1000472 15F5 	;00473 15F5 0084 	Idle2plDec	MOVWF	FSR00474 15F6 1783 		BSF	_IRP00475 15F7 0800 		MOVF	INDF,W00476 15F8 	Disp_decbyteW2pl_D10	mCall2To0	Disp_decbyteW2pl00476 15F8 120A      M		BCF	PCLATH,4		BCF	PCLATH,400476 15F9 20BA      M		CALL	Disp_decbyteW2pl		CALL	Destination00476 15FA 118A      M		BCF	PCLATH,3		BCF	PCLATH,300476 15FB 160A      M		BSF	PCLATH,4		BSF	PCLATH,400477 15FC 0008 		RETURN00478 15FD 	;00479 15FD 	;===========================================================================================00480 15FD 	; Display the Decimal byte at (W) in bank 2 or 300481 15FD 	;00482 15FD 	; Entry: W = address of byte to display00483 15FD 	; Exit: none00484 15FD 	; RAM Used: Param71:0, Param77, Param78, Param79, FSR00485 15FD 	; Calls:(0+4) Disp_decbyteW3pl_D1000486 15FD 	;00487 15FD 0084 	Idle3plDec	MOVWF	FSR00488 15FE 1783 		BSF	_IRP00489 15FF 0800 		MOVF	INDF,W00490 1600 	Disp_decbyteW3pl_D10	mCall2To0	Disp_decbyteW3pl00490 1600 120A      M		BCF	PCLATH,4		BCF	PCLATH,400490 1601 20B8      M		CALL	Disp_decbyteW3pl		CALL	Destination00490 1602 118A      M		BCF	PCLATH,3		BCF	PCLATH,3Highland Greeley PIC.asm   "Dispatch.asm"                                Page: 190500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Dispatch.asm00490 1603 160A      M		BSF	PCLATH,4		BSF	PCLATH,400491 1604 0008 		RETURN00492 1605 	;00493 1605 	;===========================================================================================00494 1605 		ifndef UsesIdleR2C100496 1605 		endif00497 1605 		if UsesIdleR2C100509 1605 		endif00510 1605 	;===========================================================================================00511 1605 	; lcd Goto Row 2 (3rd line) Col 400512 1605 	;00513 1605 	; Entry: none00514 1605 	; Exit: none00515 1605 	; RAM Used: Param78, Param79 (Verified 2/1/04)00516 1605 	; Calls:(0+2) lcd_gotoW200517 1605 	;00518 1605 3004 	IdleR2C4	MOVLW	d'4'00519 1606 2DEC 		GOTO	lcd_gotoW200520 1607 	;00521 1607 	;===========================================================================================00522 1607 		ifndef UsesIdleR2C600524 1607 		endif00525 1607 		if UsesIdleR2C600537 1607 		endif00538 1607 	;===========================================================================================00539 1607 		ifndef UsesIdleR2C700541 1607 		endif00542 1607 		if UsesIdleR2C700554 1607 		endif00555 1607 	;===========================================================================================00556 1607 		ifndef UsesIdleR2C800558 1607 		endif00559 1607 		if UsesIdleR2C800571 1607 		endif00572 1607 	;===========================================================================================00573 1607 		ifndef UsesIdleR2C900575 1607 		endif00576 1607 		if UsesIdleR2C900588 1607 		endif00589 1607 	;===========================================================================================00590 1607 	; lcd Goto Row 2 (3rd line) Col 1200591 1607 	;00592 1607 	; Entry: none00593 1607 	; Exit: none00594 1607 	; RAM Used: Param78, Param79 (Verified 2/1/04)00595 1607 	; Calls:(0+2) lcd_gotoW200596 1607 	;00597 1607 300C 	IdleR2C12	MOVLW	d'12'00598 1608 2DEC 		GOTO	lcd_gotoW200599 1609 	;00600 1609 	;===========================================================================================00601 1609 		ifndef UsesIdleR2C1400603 1609 		endif00604 1609 		if UsesIdleR2C1400616 1609 		endif00617 1609 	;===========================================================================================00618 1609 		ifndef UsesIdleR2C1500620 1609 		endif00621 1609 		if UsesIdleR2C1500633 1609 		endif00634 1609 	;===========================================================================================00635 1609 	; lcd Goto Row 2 (3rd line) Col 1600636 1609 	;00637 1609 	; Entry: none00638 1609 	; Exit: none00639 1609 	; RAM Used: Param78, Param79 (Verified 2/1/04)00640 1609 	; Calls:(0+2) lcd_gotoW200641 1609 	;00642 1609 3010 	IdleR2C16	MOVLW	d'16'00643 160A 2DEC 		GOTO	lcd_gotoW200644 160B 	;00645 160B 	;===========================================================================================00646 160B 		ifndef UsesIdleR2C1700648 160B 		endif00649 160B 		if UsesIdleR2C1700661 160B 		endif00662 160B 	;00663 160B 	;00664 160B 	;01018 160B 		include	DispatchHPRR.asm00001 160B 		subtitle	"DispatchComIO.asm"00002 160B 		page00003 160B 	;============================================================================================00004 160B 	;00005 160B 	;  FileName: DispatchComIO.asm00006 160B 	;  Date: 6/2/0700007 160B 	;  File Version: 1.100008 160B 	;  00009 160B 	;  Author: David M. Flynn00010 160B 	;  Company: HPRR00011 160B 	;  Project: TCC Communications Computer00012 160B 	;00013 160B 	;============================================================================================00014 160B 	; Notes:00015 160B 	;        This file is the menu dispatcher for use with the buttons on the GP CPU board.00016 160B 	;00017 160B 	;00018 160B 	;============================================================================================00019 160B 	; Revision HistoryHighland Greeley PIC.asm   "DispatchComIO.asm"                           Page: 191500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DispatchHPRR.asm00020 160B 	;00021 160B 	; 1.1   6/2/2007	Added service mode 1100022 160B 	; 1.0   9/5/2004	First code00023 160B 	;00024 160B 	;============================================================================================00025 160B 	;00026 160B 	; Name	(additional stack words required) Description00027 160B 	;============================================================================================00028 160B 	; 00029 160B 	; RunMdTtlXtras	() Part of starting a Run Mode, Displays the IP numbers, etc.00030 160B 	; 00031 160B 	; NormalMd03_SW5	() Run Mode Error Screen Clear Hard Error00032 160B 	; 00033 160B 	; SvsMd00Idle	() Idler routine for service mode 00 'Switch Machine''Num=     Value='00034 160B 	; SvsMd01Idle	() Idler routine for service mode 01 'High Switch Machine''Num=     Value='00035 160B 	; SvsMd02Idle	() Idler routine for service mode 02 'Block Data''Num=     Value='00036 160B 	; SvsMd03Idle	() Idler routine for service mode 03 'MAC Address'00037 160B 	; SvsMd04Idle	() Idler routine for service mode 04 'IP Address'00038 160B 	; SvsMd05Idle	() Idler routine for service mode 05 'Show Inputs'00039 160B 	; SvsMd08Idle	() Idler routine for service mode 08 'Test Scanner''Slot/Board='00040 160B 	; SvsMd09Idle	() Idler routine for service mode 09 'Test Scanner'00041 160B 	; SvsMd10Idle	() Idler routine for service mode 10 'Block Data Cab#'00042 160B 	; SvsMd11Idle	() Idler routine for service mode 11 'Block Module Tester'00043 160B 	;00044 160B 	; SvsMd00Sw3	() 'Switch Machine''Num=     Value=' Down00045 160B 	; SvsMd00Sw4	() 'Switch Machine''Num=     Value=' Up00046 160B 	; SvsMd00Sw5	() 'Switch Machine''Num=     Value=' Change00047 160B 	;00048 160B 	; SvsMd01Sw3	() 'High Switch Machine''Num=     Value=' Down00049 160B 	; SvsMd01Sw4	() 'High Switch Machine''Num=     Value=' Up00050 160B 	; SvsMd01Sw5	() 'High Switch Machine''Num=     Value=' Change00051 160B 	;00052 160B 	; SvsMd02Sw3	() 'Block Data''Num=     Value=' Down00053 160B 	; SvsMd02Sw4	() 'Block Data''Num=     Value=' Up00054 160B 	; SvsMd02Sw5	() 'Block Data''Num=     Value=' Change00055 160B 	;00056 160B 	; SvsMd03Sw3	() 'MAC Address' Down00057 160B 	; SvsMd03Sw4	() 'MAC Address' Up00058 160B 	; SvsMd03Sw5	() 'MAC Address' Fact00059 160B 	;00060 160B 	; SvsMd04Sw3	() 'IP Address' Down00061 160B 	; SvsMd04Sw4	() 'IP Address' Up00062 160B 	; SvsMd04Sw5	() 'IP Address' Fact00063 160B 	;00064 160B 	; SvsMd06Sw3	() Bootloader Sw3 Yes00065 160B 	;00066 160B 	; SvsMd08Sw3	() 'Test Scanner' Down00067 160B 	; SvsMd08Sw4	() 'Test Scanner' Up00068 160B 	; SvsMd08Sw5	() 'Test Scanner' Fact00069 160B 	;00070 160B 	; SvsMd10Sw3	() 'Block Data Cab#' Down00071 160B 	; SvsMd10Sw4	() 'Block Data Cab#' Up00072 160B 	; SvsMd10Sw5	() 'Block Data Cab#' Fact00073 160B 	;00074 160B 	; SvsMd11Sw3	() 'Block Module Tester''Num=     Value=' Down00075 160B 	; SvsMd11Sw4	() 'Block Module Tester''Num=     Value=' Up00076 160B 	; SvsMd11Sw5	() 'Block Module Tester''Num=     Value=' Change00077 160B 	;00078 160B 	; DispIdleDispatch	() Called every 1/2 second to update data on shown on LCD00079 160B 	;00080 160B 	;00081 160B 	; SvsMdTtlXtras	() not used00082 160B 	;00083 160B 	; SvsModeDispatch	() Goto the current Service mode's button handler00084 160B 	;00085 160B 	; RunModeDispatch	() Goto the current Run mode's button handler00086 160B 	;00087 160B 	; RunOrService	() Route to the correct handler for this screen/button00088 160B 	;00089 160B 	; SvsModeIdler	() Called every 1/2 second to update data for Service screens00090 160B 	; RunModeIdler	() Called every 1/2 second to update data for Run screens00091 160B 	;00092 160B 	;============================================================================================00093 160B 	; constants00094 160B 	;00095 160B 	;00096 160B 	;============================================================================================00097 160B 	;===========================================================================================00098 160B 	; Part of starting a Run Mode, Displays the IP numbers, etc.00099 160B 	;00100 160B 3002 	RunMdTtlXtras	MOVLW	0x02	;erase lines 3 and 400101 160C 200C 		CALL	lcd_GotoLineW_D1000102 160D 3003 		MOVLW	0x0300103 160E 200C 		CALL	lcd_GotoLineW_D1000104 160F 		TSTF	ScrnNumber	;ScrnNumber=000104 160F 08A3      M		MOVF	ScrnNumber,F		MOVF	src,F00105 1610 		SKPNZ00105 1610 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00106 1611 283C 		GOTO	DispIP_D10	;'192.168.1.123'00107 1612 3001 		MOVLW	0x01	;erase line 100108 1613 200C 		CALL	lcd_GotoLineW_D1000109 1614 3001 		MOVLW	d'1'00110 1615 0223 		SUBWF	ScrnNumber,W00111 1616 		SKPZ00111 1616 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00112 1617 0008 		RETURN		;blank line only00113 1618 	;00114 1618 3025 		MOVLW	Str_SNPtr	;Run Mode Scrn 200115 1619 2016 		CALL	PrintString_D10	;'S/N:' 700400116 161A 300A 		MOVLW	eSN0Highland Greeley PIC.asm   "DispatchComIO.asm"                           Page: 192500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DispatchHPRR.asm00117 161B 2037 		CALL	ReadEEwW_D1000118 161C 00F6 		MOVWF	Param7600119 161D 300B 		MOVLW	eSN100120 161E 2037 		CALL	ReadEEwW_D1000121 161F 00F7 		MOVWF	Param7700122 1620 14A7 		BSF	Disp_LZO00123 1621 2800 		GOTO	Disp_decword_D1000124 1622 	;00125 1622 	;===========================================================================================00126 1622 	; Run Mode Screen 000127 1622 	;00128 1622 	; Entry: Bank300129 1622 	; Exit:00130 1622 	;00131 1622 28F8 	NormalMd00_SW4	GOTO	MainB0Rtn00132 1623 	;===========================================================================================00133 1623 	; Run Mode Screen 000134 1623 	;00135 1623 	; Entry: Bank300136 1623 	; Exit:00137 1623 	;00138 1623 28F8 	NormalMd00_SW5	GOTO	MainB0Rtn00139 1624 	;00140 1624 	;===========================================================================================00141 1624 	; Run Mode Screen 3 Clear Hard Error00142 1624 	;00143 1624 	; Entry: Bank300144 1624 	; Exit:00145 1624 	;00146 1624 	NormalMd03_SW500147 1624 	;	BCF	HardErrorLatch00148 1624 2DDD 		GOTO	StartRunMode	;return to user selected run screen00149 1625 	;00150 1625 	;===========================================================================================00151 1625 	; Idler routine for service mode 00 'Switch Machine''Num=     Value='00152 1625 	;00153 1625 2605 	SvsMd00Idle	CALL	IdleR2C400154 1626 30BB 		MOVLW	SMSvsPtr00155 1627 25FD 		CALL	Idle3plDec00156 1628 2609 		CALL	IdleR2C1600157 1629 		mBank300157 1629 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000157 162A 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100158 162B 		MOVFW	SMSvsPtr00158 162B 083B      M		MOVF	SMSvsPtr,W		MOVF	src,W00159 162C 00F2 		MOVWF	XReg00160 162D 20AF 		CALL	GetSMTableX_D1000161 162E 281B 		GOTO	Disp_Hex_Byte_D1000162 162F 	;00163 162F 	;===========================================================================================00164 162F 	; Idler routine for service mode 01 'High Switch Machine''Num=     Value='00165 162F 	;00166 162F 2605 	SvsMd01Idle	CALL	IdleR2C400167 1630 30D0 		MOVLW	SMHighSvsPtr00168 1631 25FD 		CALL	Idle3plDec00169 1632 2609 		CALL	IdleR2C1600170 1633 		mBank300170 1633 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000170 1634 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100171 1635 		MOVFW	SMHighSvsPtr00171 1635 0850      M		MOVF	SMHighSvsPtr,W		MOVF	src,W00172 1636 00F2 		MOVWF	XReg00173 1637 2064 		CALL	GetSMTableHighX_D1000174 1638 281B 		GOTO	Disp_Hex_Byte_D1000175 1639 	;00176 1639 	;===========================================================================================00177 1639 	; Idler routine for service mode 02 'Block Data''Num=     Value='00178 1639 	;00179 1639 2605 	SvsMd02Idle	CALL	IdleR2C400180 163A 30BE 		MOVLW	SvsBlkNum00181 163B 25FD 		CALL	Idle3plDec00182 163C 2607 		CALL	IdleR2C1200183 163D 	;00184 163D 		if UsesBlockCmdTable00185 163D 		mBank300185 163D 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000185 163E 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100186 163F 		MOVFW	SvsBlkNum00186 163F 083E      M		MOVF	SvsBlkNum,W		MOVF	src,W00187 1640 00F2 		MOVWF	XReg00188 1641 208C 		CALL	GetBlockCmdTable2X_D1000189 1642 201B 		CALL	Disp_Hex_Byte_D1000190 1643 		mBank300190 1643 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000190 1644 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100191 1645 2082 		CALL	GetBlockCmdTableX_D1000192 1646 201B 		CALL	Disp_Hex_Byte_D1000193 1647 		endif00194 1647 	;00195 1647 		mBank300195 1647 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000195 1648 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100196 1649 		MOVFW	SvsBlkNum00196 1649 083E      M		MOVF	SvsBlkNum,W		MOVF	src,W00197 164A 00F2 		MOVWF	XReg00198 164B 20A5 		CALL	GetBlockPwrTable2X_D1000199 164C 201B 		CALL	Disp_Hex_Byte_D1000200 164D 		mBank300200 164D 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000200 164E 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1Highland Greeley PIC.asm   "DispatchComIO.asm"                           Page: 193500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DispatchHPRR.asm00201 164F 2096 		CALL	GetBlockPwrTableX_D1000202 1650 281B 		GOTO	Disp_Hex_Byte_D1000203 1651 	;00204 1651 	;===========================================================================================00205 1651 	; Idler routine for service mode 03 'MAC Address'00206 1651 	;00207 1651 2007 	SvsMd03Idle	CALL	lcd_GotoLine200208 1652 	DispMAC_E2_D10	mCall2To0	DispMAC_E200208 1652 120A      M		BCF	PCLATH,4		BCF	PCLATH,400208 1653 2593      M		CALL	DispMAC_E2		CALL	Destination00208 1654 118A      M		BCF	PCLATH,3		BCF	PCLATH,300208 1655 160A      M		BSF	PCLATH,4		BSF	PCLATH,400209 1656 0008 		RETURN00210 1657 	;00211 1657 	;===========================================================================================00212 1657 	; Idler routine for service mode 04 'IP Address'00213 1657 	;00214 1657 2007 	SvsMd04Idle	CALL	lcd_GotoLine200215 1658 	DispIP_E2_D10	mCall2To0	DispIP_E200215 1658 120A      M		BCF	PCLATH,4		BCF	PCLATH,400215 1659 2585      M		CALL	DispIP_E2		CALL	Destination00215 165A 118A      M		BCF	PCLATH,3		BCF	PCLATH,300215 165B 160A      M		BSF	PCLATH,4		BSF	PCLATH,400216 165C 0008 		RETURN00217 165D 	;00218 165D 		if UsesShowInputs00219 165D 	;===========================================================================================00220 165D 	; Idler routine for service mode 05 'Show Inputs'00221 165D 	;00222 165D 2007 	SvsMd05Idle	CALL	lcd_GotoLine200223 165E 3030 		MOVLW	'0'00224 165F 2023 		CALL	DisplaysW_D1000225 1660 2022 		CALL	Disp_Colon00226 1661 30A7 		MOVLW	CurrentLDI_000227 1662 25F1 		CALL	IdleHexByte00228 1663 	;00229 1663 		if UsesLDI100236 1663 		endif00237 1663 	;00238 1663 		if UsesLDI200245 1663 		endif00246 1663 0008 		RETURN00247 1664 		endif00248 1664 	;00249 1664 		if UsesInputTester|UsesOutputTester00250 1664 	;===========================================================================================00251 1664 	; Idler routine for service mode 08 'Test Scanner''Slot/Board='00252 1664 	;00253 1664 2607 	SvsMd08Idle	CALL	IdleR2C1200254 1665 		mBank300254 1665 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000254 1666 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100255 1667 084F 		MOVF	SvsInSlotBoard,W00256 1668 281B 		GOTO	Disp_Hex_Byte_D1000257 1669 	;00258 1669 		endif00259 1669 		if UsesInputTester00260 1669 	;===========================================================================================00261 1669 	; Idler routine for service mode 09 'Test Scanner'00262 1669 2007 	SvsMd09Idle	CALL	lcd_GotoLine200263 166A 		mBank300263 166A 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000263 166B 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100264 166C 0837 		MOVF	CurBlk,W	;Save CurBlk00265 166D 00D1 		MOVWF	SvsCurBlk00266 166E 0838 		MOVF	CurBlk+1,W00267 166F 00D2 		MOVWF	SvsCurBlk+100268 1670 3080 		MOVLW	0x8000269 1671 00B7 		MOVWF	CurBlk00270 1672 084F 		MOVF	SvsInSlotBoard,W00271 1673 00B8 		MOVWF	CurBlk+100272 1674 201B 		CALL	Disp_Hex_Byte_D1000273 1675 2022 		CALL	Disp_Colon00274 1676 2687 	Show8Bytes_L1	CALL	Show8Inputs00275 1677 		mBank300275 1677 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000275 1678 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100276 1679 3040 		MOVLW	0x4000277 167A 0237 		SUBWF	CurBlk,W00278 167B 		SKPNZ00278 167B 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00279 167C 2020 		CALL	Disp_Space00280 167D 		mBank300280 167D 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000280 167E 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100281 167F 08B7 		MOVF	CurBlk,F00282 1680 		SKPZ00282 1680 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00283 1681 2E76 		GOTO	Show8Bytes_L100284 1682 0851 		MOVF	SvsCurBlk,W	;Restore CurBlk00285 1683 00B7 		MOVWF	CurBlk00286 1684 0852 		MOVF	SvsCurBlk+1,W00287 1685 00B8 		MOVWF	CurBlk+100288 1686 28F8 		GOTO	MainB0Rtn00289 1687 	;00290 1687 3008 	Show8Inputs	MOVLW	0x08	;get 8 bits00291 1688 00FA 		MOVWF	Param7A00292 1689 	Show8Inputs_L1	mBank300292 1689 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000292 168A 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1Highland Greeley PIC.asm   "DispatchComIO.asm"                           Page: 194500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DispatchHPRR.asm00293 168B 03B7 		DECF	CurBlk,F00294 168C 		mCall2To3	InputB00294 168C 158A      M		BSF	PCLATH,3		BSF	PCLATH,300294 168D 238A      M		CALL	InputB		CALL	Destination00294 168E 118A      M		BCF	PCLATH,3		BCF	PCLATH,300294 168F 160A      M		BSF	PCLATH,4		BSF	PCLATH,400295 1690 0D33 		RLF	IActive,W00296 1691 0DF9 		RLF	Param79,F00297 1692 0BFA 		DECFSZ	Param7A,F00298 1693 2E89 		GOTO	Show8Inputs_L100299 1694 0879 		MOVF	Param79,W00300 1695 281B 		GOTO	Disp_Hex_Byte_D1000301 1696 	;00302 1696 		endif00303 1696 	;===========================================================================================00304 1696 	;Idler routine for service mode 10 'Block Data Cab#'00305 1696 	;00306 1696 2609 	SvsMd10Idle	CALL	IdleR2C1600307 1697 		mBank300307 1697 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000307 1698 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100308 1699 0A3F 		INCF	SvsCabNum,W00309 169A 281B 		GOTO	Disp_Hex_Byte_D1000310 169B 	;00311 169B 	;===========================================================================================00312 169B 	; Idler routine for service mode 11 'Block Module Tester''Num=     Value='00313 169B 	;00314 169B 		if UsesBlockModules00323 169B 		endif00324 169B 	;00325 169B 	;===========================================================================================00326 169B 	; Idler routine for service mode 12 'Output Board Tester''Num=     Value='00327 169B 	;00328 169B 		if UsesOutputTester00329 169B 2605 	SvsMd12Idle	CALL	IdleR2C400330 169C 		mBank300330 169C 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000330 169D 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100331 169E 084F 		MOVF	SvsInSlotBoard,W00332 169F 201B 		CALL	Disp_Hex_Byte_D1000333 16A0 		mBank300333 16A0 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000333 16A1 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100334 16A2 0853 		MOVF	SvsBMdlNum,W00335 16A3 397F 		ANDLW	0x7F00336 16A4 201B 		CALL	Disp_Hex_Byte_D1000337 16A5 	;00338 16A5 2609 		CALL	IdleR2C1600339 16A6 		mBank300339 16A6 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000339 16A7 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100340 16A8 0854 		MOVF	SvsBMdlVal,W00341 16A9 3980 		ANDLW	0x8000342 16AA 201B 		CALL	Disp_Hex_Byte_D1000343 16AB 	;00344 16AB 		mBank300344 16AB 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000344 16AC 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100345 16AD 0837 		MOVF	CurBlk,W	;Save CurBlk00346 16AE 00D1 		MOVWF	SvsCurBlk00347 16AF 0838 		MOVF	CurBlk+1,W00348 16B0 00D2 		MOVWF	SvsCurBlk+100349 16B1 	;00350 16B1 3080 		MOVLW	0x8000351 16B2 00B7 		MOVWF	CurBlk00352 16B3 084F 		MOVF	SvsInSlotBoard,W00353 16B4 00B8 		MOVWF	CurBlk+100354 16B5 03B7 	SvsTOB_L1	DECF	CurBlk,F00355 16B6 13AF 		BCF	OActive,700356 16B7 1BD4 		BTFSC	SvsBMdlVal,700357 16B8 17AF 		BSF	OActive,700358 16B9 0853 		MOVF	SvsBMdlNum,W00359 16BA 397F 		ANDLW	0x7F00360 16BB 0237 		SUBWF	CurBlk,W00361 16BC 		SKPZ00361 16BC 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00362 16BD 13AF 		BCF	OActive,700363 16BE 		mCall2To3	OutputB00363 16BE 158A      M		BSF	PCLATH,3		BSF	PCLATH,300363 16BF 2335      M		CALL	OutputB		CALL	Destination00363 16C0 118A      M		BCF	PCLATH,3		BCF	PCLATH,300363 16C1 160A      M		BSF	PCLATH,4		BSF	PCLATH,400364 16C2 08B7 		MOVF	CurBlk,F00365 16C3 		SKPZ00365 16C3 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00366 16C4 2EB5 		GOTO	SvsTOB_L100367 16C5 	;00368 16C5 0851 		MOVF	SvsCurBlk,W	;Restore CurBlk00369 16C6 00B7 		MOVWF	CurBlk00370 16C7 0852 		MOVF	SvsCurBlk+1,W00371 16C8 00B8 		MOVWF	CurBlk+100372 16C9 28F8 		GOTO	MainB0Rtn00373 16CA 	;00374 16CA 	;00375 16CA 		endif00376 16CA 	;00377 16CA 	;===========================================================================================00378 16CA 	;*******************************************************************************************00379 16CA 	;===========================================================================================00380 16CA 	; 'Switch Machine''Num=     Value=' DownHighland Greeley PIC.asm   "DispatchComIO.asm"                           Page: 195500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DispatchHPRR.asm00381 16CA 03BB 	SvsMd00Sw3	DECF	SMSvsPtr,F00382 16CB 28F8 		GOTO	MainB0Rtn00383 16CC 	;===========================================================00384 16CC 	; 'Switch Machine''Num=     Value=' Up00385 16CC 0ABB 	SvsMd00Sw4	INCF	SMSvsPtr,F00386 16CD 28F8 		GOTO	MainB0Rtn00387 16CE 	;===========================================================00388 16CE 	; 'Switch Machine''Num=     Value=' Change00389 16CE 083B 	SvsMd00Sw5	MOVF	SMSvsPtr,W00390 16CF 00F2 		MOVWF	XReg00391 16D0 20AF 		CALL	GetSMTableX_D1000392 16D1 3040 		MOVLW	SMCMDMask00393 16D2 0678 		XORWF	Param78,W00394 16D3 20B4 		CALL	SetSMTableX_D1000395 16D4 15D5 		BSF	SMTableLowChngFlag00396 16D5 28F8 		GOTO	MainB0Rtn00397 16D6 	;00398 16D6 	;===========================================================================================00399 16D6 	; 'High Switch Machine''Num=     Value=' Down00400 16D6 03D0 	SvsMd01Sw3	DECF	SMHighSvsPtr,F00401 16D7 28F8 		GOTO	MainB0Rtn00402 16D8 	;===========================================================00403 16D8 	; 'High Switch Machine''Num=     Value=' Up00404 16D8 0AD0 	SvsMd01Sw4	INCF	SMHighSvsPtr,F00405 16D9 28F8 		GOTO	MainB0Rtn00406 16DA 	;===========================================================00407 16DA 	; 'High Switch Machine''Num=     Value=' Change00408 16DA 0850 	SvsMd01Sw5	MOVF	SMHighSvsPtr,W00409 16DB 00F2 		MOVWF	XReg00410 16DC 2064 		CALL	GetSMTableHighX_D1000411 16DD 3040 		MOVLW	SMCMDMask00412 16DE 0678 		XORWF	Param78,W00413 16DF 2073 		CALL	SetSMTableHighX_D1000414 16E0 1655 		BSF	SMTableHiChngFlag00415 16E1 28F8 		GOTO	MainB0Rtn00416 16E2 	;00417 16E2 	;===========================================================================================00418 16E2 	; 'Block Data''Num=     V=' Down00419 16E2 03BE 	SvsMd02Sw3	DECF	SvsBlkNum,F00420 16E3 304B 		MOVLW	kMaxBlockNum00421 16E4 1BBE 		BTFSC	SvsBlkNum,700422 16E5 00BE 		MOVWF	SvsBlkNum00423 16E6 28F8 		GOTO	MainB0Rtn00424 16E7 	;===========================================================00425 16E7 	; 'Block Data''Num=     V=' Up00426 16E7 304B 	SvsMd02Sw4	MOVLW	kMaxBlockNum00427 16E8 023E 		SUBWF	SvsBlkNum,W00428 16E9 		SKPZ00428 16E9 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00429 16EA 0A3E 		INCF	SvsBlkNum,W00430 16EB 00BE 		MOVWF	SvsBlkNum00431 16EC 28F8 		GOTO	MainB0Rtn00432 16ED 		if UsesBlockCmdTest00433 16ED 		if UsesBlockCmdTable00434 16ED 	;===========================================================00435 16ED 	; 'Block Data''Num=     V=' Change SvsCabNum00436 16ED 083E 	SvsMd02Sw5	MOVF	SvsBlkNum,W00437 16EE 00F2 		MOVWF	XReg00438 16EF 083F 		MOVF	SvsCabNum,W00439 16F0 3C04 		SUBLW	0x04	;4-cab00440 16F1 		SKPNB00440 16F1 1C03      M		BTFSS	STATUS,C		BTFSS	STATUS,C00441 16F2 2F00 		GOTO	SvsMd02Sw5_100442 16F3 	;00443 16F3 0A3F 		INCF	SvsCabNum,W00444 16F4 00F9 		MOVWF	Param7900445 16F5 3020 		MOVLW	0x2000446 16F6 00FA 		MOVWF	Param7A00447 16F7 1003 		BCF	_C00448 16F8 0CFA 	SvsMd02Sw5_L1	RRF	Param7A,F00449 16F9 0BF9 		DECFSZ	Param79,F00450 16FA 2EF8 		GOTO	SvsMd02Sw5_L100451 16FB 2082 		CALL	GetBlockCmdTableX_D1000452 16FC 067A 		XORWF	Param7A,W	;cab00453 16FD 3880 		IORLW	0x8000454 16FE 2087 		CALL	SetBlockCmdTableX_D1000455 16FF 28F8 		GOTO	MainB0Rtn00456 1700 	;00457 1700 3004 	SvsMd02Sw5_1	MOVLW	0x0400458 1701 023F 		SUBWF	SvsCabNum,W00459 1702 00F9 		MOVWF	Param7900460 1703 3010 		MOVLW	0x1000461 1704 00FA 		MOVWF	Param7A00462 1705 1003 		BCF	_C00463 1706 0CFA 	SvsMd02Sw5_L2	RRF	Param7A,F00464 1707 0BF9 		DECFSZ	Param79,F00465 1708 2F06 		GOTO	SvsMd02Sw5_L200466 1709 208C 		CALL	GetBlockCmdTable2X_D1000467 170A 067A 		XORWF	Param7A,W	;cab00468 170B 3880 		IORLW	0x8000469 170C 2091 		CALL	SetBlockCmdTable2X_D1000470 170D 28F8 		GOTO	MainB0Rtn00471 170E 		else00507 170E 		endif00508 170E 		endif00509 170E 	;00510 170E 	;===========================================================================================00511 170E 	;===========================================================================================00512 170E 	; 'MAC Address' Down00513 170E 	;Highland Greeley PIC.asm   "DispatchComIO.asm"                           Page: 196500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DispatchHPRR.asm00514 170E 	SvsMd03Sw3	mBank000514 170E 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000514 170F 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100515 1710 03AF 		DECF	myeth5,F00516 1711 	write_nonvol_D10	mCall2To0	write_nonvol00516 1711 120A      M		BCF	PCLATH,4		BCF	PCLATH,400516 1712 240F      M		CALL	write_nonvol		CALL	Destination00516 1713 118A      M		BCF	PCLATH,3		BCF	PCLATH,300516 1714 160A      M		BSF	PCLATH,4		BSF	PCLATH,400517 1715 0008 		RETURN00518 1716 	;00519 1716 	;=========================================================00520 1716 	; 'MAC Address' Up00521 1716 	;00522 1716 	SvsMd03Sw4	mBank000522 1716 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000522 1717 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100523 1718 0AAF 		INCF	myeth5,F00524 1719 2F11 		GOTO	write_nonvol_D1000525 171A 	;00526 171A 	;=========================================================00527 171A 	; 'MAC Address' Fact00528 171A 	;00529 171A 	SvsMd03Sw5	mBank000529 171A 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000529 171B 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100530 171C 3011 		MOVLW	low kMAClsw00531 171D 00AF 		MOVWF	myeth500532 171E 2F11 		GOTO	write_nonvol_D1000533 171F 	;00534 171F 	;===========================================================================================00535 171F 	; 'IP Address' Down00536 171F 	;00537 171F 	SvsMd04Sw3	mBank000537 171F 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000537 1720 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100538 1721 03B3 		DECF	myip_b0,F00539 1722 2F11 		GOTO	write_nonvol_D1000540 1723 	;00541 1723 	;=========================================================00542 1723 	; 'IP Address' Up00543 1723 	;00544 1723 	SvsMd04Sw4	mBank000544 1723 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000544 1724 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100545 1725 0AB3 		INCF	myip_b0,F00546 1726 2F11 		GOTO	write_nonvol_D1000547 1727 	;00548 1727 	;=========================================================00549 1727 	; 'IP Address' Fact00550 1727 	;00551 1727 	SvsMd04Sw5	mBank000551 1727 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000551 1728 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100552 1729 307C 		MOVLW	kIPlsb00553 172A 00B3 		MOVWF	myip_b000554 172B 2F11 		GOTO	write_nonvol_D1000555 172C 	;00556 172C 	;===========================================================================================00557 172C 	; Bootloader Sw3 Yes00558 172C 	SvsMd06Sw3	mCall2To3	SetUIPBit00558 172C 158A      M		BSF	PCLATH,3		BSF	PCLATH,300558 172D 270F      M		CALL	SetUIPBit		CALL	Destination00558 172E 118A      M		BCF	PCLATH,3		BCF	PCLATH,300558 172F 160A      M		BSF	PCLATH,4		BSF	PCLATH,400559 1730 018A 	SvsMd07Sw3	CLRF	PCLATH	;Reset00560 1731 2800 		GOTO	0x000000561 1732 	;00562 1732 		if UsesInputTester|UsesOutputTester00563 1732 	;===========================================================================================00564 1732 	; 'Test Scanner' Down00565 1732 	;00566 1732 034F 	SvsMd08Sw3	DECF	SvsInSlotBoard,W00567 1733 3937 		ANDLW	0x3700568 1734 00CF 		MOVWF	SvsInSlotBoard00569 1735 28F8 		GOTO	MainB0Rtn00570 1736 	;00571 1736 	;=========================================================00572 1736 	; 'Test Scanner' Up00573 1736 	;00574 1736 0ACF 	SvsMd08Sw4	INCF	SvsInSlotBoard,F00575 1737 1DCF 		BTFSS	SvsInSlotBoard,300576 1738 28F8 		GOTO	MainB0Rtn00577 1739 084F 		MOVF	SvsInSlotBoard,W00578 173A 3E10 		ADDLW	0x1000579 173B 3930 		ANDLW	0x3000580 173C 00CF 		MOVWF	SvsInSlotBoard00581 173D 28F8 		GOTO	MainB0Rtn00582 173E 	;00583 173E 	;=========================================================00584 173E 	; 'Test Scanner' Fact00585 173E 	;00586 173E 01CF 	SvsMd08Sw5	CLRF	SvsInSlotBoard00587 173F 28F8 		GOTO	MainB0Rtn00588 1740 	;00589 1740 		endif00590 1740 	;===========================================================================================00591 1740 	; 'Block Data Cab#' Down00592 1740 	;00593 1740 03BF 	SvsMd10Sw3	DECF	SvsCabNum,FHighland Greeley PIC.asm   "DispatchComIO.asm"                           Page: 197500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DispatchHPRR.asm00594 1741 3008 		MOVLW	0x0800595 1742 1BBF 		BTFSC	SvsCabNum,700596 1743 00BF 		MOVWF	SvsCabNum00597 1744 28F8 		GOTO	MainB0Rtn00598 1745 	;00599 1745 	;=========================================================00600 1745 	; 'Block Data Cab#' Up00601 1745 	;00602 1745 19BF 	SvsMd10Sw4	BTFSC	SvsCabNum,300603 1746 2F49 		GOTO	SvsMd10Sw500604 1747 0ABF 		INCF	SvsCabNum,F00605 1748 28F8 		GOTO	MainB0Rtn00606 1749 	;00607 1749 	;=========================================================00608 1749 	; 'Block Data Cab#' Fact00609 1749 	;00610 1749 01BF 	SvsMd10Sw5	CLRF	SvsCabNum00611 174A 28F8 		GOTO	MainB0Rtn00612 174B 	;00613 174B 	;===========================================================================================00614 174B 		if UsesBlockModules00638 174B 		else00639 174B 	SvsMd11Sw300640 174B 	SvsMd11Sw400641 174B 	SvsMd11Sw500642 174B 		endif00643 174B 28F8 		GOTO	MainB0Rtn00644 174C 	;===========================================================================================00645 174C 		if UsesOutputTester00646 174C 	; 'Output Board Tester''Num=     Value=' Down00647 174C 03D3 	SvsMd12Sw3	DECF	SvsBMdlNum,F00648 174D 28F8 		GOTO	MainB0Rtn00649 174E 	;===========================================================00650 174E 	; 'Output Board Tester''Num=     Value=' Up00651 174E 0AD3 	SvsMd12Sw4	INCF	SvsBMdlNum,F00652 174F 28F8 		GOTO	MainB0Rtn00653 1750 	;===========================================================00654 1750 	; 'Output Board Tester''Num=     Value=' Change00655 1750 3080 	SvsMd12Sw5	MOVLW	0x8000656 1751 06D4 		XORWF	SvsBMdlVal,F00657 1752 		endif00658 1752 28F8 	SvsMdTtlXtras	GOTO	MainB0Rtn00659 1753 	;00660 1753 	;===========================================================================================00661 1753 	;===========================================================================================00662 1753 00F9 	DecAndSave	MOVWF	Param7900663 1754 2055 		CALL	ReadEE79_D1000664 1755 00F8 		MOVWF	Param7800665 1756 0378 		DECF	Param78,W00666 1757 2828 		GOTO	WriteEEP79W_D1000667 1758 	;00668 1758 	;=============================================================00669 1758 00F9 	IncAndSave	MOVWF	Param7900670 1759 2055 		CALL	ReadEE79_D1000671 175A 00F8 		MOVWF	Param7800672 175B 0A78 		INCF	Param78,W00673 175C 2828 		GOTO	WriteEEP79W_D1000674 175D 	;00675 175D 	;=============================================================00676 175D 	;00677 175D 00F9 	Save7879	MOVWF	Param7900678 175E 		MOVFW	Param7800678 175E 0878      M		MOVF	Param78,W		MOVF	src,W00679 175F 2828 		GOTO	WriteEEP79W_D1000680 1760 	;00681 1760 	;===========================================================================================00682 1760 	;*******************************************************************************************00683 1760 	;===========================================================================================00684 1760 	; Branch Tables00685 1760 		ORG	0x178000686 1780 	;============================================================================================00687 1780 	;00688 1780 	; Entry: Bank0 selected00689 1780 	;00690 1780 	DispIdleDispatch	mBank000690 1780 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000690 1781 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100691 1782 140A 		BSF	PCLATH,0	;0xX7XX00692 1783 148A 		BSF	PCLATH,100693 1784 150A 		BSF	PCLATH,200694 1785 0823 		MOVF	ScrnNumber,W00695 1786 1C28 		BTFSS	ServiceMode00696 1787 2FF7 		GOTO	RunModeIdler00697 1788 2FE9 		GOTO	SvsModeIdler00698 1789 	;00699 1789 	;===========================================================================================00700 1789 	;============================================================================================00701 1789 	; Part of starting a Svs Mode, Displays the ID numbers, etc.00702 1789 	;00703 1789 	;SvsMdTtlXtras	RETURN ;;;;; moved up to save a word00704 1789 	;00705 1789 	;===========================================================================================00706 1789 	; Goto the current Service mode's button handler00707 1789 	;00708 1789 	; Entry: W=ScrnNumber00709 1789 	; Exit: none00710 1789 	;00711 1789 	SvsModeDispatch	TSTF	Param7900711 1789 08F9      M		MOVF	Param79,F		MOVF	src,F00712 178A 		SKPNZ		;Button = 0 'Next"?Highland Greeley PIC.asm   "DispatchComIO.asm"                           Page: 198500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DispatchHPRR.asm00712 178A 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00713 178B 2D91 		GOTO	NextSvsMode	; Yes00714 178C 3004 		MOVLW	0x0400715 178D 0279 		SUBWF	Param79,W00716 178E 		SKPNZ		;Button = 4 'Service Mode/Run Mode'00716 178E 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00717 178F 2DDD 		GOTO	StartRunMode	; Yes00718 1790 3005 		MOVLW	0x0500719 1791 0279 		SUBWF	Param79,W00720 1792 		SKPNZ		;Button = 5 'Previous'00720 1792 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00721 1793 2D87 		GOTO	PrevSvsMode	; Yes00722 1794 	;00723 1794 	; Calculate offset as ScrnNumber x 3 + (Button - 1)00724 1794 	;00725 1794 03F9 		DECF	Param79,F	;0..200726 1795 0823 		MOVF	ScrnNumber,W	;0..6300727 1796 0723 		ADDWF	ScrnNumber,W	; x 300728 1797 0723 		ADDWF	ScrnNumber,W	;0..189 + 0..200729 1798 0779 		ADDWF	Param79,W00730 1799 		mBank300730 1799 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000730 179A 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100731 179B 0782 		ADDWF	PCL,F00732 179C 	;00 'Switch Machine''Num=     Value='  next, prev, Down, Up, Chng00733 179C 2ECA 		GOTO	SvsMd00Sw3	;SW3 Down00734 179D 2ECC 		GOTO	SvsMd00Sw4	;SW4 Up00735 179E 2ECE 		GOTO	SvsMd00Sw5	;SW5 Change00736 179F 	;01 'High Switch Machine''Num=     Value='  next, prev, Down, Up, Chng00737 179F 2ED6 		GOTO	SvsMd01Sw3	;SW3 Down00738 17A0 2ED8 		GOTO	SvsMd01Sw4	;SW4 Up00739 17A1 2EDA 		GOTO	SvsMd01Sw5	;SW5 Change00740 17A2 	;02 'Block Data''Num=     Value='  next, prev, Down, Up, Chng00741 17A2 2EE2 		GOTO	SvsMd02Sw3	;SW3 Down00742 17A3 2EE7 		GOTO	SvsMd02Sw4	;SW4 Up00743 17A4 		if UsesBlockCmdTest00744 17A4 2EED 		GOTO	SvsMd02Sw5	;SW5 Change00745 17A5 		else00747 17A5 		endif00748 17A5 	;03 'MAC Address'00749 17A5 2F0E 		GOTO	SvsMd03Sw3	;SW3 Down00750 17A6 2F16 		GOTO	SvsMd03Sw4	;SW4 Up00751 17A7 2F1A 		GOTO	SvsMd03Sw5	;SW5 Fact00752 17A8 	;04 'IP Address'00753 17A8 2F1F 		GOTO	SvsMd04Sw3	;SW3 Down00754 17A9 2F23 		GOTO	SvsMd04Sw4	;SW4 Up00755 17AA 2F27 		GOTO	SvsMd04Sw5	;SW5 Fact00756 17AB 	;05 'Show Inputs'00757 17AB 28F8 		GOTO	MainB0Rtn00758 17AC 28F8 		GOTO	MainB0Rtn00759 17AD 28F8 		GOTO	MainB0Rtn00760 17AE 	;06 'Bootloader'00761 17AE 2F2C 		GOTO	SvsMd06Sw3	;SW3 Yes00762 17AF 2D91 		GOTO	NextSvsMode	;SW4 No00763 17B0 28F8 		GOTO	MainB0Rtn00764 17B1 	;07 'Reset'00765 17B1 2F30 		GOTO	SvsMd07Sw3	;SW3 Yes00766 17B2 2D91 		GOTO	NextSvsMode	;SW4 No00767 17B3 28F8 		GOTO	MainB0Rtn00768 17B4 	;08 'Test Scanner'00769 17B4 		if UsesInputTester|UsesOutputTester00770 17B4 2F32 		GOTO	SvsMd08Sw3	;SW3 Down00771 17B5 2F36 		GOTO	SvsMd08Sw4	;SW4 Up00772 17B6 2F3E 		GOTO	SvsMd08Sw5	;SW5 Fact00773 17B7 		else00777 17B7 		endif00778 17B7 	;09 'Test Scanner'00779 17B7 28F8 		GOTO	MainB0Rtn	;SW3 Down00780 17B8 28F8 		GOTO	MainB0Rtn	;SW4 Up00781 17B9 28F8 		GOTO	MainB0Rtn	;SW5 Fact00782 17BA 	;10 'Block Data Cab#'00783 17BA 2F40 		GOTO	SvsMd10Sw3	;SW3 Down00784 17BB 2F45 		GOTO	SvsMd10Sw4	;SW4 Up00785 17BC 2F49 		GOTO	SvsMd10Sw5	;SW5 Fact00786 17BD 	;00787 17BD 	;11 'Block Module Tester''Num=     Value='  next, prev, Down, Up, Chng00788 17BD 2F4B 		GOTO	SvsMd11Sw3	;SW3 Down00789 17BE 2F4B 		GOTO	SvsMd11Sw4	;SW4 Up00790 17BF 2F4B 		GOTO	SvsMd11Sw5	;SW5 Change00791 17C0 	;00792 17C0 	;12 'Output Board Tester''Num=     Value='  next, prev, Down, Up, Chng00793 17C0 		if UsesOutputTester00794 17C0 2F4C 		GOTO	SvsMd12Sw3	;SW3 Down00795 17C1 2F4E 		GOTO	SvsMd12Sw4	;SW4 Up00796 17C2 2F50 		GOTO	SvsMd12Sw5	;SW5 Change00797 17C3 		else00801 17C3 		endif00802 17C3 	;00803 17C3 	;============================================================================================00804 17C3 	; Goto the current Run mode's button handler00805 17C3 	;00806 17C3 	; Entry: Param79 btn num (0..5)00807 17C3 	; Exit: none00808 17C3 	;00809 17C3 3004 	RunModeDispatch	MOVLW	0x0400810 17C4 0279 		SUBWF	Param79,W00811 17C5 		SKPNZ		;SW6?00811 17C5 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00812 17C6 2D9E 		GOTO	StartSvsMode	; yes00813 17C7 3005 		MOVLW	0x05Highland Greeley PIC.asm   "DispatchComIO.asm"                           Page: 199500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DispatchHPRR.asm00814 17C8 0279 		SUBWF	Param79,W00815 17C9 		SKPNZ		;SW7?00815 17C9 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00816 17CA 2DC8 		GOTO	PrevRunMode	; yes00817 17CB 	; Calculate offset as ScrnNumber x 3 + (Button - 1)00818 17CB 	;00819 17CB 0823 		MOVF	ScrnNumber,W	;0..6300820 17CC 0723 		ADDWF	ScrnNumber,W	;x2=0..12600821 17CD 0723 		ADDWF	ScrnNumber,W	;x3=0..18900822 17CE 0723 		ADDWF	ScrnNumber,W	;x4=0..252 + 0..300823 17CF 0779 		ADDWF	Param79,W00824 17D0 		mBank300824 17D0 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000824 17D1 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100825 17D2 0782 		ADDWF	PCL,F00826 17D3 	;Screen 0, SIGNONStrPtr, IP00827 17D3 2DD0 		GOTO	NextRunMode	;SW2 Next00828 17D4 28F8 		GOTO	MainB0Rtn	;SW300829 17D5 2E22 		GOTO	NormalMd00_SW4	;SW400830 17D6 2E23 		GOTO	NormalMd00_SW5	;SW500831 17D7 	;Screen 1, SIGNONStrPtr, S/N00832 17D7 2DD0 		GOTO	NextRunMode	;SW2 Next00833 17D8 28F8 		GOTO	MainB0Rtn	;SW300834 17D9 28F8 		GOTO	MainB0Rtn	;SW400835 17DA 28F8 		GOTO	MainB0Rtn	;SW500836 17DB 	;Screen 2, SIGNONStrPtr00837 17DB 2DD0 		GOTO	NextRunMode	;SW2 Next00838 17DC 28F8 		GOTO	MainB0Rtn	;SW300839 17DD 2E22 		GOTO	NormalMd00_SW4	;SW400840 17DE 2E23 		GOTO	NormalMd00_SW5	;SW500841 17DF 	;Screen 3, (Err | Login),SW2 to clear00842 17DF 2E24 		GOTO	NormalMd03_SW5	;SW2 Cancel00843 17E0 28F8 		GOTO	MainB0Rtn	;SW300844 17E1 28F8 		GOTO	MainB0Rtn	;SW400845 17E2 28F8 		GOTO	MainB0Rtn	;SW500846 17E3 	;	00847 17E3 	;============================================================================================00848 17E3 	; Route to the correct handler for this screen/button00849 17E3 	;00850 17E3 	; Entry: Param79 is now the normalized button number.00851 17E3 	;        ScrnNumber is the Current Screen Number SW2..SW7 = 0..500852 17E3 	; Exit:00853 17E3 	;00854 17E3 140A 	RunOrService	BSF	PCLATH,0	;0xX7XX00855 17E4 148A 		BSF	PCLATH,100856 17E5 150A 		BSF	PCLATH,200857 17E6 1C28 		BTFSS	ServiceMode00858 17E7 2FC3 		GOTO	RunModeDispatch00859 17E8 2F89 		GOTO	SvsModeDispatch00860 17E9 	;00861 17E9 	;============================================================================================00862 17E9 	;00863 17E9 0782 	SvsModeIdler	ADDWF	PCL,F00864 17EA 2E25 		GOTO	SvsMd00Idle	;Scrn #00'Switch Machine'00865 17EB 2E2F 		GOTO	SvsMd01Idle	;Scrn #01'High Switch Machine'00866 17EC 2E39 		GOTO	SvsMd02Idle	;Scrn #02'Block Data'00867 17ED 2E51 		GOTO	SvsMd03Idle	;Scrn #03'MAC Address'00868 17EE 2E57 		GOTO	SvsMd04Idle	;Scrn #04'IP Address'00869 17EF 		if UsesShowInputs00870 17EF 2E5D 		GOTO	SvsMd05Idle	;Scrn #05'Input '00871 17F0 		else00873 17F0 		endif00874 17F0 28F8 		GOTO	MainB0Rtn	;Scrn #06'Bootloader'00875 17F1 28F8 		GOTO	MainB0Rtn	;Scrn #07'Remote Reset'00876 17F2 	;00877 17F2 		if UsesInputTester|UsesOutputTester00878 17F2 2E64 		GOTO	SvsMd08Idle	;Scrn #08'Test Scanner'00879 17F3 		else00881 17F3 		endif00882 17F3 	;00883 17F3 		if UsesInputTester00884 17F3 2E69 		GOTO	SvsMd09Idle	;Scrn #09'Test Scanner'00885 17F4 		else00887 17F4 		endif00888 17F4 	;00889 17F4 2E96 		GOTO	SvsMd10Idle	;Scrn #10'Block Data Cab#'00890 17F5 		if UsesBlockModules00892 17F5 		else00893 17F5 28F8 		GOTO	MainB0Rtn00894 17F6 		endif00895 17F6 		if UsesOutputTester00896 17F6 2E9B 		GOTO	SvsMd12Idle	;Scrn #12'Output Board Tester'00897 17F7 		else00899 17F7 		endif00900 17F7 	;00901 17F7 	;============================================================================================00902 17F7 	;00903 17F7 3903 	RunModeIdler	ANDLW	0x0300904 17F8 0782 		ADDWF	PCL,F00905 17F9 28FB 		GOTO	ShowRunScrn00	;Scrn #00 SIGNONStrPtr,IP00906 17FA 28FB 		GOTO	ShowRunScrn00	;Scrn #01 SIGNONStrPtr,SN00907 17FB 28FB 		GOTO	ShowRunScrn00	;Scrn #02 SIGNONStrPtr00908 17FC 28F8 		GOTO	DoErrorDisplay	;Scrn #0300909 17FD 	;00910 17FD 	;00911 17FD 	;00912 17FD 	;00913 17FD 	;00914 17FD 	;00915 17FD 	;Highland Greeley PIC.asm   "DispatchComIO.asm"                           Page: 200500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:DispatchHPRR.asm00916 17FD 	;00917 17FD 	;00918 17FD 	;00919 17FD 	;00920 17FD 	;01019 17FD 		include	Ether.asm	; 0x180000001 17FD 		subtitle	"Ether.asm"00002 17FD 		page00003 17FD 	;===========================================================================================00004 17FD 	;00005 17FD 	;  FileName: Ether.asm (HPRR version)00006 17FD 	;  Date: 9/17/0200007 17FD 	;  File Version: 1.0.200008 17FD 	;  00009 17FD 	;  Author: David M. Flynn00010 17FD 	;  Company: Oxford V.U.E., Inc.00011 17FD 	;00012 17FD 	;============================================================================================00013 17FD 	; Notes:00014 17FD 	;00015 17FD 	;  This file is handler routines for IP and TCP00016 17FD 	;00017 17FD 	;============================================================================================00018 17FD 	; Revision History00019 17FD 	;00020 17FD 	; 1.0.2     12/20/02   Deleted all Resist.asm stuff.00021 17FD 	;	Moved Div16 routines to LowStuff.asm00022 17FD 	; 1.0.1     9/17/02	Fisrt rev'd version00023 17FD 	;00024 17FD 	;============================================================================================00025 17FD 	; Conditionals00026 17FD 	;00027 17FD 	;============================================================================================00028 17FD 		ORG	0x180000029 1800 	;00030 1800 	; Name	(additional stack words required) Description00031 1800 	;================================================================================================00032 1800 	;calls outside this segment00033 1800 	;00034 1800 	;match_byteW_D18	(1+1+2)00035 1800 	;getch_net_D18	(1+1+1)00036 1800 	;setnic_addr_D18	(1+1+0)00037 1800 	;putnic_checkbyte_D18	(1+1+1)00038 1800 	;Dec_Put_n_Check_D18	(1+1+2)00039 1800 	;DecWPut_n_Check_D18	(1+1+2)00040 1800 	;Dec3BPut_n_Check_D18	(1+1+2)00041 1800 	;PutString_D1800042 1800 	;MemMove_Low_L_D18	(1+0) Param78, Param79, Param7A, Param7B, FSR00043 1800 	;00044 1800 	;lcd_GotoLine3_300045 1800 	;lcd_GotoLine2_300046 1800 	;lcd_GotoLine1_300047 1800 	;lcd_GotoLine0_300048 1800 	;lcd_GotoLineW_D1800049 1800 	;lcd_gotoxy_D1800050 1800 	;Disp_Hex_Byte_D1800051 1800 	;PrintString_D1800052 1800 	;Fix_decbyte_D1800053 1800 	;Disp_decword_D1800054 1800 	;Disp_decbyteW_D1800055 1800 	;Disp_dec3B_D1800056 1800 	;Disp_Space_300057 1800 	;Disp_Colon_300058 1800 	;DisplaysW_D1800059 1800 	;find_file_D1800060 1800 	;ReadEEROM_D18 (1+2) Param78, Param79, FSR00061 1800 	;WriteEEROM_D18 (1+2) Param78, FSR00062 1800 	;i2c_read_D1800063 1800 	;i2c_read1_D1800064 1800 	;open_file_D1800065 1800 	;close_file_D1800066 1800 	;set_rtc_D1800067 1800 	;ReadEEwW_D18 (1+0) RAM:none00068 1800 	;WriteEEP79W_D1800069 1800 	;WriteEEP79WPI_D1800070 1800 	;SRAM_ReadDR_D18	(1+1+0)00071 1800 	;00072 1800 	;=======================================================================================00073 1800 	;segment 3 routines00074 1800 	;00075 1800 	; CGI's00076 1800 	; "a=" Action Number	"GET /page.html?a=1"00077 1800 	;00078 1800 	; Hash EGI's00079 1800 	; DoHashEGI_A	<!--#A--> not used, sample code00080 1800 	; DoHashEGI_B	<!--#B--> not used00081 1800 	;00082 1800 	;SendAdcsByIP00083 1800 	;check_formargs	Check for arguments in HTTP request string 00084 1800 	;00085 1800 	; EGI's00086 1800 	; DoEGI_a	@a Firmware rev. 'VUE-Ferric v1.0d6'00087 1800 	; DoEGI_b	@b Unit's S/N '7001'00088 1800 	;00089 1800 	;=========================================================================00090 1800 	;=========================================================================00091 1800 	; These routines are used by the bootloaded, their callers must not be moved.00092 1800 	; i2c_read1 is a special case and the routine itself must not move.00093 1800 	;Highland Greeley PIC.asm   "Ether.asm"                                   Page: 201500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:Ether.asm00094 1800 	i2c_read1_D18	mCall3To0	i2c_read100094 1800 118A      M		BCF	PCLATH,3		BCF	PCLATH,300094 1801 120A      M		BCF	PCLATH,4		BCF	PCLATH,400094 1802 2521      M		CALL	i2c_read1		CALL	Destination00094 1803 158A      M		BSF	PCLATH,3		BSF	PCLATH,300094 1804 160A      M		BSF	PCLATH,4		BSF	PCLATH,400095 1805 0008 		RETURN00096 1806 	;00097 1806 	ZeroFName_D18	mCall3To0	ZeroFName00097 1806 118A      M		BCF	PCLATH,3		BCF	PCLATH,300097 1807 120A      M		BCF	PCLATH,4		BCF	PCLATH,400097 1808 2538      M		CALL	ZeroFName		CALL	Destination00097 1809 158A      M		BSF	PCLATH,3		BSF	PCLATH,300097 180A 160A      M		BSF	PCLATH,4		BSF	PCLATH,400098 180B 0008 		RETURN00099 180C 	;00100 180C 0080 	DOP_Ram_D18	MOVWF	INDF00101 180D 0A84 		INCF	FSR,F00102 180E 0008 		RETURN00103 180F 	;00104 180F 	find_file_D18	mCall3To0	find_file00104 180F 118A      M		BCF	PCLATH,3		BCF	PCLATH,300104 1810 120A      M		BCF	PCLATH,4		BCF	PCLATH,400104 1811 2544      M		CALL	find_file		CALL	Destination00104 1812 158A      M		BSF	PCLATH,3		BSF	PCLATH,300104 1813 160A      M		BSF	PCLATH,4		BSF	PCLATH,400105 1814 0008 		RETURN00106 1815 	;00107 1815 	open_file_D18	mCall3To0	open_file00107 1815 118A      M		BCF	PCLATH,3		BCF	PCLATH,300107 1816 120A      M		BCF	PCLATH,4		BCF	PCLATH,400107 1817 24F9      M		CALL	open_file		CALL	Destination00107 1818 158A      M		BSF	PCLATH,3		BSF	PCLATH,300107 1819 160A      M		BSF	PCLATH,4		BSF	PCLATH,400108 181A 0008 		RETURN00109 181B 	;00110 181B 	close_file_D18	mCall3To0	close_file00110 181B 118A      M		BCF	PCLATH,3		BCF	PCLATH,300110 181C 120A      M		BCF	PCLATH,4		BCF	PCLATH,400110 181D 2506      M		CALL	close_file		CALL	Destination00110 181E 158A      M		BSF	PCLATH,3		BSF	PCLATH,300110 181F 160A      M		BSF	PCLATH,4		BSF	PCLATH,400111 1820 0008 		RETURN00112 1821 	;00113 1821 	ReadEE79_D18	mCall3To0	ReadEE7900113 1821 118A      M		BCF	PCLATH,3		BCF	PCLATH,300113 1822 120A      M		BCF	PCLATH,4		BCF	PCLATH,400113 1823 23C3      M		CALL	ReadEE79		CALL	Destination00113 1824 158A      M		BSF	PCLATH,3		BSF	PCLATH,300113 1825 160A      M		BSF	PCLATH,4		BSF	PCLATH,400114 1826 0008 		RETURN00115 1827 	;00116 1827 	WriteEEP79W_D18	mCall3To0	WriteEEP79W00116 1827 118A      M		BCF	PCLATH,3		BCF	PCLATH,300116 1828 120A      M		BCF	PCLATH,4		BCF	PCLATH,400116 1829 23D6      M		CALL	WriteEEP79W		CALL	Destination00116 182A 158A      M		BSF	PCLATH,3		BSF	PCLATH,300116 182B 160A      M		BSF	PCLATH,4		BSF	PCLATH,400117 182C 0008 		RETURN00118 182D 	;00119 182D 	;00120 182D 3003 	lcd_GotoLine3_3	MOVLW	0x0300121 182E 2834 		GOTO	lcd_GotoLineW_D1800122 182F 3002 	lcd_GotoLine2_3	MOVLW	0x0200123 1830 2834 		GOTO	lcd_GotoLineW_D1800124 1831 3001 	lcd_GotoLine1_3	MOVLW	0x0100125 1832 2834 		GOTO	lcd_GotoLineW_D1800126 1833 0103 	lcd_GotoLine0_3	CLRW00127 1834 	lcd_GotoLineW_D18	mCall3To0	lcd_GotoLineW00127 1834 118A      M		BCF	PCLATH,3		BCF	PCLATH,300127 1835 120A      M		BCF	PCLATH,4		BCF	PCLATH,400127 1836 2353      M		CALL	lcd_GotoLineW		CALL	Destination00127 1837 158A      M		BSF	PCLATH,3		BSF	PCLATH,300127 1838 160A      M		BSF	PCLATH,4		BSF	PCLATH,400128 1839 0008 		RETURN00129 183A 	;00130 183A 	PrintString_D18	mCall3To0	PrintString00130 183A 118A      M		BCF	PCLATH,3		BCF	PCLATH,300130 183B 120A      M		BCF	PCLATH,4		BCF	PCLATH,400130 183C 209F      M		CALL	PrintString		CALL	Destination00130 183D 158A      M		BSF	PCLATH,3		BSF	PCLATH,300130 183E 160A      M		BSF	PCLATH,4		BSF	PCLATH,400131 183F 0008 		RETURN00132 1840 	;00133 1840 	;=========================================================================00134 1840 	; EGI dispatchers00135 1840 	;00136 1840 0041 	LastUCEGI	EQU	'A'	;Range checking00137 1840 	LastUCEGI	EQU	'A'	;Range checking00138 1840 	UCEGIDispatch	mPCLGoto00138 1840      M		if	$ & 0x0100		if $ & 0x010000138 1840      M		else			else00138 1840 100A      M		BCF	PCLATH,0		BCF	PCLATH,000138 1841      M		endif			endif00138 1841      M		if	$ & 0x0200		if $ & 0x020000138 1841      M		else			else00138 1841 108A      M		BCF	PCLATH,1		BCF	PCLATH,100138 1842      M		endif			endif00138 1842      M		if	$ & 0x0400		if $ & 0x040000138 1842      M		else			elseHighland Greeley PIC.asm   "Ether.asm"                                   Page: 202500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:Ether.asm00138 1842 110A      M		BCF	PCLATH,2		BCF	PCLATH,200138 1843      M		endif			endif00138 1843      M				;00138 1843 0782      M		ADDWF	PCL,F		ADDWF	PCL,F00139 1844 2958 		GOTO	DoEGI_A	;@A Oxi Flow Error00140 1845 	;00141 1845 0067 	LastEGI	EQU	'g'00142 1845 	;00143 1845 	EGIDispatch	mPCLGoto00143 1845      M		if	$ & 0x0100		if $ & 0x010000143 1845      M		else			else00143 1845 100A      M		BCF	PCLATH,0		BCF	PCLATH,000143 1846      M		endif			endif00143 1846      M		if	$ & 0x0200		if $ & 0x020000143 1846      M		else			else00143 1846 108A      M		BCF	PCLATH,1		BCF	PCLATH,100143 1847      M		endif			endif00143 1847      M		if	$ & 0x0400		if $ & 0x040000143 1847      M		else			else00143 1847 110A      M		BCF	PCLATH,2		BCF	PCLATH,200143 1848      M		endif			endif00143 1848      M				;00143 1848 0782      M		ADDWF	PCL,F		ADDWF	PCL,F00144 1849 292B 		GOTO	DoEGI_a	;Firmware rev. 'VUE-Ferric v1.0d6'00145 184A 2931 		GOTO	DoEGI_b	; Unit's S/N '7001'00146 184B 2938 		GOTO	DoEGI_c	;lcd Line 000147 184C 293A 		GOTO	DoEGI_d	;lcd Line 100148 184D 293C 		GOTO	DoEGI_e	;lcd Line 200149 184E 293E 		GOTO	DoEGI_f	;lcd Line 300150 184F 294F 		GOTO	DoEGI_g	; PWAccessCode00151 1850 	;00152 1850 0063 	LastCGI	EQU	'c'00153 1850 	;00154 1850 	CGIDispatch	mPCLGoto00154 1850      M		if	$ & 0x0100		if $ & 0x010000154 1850      M		else			else00154 1850 100A      M		BCF	PCLATH,0		BCF	PCLATH,000154 1851      M		endif			endif00154 1851      M		if	$ & 0x0200		if $ & 0x020000154 1851      M		else			else00154 1851 108A      M		BCF	PCLATH,1		BCF	PCLATH,100154 1852      M		endif			endif00154 1852      M		if	$ & 0x0400		if $ & 0x040000154 1852      M		else			else00154 1852 110A      M		BCF	PCLATH,2		BCF	PCLATH,200154 1853      M		endif			endif00154 1853      M				;00154 1853 0782      M		ADDWF	PCL,F		ADDWF	PCL,F00155 1854 2A48 		GOTO	DoCGI_a00156 1855 2959 		GOTO	DoCGI_b00157 1856 2969 		GOTO	DoCGI_c00158 1857 	;00159 1857 0042 	LastHashEGI	EQU	'B'00160 1857 	;00161 1857 	HashEGIDispatch	mPCLGoto00161 1857      M		if	$ & 0x0100		if $ & 0x010000161 1857      M		else			else00161 1857 100A      M		BCF	PCLATH,0		BCF	PCLATH,000161 1858      M		endif			endif00161 1858      M		if	$ & 0x0200		if $ & 0x020000161 1858      M		else			else00161 1858 108A      M		BCF	PCLATH,1		BCF	PCLATH,100161 1859      M		endif			endif00161 1859      M		if	$ & 0x0400		if $ & 0x040000161 1859      M		else			else00161 1859 110A      M		BCF	PCLATH,2		BCF	PCLATH,200161 185A      M		endif			endif00161 185A      M				;00161 185A 0782      M		ADDWF	PCL,F		ADDWF	PCL,F00162 185B 2979 		GOTO	DoHashEGI_A00163 185C 297A 		GOTO	DoHashEGI_B00164 185D 	;00165 185D 0007 	LastCGI_Action	EQU	0x0700166 185D 	;00167 185D 3907 	CGI_ActionDispatch	ANDLW	0x0700168 185E 		mPCLGoto00168 185E      M		if	$ & 0x0100		if $ & 0x010000168 185E      M		else			else00168 185E 100A      M		BCF	PCLATH,0		BCF	PCLATH,000168 185F      M		endif			endif00168 185F      M		if	$ & 0x0200		if $ & 0x020000168 185F      M		else			else00168 185F 108A      M		BCF	PCLATH,1		BCF	PCLATH,100168 1860      M		endif			endif00168 1860      M		if	$ & 0x0400		if $ & 0x040000168 1860      M		else			else00168 1860 110A      M		BCF	PCLATH,2		BCF	PCLATH,200168 1861      M		endif			endif00168 1861      M				;00168 1861 0782      M		ADDWF	PCL,F		ADDWF	PCL,F00169 1862 286A 		GOTO	DoCGI_Action_1	;not used00170 1863 286B 		GOTO	DoCGI_Action_2	;SW200171 1864 286D 		GOTO	DoCGI_Action_3	;SW300172 1865 2871 		GOTO	DoCGI_Action_4	;SW400173 1866 2875 		GOTO	DoCGI_Action_5	;SW500174 1867 2879 		GOTO	DoCGI_Action_6	;SW600175 1868 287B 		GOTO	DoCGI_Action_7	;SW700176 1869 29D9 		GOTO	http_recv_CGI00177 186A 	;00178 186A 29D9 	DoCGI_Action_1	GOTO	http_recv_CGIHighland Greeley PIC.asm   "Ether.asm"                                   Page: 203500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:Ether.asm00179 186B 3001 	DoCGI_Action_2	MOVLW	0x01	;SW200180 186C 287C 		GOTO	DoCGI_ActionBtn00181 186D 1DA5 	DoCGI_Action_3	BTFSS	PWGood	;pass code must have been accepted00182 186E 287E 		GOTO	DoCGI_Action_Rtn00183 186F 3002 		MOVLW	0x02	;SW300184 1870 287C 		GOTO	DoCGI_ActionBtn00185 1871 1DA5 	DoCGI_Action_4	BTFSS	PWGood00186 1872 287E 		GOTO	DoCGI_Action_Rtn00187 1873 3003 		MOVLW	0x03	;SW400188 1874 287C 		GOTO	DoCGI_ActionBtn00189 1875 1DA5 	DoCGI_Action_5	BTFSS	PWGood00190 1876 287E 		GOTO	DoCGI_Action_Rtn00191 1877 3004 		MOVLW	0x04	;SW500192 1878 287C 		GOTO	DoCGI_ActionBtn00193 1879 3005 	DoCGI_Action_6	MOVLW	0x05	;SW600194 187A 287C 		GOTO	DoCGI_ActionBtn00195 187B 3006 	DoCGI_Action_7	MOVLW	0x06	;SW700196 187C 00A9 	DoCGI_ActionBtn	MOVWF	CGI_BtnQueued00197 187D 	;tc00198 187D 	;	MOVLW	d'0'	;1st line00199 187D 	;	MOVWF	Param7800200 187D 	;	MOVLW	d'17'00201 187D 	;	CALL	lcd_gotoxy_D1800202 187D 	;	MOVF	CGI_BtnQueued,W00203 187D 	;	CALL	Disp_Hex_Byte_D1800204 187D 	;etc00205 187D 11A5 		BCF	PWGood00206 187E 29D9 	DoCGI_Action_Rtn	GOTO	http_recv_CGI00207 187F 	;00208 187F 	;======================================================================00209 187F 	;Dispatch routines  (this is segment 3)00210 187F 	;segment 1 routines called00211 187F 	;00212 187F 	;00213 187F 	match_word_D18	mCall3To1	match_word00213 187F 120A      M		BCF	PCLATH,4		BCF	PCLATH,400213 1880 2145      M		CALL	match_word		CALL	Destination00213 1881 158A      M		BSF	PCLATH,3		BSF	PCLATH,300213 1882 160A      M		BSF	PCLATH,4		BSF	PCLATH,400214 1883 0008 		RETURN00215 1884 	;00216 1884 	match_byteW_D18	mCall3To1	match_byteW00216 1884 120A      M		BCF	PCLATH,4		BCF	PCLATH,400216 1885 214A      M		CALL	match_byteW		CALL	Destination00216 1886 158A      M		BSF	PCLATH,3		BSF	PCLATH,300216 1887 160A      M		BSF	PCLATH,4		BSF	PCLATH,400217 1888 0008 		RETURN00218 1889 	;00219 1889 	getch_net_D18	mCall3To1	getch_net00219 1889 120A      M		BCF	PCLATH,4		BCF	PCLATH,400219 188A 20A4      M		CALL	getch_net		CALL	Destination00219 188B 158A      M		BSF	PCLATH,3		BSF	PCLATH,300219 188C 160A      M		BSF	PCLATH,4		BSF	PCLATH,400220 188D 0008 		RETURN00221 188E 	;00222 188E 	setnic_addr_D18	mCall3To1	setnic_addr00222 188E 120A      M		BCF	PCLATH,4		BCF	PCLATH,400222 188F 2014      M		CALL	setnic_addr		CALL	Destination00222 1890 158A      M		BSF	PCLATH,3		BSF	PCLATH,300222 1891 160A      M		BSF	PCLATH,4		BSF	PCLATH,400223 1892 0008 		RETURN00224 1893 	;00225 1893 	putnic_checkbyte_D18	mCall3To1	putnic_checkbyte00225 1893 120A      M		BCF	PCLATH,4		BCF	PCLATH,400225 1894 2388      M		CALL	putnic_checkbyte		CALL	Destination00225 1895 158A      M		BSF	PCLATH,3		BSF	PCLATH,300225 1896 160A      M		BSF	PCLATH,4		BSF	PCLATH,400226 1897 0008 		RETURN00227 1898 	; 00228 1898 	putch_net_W_D18	mCall3To1	putch_net_W00228 1898 120A      M		BCF	PCLATH,4		BCF	PCLATH,400228 1899 216D      M		CALL	putch_net_W		CALL	Destination00228 189A 158A      M		BSF	PCLATH,3		BSF	PCLATH,300228 189B 160A      M		BSF	PCLATH,4		BSF	PCLATH,400229 189C 0008 		RETURN00230 189D 	;00231 189D 	Dec_Put_n_Check_D18	mCall3To1	Dec_Put_n_Check00231 189D 120A      M		BCF	PCLATH,4		BCF	PCLATH,400231 189E 2394      M		CALL	Dec_Put_n_Check		CALL	Destination00231 189F 158A      M		BSF	PCLATH,3		BSF	PCLATH,300231 18A0 160A      M		BSF	PCLATH,4		BSF	PCLATH,400232 18A1 0008 		RETURN00233 18A2 	;00234 18A2 	DecWPut_n_Check_D18	mCall3To1	DecWPut_n_Check00234 18A2 120A      M		BCF	PCLATH,4		BCF	PCLATH,400234 18A3 239D      M		CALL	DecWPut_n_Check		CALL	Destination00234 18A4 158A      M		BSF	PCLATH,3		BSF	PCLATH,300234 18A5 160A      M		BSF	PCLATH,4		BSF	PCLATH,400235 18A6 0008 		RETURN00236 18A7 	;00237 18A7 		if Uses3BNums00238 18A7 	Dec3BPut_n_Check_D18	mCall3To1	Dec3BPut_n_Check00238 18A7 120A      M		BCF	PCLATH,4		BCF	PCLATH,400238 18A8 23A6      M		CALL	Dec3BPut_n_Check		CALL	Destination00238 18A9 158A      M		BSF	PCLATH,3		BSF	PCLATH,300238 18AA 160A      M		BSF	PCLATH,4		BSF	PCLATH,400239 18AB 0008 		RETURN00240 18AC 		endif00241 18AC 	;00242 18AC 	PutString_D18	mCall3To1	PutStringHighland Greeley PIC.asm   "Ether.asm"                                   Page: 204500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:Ether.asm00242 18AC 120A      M		BCF	PCLATH,4		BCF	PCLATH,400242 18AD 2504      M		CALL	PutString		CALL	Destination00242 18AE 158A      M		BSF	PCLATH,3		BSF	PCLATH,300242 18AF 160A      M		BSF	PCLATH,4		BSF	PCLATH,400243 18B0 0008 		RETURN00244 18B1 	;00245 18B1 	MemMove_Low_L_D18	mCall3To1	MemMove_Low_L00245 18B1 120A      M		BCF	PCLATH,4		BCF	PCLATH,400245 18B2 2104      M		CALL	MemMove_Low_L		CALL	Destination00245 18B3 158A      M		BSF	PCLATH,3		BSF	PCLATH,300245 18B4 160A      M		BSF	PCLATH,4		BSF	PCLATH,400246 18B5 0008 		RETURN00247 18B6 	;00248 18B6 	;Segment 0 Routines called00249 18B6 	;00250 18B6 	lcd_gotoxy_D18	mCall3To0	lcd_gotoxy00250 18B6 118A      M		BCF	PCLATH,3		BCF	PCLATH,300250 18B7 120A      M		BCF	PCLATH,4		BCF	PCLATH,400250 18B8 2355      M		CALL	lcd_gotoxy		CALL	Destination00250 18B9 158A      M		BSF	PCLATH,3		BSF	PCLATH,300250 18BA 160A      M		BSF	PCLATH,4		BSF	PCLATH,400251 18BB 0008 		RETURN00252 18BC 	;00253 18BC 	Disp_Hex_Byte_D18	mCall3To0	Disp_Hex_Byte00253 18BC 118A      M		BCF	PCLATH,3		BCF	PCLATH,300253 18BD 120A      M		BCF	PCLATH,4		BCF	PCLATH,400253 18BE 239A      M		CALL	Disp_Hex_Byte		CALL	Destination00253 18BF 158A      M		BSF	PCLATH,3		BSF	PCLATH,300253 18C0 160A      M		BSF	PCLATH,4		BSF	PCLATH,400254 18C1 0008 		RETURN00255 18C2 	;00256 18C2 	Fix_decbyte_D18	mCall3To0	Fix_decbyte00256 18C2 118A      M		BCF	PCLATH,3		BCF	PCLATH,300256 18C3 120A      M		BCF	PCLATH,4		BCF	PCLATH,400256 18C4 20AC      M		CALL	Fix_decbyte		CALL	Destination00256 18C5 158A      M		BSF	PCLATH,3		BSF	PCLATH,300256 18C6 160A      M		BSF	PCLATH,4		BSF	PCLATH,400257 18C7 0008 		RETURN00258 18C8 	;00259 18C8 	Disp_decword_D18	mCall3To0	Disp_decword00259 18C8 118A      M		BCF	PCLATH,3		BCF	PCLATH,300259 18C9 120A      M		BCF	PCLATH,4		BCF	PCLATH,400259 18CA 20F8      M		CALL	Disp_decword		CALL	Destination00259 18CB 158A      M		BSF	PCLATH,3		BSF	PCLATH,300259 18CC 160A      M		BSF	PCLATH,4		BSF	PCLATH,400260 18CD 0008 		RETURN00261 18CE 	;00262 18CE 	Disp_decbyteW_D18	mCall3To0	Disp_decbyteW00262 18CE 118A      M		BCF	PCLATH,3		BCF	PCLATH,300262 18CF 120A      M		BCF	PCLATH,4		BCF	PCLATH,400262 18D0 20BC      M		CALL	Disp_decbyteW		CALL	Destination00262 18D1 158A      M		BSF	PCLATH,3		BSF	PCLATH,300262 18D2 160A      M		BSF	PCLATH,4		BSF	PCLATH,400263 18D3 0008 		RETURN00264 18D4 	;00265 18D4 		if Uses3BNums00266 18D4 	Disp_dec3B_D18	mCall3To0	Disp_dec3B00266 18D4 118A      M		BCF	PCLATH,3		BCF	PCLATH,300266 18D5 120A      M		BCF	PCLATH,4		BCF	PCLATH,400266 18D6 2178      M		CALL	Disp_dec3B		CALL	Destination00266 18D7 158A      M		BSF	PCLATH,3		BSF	PCLATH,300266 18D8 160A      M		BSF	PCLATH,4		BSF	PCLATH,400267 18D9 0008 		RETURN00268 18DA 		endif00269 18DA 	;00270 18DA 3020 	Disp_Space_3	MOVLW	' '00271 18DB 28DD 		GOTO	DisplaysW_D1800272 18DC 303A 	Disp_Colon_3	MOVLW	':'00273 18DD 	DisplaysW_D18	mCall3To0	DisplaysW00273 18DD 118A      M		BCF	PCLATH,3		BCF	PCLATH,300273 18DE 120A      M		BCF	PCLATH,4		BCF	PCLATH,400273 18DF 23AB      M		CALL	DisplaysW		CALL	Destination00273 18E0 158A      M		BSF	PCLATH,3		BSF	PCLATH,300273 18E1 160A      M		BSF	PCLATH,4		BSF	PCLATH,400274 18E2 0008 		RETURN00275 18E3 	;00276 18E3 	ReadEEROM_D18	mCall3To0	ReadEEROM00276 18E3 118A      M		BCF	PCLATH,3		BCF	PCLATH,300276 18E4 120A      M		BCF	PCLATH,4		BCF	PCLATH,400276 18E5 249F      M		CALL	ReadEEROM		CALL	Destination00276 18E6 158A      M		BSF	PCLATH,3		BSF	PCLATH,300276 18E7 160A      M		BSF	PCLATH,4		BSF	PCLATH,400277 18E8 0008 		RETURN00278 18E9 	;00279 18E9 	WriteEEROM_D18	mCall3To0	WriteEEROM00279 18E9 118A      M		BCF	PCLATH,3		BCF	PCLATH,300279 18EA 120A      M		BCF	PCLATH,4		BCF	PCLATH,400279 18EB 24AB      M		CALL	WriteEEROM		CALL	Destination00279 18EC 158A      M		BSF	PCLATH,3		BSF	PCLATH,300279 18ED 160A      M		BSF	PCLATH,4		BSF	PCLATH,400280 18EE 0008 		RETURN00281 18EF 	;00282 18EF 	i2c_read_D18	mCall3To0	i2c_read00282 18EF 118A      M		BCF	PCLATH,3		BCF	PCLATH,300282 18F0 120A      M		BCF	PCLATH,4		BCF	PCLATH,400282 18F1 2522      M		CALL	i2c_read		CALL	Destination00282 18F2 158A      M		BSF	PCLATH,3		BSF	PCLATH,300282 18F3 160A      M		BSF	PCLATH,4		BSF	PCLATH,400283 18F4 0008 		RETURN00284 18F5 	;Highland Greeley PIC.asm   "Ether.asm"                                   Page: 205500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:Ether.asm00285 18F5 		if HasRTC00291 18F5 		endif00292 18F5 	;00293 18F5 	ReadEE79PI_D18	mCall3To0	ReadEE79PI00293 18F5 118A      M		BCF	PCLATH,3		BCF	PCLATH,300293 18F6 120A      M		BCF	PCLATH,4		BCF	PCLATH,400293 18F7 23C5      M		CALL	ReadEE79PI		CALL	Destination00293 18F8 158A      M		BSF	PCLATH,3		BSF	PCLATH,300293 18F9 160A      M		BSF	PCLATH,4		BSF	PCLATH,400294 18FA 0008 		RETURN00295 18FB 	;00296 18FB 	ReadEEwW_D18	mCall3To0	ReadEEwW00296 18FB 118A      M		BCF	PCLATH,3		BCF	PCLATH,300296 18FC 120A      M		BCF	PCLATH,4		BCF	PCLATH,400296 18FD 23C7      M		CALL	ReadEEwW		CALL	Destination00296 18FE 158A      M		BSF	PCLATH,3		BSF	PCLATH,300296 18FF 160A      M		BSF	PCLATH,4		BSF	PCLATH,400297 1900 0008 		RETURN00298 1901 	;00299 1901 	WriteEEP79WPI_D18	mCall3To0	WriteEEP79WPI00299 1901 118A      M		BCF	PCLATH,3		BCF	PCLATH,300299 1902 120A      M		BCF	PCLATH,4		BCF	PCLATH,400299 1903 23D2      M		CALL	WriteEEP79WPI		CALL	Destination00299 1904 158A      M		BSF	PCLATH,3		BSF	PCLATH,300299 1905 160A      M		BSF	PCLATH,4		BSF	PCLATH,400300 1906 0008 		RETURN00301 1907 	;00302 1907 	SRAM_ReadDR_D18	mCall3To0	SRAM_ReadDR00302 1907 118A      M		BCF	PCLATH,3		BCF	PCLATH,300302 1908 120A      M		BCF	PCLATH,4		BCF	PCLATH,400302 1909 224B      M		CALL	SRAM_ReadDR		CALL	Destination00302 190A 158A      M		BSF	PCLATH,3		BSF	PCLATH,300302 190B 160A      M		BSF	PCLATH,4		BSF	PCLATH,400303 190C 0008 		RETURN00304 190D 	;00305 190D 	SRAM_ReadPI_D18	mCall3To0	SRAM_ReadPI00305 190D 118A      M		BCF	PCLATH,3		BCF	PCLATH,300305 190E 120A      M		BCF	PCLATH,4		BCF	PCLATH,400305 190F 2252      M		CALL	SRAM_ReadPI		CALL	Destination00305 1910 158A      M		BSF	PCLATH,3		BSF	PCLATH,300305 1911 160A      M		BSF	PCLATH,4		BSF	PCLATH,400306 1912 0008 		RETURN00307 1913 	;00308 1913 	SRAM_WritePI_D18	mCall3To0	SRAM_WritePI00308 1913 118A      M		BCF	PCLATH,3		BCF	PCLATH,300308 1914 120A      M		BCF	PCLATH,4		BCF	PCLATH,400308 1915 2236      M		CALL	SRAM_WritePI		CALL	Destination00308 1916 158A      M		BSF	PCLATH,3		BSF	PCLATH,300308 1917 160A      M		BSF	PCLATH,4		BSF	PCLATH,400309 1918 0008 		RETURN00310 1919 	;00311 1919 	SRAM_Read_D18	mCall3To0	SRAM_Read00311 1919 118A      M		BCF	PCLATH,3		BCF	PCLATH,300311 191A 120A      M		BCF	PCLATH,4		BCF	PCLATH,400311 191B 2268      M		CALL	SRAM_Read		CALL	Destination00311 191C 158A      M		BSF	PCLATH,3		BSF	PCLATH,300311 191D 160A      M		BSF	PCLATH,4		BSF	PCLATH,400312 191E 0008 		RETURN00313 191F 	;00314 191F 	SRAM_Write_D18	mCall3To0	SRAM_Write00314 191F 118A      M		BCF	PCLATH,3		BCF	PCLATH,300314 1920 120A      M		BCF	PCLATH,4		BCF	PCLATH,400314 1921 223A      M		CALL	SRAM_Write		CALL	Destination00314 1922 158A      M		BSF	PCLATH,3		BSF	PCLATH,300314 1923 160A      M		BSF	PCLATH,4		BSF	PCLATH,400315 1924 0008 		RETURN00316 1925 	;00317 1925 	Delay1Sec_D18	mCall3To0	Delay1Sec00317 1925 118A      M		BCF	PCLATH,3		BCF	PCLATH,300317 1926 120A      M		BCF	PCLATH,4		BCF	PCLATH,400317 1927 22E8      M		CALL	Delay1Sec		CALL	Destination00317 1928 158A      M		BSF	PCLATH,3		BSF	PCLATH,300317 1929 160A      M		BSF	PCLATH,4		BSF	PCLATH,400318 192A 0008 		RETURN00319 192B 	;00320 192B 	;============================================================================================00321 192B 	;00322 192B 	;todo! if fileidx=nn then do filenn EGIs else CommonEGIs00323 192B 	;  this may become necessary later.00324 192B 	;00325 192B 	;========================================================================================00326 192B 	; EGI handlers00327 192B 	;00328 192B 	;========================================================================================00329 192B 	; EGI handlers00330 192B 	;00331 192B 	; Firmware rev. 'VUE-Ferric v1.0d6'00332 192B 300F 	DoEGI_a	MOVLW	SIGNONStrPtr00333 192C 		mCall3To1	PutString00333 192C 120A      M		BCF	PCLATH,4		BCF	PCLATH,400333 192D 2504      M		CALL	PutString		CALL	Destination00333 192E 158A      M		BSF	PCLATH,3		BSF	PCLATH,300333 192F 160A      M		BSF	PCLATH,4		BSF	PCLATH,400334 1930 0008 		RETURN00335 1931 	;00336 1931 	; Unit's S/N '7001'00337 1931 300A 	DoEGI_b	MOVLW	eSN000338 1932 20FB 		CALL	ReadEEwW_D1800339 1933 00F6 		MOVWF	Param7600340 1934 300B 		MOVLW	eSN1Highland Greeley PIC.asm   "Ether.asm"                                   Page: 206500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:Ether.asm00341 1935 20FB 		CALL	ReadEEwW_D1800342 1936 00F7 		MOVWF	Param7700343 1937 28A2 		GOTO	DecWPut_n_Check_D1800344 1938 	;00345 1938 	;00346 1938 3000 	DoEGI_c	MOVLW	0x0000347 1939 293F 		GOTO	DoEGI_ReadLCD00348 193A 3040 	DoEGI_d	MOVLW	0x4000349 193B 293F 		GOTO	DoEGI_ReadLCD00350 193C 3014 	DoEGI_e	MOVLW	0x1400351 193D 293F 		GOTO	DoEGI_ReadLCD00352 193E 3054 	DoEGI_f	MOVLW	0x5400353 193F 	DoEGI_ReadLCD	mCall3To0	lcd_SetDDRamAddress00353 193F 118A      M		BCF	PCLATH,3		BCF	PCLATH,300353 1940 120A      M		BCF	PCLATH,4		BCF	PCLATH,400353 1941 2316      M		CALL	lcd_SetDDRamAddress		CALL	Destination00353 1942 158A      M		BSF	PCLATH,3		BSF	PCLATH,300353 1943 160A      M		BSF	PCLATH,4		BSF	PCLATH,400354 1944 3014 		MOVLW	d'20'	;chars to move00355 1945 00F9 		MOVWF	Param7900356 1946 	DoEGI_ReadLCD_L1	mCall3To0	lcd_ReadData00356 1946 118A      M		BCF	PCLATH,3		BCF	PCLATH,300356 1947 120A      M		BCF	PCLATH,4		BCF	PCLATH,400356 1948 2318      M		CALL	lcd_ReadData		CALL	Destination00356 1949 158A      M		BSF	PCLATH,3		BSF	PCLATH,300356 194A 160A      M		BSF	PCLATH,4		BSF	PCLATH,400357 194B 2093 		CALL	putnic_checkbyte_D1800358 194C 0BF9 		DECFSZ	Param79,F00359 194D 2946 		GOTO	DoEGI_ReadLCD_L100360 194E 0008 		RETURN00361 194F 	;00362 194F 	; 00363 194F 306C 	DoEGI_g	MOVLW	PWAccessCode	;@g PWAccessCode00364 1950 1383 		BCF	STATUS,IRP00365 1951 2955 		GOTO	DoEGI_DecByte_E200366 1952 	;00367 1952 20FB 	DoEGI_DecByteEE	CALL	ReadEEwW_D1800368 1953 289D 		GOTO	Dec_Put_n_Check_D1800369 1954 	;00370 1954 1783 	DoEGI_DecByte	BSF	STATUS,IRP00371 1955 0084 	DoEGI_DecByte_E2	MOVWF	FSR00372 1956 0800 		MOVF	INDF,W00373 1957 289D 		GOTO	Dec_Put_n_Check_D1800374 1958 	;00375 1958 	;==============================================================================================00376 1958 	;00377 1958 0008 	DoEGI_A	RETURN00378 1959 	;00379 1959 	;==============================================================================================00380 1959 	; CGI 'b=' action number00381 1959 	; Convert text to an Int16 at Param77:Param7600382 1959 	; Must match password access code, if not send back the index page00383 1959 	;00384 1959 2255 	DoCGI_b	CALL	GetCGIInt1600385 195A 	;00386 195A 	; Now do something based on the value in Param76.00387 195A 	;00388 195A 		TSTF	Param7700388 195A 08F7      M		MOVF	Param77,F		MOVF	src,F00389 195B 		SKPZ00389 195B 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00390 195C 2966 		GOTO	DoCGI_b_BadPW	;>255 not valid00391 195D 		TSTF	Param7600391 195D 08F6      M		MOVF	Param76,F		MOVF	src,F00392 195E 		SKPNZ00392 195E 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00393 195F 2966 		GOTO	DoCGI_b_BadPW	;0x00 not valid00394 1960 		MOVFW	Param7600394 1960 0876      M		MOVF	Param76,W		MOVF	src,W00395 1961 026C 		SUBWF	PWAccessCode,W00396 1962 		SKPZ00396 1962 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00397 1963 2966 		GOTO	DoCGI_b_BadPW00398 1964 15A5 		BSF	PWGood00399 1965 29D9 		GOTO	http_recv_CGI00400 1966 	;00401 1966 01EC 	DoCGI_b_BadPW	CLRF	PWAccessCode00402 1967 11A5 		BCF	PWGood00403 1968 	;	mBank200404 1968 	;	MOVLW	' '00405 1968 	;	MOVWF	romdir.f.name00406 1968 29F0 		GOTO	http_recv_100407 1969 	;00408 1969 	;00409 1969 	;==============================================================================================00410 1969 	; CGI 'c=' action number00411 1969 	; Convert text to an Int16 at Param77:Param7600412 1969 	; Must match the serial number to enable password access code, if not send back the index page00413 1969 	;00414 1969 2255 	DoCGI_c	CALL	GetCGIInt1600415 196A 	;00416 196A 	; Now do something based on the value in Param76,Param77.00417 196A 	;00418 196A 300A 		MOVLW	eSN000419 196B 20FB 		CALL	ReadEEwW_D1800420 196C 0276 		SUBWF	Param76,W00421 196D 		SKPZ00421 196D 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00422 196E 2966 		GOTO	DoCGI_b_BadPW00423 196F 	;Highland Greeley PIC.asm   "Ether.asm"                                   Page: 207500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:Ether.asm00424 196F 300B 		MOVLW	eSN100425 1970 20FB 		CALL	ReadEEwW_D1800426 1971 0277 		SUBWF	Param77,W00427 1972 		SKPZ00427 1972 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00428 1973 2966 		GOTO	DoCGI_b_BadPW00429 1974 	;00430 1974 1703 		BSF	_RP1	;Bank 200431 1975 		MOVFW	IPDatagramID00431 1975 084A      M		MOVF	IPDatagramID,W		MOVF	src,W00432 1976 1303 		BCF	_RP1	;Bank 000433 1977 00EC 		MOVWF	PWAccessCode00434 1978 29D9 		GOTO	http_recv_CGI00435 1979 	;00436 1979 	;00437 1979 	;==============================================================================00438 1979 	;00439 1979 	DoHashEGI_A	;MOVLW	Str_ImgSrcPtr	;<img src="00440 1979 		;mCall3To1	PutString00441 1979 		;mBank300442 1979 		;MOVLW	Str_RedOnPtr	;redon.jpg">00443 1979 		;BTFSS	ErrorLamp00444 1979 		;MOVLW	Str_RedOffPtr	;redoff.jpg">00445 1979 		;mCall3To1	PutString00446 1979 0008 		RETURN00447 197A 	;00448 197A 	DoHashEGI_B00449 197A 0008 		RETURN00450 197B 	;00451 197B 		if UsesUDP00452 197B 	;========================================================================================00453 197B 	; Handler for the incoming data at the UDP terminal port (TermPort)00454 197B 	;00455 197B 	; Port 57 "any private terminal access"00456 197B 	; Entry:next NIC byte to read is first byte of UDP data field00457 197B 	; Exit:00458 197B 	; RAM used:00459 197B 	; Calls:(1+)00460 197B 	;00461 197B 0008 	UDP_Term_Handler	RETURN00462 197C 	;00463 197C 		endif00464 197C 	;========================================================================================00465 197C 	; Handler for port IPDATAPORT00466 197C 	; Port 87 Private data link port.00467 197C 	; Entry:next NIC byte to read is first byte of TCP data field00468 197C 	; Exit:00469 197C 	; RAM used:00470 197C 	; Calls:(1+)00471 197C 	;00472 197C 01CB 	DataPort_handler	CLRF	tpxdlen+1	; tpxdlen = 0;00473 197D 01CA 		CLRF	tpxdlen00474 197E 	;buffer the command in romdir.f.name00475 197E 01F9 		CLRF	Param79	;i=0;00476 197F 2089 	IPDP_handler_L1	CALL	getch_net_D18	;send one char to disp00477 1980 1B26 		BTFSC	Flags26,atend00478 1981 298D 		GOTO	IPDP_handler_1	;atend00479 1982 3017 		MOVLW	low romdir.f.name00480 1983 0779 		ADDWF	Param79,W	;i00481 1984 0084 		MOVWF	FSR00482 1985 1783 		BSF	STATUS,IRP00483 1986 0878 		MOVF	Param78,W00484 1987 0080 		MOVWF	INDF	;117+Param7900485 1988 0AF9 		INCF	Param79,F00486 1989 300C 		MOVLW	ROM_FNAMELEN00487 198A 0279 		SUBWF	Param79,W00488 198B 1D03 		BTFSS	STATUS,Z	;12 chars max00489 198C 297F 		GOTO	IPDP_handler_L1	00490 198D 	;00491 198D 01CD 	IPDP_handler_1	CLRF	checklo	;checkhi = checklo = 0; 00492 198E 01CC 		CLRF	checkhi00493 198F 1326 		BCF	Flags26,checkflag	; checkflag = 0; 00494 1990 3028 		MOVLW	IPHDR_LEN+TCPHDR_LEN	;txin = IPHDR_LEN + TCPHDR_LEN;  O/P data to buffer, calc checksum 00495 1991 00D4 		MOVWF	txin00496 1992 	;00497 1992 	; setnic_addr((TXSTART*256)+sizeof(ETHERHEADER)+IPHDR_LEN+TCPHDR_LEN)00498 1992 3040 		MOVLW	TXSTART00499 1993 00FB 		MOVWF	Param7B00500 1994 3036 		MOVLW	ETHERHEADER_LEN+IPHDR_LEN+TCPHDR_LEN00501 1995 00FA 		MOVWF	Param7A00502 1996 208E 		CALL	setnic_addr_D1800503 1997 	;00504 1997 	;send back and OK00505 1997 304F 		MOVLW	'O'00506 1998 2093 		CALL	putnic_checkbyte_D1800507 1999 304B 		MOVLW	'K'00508 199A 2093 		CALL	putnic_checkbyte_D1800509 199B 	;00510 199B 3011 		MOVLW	TFIN+TACK	;Close connection when sent 00511 199C 00E7 		MOVWF	tflags00512 199D 084C 		MOVF	checkhi,W	; d_checkhi = checkhi   Save checksum 00513 199E 00CE 		MOVWF	d_checkhi00514 199F 084D 		MOVF	checklo,W	; d_checklo = checklo00515 19A0 00CF 		MOVWF	d_checklo00516 19A1 		mCall3To1	tcp_xmit	; tcp_xmit();  ..do it 00516 19A1 120A      M		BCF	PCLATH,4		BCF	PCLATH,400516 19A2 264D      M		CALL	tcp_xmit		CALL	Destination00516 19A3 158A      M		BSF	PCLATH,3		BSF	PCLATH,300516 19A4 160A      M		BSF	PCLATH,4		BSF	PCLATH,400517 19A5 0008 		RETURNHighland Greeley PIC.asm   "Ether.asm"                                   Page: 208500 GB:HPRR Electrical Dept:HPRR.ASM:MasterFiles:Ether.asm00518 19A6 	;00519 19A6 	;00520 19A6 	;00521 19A6 	;==============================================================================================00522 19A6 	;==============================================================================00523 19A6 	;=====================================================================================================00524 19A6 	;00525 19A6 	; end of segment 300526 19A6 	;00527 19A6 	;=====================================================================================================00528 19A6 	;00529 19A6 	;00530 19A6 	;01020 19A6 		include	HTTPServer.asm00001 19A6 		subtitle	"HTTPServer.asm"00002 19A6 		page00003 19A6 	;===========================================================================================00004 19A6 	;00005 19A6 	;  FileName: HTTPServer.asm00006 19A6 	;  Date: 5/10/0900007 19A6 	;  File Version: 1.000008 19A6 	;  00009 19A6 	;  Author: David M. Flynn00010 19A6 	;  Company: Oxford V.U.E., Inc.00011 19A6 	;00012 19A6 	;============================================================================================00013 19A6 	; Notes:00014 19A6 	;00015 19A6 	;  This file is the HTTP server.00016 19A6 	;  Include this file in *** Segment 3 *** after Ether.asm00017 19A6 	;  This file contains no custom routines.00018 19A6 	;  The file Ether.asm must have the dispater routines for this file.00019 19A6 	;00020 19A6 	;  Example Dispaters:00021 19A6 	;00022 19A6 	;========================00023 19A6 	; EGI dispatcher00024 19A6 	;	if UseUCEGIs00025 19A6 	;LastUCEGI	EQU	'A'00026 19A6 	;00027 19A6 	;UCEGIDispatch	mPCLGoto00028 19A6 	;	GOTO	DoEGI_A00029 19A6 	;	endif00030 19A6 	;00031 19A6 	;LastEGI	EQU	'a'00032 19A6 	;00033 19A6 	;EGIDispatch	mPCLGoto00034 19A6 	;	GOTO	DoEGI_a00035 19A6 	;00036 19A6 	;LastCGI	EQU	'a'00037 19A6 	;00038 19A6 	;CGIDispatch	mPCLGoto00039 19A6 	;	GOTO	DoCGI_a00040 19A6 	;00041 19A6 	;LastCGI_Action	EQU	0x0100042 19A6 	;00043 19A6 	;CGI_ActionDispatch	mPCLGoto00044 19A6 	;	GOTO	DoCGI_Action_100045 19A6 	;00046 19A6 	;LastHashEGI	EQU	'A'00047 19A6 	;00048 19A6 	;HashEGIDispatch	mPCLGoto00049 19A6 	;	GOTO	DoHashEGI_A00050 19A6 	;00051 19A6 	;DoCGI_Action_1	... do stuff00052 19A6 	;	GOTO	http_recv_CGI00053 19A6 	;00054 19A6 	;00055 19A6 	;==============================================================================================00056 19A6 	; Revision History00057 19A6 	;00058 19A6 	; 1.0     5/10/2009	Added UsesHashEGIs.00059 19A6 	; 1.0b1   11/30/2003	Added UseUCEGIs, support for upper case EGIs.00060 19A6 	; 1.0a2     8/27/03	Fixed DoCGI_a calculations00061 19A6 	; 1.0a1     6/25/03	Copied http_recv from Ether.asm.00062 19A6 	;00063 19A6 	;==============================================================================================00064 19A6 	; Conditionals00065 19A6 		ifndef usesPutNicVolts00067 19A6 		endif00068 19A6 		ifndef UseUCEGIs00070 19A6 		endif00071 19A6 	;00072 19A6 	;==============================================================================================00073 19A6 	;==============================================================================================00074 19A6 	;segment 3 routines00075 19A6 	; Name	(additional stack words required) Description00076 19A6 	;==============================================================================================00077 19A6 	;http_recv	Handle incoming HTTP request.00078 19A6 	;http_recv_CGI	We found a ? after the file name, so parse the rest of the request.00079 19A6 	;http_recv_1	The CGI's if any have been completed, continue with the filename part of the GET00080 19A6 	;tx_file_byte	Transmit a byte from the current i2c file to the NIC00081 19A6 	;DoCGI_a	() CGI 'a=' action number00082 19A6 	;GetCGIInt16	(1+2) Get an Int16 from the NIC's buffer and put it in Param77:Param7600083 19A6 	;EGIADC0Volts00084 19A6 	;EGIADC1Volts00085 19A6 	;putnic_volts	Send the voltage string for the given ADC to the NIC00086 19A6 	;00087 19A6 	;==============================================================================================Highland Greeley PIC.asm   "HTTPServer.asm"                              Page: 209500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:HTTPServer.asm00088 19A6 	;==============================================================================================00089 19A6 	; Handle incoming HTTP request.00090 19A6 	;00091 19A6 	; "GET /index.html " or "GET /index.html?"00092 19A6 	; The current rev as of 10/22/02 ignores anything after the "?" a future00093 19A6 	; rev should have a parser to handle CGI type data from a POST type <form>00094 19A6 	; (i.e. "GET /page.html?a=6&b=2")00095 19A6 	; 00096 19A6 	;00097 19A6 	http_recv	mBank000097 19A6 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000097 19A7 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100098 19A8 01CB 		CLRF	tpxdlen+1	; tpxdlen = 0; Check for 'GET' 00099 19A9 01CA 		CLRF	tpxdlen00100 19AA 	; if (match_byte('G') && match_byte('E') && match_byte('T')) 00101 19AA 3047 		MOVLW	'G'	;match_byte('G')00102 19AB 2084 		CALL	match_byteW_D1800103 19AC 1C78 		BTFSS	Param78,000104 19AD 0008 		RETURN00105 19AE 	;00106 19AE 3045 		MOVLW	'E'	;match_byte('E')00107 19AF 2084 		CALL	match_byteW_D1800108 19B0 1C78 		BTFSS	Param78,000109 19B1 0008 		RETURN00110 19B2 	;00111 19B2 3054 		MOVLW	'T'	;match_byte('T')00112 19B3 2084 		CALL	match_byteW_D1800113 19B4 1C78 		BTFSS	Param78,000114 19B5 0008 		RETURN00115 19B6 	;00116 19B6 3020 		MOVLW	' '	; match_byte(' '); 00117 19B7 2084 		CALL	match_byteW_D1800118 19B8 	;00119 19B8 302F 		MOVLW	'/'	; match_byte('/'); Start of filename00120 19B9 2084 		CALL	match_byteW_D1800121 19BA 	;00122 19BA 2006 		CALL	ZeroFName_D18	;zero filename00123 19BB 	;00124 19BB 	; for (i=0; i<ROM_FNAMELEN && get_byte(c) && c>' ' && c!='?'; i++) 00125 19BB 01F9 		CLRF	Param79	;i=0;00126 19BC 2089 	http_recv_L2	CALL	getch_net_D1800127 19BD 18A6 		BTFSC	atend00128 19BE 29F0 		GOTO	http_recv_1	;atend00129 19BF 	; Name terminated by space or '?' 00130 19BF 3021 		MOVLW	'!'	;"!" aka " "+1 or 0x2100131 19C0 0278 		SUBWF	Param78,W	;Char-'!' should not barrow00132 19C1 1C03 		BTFSS	STATUS,C00133 19C2 29F0 		GOTO	http_recv_1	;<=' '00134 19C3 303F 		MOVLW	'?'	;Next char = '?'00135 19C4 0278 		SUBWF	Param78,W00136 19C5 1903 		BTFSC	STATUS,Z00137 19C6 29D9 		GOTO	http_recv_CGI	; yes, there should be arguments next00138 19C7 	; romdir.f.name[i] = c; 00139 19C7 3017 		MOVLW	low romdir.f.name00140 19C8 0779 		ADDWF	Param79,W	;i00141 19C9 0084 		MOVWF	FSR00142 19CA 1783 		BSF	STATUS,IRP00143 19CB 0878 		MOVF	Param78,W00144 19CC 0080 		MOVWF	INDF	;(romdir.f.name+Param79)00145 19CD 0AF9 		INCF	Param79,F00146 19CE 300C 		MOVLW	ROM_FNAMELEN	;Have we read ROM_FNAMELEN chars?00147 19CF 0279 		SUBWF	Param79,W00148 19D0 1D03 		BTFSS	STATUS,Z00149 19D1 29BC 		GOTO	http_recv_L2	; not yet00150 19D2 	;00151 19D2 	;Test the ROM_FNAMELEN+1 char for '?' (CGI w/ max len file name)00152 19D2 2089 		CALL	getch_net_D1800153 19D3 18A6 		BTFSC	atend00154 19D4 29F0 		GOTO	http_recv_1	;atend00155 19D5 303F 		MOVLW	'?'	;Next char = '?'00156 19D6 0278 		SUBWF	Param78,W00157 19D7 1D03 		BTFSS	STATUS,Z00158 19D8 29F0 		GOTO	http_recv_1	; No00159 19D9 	;00160 19D9 	;00161 19D9 	;==================================================================================00162 19D9 	;00163 19D9 	; We found a ? after the file name, so parse the rest of the request.00164 19D9 	; The format should be "a=20&B=0"00165 19D9 	; Only single characters a..z are valid00166 19D9 	; Values are 16 bit unsigned (0..65535) or00167 19D9 	; text "text chars" is sent as '&c=text+chars&d='00168 19D9 	; As each param is pulled from the NICs buffer get the data and00169 19D9 	;  process it one piece at a time.00170 19D9 	;00171 19D9 2089 	http_recv_CGI	CALL	getch_net_D1800172 19DA 18A6 		BTFSC	atend00173 19DB 29F0 		GOTO	http_recv_100174 19DC 	;00175 19DC 3061 		MOVLW	'a'00176 19DD 0278 		SUBWF	Param78,W	;Char-'a'00177 19DE 1C03 		BTFSS	STATUS,C	;skip if Char>='a'00178 19DF 29F0 		GOTO	http_recv_1	; chr<'a', cancel CGI00179 19E0 3064 		MOVLW	LastCGI+1	;Last CGI +100180 19E1 0278 		SUBWF	Param78,W	;Char-('z'+1)00181 19E2 1803 		BTFSC	STATUS,C	;skip if Char<('z'+1)00182 19E3 29F0 		GOTO	http_recv_1	; chr>'z', cancel CGI00183 19E4 	;	00184 19E4 	; We have a char (a..LastCGI)00185 19E4 0878 		MOVF	Param78,WHighland Greeley PIC.asm   "HTTPServer.asm"                              Page: 210500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:HTTPServer.asm00186 19E5 00FC 		MOVWF	Param7C	;Save char for later00187 19E6 	;00188 19E6 	; The next char must be '=' or we skip CGIs and just work with the GET up to the '?'00189 19E6 	;00190 19E6 2089 		CALL	getch_net_D1800191 19E7 18A6 		BTFSC	atend00192 19E8 29F0 		GOTO	http_recv_1	;atend, cancel CGI00193 19E9 303D 		MOVLW	'='	;Char = '='?00194 19EA 0278 		SUBWF	Param78,W00195 19EB 1D03 		BTFSS	STATUS,Z00196 19EC 29F0 		GOTO	http_recv_1	; no, Invalid format cancel CGI00197 19ED 	;00198 19ED 3061 		MOVLW	'a'00199 19EE 027C 		SUBWF	Param7C,W	;CGI # 0=a, 1=b, etc.00200 19EF 2850 		GOTO	CGIDispatch00201 19F0 	;00202 19F0 	;===================================================================================================00203 19F0 	; The CGI's if any have been completed, continue with the filename part of the GET00204 19F0 	;00205 19F0 	; if find_file(romdir.f.name)00206 19F0 200F 	http_recv_1	CALL	find_file_D1800207 19F1 1878 		BTFSC	Param78,000208 19F2 29F6 		GOTO	http_recv_300209 19F3 	; 00210 19F3 	; else File not found, get index.htm 00211 19F3 1703 	http_recv_2	BSF	STATUS,RP1	;bank200212 19F4 0197 		CLRF	romdir.f.name	; romdir.f.name[0] = 0; 00213 19F5 200F 		CALL	find_file_D18	;get index.htm00214 19F6 	;00215 19F6 01CD 	http_recv_3	CLRF	checklo	;checkhi = checklo = 0; 00216 19F7 01CC 		CLRF	checkhi00217 19F8 1126 		BCF	checkflag	; checkflag = 0; 00218 19F9 	;00219 19F9 3028 		MOVLW	IPHDR_LEN+TCPHDR_LEN	; txin = IPHDR_LEN + TCPHDR_LEN;00220 19FA 00D4 		MOVWF	txin00221 19FB 	; setnic_addr((TXSTART*256)+sizeof(ETHERHEADER)+IPHDR_LEN+TCPHDR_LEN); 00222 19FB 3040 		MOVLW	TXSTART00223 19FC 00FB 		MOVWF	Param7B00224 19FD 3036 		MOVLW	ETHERHEADER_LEN+IPHDR_LEN+TCPHDR_LEN00225 19FE 00FA 		MOVWF	Param7A00226 19FF 208E 		CALL	setnic_addr_D1800227 1A00 	; if (!fileidx) No files at all in ROM - disaster! 00228 1A00 08F2 		MOVF	Param72,F	;fileidx00229 1A01 1903 		BTFSC	STATUS,Z00230 1A02 2A0B 		GOTO	http_recv_Err	;Z=1 File not found00231 1A03 				;File found OK00232 1A03 2015 		CALL	open_file_D18	; open_file() Start i2c transfer00233 1A04 	;00234 1A04 	; while (tx_file_byte()) Copy bytes from ROM to NIC 00235 1A04 	;00236 1A04 221B 	http_recv_L4	CALL	tx_file_byte	;5 (1+1+1+2)00237 1A05 		mBank200237 1A05 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000237 1A06 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100238 1A07 1F96 		BTFSS	End_Of_File00239 1A08 2A04 		GOTO	http_recv_L400240 1A09 201B 		CALL	close_file_D18	; close_file();00241 1A0A 2A10 		GOTO	http_recv_400242 1A0B 	;00243 1A0B 3015 	http_recv_Err	MOVLW	Str_HTTP_FAILPtr	;"HTTP/ 200 OK\r\n\r\nNo Web pages!\r\n"00244 1A0C 		mCall3To1	PutString00244 1A0C 120A      M		BCF	PCLATH,4		BCF	PCLATH,400244 1A0D 2504      M		CALL	PutString		CALL	Destination00244 1A0E 158A      M		BSF	PCLATH,3		BSF	PCLATH,300244 1A0F 160A      M		BSF	PCLATH,4		BSF	PCLATH,400245 1A10 	;00246 1A10 3011 	http_recv_4	MOVLW	TFIN+TACK	; tflags = TFIN+TACK;00247 1A11 00E7 		MOVWF	tflags00248 1A12 084C 		MOVF	checkhi,W	; d_checkhi = checkhi;Save checksum 00249 1A13 00CE 		MOVWF	d_checkhi00250 1A14 084D 		MOVF	checklo,W	; d_checklo = checklo; 00251 1A15 00CF 		MOVWF	d_checklo00252 1A16 		mCall3To1	tcp_xmit00252 1A16 120A      M		BCF	PCLATH,4		BCF	PCLATH,400252 1A17 264D      M		CALL	tcp_xmit		CALL	Destination00252 1A18 158A      M		BSF	PCLATH,3		BSF	PCLATH,300252 1A19 160A      M		BSF	PCLATH,4		BSF	PCLATH,400253 1A1A 0008 		RETURN00254 1A1B 	;  00255 1A1B 	;===================================================================================00256 1A1B 	; Transmit a byte from the current i2c file to the NIC 00257 1A1B 	; ** Return Param78:0=0 when complete file is sent else Param78:0=100258 1A1B 	; ** If file has EGI flag set, perform run-time variable substitution00259 1A1B 	;00260 1A1B 	; RAM used: Param77:0 Param78,Param7900261 1A1B 	; Calls:(1+) i2c_read1_D1800262 1A1B 	;00263 1A1B 	; Check if any bytes left to send 00264 1A1B 2237 	tx_file_byte	CALL	tfb_ReadNextB00265 1A1C 1B96 		BTFSC	End_Of_File	;we're done with this file?00266 1A1D 0008 		RETURN		;yes00267 1A1E 	; Get next byte from ROM 00268 1A1E 1C16 		BTFSS	EGI_ATVARS_bit	; This file uses EGI_ATVARS00269 1A1F 2A35 		GOTO	tfb_NoAtEGIs	; No00270 1A20 3040 		MOVLW	'@'00271 1A21 0278 		SUBWF	Param78,W00272 1A22 1D03 		BTFSS	STATUS,Z	; This char is "@"00273 1A23 2A35 		GOTO	tfb_NoAtEGIs	;no00274 1A24 	; If '@' and EGI var substitution.. 00275 1A24 	; ..get 2nd byte Highland Greeley PIC.asm   "HTTPServer.asm"                              Page: 211500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:HTTPServer.asm00276 1A24 2237 		CALL	tfb_ReadNextB	;Param78 = i2c_read(1);00277 1A25 1B96 		BTFSC	End_Of_File	;we're done with this file?00278 1A26 0008 		RETURN		;yes;00279 1A27 	;00280 1A27 	;todo! if fileidx=nn then do filenn EGIs else CommonEGIs00281 1A27 	;  this may become necessary later.00282 1A27 	;00283 1A27 	;bank 2 was selected by tfb_ReadNextB00284 1A27 		mBank000284 1A27 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000284 1A28 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100285 1A29 	;00286 1A29 		if UseUCEGIs00298 1A29 		endif00299 1A29 	; EGI's @a..@LastEGI00300 1A29 	;00301 1A29 3068 		MOVLW	LastEGI+100302 1A2A 0278 		SUBWF	Param78,W	;W=EGI-(LastEGI+1)00303 1A2B 		SKPB		;EGI>LastEGI?00303 1A2B 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00304 1A2C 2A31 		GOTO	UnknownEGI	; Yes00305 1A2D 3061 		MOVLW	'a'	;first EGI00306 1A2E 0278 		SUBWF	Param78,W	;W=EGI-'a'00307 1A2F 		SKPB		;EGI>='a'?00307 1A2F 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00308 1A30 2845 		GOTO	EGIDispatch	; Yes00309 1A31 	; else Unknown variable 00310 1A31 	; putnic_checkbyte, "??" 00311 1A31 303F 	UnknownEGI	MOVLW	'?'00312 1A32 00F8 		MOVWF	Param7800313 1A33 2093 		CALL	putnic_checkbyte_D1800314 1A34 2A35 		GOTO	tx_file_byte_Send	; fall through for the second "?"00315 1A35 	;00316 1A35 	;00317 1A35 		if UsesHashEGIs00413 1A35 		else00414 1A35 	tfb_NoAtEGIs00415 1A35 		endif00416 1A35 	;00417 1A35 	; else Non-EGI byte; send out unmodified 00418 1A35 0878 	tx_file_byte_Send	MOVF	Param78,W00419 1A36 2893 		GOTO	putnic_checkbyte_D1800420 1A37 	;00421 1A37 	;=======================================00422 1A37 	; CAUTION  Returns with Bank 2 selected00423 1A37 	;00424 1A37 	tfb_ReadNextB	mCall3To0	i2c_read1	;next file byte >> Param7800424 1A37 118A      M		BCF	PCLATH,3		BCF	PCLATH,300424 1A38 120A      M		BCF	PCLATH,4		BCF	PCLATH,400424 1A39 2521      M		CALL	i2c_read1		CALL	Destination00424 1A3A 158A      M		BSF	PCLATH,3		BSF	PCLATH,300424 1A3B 160A      M		BSF	PCLATH,4		BSF	PCLATH,400425 1A3C 1703 		BSF	STATUS,RP1	; Bank 200426 1A3D 0810 		MOVF	romdir.f.len,W00427 1A3E 0411 		IORWF	romdir.f.len+1,W00428 1A3F 1D03 		BTFSS	STATUS,Z00429 1A40 2A43 		GOTO	tfb_ReadNextB_100430 1A41 1796 		BSF	End_Of_File	;read past end return 000431 1A42 0008 		RETURN00432 1A43 0810 	tfb_ReadNextB_1	MOVF	romdir.f.len,W	; romdir.f.len--; Decrement length00433 1A44 1903 		BTFSC	STATUS,Z00434 1A45 0391 		DECF	romdir.f.len+1,F00435 1A46 0390 		DECF	romdir.f.len,F00436 1A47 0008 		RETURN00437 1A48 	;00438 1A48 	;00439 1A48 	;==============================================================================================00440 1A48 	; CGI 'a=' action number00441 1A48 	; Convert text to an Int16 at Param77:Param7600442 1A48 	;00443 1A48 2255 	DoCGI_a	CALL	GetCGIInt1600444 1A49 	;00445 1A49 	; Now do something based on the value in Param76.00446 1A49 	;00447 1A49 		TSTF	Param7700447 1A49 08F7      M		MOVF	Param77,F		MOVF	src,F00448 1A4A 		SKPZ00448 1A4A 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00449 1A4B 29D9 		GOTO	http_recv_CGI	;>255 not valid00450 1A4C 		TSTF	Param7600450 1A4C 08F6      M		MOVF	Param76,F		MOVF	src,F00451 1A4D 		SKPNZ00451 1A4D 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00452 1A4E 29D9 		GOTO	http_recv_CGI	;0x00 not valid00453 1A4F 3008 		MOVLW	LastCGI_Action+100454 1A50 0276 		SUBWF	Param76,W	;W=CGIValue-(LastCGI_Action+1)00455 1A51 		SKPB		;skip if action#<(LastCGI_Action+1)00455 1A51 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00456 1A52 29D9 		GOTO	http_recv_CGI00457 1A53 	;00458 1A53 0376 		DECF	Param76,W	;0..N00459 1A54 285D 		GOTO	CGI_ActionDispatch00460 1A55 	;00461 1A55 	;00462 1A55 	;=========================================================================================00463 1A55 	; Get an Int16 from the NIC's buffer and put it in Param77:Param7600464 1A55 	; Exits when EOD or chr & or ' ' or <'0' or >'9'00465 1A55 	;00466 1A55 	; Entry: next char in NIC buffer is first char of data00467 1A55 	; Exit: Int16 in Param77:Param76Highland Greeley PIC.asm   "HTTPServer.asm"                              Page: 212500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:HTTPServer.asm00468 1A55 	;       atend=1 or the next char is the name of the next CGI00469 1A55 	; RAM Used:Param73, Param74, Param75, Param76, Param77, Param7800470 1A55 	; Calls: (1+2) getch_net_D1800471 1A55 	;00472 1A55 	; get first data char00473 1A55 01F6 	GetCGIInt16	CLRF	Param7600474 1A56 01F7 		CLRF	Param7700475 1A57 2089 	GetCGIInt16_L1	CALL	getch_net_D1800476 1A58 18A6 		BTFSC	atend00477 1A59 0008 		RETURN		;atend, we're done with this number00478 1A5A 	;00479 1A5A 3026 		MOVLW	'&'	;Char = '&'?00480 1A5B 0278 		SUBWF	Param78,W00481 1A5C 		SKPNZ00481 1A5C 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00482 1A5D 0008 		RETURN00483 1A5E 	;00484 1A5E 3020 		MOVLW	' '	;Char = ' '?00485 1A5F 0278 		SUBWF	Param78,W00486 1A60 		SKPNZ00486 1A60 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00487 1A61 0008 		RETURN00488 1A62 	;00489 1A62 3030 		MOVLW	'0'00490 1A63 0278 		SUBWF	Param78,W	;Char-'0'00491 1A64 		SKPNB		;skip if Char>='0'00491 1A64 1C03      M		BTFSS	STATUS,C		BTFSS	STATUS,C00492 1A65 0008 		RETURN		; chr<'0', cancel CGI00493 1A66 303A 		MOVLW	0x3A	;'9'+100494 1A67 0278 		SUBWF	Param78,W	;Char-('9'+1)00495 1A68 		SKPB		;skip if Char<('9'+1)00495 1A68 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00496 1A69 0008 		RETURN		; chr>'9', cancel CGI00497 1A6A 	; valid char 0..900498 1A6A 	; val = (val * 10) + (char - '0'); 00499 1A6A 3009 		MOVLW	0x09	;add 9 times + the original00500 1A6B 00F3 		MOVWF	Param73	; i:=900501 1A6C 0876 		MOVF	Param76,W	;temp:=val00502 1A6D 00F4 		MOVWF	Param7400503 1A6E 0877 		MOVF	Param77,W00504 1A6F 00F5 		MOVWF	Param7500505 1A70 0874 	GetCGIInt16_L2	MOVF	Param74,W	;val:=val+temp00506 1A71 07F6 		ADDWF	Param76,F00507 1A72 		ADDCF	Param77,F00507 1A72 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00507 1A73 0AF7      M		INCF	Param77,F		INCF	dest,W_or_F00508 1A74 0875 		MOVF	Param75,W00509 1A75 07F7 		ADDWF	Param77,F00510 1A76 0BF3 		DECFSZ	Param73,F00511 1A77 2A70 		GOTO	GetCGIInt16_L200512 1A78 	;00513 1A78 3030 		MOVLW	'0'00514 1A79 0278 		SUBWF	Param78,W	;Char-'0'00515 1A7A 07F6 		ADDWF	Param76,F00516 1A7B 		ADDCF	Param77,F00516 1A7B 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00516 1A7C 0AF7      M		INCF	Param77,F		INCF	dest,W_or_F00517 1A7D 	;00518 1A7D 2A57 		GOTO	GetCGIInt16_L100519 1A7E 	;00520 1A7E 	;==============================================================================================00521 1A7E 		if usesPutNicVolts00574 1A7E 		endif00575 1A7E 	;00576 1A7E 	;00577 1A7E 	;00578 1A7E 	;00579 1A7E 	;00580 1A7E 	;00581 1A7E 	;00582 1A7E 	;00583 1A7E 	;00584 1A7E 	;00585 1A7E 	;00586 1A7E 	;00587 1A7E 	;00588 1A7E 	;00589 1A7E 	;01021 1A7E 		include	UDP_DataInOut.asm00001 1A7E 		subtitle	"UDP_DataInOut.asm"00002 1A7E 		page00003 1A7E 	;===========================================================================================00004 1A7E 	;00005 1A7E 	;  FileName: UDP_DataInOut.asm00006 1A7E 	;  Date: 6/28/0500007 1A7E 	;  File Version: 1.0.100008 1A7E 	;  00009 1A7E 	;  Author: David M. Flynn00010 1A7E 	;  Company: Oxford V.U.E., Inc.00011 1A7E 	;00012 1A7E 	;============================================================================================00013 1A7E 	; Notes:00014 1A7E 	;00015 1A7E 	;  This file is standard handler routines for UDP.00016 1A7E 	;  These routines are the building blocks for UDP data handling.00017 1A7E 	;  Used to send and modify data in one page (64KB) of SRAM.00018 1A7E 	;00019 1A7E 	;  Put in segment 3 after Ether.asm00020 1A7E 	;Highland Greeley PIC.asm   "UDP_DataInOut.asm"                           Page: 213500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:UDP_DataInOut.asm00021 1A7E 	;  Data Format:  (data is big endien)00022 1A7E 	;   DataType	byte00023 1A7E 	;   Length	word (1..1024, 0x0001..0x0400)00024 1A7E 	;   Dest Addr	word00025 1A7E 	;   Data Bytes	Length00026 1A7E 	;00027 1A7E 	;  Constants:00028 1A7E 	;   kUDP_SRAM_Page	EQU	0x02	;SRAM_Addr2 value for receiving00029 1A7E 	;			  Always send from page SRAM_DestAddr200030 1A7E 	;00031 1A7E 	;  Ram Locations:00032 1A7E 	;   Bank3:00033 1A7E 	;SRAM_UDP_Tx_DT	RES	1	;Transmited data type00034 1A7E 	;SRAM_Len	RES	1	; 2 bytes Bigendian00035 1A7E 	;SRAM_Len_Lo	RES	100036 1A7E 	;SRAM_DestAddr2	RES	1	; 3 bytes Bigendian00037 1A7E 	;SRAM_DestAddr1	RES	100038 1A7E 	;SRAM_DestAddr0	RES	100039 1A7E 	;SRAM_UDP_Rx_IP	RES	1	;Low byte of IP address00040 1A7E 	;SRAM_UDP_Rx_DT	RES	1	;Received data type00041 1A7E 	;SRAM_Len_Rx	RES	1	; 2 bytes Bigendian00042 1A7E 	;SRAM_Len_Lo_Rx	RES	100043 1A7E 	;SRAM_DestAddr1_Rx	RES	1	; 2 bytes Bigendian00044 1A7E 	;SRAM_DestAddr0_Rx	RES	100045 1A7E 	;TTFTP_Flags	RES	100046 1A7E 	;#Define	UDP_DataReceived	TTFTP_Flags,000047 1A7E 	;#Define	UDP_DataSent	TTFTP_Flags,100048 1A7E 	;00049 1A7E 	;00050 1A7E 	;============================================================================================00051 1A7E 	; Revision History00052 1A7E 	;00053 1A7E 	; 1.0.1    6/28/05	Added SRAM_UDP_Rx_IP.00054 1A7E 	; 1.0      4/24/05	Defaulted UDP_DataReceived to false in UDP_Data_Handler00055 1A7E 	; 1.0a5    3/15/05	Changed DataType to 1 byte and made it and IP variables.00056 1A7E 	; 1.0a4    3/13/05	Removed kUDP_SRAM_SrcPage, optimized code.00057 1A7E 	; 1.0a3    3/9/05	Added kUDP_SRAM_SrcPage00058 1A7E 	; 1.0a2    2/27/05	Fixed long call error.00059 1A7E 	; 1.0a1    2/8/05	Fisrt code, copied routines from UDP_TermInOut.asm00060 1A7E 	;00061 1A7E 	;============================================================================================00062 1A7E 	; Conditionals00063 1A7E 	;00064 1A7E 		ifndef kUDP_SRAM_Page00066 1A7E 		endif00067 1A7E 	;00068 1A7E 	;============================================================================================00069 1A7E 	;00070 1A7E 	; Name	(additional stack words required) Description00071 1A7E 	;================================================================================================00072 1A7E 	; UDP_DataSender	Send SRAM_Len bytes at kUDP_SRAM_Page,SRAM_DestAddr1,SRAM_DestAddr000073 1A7E 	;	 to W:IPDATAPORT00074 1A7E 	; UDP_Data_Handler	Handler for incoming UDP data port 87 (IPDATAPORT) data00075 1A7E 	;00076 1A7E 	;00077 1A7E 	;calls outside this file00078 1A7E 	;00079 1A7E 	;	mCall3To1	Locate_ARP00080 1A7E 	;	CALL	putnic_checkbyte_D1800081 1A7E 	;	mCall3To1	UDP_Send00082 1A7E 	;	CALL	getch_net_D1800083 1A7E 	;	CALL	match_word_D1800084 1A7E 	;	CALL	SRAM_ReadPI_D1800085 1A7E 	;	CALL	SRAM_WritePI_D1800086 1A7E 	;00087 1A7E 	;==============================================================================00088 1A7E 	; Setup UDP to send one page (256 bytes) from SRAM00089 1A7E 	; Only use in segment 300090 1A7E 	;00091 1A7E 	; Entry: W=IPAddress, Bank300092 1A7E 	; Exit: none, goto UDP_DataSender_RTN00093 1A7E 	; RAM used:Param70, Param71, Param78, Param79, Param7A, Param7B, Param7C, FSR00094 1A7E 	; Calls: (1+4) Locate_ARP, UDP_Send00095 1A7E 	;00096 1A7E      	mSendSRAM_UDPData	macro	DestPage,TheDataType00097 1A7E      		BSF	STATUS,RP000098 1A7E      		BSF	STATUS,RP1	;Bank300099 1A7E      		MOVWF	Param7800100 1A7E      		MOVLW	high DestPage00101 1A7E      		MOVWF	SRAM_DestAddr200102 1A7E      		MOVLW	low DestPage00103 1A7E      		MOVWF	SRAM_DestAddr100104 1A7E      	;00105 1A7E      		MOVLW	TheDataType00106 1A7E      		MOVWF	SRAM_UDP_Tx_DT00107 1A7E      		MOVLW	0x01	;256 bytes00108 1A7E      		MOVWF	SRAM_Len00109 1A7E      		CLRF	SRAM_Len_Lo00110 1A7E      		CLRF	SRAM_DestAddr000111 1A7E      		MOVF	Param78,W00112 1A7E      		GOTO	UDP_DataSender00096 1A7E 		endm00114 1A7E 	;00115 1A7E 	;===========================================================================================00116 1A7E 	;===========================================================================================00117 1A7E 	; UDP data sender00118 1A7E 	;00119 1A7E 	; Usually called by OnTheHalfSecond, and by some routines wanting a faster responce.00120 1A7E 	; Send SRAM_Len bytes at kUDP_SRAM_Page,SRAM_DestAddr1,SRAM_DestAddr0.00121 1A7E 	; Highland Greeley PIC.asm   "UDP_DataInOut.asm"                           Page: 214500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:UDP_DataInOut.asm00122 1A7E 	; Bytes sent:00123 1A7E 	;  SRAM_UDP_Tx_DT00124 1A7E 	;  SRAM_Len	high byte00125 1A7E 	;  SRAM_Len_Lo00126 1A7E 	;  SRAM_DestAddr100127 1A7E 	;  SRAM_DestAddr000128 1A7E 	;  data00129 1A7E 	;00130 1A7E 	; Entry: W=IP address, SRAM_Len, SRAM_Len_Lo, SRAM_DestAddr2, SRAM_DestAddr1, SRAM_DestAddr000131 1A7E 	; Exit: none, goto UDP_DataSender_RTN00132 1A7E 	; RAM used:Param70, Param71, Param78, Param79, Param7A, Param7B, Param7C, FSR00133 1A7E 	; Calls: (1+5) Locate_ARP(1+4), UDP_Send00134 1A7E 	;00135 1A7E 	UDP_DataSender	mBank300135 1A7E 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000135 1A7F 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100136 1A80 109E 		BCF	UDP_DataSent00137 1A81 		mBank000137 1A81 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000137 1A82 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100138 1A83 00D9 		MOVWF	remip_b000139 1A84 	;00140 1A84 		mCall3To1	Locate_ARP	;1+1+400140 1A84 120A      M		BCF	PCLATH,4		BCF	PCLATH,400140 1A85 21E4      M		CALL	Locate_ARP		CALL	Destination00140 1A86 158A      M		BSF	PCLATH,3		BSF	PCLATH,300140 1A87 160A      M		BSF	PCLATH,4		BSF	PCLATH,400141 1A88 	;00142 1A88 1683 		BSF	_RP0	;bank 100143 1A89 3002 		MOVLW	AS_RESOLVED00144 1A8A 0250 		SUBWF	ae_state,W00145 1A8B 1283 		BCF	_RP0	;bank 000146 1A8C 		SKPZ		;skip if resolved00146 1A8C 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00147 1A8D 2C31 		GOTO	UDP_DataSender_RTN	;still pending try again later00148 1A8E 	;00149 1A8E 		mBank300149 1A8E 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000149 1A8F 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100150 1A90 149E 		BSF	UDP_DataSent00151 1A91 22C9 		CALL	Std_UDP_Setup	;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<00152 1A92 01D4 		CLRF	txin00153 1A93 	;00154 1A93 	;Move kUDP_DataType, length and address (6 bytes) to NIC buffer00155 1A93 	;00156 1A93 3092 		MOVLW	low SRAM_UDP_Tx_DT00157 1A94 0084 		MOVWF	FSR00158 1A95 1783 		BSF	_IRP00159 1A96 0800 		MOVF	INDF,W00160 1A97 2093 		CALL	putnic_checkbyte_D18	;SRAM_UDP_Tx_DT00161 1A98 0A84 		INCF	FSR,F00162 1A99 0800 		MOVF	INDF,W00163 1A9A 2093 		CALL	putnic_checkbyte_D18	;SRAM_Len00164 1A9B 0A84 		INCF	FSR,F00165 1A9C 0800 		MOVF	INDF,W00166 1A9D 2093 		CALL	putnic_checkbyte_D18	;SRAM_Len_Lo00167 1A9E 	;00168 1A9E 0A84 		INCF	FSR,F	;skip SRAM_DestAddr200169 1A9F 0A84 		INCF	FSR,F00170 1AA0 0800 		MOVF	INDF,W	;SRAM_DestAddr100171 1AA1 2093 		CALL	putnic_checkbyte_D1800172 1AA2 0A84 		INCF	FSR,F00173 1AA3 0800 		MOVF	INDF,W	;SRAM_DestAddr000174 1AA4 2093 		CALL	putnic_checkbyte_D1800175 1AA5 	;00176 1AA5 	;Move Data from SRAM to NIC Buffer00177 1AA5 	;00178 1AA5 		mBank300178 1AA5 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000178 1AA6 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100179 1AA7 0813 		MOVF	SRAM_Len,W00180 1AA8 00FA 		MOVWF	Param7A00181 1AA9 0814 		MOVF	SRAM_Len_Lo,W00182 1AAA 00F9 		MOVWF	Param7900183 1AAB 0815 		MOVF	SRAM_DestAddr2,W00184 1AAC 00A1 		MOVWF	SRAM_Addr200185 1AAD 0816 		MOVF	SRAM_DestAddr1,W00186 1AAE 00A0 		MOVWF	SRAM_Addr100187 1AAF 0817 		MOVF	SRAM_DestAddr0,W00188 1AB0 009F 		MOVWF	SRAM_Addr000189 1AB1 	;	00190 1AB1 210D 	UDP_DataSender_L3	CALL	SRAM_ReadPI_D1800191 1AB2 2093 		CALL	putnic_checkbyte_D1800192 1AB3 	;00193 1AB3 0BF9 		DECFSZ	Param79,F00194 1AB4 2AB1 		GOTO	UDP_DataSender_L300195 1AB5 	;00196 1AB5 08FA 		MOVF	Param7A,F00197 1AB6 		SKPNZ00197 1AB6 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00198 1AB7 2ABA 		GOTO	UDP_DataSender_100199 1AB8 0BFA 		DECFSZ	Param7A,F00200 1AB9 2AB1 		GOTO	UDP_DataSender_L300201 1ABA 	;00202 1ABA 	UDP_DataSender_100203 1ABA 	;end of data check		00204 1ABA 		mBank300204 1ABA 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000204 1ABB 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100205 1ABC 0812 		MOVF	SRAM_UDP_Tx_DT,WHighland Greeley PIC.asm   "UDP_DataInOut.asm"                           Page: 215500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:UDP_DataInOut.asm00206 1ABD 2093 		CALL	putnic_checkbyte_D18	;SRAM_UDP_DataType00207 1ABE 	;00208 1ABE 	; local and remote port numbers00209 1ABE 3000 		MOVLW	high IPDATAPORT00210 1ABF 00DB 		MOVWF	locport_b100211 1AC0 00DD 		MOVWF	remport_b100212 1AC1 3057 		MOVLW	low IPDATAPORT00213 1AC2 00DA 		MOVWF	locport_b000214 1AC3 00DC 		MOVWF	remport_b000215 1AC4 	;00216 1AC4 		mCall3To1	UDP_Send_E200216 1AC4 120A      M		BCF	PCLATH,4		BCF	PCLATH,400216 1AC5 2326      M		CALL	UDP_Send_E2		CALL	Destination00216 1AC6 158A      M		BSF	PCLATH,3		BSF	PCLATH,300216 1AC7 160A      M		BSF	PCLATH,4		BSF	PCLATH,400217 1AC8 2C31 		GOTO	UDP_DataSender_RTN00218 1AC9 	;00219 1AC9 	;=====================================================================================================00220 1AC9 	;00221 1AC9 	Std_UDP_Setup	mBank000221 1AC9 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000221 1ACA 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100222 1ACB 01CD 		CLRF	checklo	;checkhi = checklo = 0; 00223 1ACC 01CC 		CLRF	checkhi00224 1ACD 1126 		BCF	checkflag	; checkflag = 0; 00225 1ACE 01CA 		CLRF	tpxdlen00226 1ACF 01CB 		CLRF	tpxdlen+100227 1AD0 	;hardware protocol00228 1AD0 3008 		MOVLW	high PCOL_IP	;0x080000229 1AD1 00C8 		MOVWF	nicin.eth.pcol00230 1AD2 3000 		MOVLW	low PCOL_IP00231 1AD3 00C9 		MOVWF	nicin.eth.pcol+100232 1AD4 	;00233 1AD4 	; setnic_addr((TXSTART*256)+sizeof(ETHERHEADER)+IPHDR_LEN+UDPHDR_LEN)00234 1AD4 3040 		MOVLW	TXSTART00235 1AD5 00FB 		MOVWF	Param7B00236 1AD6 302A 		MOVLW	ETHERHEADER_LEN+IPHDR_LEN+UDPHDR_LEN00237 1AD7 00FA 		MOVWF	Param7A00238 1AD8 288E 		GOTO	setnic_addr_D1800239 1AD9 	;00240 1AD9 	;00241 1AD9 	;========================================================================================00242 1AD9 	; Handler for the incoming data at the UDP data port (IPDATAPORT)00243 1AD9 	;00244 1AD9 	; Port 87 Private data link port.00245 1AD9 	;00246 1AD9 	; Entry:next NIC byte to read is first byte of UDP data field00247 1AD9 	; Exit: UDP_DataReceived is set if valid data is received00248 1AD9 	;	SRAM_UDP_DataType, SRAM_Len, SRAM_DestAddr2, SRAM_DestAddr1, SRAM_DestAddr000249 1AD9 	; RAM used:00250 1AD9 	; Calls:(1+)00251 1AD9 	;00252 1AD9 0859 	UDP_Data_Handler	MOVF	remip_b0,W00253 1ADA 00F8 		MOVWF	Param7800254 1ADB 		mBank300254 1ADB 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000254 1ADC 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100255 1ADD 101E 		BCF	UDP_DataReceived	;Default to no data00256 1ADE 3098 		MOVLW	low SRAM_UDP_Rx_IP00257 1ADF 0084 		MOVWF	FSR00258 1AE0 1783 		BSF	_IRP00259 1AE1 	;00260 1AE1 0878 		MOVF	Param78,W	; get SRAM_UDP_Rx_IP00261 1AE2 0080 		MOVWF	INDF00262 1AE3 0A84 		INCF	FSR,F00263 1AE4 	;00264 1AE4 2089 		CALL	getch_net_D18	; get SRAM_UDP_Rx_DT00265 1AE5 0080 		MOVWF	INDF00266 1AE6 0A84 		INCF	FSR,F00267 1AE7 2089 		CALL	getch_net_D18	; get SRAM_Len_Rx00268 1AE8 0080 		MOVWF	INDF00269 1AE9 0A84 		INCF	FSR,F00270 1AEA 2089 		CALL	getch_net_D18	; get SRAM_Len_Lo_Rx00271 1AEB 0080 		MOVWF	INDF00272 1AEC 0A84 		INCF	FSR,F00273 1AED 	;00274 1AED 2089 		CALL	getch_net_D18	; get SRAM_DestAddr1_Rx00275 1AEE 0080 		MOVWF	INDF00276 1AEF 0A84 		INCF	FSR,F00277 1AF0 2089 		CALL	getch_net_D18	; get SRAM_DestAddr0_Rx00278 1AF1 0080 		MOVWF	INDF00279 1AF2 	;00280 1AF2 18A6 		BTFSC	atend00281 1AF3 0008 		RETURN		; bad data, too short00282 1AF4 	;00283 1AF4 	; if length is 0x0000 or > 0x0400 then exit00284 1AF4 		mBank300284 1AF4 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000284 1AF5 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100285 1AF6 		MOVFW	SRAM_Len_Rx00285 1AF6 081A      M		MOVF	SRAM_Len_Rx,W		MOVF	src,W00286 1AF7 041B 		IORWF	SRAM_Len_Lo_Rx,W00287 1AF8 		SKPNZ		;Length=0x0000?00287 1AF8 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00288 1AF9 2B24 		GOTO	UDP_Bank0_Rtn	; Yes00289 1AFA 	;00290 1AFA 3005 		MOVLW	0x0500291 1AFB 021A 		SUBWF	SRAM_Len_Rx,W00292 1AFC 		SKPB		;Length > 0x04FF?00292 1AFC 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,CHighland Greeley PIC.asm   "UDP_DataInOut.asm"                           Page: 216500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:UDP_DataInOut.asm00293 1AFD 2B24 		GOTO	UDP_Bank0_Rtn	; Yes00294 1AFE 3004 		MOVLW	0x0400295 1AFF 021A 		SUBWF	SRAM_Len_Rx,W00296 1B00 		SKPZ		;Length < 0x0400?00296 1B00 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00297 1B01 2B05 		GOTO	UDP_Data_Handler_1	; Yes00298 1B02 		TSTF	SRAM_Len_Lo_Rx00298 1B02 089B      M		MOVF	SRAM_Len_Lo_Rx,F		MOVF	src,F00299 1B03 		SKPZ		;Length = 0x0400?00299 1B03 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00300 1B04 2B24 		GOTO	UDP_Bank0_Rtn	; No00301 1B05 	;00302 1B05 	; Move SRAM_Len bytes of data into SRAM00303 1B05 	UDP_Data_Handler_1	mBank300303 1B05 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000303 1B06 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100304 1B07 081A 		MOVF	SRAM_Len_Rx,W00305 1B08 00FA 		MOVWF	Param7A00306 1B09 081B 		MOVF	SRAM_Len_Lo_Rx,W00307 1B0A 00F9 		MOVWF	Param7900308 1B0B 3002 		MOVLW	kUDP_SRAM_Page00309 1B0C 00A1 		MOVWF	SRAM_Addr200310 1B0D 081C 		MOVF	SRAM_DestAddr1_Rx,W00311 1B0E 00A0 		MOVWF	SRAM_Addr100312 1B0F 081D 		MOVF	SRAM_DestAddr0_Rx,W00313 1B10 009F 		MOVWF	SRAM_Addr000314 1B11 	;00315 1B11 2089 	UDP_Data_Handler_L3	CALL	getch_net_D18	; get the next data byte00316 1B12 18A6 		BTFSC	atend00317 1B13 0008 		RETURN		; bad data, too short00318 1B14 2113 		CALL	SRAM_WritePI_D1800319 1B15 	;00320 1B15 0BF9 		DECFSZ	Param79,F00321 1B16 2B11 		GOTO	UDP_Data_Handler_L300322 1B17 	;00323 1B17 08FA 		MOVF	Param7A,F00324 1B18 		SKPNZ00324 1B18 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00325 1B19 0008 		RETURN00326 1B1A 0BFA 		DECFSZ	Param7A,F00327 1B1B 2B11 		GOTO	UDP_Data_Handler_L300328 1B1C 	;00329 1B1C 2089 		CALL	getch_net_D1800330 1B1D 18A6 		BTFSC	atend00331 1B1E 0008 		RETURN		; bad data, too short00332 1B1F 		mBank300332 1B1F 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000332 1B20 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100333 1B21 0219 		SUBWF	SRAM_UDP_Rx_DT,W00334 1B22 		SKPNZ00334 1B22 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00335 1B23 141E 		BSF	UDP_DataReceived	;tell the world the data has arrived00336 1B24 	;00337 1B24 	UDP_Bank0_Rtn	mBank000337 1B24 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000337 1B25 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100338 1B26 0008 		RETURN00339 1B27 	;00340 1B27 	;00341 1B27 	;00342 1B27 	;00343 1B27 	;00344 1B27 	;00345 1B27 	;00346 1B27 	;00347 1B27 	;00348 1B27 	;00349 1B27 	;00350 1B27 	;01022 1B27 		include	DMFE_Intf.asm00001 1B27 		subtitle	"DMFE_Intf.asm"00002 1B27 		page00003 1B27 	;*******************************************************************************00004 1B27 	;00005 1B27 	;    Filename: DMFE_Intf.asm00006 1B27 	;    Date:11/5/200500007 1B27 	;    File Revision:1.0.100008 1B27 	;00009 1B27 	;    Author:David M. Flynn00010 1B27 	;    Company:Oxford V.U.E., Inc.00011 1B27 	; 00012 1B27 	;**********************************************************************00013 1B27 	;00014 1B27 	; Notes:00015 1B27 	;  Caution the routines called within this file return Bank3 selected.00016 1B27 	;00017 1B27 	;00018 1B27 	;**********************************************************************00019 1B27 	; Revision History00020 1B27 	;00021 1B27 	; 1.0.1  11/5/2005	Updated some constants00022 1B27 	; 1.0    2/27/2005     Fixed timing and testing, first working version.00023 1B27 	; 1.0b1  2/15/2005	Copied from HPRR Communication.ASM00024 1B27 	;00025 1B27 	;**********************************************************************00026 1B27 	; Routine	Description00027 1B27 	;=======================================================================00028 1B27 	; DMFE_Inft_Init	Initialize00029 1B27 	;Highland Greeley PIC.asm   "DMFE_Intf.asm"                               Page: 217500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:DMFE_Intf.asm00030 1B27 	; OutputC	(CurSM),Y -> OBit, (CurSM),Y+1 -> high nibble=OSlot, low nibble=OBoard (3/3)00031 1B27 	; OutputB	CurBlk -> OBit, CurBlk+1 -> high nibble=OSlot, low nibble=OBoard (3/3)00032 1B27 	; OutputA	(CurBlk),Y -> OBit, (CurBlk),Y+1 -> high nibble=OSlot, low nibble=OBoard (3/3)00033 1B27 	; Output	OBit=0..7F, OBoard=0..7, OSlot=0..2 (3/3)00034 1B27 	;00035 1B27 	; InputC	(CurSM),Y -> IBit, (CurSM),Y+1 -> high nibble=ISlot, low nibble=IBoard (3/3)00036 1B27 	; InputB	CurBlk -> IBit, CurBlk+1 -> high nibble=ISlot, low nibble=IBoard (3/3)00037 1B27 	; InputA	(CurBlk),Y -> IBit, (CurBlk),Y+1 -> high nibble=ISlot, low nibble=IBoard (3/3)00038 1B27 	; Input	IBit=0..7F, IBoard=0..7, ISlot=0..2 (3/3)00039 1B27 	;00040 1B27 	;=======================================================================00041 1B27 	;00042 1B27 	;=================================================================================================00043 1B27 	; Hardware IO routines00044 1B27 	;00045 1B27 	;Old Hardware (6522):00046 1B27 	;  PB0..PB6 = Bit# 0..127 output only00047 1B27 	;  PB7 = Data I/O00048 1B27 	;  PA0..PA2 = Board# 0..7 output only00049 1B27 	;  PA3 = Slot 0 Device select Active low output only00050 1B27 	;  PA4 = Slot 1 Device select Active low output only00051 1B27 	;  PA5 = Slot 2 Device select Active low output only00052 1B27 	;  PA7 = R/W*  output only00053 1B27 	;00054 1B27 	; New Hardware (The Brain PIC16F877)00055 1B27 	;   LDO_8..LDO_14 = Bit# 0..127 output only (J1-25..J1-31)00056 1B27 	;   RA0 = Data I/O (J2-1)00057 1B27 	;   RC0..RC2 = Board# 0..7 output only (J2-17..J2-19)00058 1B27 	;   SEL12 = Slot 0 Device select Active low output only (J1-33)00059 1B27 	;   SEL13 = Slot 1 Device select Active low output only (J1-34)00060 1B27 	;   SEL14 = Slot 2 Device select Active low output only (J1-35)00061 1B27 	;   LDO_15 = R/W* output only (J1-32)00062 1B27 	;00063 1B27 	; DMFE 16 pin connector00064 1B27 	; 1  D0 (J1-25) LDO1-0		16  A0 (J2-17) RC000065 1B27 	; 2  D1 (J1-26) LDO1-1		15  A1 (J2-18) RC100066 1B27 	; 3  D2 (J1-27) LDO1-2		14  A2 (J2-19) RC200067 1B27 	; 4  D3 (J1-28) LDO1-3		13  R/W* (J1-32) LDO1-700068 1B27 	; 5  D4 (J1-29) LDO1-4		12  DEV* SEL12* or SEL13* or SEL14*00069 1B27 	; 6  D5 (J1-30) LDO1-5		11  Ground00070 1B27 	; 7  D6 (J1-31) LDO1-6		10  Ground00071 1B27 	; 8  D7 (J2-1) RA0		9   Ground00072 1B27 	;00073 1B27 0000 	Slot_0_DEV_Sel	EQU	0x0000074 1B27 0001 	Slot_1_DEV_Sel	EQU	0x0100075 1B27 0002 	Slot_2_DEV_Sel	EQU	0x0200076 1B27 0003 	LDO_4_Select	EQU	0x03	;D0..D600077 1B27 0004 	LDO_5_Select	EQU	0x04	;A0..A200078 1B27 	;00079 1B27 	; New Interface Board (Double Buffered)00080 1B27 	;  Port E bits 0..2 + Select1200081 1B27 	;   Slot 0 DEV*00082 1B27 	;   Slot 1 DEV*00083 1B27 	;   Slot 2 DEV*00084 1B27 	;   LDO 400085 1B27 	;   LDO 500086 1B27 	;00087 1B27 	; DMFE 16 pin connector00088 1B27 	; 1  D0  LDO4-0		16  A0 LDO5-000089 1B27 	; 2  D1  LDO4-1		15  A1 LDO5-100090 1B27 	; 3  D2  LDO4-2		14  A2 LDO5-200091 1B27 	; 4  D3  LDO4-3		13  R/W* LDO4-700092 1B27 	; 5  D4  LDO4-4		12  DEV* SEL16* or SEL17* or SEL18*00093 1B27 	; 6  D5  LDO4-5		11  Ground00094 1B27 	; 7  D6  LDO1-6		10  Ground00095 1B27 	; 8  D7  Read RA1 / Write RA0 	9   Ground00096 1B27 	;00097 1B27 	;=================================================================================================00098 1B27 	; Initialize00099 1B27 	;00100 1B27 	DMFE_Inft_Init	mBank100100 1B27 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000100 1B28 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100101 1B29 1005 		BCF	TRISA,0	;Data Out00102 1B2A 1485 		BSF	TRISA,1	;Data In00103 1B2B 1505 		BSF	TRISA,2	;Input J6-4 (Active low)00104 1B2C 1585 		BSF	TRISA,3	;Remote Reset J6-3 (Active low)00105 1B2D 0189 		CLRF	TRISE	; all out PSP off00106 1B2E 1283 		BCF	_RP0	; Bank 000107 1B2F 0008 		RETURN00108 1B30 	;00109 1B30 	;00110 1B30 		if UsesInOutC00111 1B30 	;=================================================================================================00112 1B30 	;00113 1B30 	;Entry: (CurSM),Y -> OBit00114 1B30 	;       (CurSM),Y+1 -> high nibble=OSlot, low nibble=OBoard00115 1B30 	;	OActive=00 or 80 (MSB only)00116 1B30 	;Exit: 00117 1B30 	;00118 1B30 01A1 	OutputC	CLRF	SRAM_Addr200119 1B31 083D 		MOVF	CurSM+1,W00120 1B32 00A0 		MOVWF	SRAM_Addr100121 1B33 083C 		MOVF	CurSM,W00122 1B34 2B3D 		GOTO	OutputA_E200123 1B35 	;00124 1B35 		endif00125 1B35 	;============================================================00126 1B35 	;Entry: CurBlk -> OBit00127 1B35 	;       CurBlk+1 -> high nibble=OSlot, low nibble=OBoardHighland Greeley PIC.asm   "DMFE_Intf.asm"                               Page: 218500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:DMFE_Intf.asm00128 1B35 	;	OActive=00 or 80 (MSB only)00129 1B35 	;00130 1B35 0837 	OutputB	MOVF	CurBlk,W00131 1B36 00AE 		MOVWF	OBit00132 1B37 0838 		MOVF	CurBlk+1,W00133 1B38 2B50 		GOTO	OutputA100134 1B39 	;00135 1B39 	;=================================================================================================00136 1B39 	;Entry: (CurBlk),Y -> OBit00137 1B39 	;       (CurBlk),Y+1 -> high nibble=OSlot, low nibble=OBoard00138 1B39 	;	OActive=00 or 80 (MSB only)00139 1B39 	;Exit: 00140 1B39 	;00141 1B39 01A1 	OutputA	CLRF	SRAM_Addr200142 1B3A 0838 		MOVF	CurBlk+1,W00143 1B3B 00A0 		MOVWF	SRAM_Addr100144 1B3C 0837 		MOVF	CurBlk,W00145 1B3D 0773 	OutputA_E2	ADDWF	YReg,W00146 1B3E 009F 		MOVWF	SRAM_Addr000147 1B3F 		ADDCF	SRAM_Addr1,F00147 1B3F 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00147 1B40 0AA0      M		INCF	SRAM_Addr1,F		INCF	dest,W_or_F00148 1B41 		mCall3To0	SRAM_ReadPI00148 1B41 118A      M		BCF	PCLATH,3		BCF	PCLATH,300148 1B42 120A      M		BCF	PCLATH,4		BCF	PCLATH,400148 1B43 2252      M		CALL	SRAM_ReadPI		CALL	Destination00148 1B44 158A      M		BSF	PCLATH,3		BSF	PCLATH,300148 1B45 160A      M		BSF	PCLATH,4		BSF	PCLATH,400149 1B46 		mBank300149 1B46 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000149 1B47 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100150 1B48 00AE 		MOVWF	OBit00151 1B49 		mCall3To0	SRAM_ReadPI00151 1B49 118A      M		BCF	PCLATH,3		BCF	PCLATH,300151 1B4A 120A      M		BCF	PCLATH,4		BCF	PCLATH,400151 1B4B 2252      M		CALL	SRAM_ReadPI		CALL	Destination00151 1B4C 158A      M		BSF	PCLATH,3		BSF	PCLATH,300151 1B4D 160A      M		BSF	PCLATH,4		BSF	PCLATH,400152 1B4E 		mBank300152 1B4E 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000152 1B4F 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100153 1B50 00F8 	OutputA1	MOVWF	Param7800154 1B51 3907 		ANDLW	0x0700155 1B52 00B0 		MOVWF	OBoard00156 1B53 0E78 		SWAPF	Param78,W00157 1B54 3907 		ANDLW	0x0700158 1B55 00AD 		MOVWF	OSlot00159 1B56 	;00160 1B56 	; fall through to Output00161 1B56 	;00162 1B56 	;=====================================================================================00163 1B56 	;OUPUT BIT00164 1B56 	;Entry: OBit=0..7F, OBoard=0..7, OSlot=0..200165 1B56 	;Exit: Bank3 is selected00166 1B56 	;	OActive=00 or 80 (MSB only)00167 1B56 	Output	mBank100167 1B56 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000167 1B57 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100168 1B58 0188 		CLRF	TRISD	;output00169 1B59 		mBank300169 1B59 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000169 1B5A 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100170 1B5B 0D2F 		RLF	OActive,W00171 1B5C 		mBank000171 1B5C 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000171 1B5D 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100172 1B5E 1C03 		BTFSS	_C	;Data00173 1B5F 1005 		BCF	PORTA,000174 1B60 1803 		BTFSC	_C00175 1B61 1405 		BSF	PORTA,000176 1B62 	;00177 1B62 		mBank300177 1B62 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000177 1B63 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100178 1B64 082E 		MOVF	OBit,W	;Address 0..12700179 1B65 397F 		ANDLW	0x7F	; R/W* = W*00180 1B66 		mBank000180 1B66 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000180 1B67 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100181 1B68 0088 		MOVWF	PORTD00182 1B69 3003 		MOVLW	LDO_4_Select00183 1B6A 2376 		CALL	WriteSel12Data00184 1B6B 	;00185 1B6B 0830 		MOVF	OBoard,W00186 1B6C 3907 		ANDLW	0x0700187 1B6D 		mBank000187 1B6D 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000187 1B6E 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100188 1B6F 0088 		MOVWF	PORTD00189 1B70 3004 		MOVLW	LDO_5_Select00190 1B71 2376 		CALL	WriteSel12Data00191 1B72 	;00192 1B72 082D 		MOVF	OSlot,W00193 1B73 3903 		ANDLW	0x03	;limit to 0..200194 1B74 		mBank000194 1B74 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000194 1B75 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100195 1B76 	;00196 1B76 	; fall through to WriteSel12Data00197 1B76 	;Highland Greeley PIC.asm   "DMFE_Intf.asm"                               Page: 219500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:DMFE_Intf.asm00198 1B76 	;====================================================================================00199 1B76 	; write data at port D to LDO4 or LDO5, or pulse Select16..18 (DEV0..DEV2)00200 1B76 	;00201 1B76 	; Entry: W=3 bit Address for port E, bank 000202 1B76 	; Exit: bank 300203 1B76 	;00204 1B76 0089 	WriteSel12Data	MOVWF	PORTE00205 1B77 0806 		MOVF	PORTB,W00206 1B78 39F0 		ANDLW	AddressMask00207 1B79 380C 		IORLW	Select1200208 1B7A 0086 		MOVWF	PORTB00209 1B7B 1206 		BCF	PORTB,SelectEnable00210 1B7C 0000 		NOP00211 1B7D 0000 		NOP00212 1B7E 0000 		NOP00213 1B7F 0000 		NOP00214 1B80 0000 		NOP00215 1B81 1606 		BSF	PORTB,SelectEnable00216 1B82 		mBank300216 1B82 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000216 1B83 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100217 1B84 0008 		RETURN00218 1B85 	;00219 1B85 		if UsesInOutC00220 1B85 	;===============================================================================00221 1B85 	;Entry: (CurSM),Y -> IBit00222 1B85 	;       (CurSM),Y+1 -> high nibble=ISlot, low nibble=IBoard00223 1B85 	;Exit: IActive=00 or 80 (MSB only)00224 1B85 	;00225 1B85 01A1 	InputC	CLRF	SRAM_Addr200226 1B86 083D 		MOVF	CurSM+1,W00227 1B87 00A0 		MOVWF	SRAM_Addr100228 1B88 083C 		MOVF	CurSM,W00229 1B89 2B92 		GOTO	InputA_E200230 1B8A 	;00231 1B8A 		endif00232 1B8A 	;==============================================================================00233 1B8A 	;Entry: CurBlk = IBit00234 1B8A 	;       CurBlk+1 = high nibble=ISlot, low nibble=IBoard00235 1B8A 	;Exit: IActive=00 or 80 (MSB only)00236 1B8A 	InputB	MOVFW	CurBlk00236 1B8A 0837      M		MOVF	CurBlk,W		MOVF	src,W00237 1B8B 00B2 		MOVWF	IBit00238 1B8C 		MOVFW	CurBlk+100238 1B8C 0838      M		MOVF	CurBlk+1,W		MOVF	src,W00239 1B8D 2BAC 		GOTO	InputA200240 1B8E 	;00241 1B8E 	;===============================================================================00242 1B8E 	;Entry: (CurBlk),Y -> IBit00243 1B8E 	;       (CurBlk),Y+1 -> high nibble=ISlot, low nibble=IBoard00244 1B8E 	;Exit: IActive=00 or 80 (MSB only)00245 1B8E 	;00246 1B8E 01A1 	InputA	CLRF	SRAM_Addr200247 1B8F 0838 		MOVF	CurBlk+1,W00248 1B90 00A0 		MOVWF	SRAM_Addr100249 1B91 0837 		MOVF	CurBlk,W00250 1B92 0773 	InputA_E2	ADDWF	YReg,W00251 1B93 009F 		MOVWF	SRAM_Addr000252 1B94 		ADDCF	SRAM_Addr1,F00252 1B94 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00252 1B95 0AA0      M		INCF	SRAM_Addr1,F		INCF	dest,W_or_F00253 1B96 		mCall3To0	SRAM_ReadPI00253 1B96 118A      M		BCF	PCLATH,3		BCF	PCLATH,300253 1B97 120A      M		BCF	PCLATH,4		BCF	PCLATH,400253 1B98 2252      M		CALL	SRAM_ReadPI		CALL	Destination00253 1B99 158A      M		BSF	PCLATH,3		BSF	PCLATH,300253 1B9A 160A      M		BSF	PCLATH,4		BSF	PCLATH,400254 1B9B 		mBank300254 1B9B 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000254 1B9C 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100255 1B9D 00F8 		MOVWF	Param7800256 1B9E 3CFE 		SUBLW	0xFE00257 1B9F 		SKPZ00257 1B9F 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00258 1BA0 2BA3 		GOTO	InputA100259 1BA1 01B3 		CLRF	IActive00260 1BA2 0008 		RETURN00261 1BA3 	;00262 1BA3 0878 	InputA1	MOVF	Param78,W00263 1BA4 00B2 		MOVWF	IBit00264 1BA5 		mCall3To0	SRAM_Read00264 1BA5 118A      M		BCF	PCLATH,3		BCF	PCLATH,300264 1BA6 120A      M		BCF	PCLATH,4		BCF	PCLATH,400264 1BA7 2268      M		CALL	SRAM_Read		CALL	Destination00264 1BA8 158A      M		BSF	PCLATH,3		BSF	PCLATH,300264 1BA9 160A      M		BSF	PCLATH,4		BSF	PCLATH,400265 1BAA 		mBank300265 1BAA 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000265 1BAB 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100266 1BAC 00F8 	InputA2	MOVWF	Param7800267 1BAD 3907 		ANDLW	0x0700268 1BAE 00B4 		MOVWF	IBoard00269 1BAF 0E78 		SWAPF	Param78,W00270 1BB0 3903 		ANDLW	0x0300271 1BB1 00B1 		MOVWF	ISlot00272 1BB2 	;00273 1BB2 	; fall through to Input00274 1BB2 	;00275 1BB2 	;===============================================================================00276 1BB2 	; Get input bit for ISlot,IBoard,IBit into IActive:7Highland Greeley PIC.asm   "DMFE_Intf.asm"                               Page: 220500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:DMFE_Intf.asm00277 1BB2 	;00278 1BB2 	; Entry: IBit=0..7F, IBoard=0..7, ISlot=0..200279 1BB2 	; Exit: IActive=00 or 80 (MSB only) Bank3 is selected00280 1BB2 	;00281 1BB2 	Input	mBank100281 1BB2 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000281 1BB3 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100282 1BB4 0188 		CLRF	TRISD	;output00283 1BB5 	; set IBit and R/W*00284 1BB5 		mBank300284 1BB5 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000284 1BB6 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100285 1BB7 0832 		MOVF	IBit,W	;Address 0..12700286 1BB8 397F 		ANDLW	0x7F	; R/W* = W*00287 1BB9 		mBank000287 1BB9 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000287 1BBA 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100288 1BBB 0088 		MOVWF	PORTD00289 1BBC 3003 		MOVLW	LDO_4_Select	;LDO400290 1BBD 2376 		CALL	WriteSel12Data00291 1BBE 	; Set IBoard00292 1BBE 0834 		MOVF	IBoard,W00293 1BBF 3907 		ANDLW	0x0700294 1BC0 		mBank000294 1BC0 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000294 1BC1 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100295 1BC2 0088 		MOVWF	PORTD00296 1BC3 3004 		MOVLW	LDO_5_Select	;LDO500297 1BC4 2376 		CALL	WriteSel12Data00298 1BC5 	; Write Address00299 1BC5 0831 		MOVF	ISlot,W00300 1BC6 3903 		ANDLW	0x03	;limit to 0..200301 1BC7 		mBank000301 1BC7 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000301 1BC8 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100302 1BC9 2376 		CALL	WriteSel12Data00303 1BCA 	; SET R/W* to Read00304 1BCA 		mBank000304 1BCA 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000304 1BCB 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100305 1BCC 1788 		BSF	PORTD,7	; R/W* = R00306 1BCD 3003 		MOVLW	LDO_4_Select	;LDO400307 1BCE 2376 		CALL	WriteSel12Data00308 1BCF 	; Read Data	00309 1BCF 0831 		MOVF	ISlot,W00310 1BD0 3903 		ANDLW	0x03	;limit to 0..200311 1BD1 		mBank000311 1BD1 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000311 1BD2 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100312 1BD3 0089 		MOVWF	PORTE00313 1BD4 0806 		MOVF	PORTB,W00314 1BD5 39F0 		ANDLW	AddressMask00315 1BD6 380C 		IORLW	Select1200316 1BD7 0086 		MOVWF	PORTB00317 1BD8 1206 		BCF	PORTB,SelectEnable00318 1BD9 0000 		NOP00319 1BDA 0000 		NOP00320 1BDB 0000 		NOP00321 1BDC 0000 		NOP00322 1BDD 0805 		MOVF	PORTA,W00323 1BDE 1606 		BSF	PORTB,SelectEnable00324 1BDF 		mBank300324 1BDF 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000324 1BE0 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100325 1BE1 01B3 		CLRF	IActive00326 1BE2 3902 		ANDLW	0x0200327 1BE3 		SKPZ00327 1BE3 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00328 1BE4 17B3 		BSF	IActive,700329 1BE5 0008 		RETURN00330 1BE6 	;00331 1BE6 	;00332 1BE6 	;00333 1BE6 	;00334 1BE6 	;00335 1BE6 	;01023 1BE6 		include	DMFEInit.asm00001 1BE6 		subtitle	"DMFEInit.asm"00002 1BE6 		page00003 1BE6 	;*******************************************************************************00004 1BE6 	;00005 1BE6 	;    Filename: DMFEInit.asm00006 1BE6 	;    Date:9/5/200400007 1BE6 	;    File Revision:1.000008 1BE6 	;00009 1BE6 	;    Author:David M. Flynn00010 1BE6 	;    Company:Oxford V.U.E., Inc.00011 1BE6 	;    Project: TCC ComIO version00012 1BE6 	;00013 1BE6 	; 00014 1BE6 	;**********************************************************************00015 1BE6 	;00016 1BE6 	;    Notes:00017 1BE6 	;00018 1BE6 	; 0x00xx	Output Board (Panel)00019 1BE6 	; 0x01xx	Output Board (Panel)00020 1BE6 	; 0x02xx	Input Board (Panel)00021 1BE6 	;00022 1BE6 	; 0x10xx	Output Board (Relays)Highland Greeley PIC.asm   "DMFEInit.asm"                                Page: 221500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:DMFEInit.asm00023 1BE6 	; 0x11xx	Output Board (Relays)00024 1BE6 	; 0x14xx	Input Board (Block detectors)00025 1BE6 	;00026 1BE6 	;**********************************************************************00027 1BE6 	; Revision History00028 1BE6 	;00029 1BE6 	;1.0  9/6/2004	first reved Version00030 1BE6 	;00031 1BE6 	;===============================================================================00032 1BE6 2356 	RLoop1	CALL	Output00033 1BE7 0AAE 		INCF	OBit,F00034 1BE8 1FAE 		BTFSS	OBit,7	;skip if high bit = 100035 1BE9 2BE6 		GOTO	RLoop1	;last bit is 127 0x7F00036 1BEA 01AE 		CLRF	OBit00037 1BEB 0AB0 		INCF	OBoard,F00038 1BEC 0830 		MOVF	OBoard,W00039 1BED 027A 		SUBWF	Param7A,W	;End with BD100040 1BEE 		SKPZ00040 1BEE 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00041 1BEF 2BE6 		GOTO	RLoop100042 1BF0 0008 		RETURN00043 1BF1 	;00044 1BF1 	;===============================================================================00045 1BF1 	; Entry: none00046 1BF1 	; Exit: none, Bank0 is selected00047 1BF1 	;00048 1BF1 	; turn off all outputs00049 1BF1 	;0000-007F, 0100-017F, 1000-107F, 1100-117F, 1300-137F00050 1BF1 2327 	SetupDMFEIO	CALL	DMFE_Inft_Init00051 1BF2 		mBank300051 1BF2 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000051 1BF3 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100052 1BF4 3000 		MOVLW	0x0000053 1BF5 00AE 		MOVWF	OBit00054 1BF6 00AF 		MOVWF	OActive00055 1BF7 3000 		MOVLW	0x00	;Start with BD000056 1BF8 00B0 		MOVWF	OBoard00057 1BF9 3000 		MOVLW	0x00	;Start with Slot000058 1BFA 00AD 		MOVWF	OSlot00059 1BFB 3002 		MOVLW	0x0200060 1BFC 00FA 		MOVWF	Param7A	;do Boards 0 and 100061 1BFD 23E6 		CALL	RLoop100062 1BFE 0AAD 		INCF	OSlot,F	;Slot 100063 1BFF 01B0 		CLRF	OBoard00064 1C00 23E6 		CALL	RLoop1	;do Boards 0 and 100065 1C01 	;	00066 1C01 	;00067 1C01 01C8 		CLRF	BLKOCC00068 1C02 01C9 		CLRF	BLKOCC+100069 1C03 	;00070 1C03 105B 		BCF	RSIP00071 1C04 01E2 		CLRF	BtnTemp00072 1C05 3002 		MOVLW	0x0200073 1C06 00E3 		MOVWF	BtnTemp+100074 1C07 01E4 		CLRF	SMTemp00075 1C08 01B5 		CLRF	DETTemp00076 1C09 01DF 		CLRF	OLOC00077 1C0A 01DC 		CLRF	OML100078 1C0B 01DD 		CLRF	OML200079 1C0C 01DE 		CLRF	OML300080 1C0D 	;00081 1C0D 	;Set Relays to Default state00082 1C0D 3045 		MOVLW	low SetupRoute00083 1C0E 00C9 		MOVWF	RTTemp00084 1C0F 3009 		MOVLW	high SetupRoute00085 1C10 00CA 		MOVWF	RTTemp+100086 1C11 01F3 		CLRF	YReg00087 1C12 	;00088 1C12 		LCALL	SetRT000088 1C12      M		if	($ & 0x0800) <> (SetRT0 & 0x0800)		if ($ & 0x0800) <> (dest & 0x0800)00088 1C12      M		if	SetRT0 & 0x0800		if dest & 0x080000088 1C12      M		else			else00088 1C12 118A      M		BCF	PCLATH,3		BCF	PCLATH,300088 1C13      M		endif			endif00088 1C13      M		endif			endif00088 1C13      M						00088 1C13      M		if	($ & 0x1000) <> (SetRT0 & 0x1000)		if ($ & 0x1000) <> (dest & 0x1000)00088 1C13      M		endif			endif	00088 1C13      M		endif			endif	00088 1C13 237F      M		CALL	SetRT0		CALL	dest00088 1C14      M		if	(($ & 0x0800) <> (SetRT0 & 0x0800)) | (($ & 0x1000) <> (SetRT0 & 0x1000))		if (($ & 0x0800) <> (dest & 0x0800)) | (($ & 0x1000) <> (dest & 0x1000))00088 1C14      M		if	$ & 0x0800		if $ & 0x080000088 1C14 158A      M		BSF	PCLATH,3		BSF	PCLATH,300088 1C15      M		else			else00088 1C15      M		endif			endif00088 1C15      M					00088 1C15      M		if	$ & 0x1000		if $ & 0x100000088 1C15 160A      M		BSF	PCLATH,4		BSF	PCLATH,400088 1C16      M		else			else00088 1C16      M		endif			endif00088 1C16      M		endif			endif00089 1C16 		LCALL	ClearRTBtns00089 1C16      M		if	($ & 0x0800) <> (ClearRTBtns & 0x0800)		if ($ & 0x0800) <> (dest & 0x0800)00089 1C16      M		if	ClearRTBtns & 0x0800		if dest & 0x080000089 1C16      M		else			else00089 1C16 118A      M		BCF	PCLATH,3		BCF	PCLATH,300089 1C17      M		endif			endif00089 1C17      M		endif			endif00089 1C17      M						00089 1C17      M		if	($ & 0x1000) <> (ClearRTBtns & 0x1000)		if ($ & 0x1000) <> (dest & 0x1000)Highland Greeley PIC.asm   "DMFEInit.asm"                                Page: 222500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:DMFEInit.asm00089 1C17      M		endif			endif	00089 1C17      M		endif			endif	00089 1C17 222E      M		CALL	ClearRTBtns		CALL	dest00089 1C18      M		if	(($ & 0x0800) <> (ClearRTBtns & 0x0800)) | (($ & 0x1000) <> (ClearRTBtns & 0x1000))		if (($ & 0x0800) <> (dest & 0x0800)) | (($ & 0x1000) <> (dest & 0x1000))00089 1C18      M		if	$ & 0x0800		if $ & 0x080000089 1C18 158A      M		BSF	PCLATH,3		BSF	PCLATH,300089 1C19      M		else			else00089 1C19      M		endif			endif00089 1C19      M					00089 1C19      M		if	$ & 0x1000		if $ & 0x100000089 1C19 160A      M		BSF	PCLATH,4		BSF	PCLATH,400089 1C1A      M		else			else00089 1C1A      M		endif			endif00089 1C1A      M		endif			endif00090 1C1A 	;00091 1C1A 	;	LCALL	TTInit00092 1C1A 		mBank000092 1C1A 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000092 1C1B 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100093 1C1C 0008 		RETURN00094 1C1D 	;00095 1C1D 	;=====================================================================================00096 1C1D 	HPRROnTheHalf	mBank300096 1C1D 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000096 1C1E 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100097 1C1F 	;00098 1C1F 08AB 		MOVF	UDPTimer,F00099 1C20 		SKPZ00099 1C20 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00100 1C21 03AB 		DECF	UDPTimer,F00101 1C22 	;00102 1C22 118A 		BCF	PCLATH,300103 1C23 2907 		GOTO	HPRROnTheHalf_RTN00104 1C24 	;00105 1C24 	;=============================================================================00106 1C24 	;00107 1C24 	Do_UDP_DataXmit	mBank300107 1C24 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000107 1C25 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100108 1C26 08AB 		MOVF	UDPTimer,F00109 1C27 		SKPZ00109 1C27 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00110 1C28 2C31 		GOTO	UDP_DataXmit00111 1C29 3010 		MOVLW	kUDPTime00112 1C2A 00AB 		MOVWF	UDPTimer00113 1C2B 	;00114 1C2B 15D5 		BSF	SMTableLowChngFlag00115 1C2C 16D5 		BSF	BlockCmdChngFlag00116 1C2D 1755 		BSF	BlockCmdChngFlag200117 1C2E 1655 		BSF	SMTableHiChngFlag00118 1C2F 		if HasBlockDetectors00119 1C2F 1456 		BSF	BlockDataChngFlag00120 1C30 14D6 		BSF	BlockDataChngFlag200121 1C31 		endif00122 1C31 	;00123 1C31 	UDP_DataXmit00124 1C31 	UDP_DataSender_RTN	mBank300124 1C31 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000124 1C32 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100125 1C33 1DD5 		BTFSS	SMTableLowChngFlag00126 1C34 2C46 		GOTO	UDP_DataXmit_100127 1C35 	;00128 1C35 11D5 		BCF	SMTableLowChngFlag00129 1C36 307F 		MOVLW	UDP_RxIP_MP00130 1C37 		mSendSRAM_UDPData	SMTable,kUDP_DataType_LoSM00130 1C37 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000130 1C38 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1	;Bank300130 1C39 00F8      M		MOVWF	Param78		MOVWF	Param7800130 1C3A 3000      M		MOVLW	high SMTable		MOVLW	high DestPage00130 1C3B 0095      M		MOVWF	SRAM_DestAddr2		MOVWF	SRAM_DestAddr200130 1C3C 3002      M		MOVLW	low SMTable		MOVLW	low DestPage00130 1C3D 0096      M		MOVWF	SRAM_DestAddr1		MOVWF	SRAM_DestAddr100130 1C3E      M				;00130 1C3E 3001      M		MOVLW	kUDP_DataType_LoSM		MOVLW	TheDataType00130 1C3F 0092      M		MOVWF	SRAM_UDP_Tx_DT		MOVWF	SRAM_UDP_Tx_DT00130 1C40 3001      M		MOVLW	0x01		MOVLW	0x01	;256 bytes00130 1C41 0093      M		MOVWF	SRAM_Len		MOVWF	SRAM_Len00130 1C42 0194      M		CLRF	SRAM_Len_Lo		CLRF	SRAM_Len_Lo00130 1C43 0197      M		CLRF	SRAM_DestAddr0		CLRF	SRAM_DestAddr000130 1C44 0878      M		MOVF	Param78,W		MOVF	Param78,W00130 1C45 2A7E      M		GOTO	UDP_DataSender		GOTO	UDP_DataSender00131 1C46 	;00132 1C46 1E55 	UDP_DataXmit_1	BTFSS	SMTableHiChngFlag00133 1C47 2C59 		GOTO	UDP_DataXmit_200134 1C48 	;00135 1C48 1255 		BCF	SMTableHiChngFlag00136 1C49 307F 		MOVLW	UDP_RxIP_MP00137 1C4A 		mSendSRAM_UDPData	SMTableHigh,kUDP_DataType_HiSM	00137 1C4A 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000137 1C4B 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1	;Bank300137 1C4C 00F8      M		MOVWF	Param78		MOVWF	Param7800137 1C4D 3000      M		MOVLW	high SMTableHigh		MOVLW	high DestPage00137 1C4E 0095      M		MOVWF	SRAM_DestAddr2		MOVWF	SRAM_DestAddr200137 1C4F 3003      M		MOVLW	low SMTableHigh		MOVLW	low DestPage00137 1C50 0096      M		MOVWF	SRAM_DestAddr1		MOVWF	SRAM_DestAddr100137 1C51      M				;00137 1C51 3002      M		MOVLW	kUDP_DataType_HiSM		MOVLW	TheDataType00137 1C52 0092      M		MOVWF	SRAM_UDP_Tx_DT		MOVWF	SRAM_UDP_Tx_DT00137 1C53 3001      M		MOVLW	0x01		MOVLW	0x01	;256 bytes00137 1C54 0093      M		MOVWF	SRAM_Len		MOVWF	SRAM_LenHighland Greeley PIC.asm   "DMFEInit.asm"                                Page: 223500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:DMFEInit.asm00137 1C55 0194      M		CLRF	SRAM_Len_Lo		CLRF	SRAM_Len_Lo00137 1C56 0197      M		CLRF	SRAM_DestAddr0		CLRF	SRAM_DestAddr000137 1C57 0878      M		MOVF	Param78,W		MOVF	Param78,W00137 1C58 2A7E      M		GOTO	UDP_DataSender		GOTO	UDP_DataSender00138 1C59 	;00139 1C59 1ED5 	UDP_DataXmit_2	BTFSS	BlockCmdChngFlag00140 1C5A 2C6C 		GOTO	UDP_DataXmit_300141 1C5B 	;00142 1C5B 12D5 		BCF	BlockCmdChngFlag00143 1C5C 307F 		MOVLW	UDP_RxIP_MP00144 1C5D 		mSendSRAM_UDPData	BlockCmdTable,kUDP_DataType_BlkCmd00144 1C5D 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000144 1C5E 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1	;Bank300144 1C5F 00F8      M		MOVWF	Param78		MOVWF	Param7800144 1C60 3000      M		MOVLW	high BlockCmdTable		MOVLW	high DestPage00144 1C61 0095      M		MOVWF	SRAM_DestAddr2		MOVWF	SRAM_DestAddr200144 1C62 3005      M		MOVLW	low BlockCmdTable		MOVLW	low DestPage00144 1C63 0096      M		MOVWF	SRAM_DestAddr1		MOVWF	SRAM_DestAddr100144 1C64      M				;00144 1C64 3005      M		MOVLW	kUDP_DataType_BlkCmd		MOVLW	TheDataType00144 1C65 0092      M		MOVWF	SRAM_UDP_Tx_DT		MOVWF	SRAM_UDP_Tx_DT00144 1C66 3001      M		MOVLW	0x01		MOVLW	0x01	;256 bytes00144 1C67 0093      M		MOVWF	SRAM_Len		MOVWF	SRAM_Len00144 1C68 0194      M		CLRF	SRAM_Len_Lo		CLRF	SRAM_Len_Lo00144 1C69 0197      M		CLRF	SRAM_DestAddr0		CLRF	SRAM_DestAddr000144 1C6A 0878      M		MOVF	Param78,W		MOVF	Param78,W00144 1C6B 2A7E      M		GOTO	UDP_DataSender		GOTO	UDP_DataSender00145 1C6C 	;00146 1C6C 1F55 	UDP_DataXmit_3	BTFSS	BlockCmdChngFlag200147 1C6D 2C7F 		GOTO	UDP_DataXmit_400148 1C6E 	;00149 1C6E 1355 		BCF	BlockCmdChngFlag200150 1C6F 307F 		MOVLW	UDP_RxIP_MP00151 1C70 		mSendSRAM_UDPData	BlockCmdTable2,kUDP_DataType_BlkCmd200151 1C70 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000151 1C71 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1	;Bank300151 1C72 00F8      M		MOVWF	Param78		MOVWF	Param7800151 1C73 3000      M		MOVLW	high BlockCmdTable2		MOVLW	high DestPage00151 1C74 0095      M		MOVWF	SRAM_DestAddr2		MOVWF	SRAM_DestAddr200151 1C75 3007      M		MOVLW	low BlockCmdTable2		MOVLW	low DestPage00151 1C76 0096      M		MOVWF	SRAM_DestAddr1		MOVWF	SRAM_DestAddr100151 1C77      M				;00151 1C77 3007      M		MOVLW	kUDP_DataType_BlkCmd2		MOVLW	TheDataType00151 1C78 0092      M		MOVWF	SRAM_UDP_Tx_DT		MOVWF	SRAM_UDP_Tx_DT00151 1C79 3001      M		MOVLW	0x01		MOVLW	0x01	;256 bytes00151 1C7A 0093      M		MOVWF	SRAM_Len		MOVWF	SRAM_Len00151 1C7B 0194      M		CLRF	SRAM_Len_Lo		CLRF	SRAM_Len_Lo00151 1C7C 0197      M		CLRF	SRAM_DestAddr0		CLRF	SRAM_DestAddr000151 1C7D 0878      M		MOVF	Param78,W		MOVF	Param78,W00151 1C7E 2A7E      M		GOTO	UDP_DataSender		GOTO	UDP_DataSender00152 1C7F 	;00153 1C7F 1C56 	UDP_DataXmit_4	BTFSS	BlockDataChngFlag00154 1C80 2C92 		GOTO	UDP_DataXmit_500155 1C81 	;00156 1C81 1056 		BCF	BlockDataChngFlag00157 1C82 307F 		MOVLW	UDP_RxIP_MP00158 1C83 		mSendSRAM_UDPData	BlockPwrTable,kUDP_DataType_BkPwr00158 1C83 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000158 1C84 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1	;Bank300158 1C85 00F8      M		MOVWF	Param78		MOVWF	Param7800158 1C86 3000      M		MOVLW	high BlockPwrTable		MOVLW	high DestPage00158 1C87 0095      M		MOVWF	SRAM_DestAddr2		MOVWF	SRAM_DestAddr200158 1C88 3004      M		MOVLW	low BlockPwrTable		MOVLW	low DestPage00158 1C89 0096      M		MOVWF	SRAM_DestAddr1		MOVWF	SRAM_DestAddr100158 1C8A      M				;00158 1C8A 3003      M		MOVLW	kUDP_DataType_BkPwr		MOVLW	TheDataType00158 1C8B 0092      M		MOVWF	SRAM_UDP_Tx_DT		MOVWF	SRAM_UDP_Tx_DT00158 1C8C 3001      M		MOVLW	0x01		MOVLW	0x01	;256 bytes00158 1C8D 0093      M		MOVWF	SRAM_Len		MOVWF	SRAM_Len00158 1C8E 0194      M		CLRF	SRAM_Len_Lo		CLRF	SRAM_Len_Lo00158 1C8F 0197      M		CLRF	SRAM_DestAddr0		CLRF	SRAM_DestAddr000158 1C90 0878      M		MOVF	Param78,W		MOVF	Param78,W00158 1C91 2A7E      M		GOTO	UDP_DataSender		GOTO	UDP_DataSender00159 1C92 	;00160 1C92 1CD6 	UDP_DataXmit_5	BTFSS	BlockDataChngFlag200161 1C93 2CA5 		GOTO	UDP_DataXmit_600162 1C94 	;00163 1C94 10D6 		BCF	BlockDataChngFlag200164 1C95 307F 		MOVLW	UDP_RxIP_MP00165 1C96 		mSendSRAM_UDPData	BlockPwrTable2,kUDP_DataType_BkPwr200165 1C96 1683      M		BSF	STATUS,RP0		BSF	STATUS,RP000165 1C97 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP1	;Bank300165 1C98 00F8      M		MOVWF	Param78		MOVWF	Param7800165 1C99 3000      M		MOVLW	high BlockPwrTable2		MOVLW	high DestPage00165 1C9A 0095      M		MOVWF	SRAM_DestAddr2		MOVWF	SRAM_DestAddr200165 1C9B 3006      M		MOVLW	low BlockPwrTable2		MOVLW	low DestPage00165 1C9C 0096      M		MOVWF	SRAM_DestAddr1		MOVWF	SRAM_DestAddr100165 1C9D      M				;00165 1C9D 3006      M		MOVLW	kUDP_DataType_BkPwr2		MOVLW	TheDataType00165 1C9E 0092      M		MOVWF	SRAM_UDP_Tx_DT		MOVWF	SRAM_UDP_Tx_DT00165 1C9F 3001      M		MOVLW	0x01		MOVLW	0x01	;256 bytes00165 1CA0 0093      M		MOVWF	SRAM_Len		MOVWF	SRAM_Len00165 1CA1 0194      M		CLRF	SRAM_Len_Lo		CLRF	SRAM_Len_Lo00165 1CA2 0197      M		CLRF	SRAM_DestAddr0		CLRF	SRAM_DestAddr000165 1CA3 0878      M		MOVF	Param78,W		MOVF	Param78,W00165 1CA4 2A7E      M		GOTO	UDP_DataSender		GOTO	UDP_DataSender00166 1CA5 	;00167 1CA5 	UDP_DataXmit_600168 1CA5 	;00169 1CA5 118A 		BCF	PCLATH,3Highland Greeley PIC.asm   "DMFEInit.asm"                                Page: 224500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:DMFEInit.asm00170 1CA6 28E9 		GOTO	Do_UDP_DataXmit_Rtn00171 1CA7 	;00172 1CA7 	;00173 1CA7 		if UsesSpeaker00192 1CA7 		endif00193 1CA7 	;00194 1CA7 	;===================================================================================================00195 1CA7 	; BLOCK DETECTION00196 1CA7 0848 	DETECT	MOVF	BLKOCC,W00197 1CA8 		SKPZ00197 1CA8 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00198 1CA9 2CAC 		GOTO	DETECT100199 1CAA 3014 		MOVLW	d'20'	;number of blocks00200 1CAB 00C8 		MOVWF	BLKOCC00201 1CAC 24BC 	DETECT1	CALL	BLKTOPTR00202 1CAD 3000 		MOVLW	DETWEST00203 1CAE 00F3 		MOVWF	YReg00204 1CAF 238E 		CALL	InputA00205 1CB0 		MOVFW	IActive00205 1CB0 0833      M		MOVF	IActive,W		MOVF	src,W00206 1CB1 00B5 		MOVWF	DETTemp00207 1CB2 3002 		MOVLW	DETEAST00208 1CB3 00F3 		MOVWF	YReg00209 1CB4 238E 		CALL	InputA00210 1CB5 		MOVFW	IActive00210 1CB5 0833      M		MOVF	IActive,W		MOVF	src,W00211 1CB6 0435 		IORWF	DETTemp,W00212 1CB7 00AF 		MOVWF	OActive00213 1CB8 3006 		MOVLW	OCCLED00214 1CB9 00F3 		MOVWF	YReg00215 1CBA 03C8 		DECF	BLKOCC,F00216 1CBB 2B39 		GOTO	OutputA00217 1CBC 	;00218 1CBC 	;===========================================================================================00219 1CBC 	;Convert an BLK number in W to Address in CurBlk00220 1CBC 	; CurBlk:=(W-1)*8+FirstBlksData00221 1CBC 	;00222 1CBC 00B7 	BLKTOPTR	MOVWF	CurBlk00223 1CBD 03B7 		DECF	CurBlk,F	;Blk:=Blk-100224 1CBE 01B8 		CLRF	CurBlk+100225 1CBF 	;00226 1CBF 		CLRC00226 1CBF 1003      M		BCF	STATUS,C		BCF	STATUS,C00227 1CC0 0DB7 		RLF	CurBlk,F	;Blk:=Blk*800228 1CC1 0DB8 		RLF	CurBlk+1,F00229 1CC2 0DB7 		RLF	CurBlk,F00230 1CC3 0DB8 		RLF	CurBlk+1,F00231 1CC4 0DB7 		RLF	CurBlk,F00232 1CC5 0DB8 		RLF	CurBlk+1,F00233 1CC6 	;00234 1CC6 30D8 		MOVLW	low FirstBlksData	;Blk:=Blk+FirstBlk00235 1CC7 07B7 		ADDWF	CurBlk,F00236 1CC8 		ADDCF	CurBlk+1,F00236 1CC8 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00236 1CC9 0AB8      M		INCF	CurBlk+1,F		INCF	dest,W_or_F00237 1CCA 3000 		MOVLW	high FirstBlksData00238 1CCB 3E10 		ADDLW	low evDataROM00239 1CCC 07B8 		ADDWF	CurBlk+1,F00240 1CCD 0008 		RETURN00241 1CCE 	;00242 1CCE 	;===================================================================================================00243 1CCE 	;Set the LEDs of all the SMs used by the active routes00244 1CCE 	;	00245 1CCE 3001 	SetSMLeds	MOVLW	0x0100246 1CCF 00E4 		MOVWF	SMTemp00247 1CD0 0180 	SMFBLEDS1	CLRF	SMFound00248 1CD1 300B 		MOVLW	0x0B00249 1CD2 00F2 		MOVWF	XReg	;11..0 bytes00250 1CD3 3001 		MOVLW	0x0100251 1CD4 00F3 		MOVWF	YReg	;1..0 bits00252 1CD5 	;00253 1CD5 304B 		MOVLW	low SMBits00254 1CD6 0772 		ADDWF	XReg,W00255 1CD7 0084 		MOVWF	FSR00256 1CD8 1783  a		BSF	STATUS,IRP	;bankisel00256 1CD9 		BankISel	SMBits00257 1CD9 		CLRC00257 1CD9 1003      M		BCF	STATUS,C		BCF	STATUS,C00258 1CDA 	;00259 1CDA 0C80 	SMFBLEDS1_L1	RRF	INDF,F00260 1CDB 0384 		DECF	FSR,F00261 1CDC 03F2 		DECF	XReg,F00262 1CDD 1FF2 		BTFSS	XReg,700263 1CDE 2CDA 		GOTO	SMFBLEDS1_L100264 1CDF 	;00265 1CDF 0C80 		RRF	SMFound,F00266 1CE0 300B 		MOVLW	0x0B00267 1CE1 00F2 		MOVWF	XReg00268 1CE2 3E4B 		ADDLW	low SMBits00269 1CE3 0084 		MOVWF	FSR00270 1CE4 03F3 		DECF	YReg,F00271 1CE5 1FF3 		BTFSS	YReg,700272 1CE6 2CDA 		GOTO	SMFBLEDS1_L100273 1CE7 	;	00274 1CE7 		MOVFW	SMFound00274 1CE7 0800      M		MOVF	SMFound,W		MOVF	src,W00275 1CE8 39C0 		ANDLW	0xC0	;used in any way?00276 1CE9 		SKPNZ00276 1CE9 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00277 1CEA 2D0A 		GOTO	SMFBLEDS4	; NoHighland Greeley PIC.asm   "DMFEInit.asm"                                Page: 225500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:DMFEInit.asm00278 1CEB 	;00279 1CEB 17AF 	SMFBLEDS3	BSF	OActive,700280 1CEC 		MOVFW	SMTemp00280 1CEC 0864      M		MOVF	SMTemp,W		MOVF	src,W00281 1CED 		mCall3To2	SMToPTR	;CurBlk=(Ptr)00281 1CED 118A      M		BCF	PCLATH,3		BCF	PCLATH,300281 1CEE 240E      M		CALL	SMToPTR		CALL	Destination00281 1CEF 158A      M		BSF	PCLATH,3		BSF	PCLATH,300281 1CF0 160A      M		BSF	PCLATH,4		BSF	PCLATH,400282 1CF1 3000 		MOVLW	RealSMNum00283 1CF2 00F3 		MOVWF	YReg00284 1CF3 		mCall3To0	GetCurBlkY00284 1CF3 118A      M		BCF	PCLATH,3		BCF	PCLATH,300284 1CF4 120A      M		BCF	PCLATH,4		BCF	PCLATH,400284 1CF5 25EE      M		CALL	GetCurBlkY		CALL	Destination00284 1CF6 158A      M		BSF	PCLATH,3		BSF	PCLATH,300284 1CF7 160A      M		BSF	PCLATH,4		BSF	PCLATH,400285 1CF8 00F2 		MOVWF	XReg00286 1CF9 		mCall3To0	GetSMTableX00286 1CF9 118A      M		BCF	PCLATH,3		BCF	PCLATH,300286 1CFA 120A      M		BCF	PCLATH,4		BCF	PCLATH,400286 1CFB 2619      M		CALL	GetSMTableX		CALL	Destination00286 1CFC 158A      M		BSF	PCLATH,3		BSF	PCLATH,300286 1CFD 160A      M		BSF	PCLATH,4		BSF	PCLATH,400287 1CFE 01B3 		CLRF	IActive00288 1CFF 1AF8 		BTFSC	Param78,5	;Feedback bit00289 1D00 17B3 		BSF	IActive,700290 1D01 	;00291 1D01 3006 		MOVLW	SMLEDB00292 1D02 00F3 		MOVWF	YReg00293 1D03 0833 		MOVF	IActive,W00294 1D04 		BMI	SMFBLEDS3_100294 1D04 3980      M		ANDLW	0x80		ANDLW	0x8000294 1D05 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z	;skip if Z00294 1D06 2D09      M		GOTO	SMFBLEDS3_1		GOTO	dest00295 1D07 3004 		MOVLW	SMLEDA00296 1D08 00F3 		MOVWF	YReg00297 1D09 2339 	SMFBLEDS3_1	CALL	OutputA00298 1D0A 	;00299 1D0A 0AE4 	SMFBLEDS4	INCF	SMTemp,F00300 1D0B 0864 		MOVF	SMTemp,W00301 1D0C 3C30 		SUBLW	SMCount+1	;There are 48 machines00302 1D0D 		SKPZ00302 1D0D 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00303 1D0E 2CD0 		GOTO	SMFBLEDS100304 1D0F 0008 		RETURN00305 1D10 	;01024 1D10 		include	Bootloader.asm00001 1D10 		subtitle	"Bootloader.asm"00002 1D10 		page00003 1D10 	;===========================================================================================00004 1D10 	;00005 1D10 	;  FileName: Bootloader.asm00006 1D10 	;  Date: 4/6/0900007 1D10 	;  File Version: 1.1.500008 1D10 	;  00009 1D10 	;  Author: David M. Flynn00010 1D10 	;  Company: Oxford V.U.E., Inc.00011 1D10 	;00012 1D10 	;============================================================================================00013 1D10 	; Notes:00014 1D10 	;  This file contains the general purpose routines used to implement a bootloader00015 1D10 	;  for the 16F877 on the Oxford V.U.E. Brain GP CPU.00016 1D10 	;00017 1D10 	;  To use:00018 1D10 	;   Call PwrUpTest once each power up.00019 1D10 	;   To force the ROM image file (b.b) to load next reset call SetUIPBit.00020 1D10 	;    Dispatch.asm looks to these buttons down together to call SetUIPBit00021 1D10 0018 	BL_SetCode	EQU	0x18	;SW5 AND SW600022 1D10 	;   To load an overlay set PM_FileNum to 1..9 then call UpdateProgMem.00023 1D10 	;    UpdateProgMem does not return, it will display Str_ErrorPtr if FNF or CSUM is bad or reboot.00024 1D10 	;00025 1D10 	;----------------------------------00026 1D10 	;  This code is included in Dispatch.asm if Dispatch.asm is not used include it in the main event loop00027 1D10 	;	if UsesBootloader00028 1D10 	;Bootloader trigger, if the correct buttons are down then set the bit to trigger00029 1D10 	; loading next time a reset occures.00030 1D10 	;	MOVLW	BL_SetCode	;BootLoader button combo00031 1D10 	;	SUBWF	Param78,W	;Button bits (positive logic)00032 1D10 	;	SKPZ00033 1D10 	;	GOTO	NoBootload00034 1D10 	;	mCALL2To3	SetUIPBit00035 1D10 	;	MOVLW	StrResetNowPtr00036 1D10 	;	CALL	DispStrLine300037 1D10 	;BD_Stop	GOTO	BD_Stop00038 1D10 	;NoBootload00039 1D10 	;	endif00040 1D10 	;-----------------------------------00041 1D10 	;  Strings used:00042 1D10 	;   Str_ErrorPtr	STR	'Error!'00043 1D10 	;   StrResetNowPtr	STR	'Press Reset Now'00044 1D10 	;   StrLoadRIPtr	STR	'Loading ROM Image'00045 1D10 	;-----------------------------------00046 1D10 	;  Program Memory image file format:00047 1D10 	;   file is big endien00048 1D10 	;   File name of main image is "b.b"00049 1D10 	;   A portion to the image may be swaped using filenames "b1.b", "b2.b", etc.00050 1D10 	;   Destination Address (word)00051 1D10 	;   Length in words (word)Highland Greeley PIC.asm   "Bootloader.asm"                              Page: 226500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Bootloader.asm00052 1D10 	;   Checksum (word)00053 1D10 	;   Upto 16,384 Bytes of data (0x2000 words)00054 1D10 	;-----------------------------------00055 1D10 	;  EEPROM locations required:00056 1D10 	;   ePM_Flags	RES	1	;Used to track status00057 1D10 	;  ePM_Flags bits00058 1D10 	;   Update In Progress bit00059 1D10 0000 	PM_UIP	EQU	0	;set at start of update, clr'd when done00060 1D10 0001 	PM_UIPMask	EQU	0x0100061 1D10 000E 	PM_UIPMaskClr	EQU	0x0E	;clr file number also00062 1D10 	;   First Boot Flag00063 1D10 0001 	PM_FBF	EQU	1	;set only by programmer00064 1D10 0002 	PM_FBFMask	EQU	0x0200065 1D10 	;   upper nibble is the file number 0..900066 1D10 	;-----------------------------------00067 1D10 	;  Bank zero memory locations required:00068 1D10 	;   PM_Addr_Lo	RES	1	;Prog mem dest address00069 1D10 	;   PM_Addr_Hi	RES	100070 1D10 	;   PM_Data_Lo	RES	1	;Current data00071 1D10 	;   PM_Data_Hi	RES	100072 1D10 	;   PM_StopAddrL	RES	1	;Last address + 100073 1D10 	;   PM_StopAddrH	RES	100074 1D10 	;   PM_CSumL	RES	1	;Checksum00075 1D10 	;   PM_CSumH	RES	100076 1D10 	;   PM_FileNum	RES	1	;File number 0=b.b, 1=b1.b, etc.00077 1D10 	;------------------------------------00078 1D10 	; This file was build to fit at 0x1F10..0x1FFF in segment 3.00079 1D10 	; Calls outside this segment:00080 1D10 	;  ZeroFName_D18,DOP_Ram_D18,00081 1D10 	;  find_file_D18,open_file_D18,close_file_D1800082 1D10 	;  ReadEE79_D18,WriteEEP79W_D18,lcd_GotoLine2_3,PrintString_D1800083 1D10 	;00084 1D10 	; The above callers should be placed at the beginning of segment 3 to minimize00085 1D10 	; the chance that they are moved.  If any of the callers are moved then the 00086 1D10 	; bootloader will fail.  If i2c_read1 is moved then the bootloader will fail.00087 1D10 	;00088 1D10 	;============================================================================================00089 1D10 	; Revision History00090 1D10 	;00091 1D10 	; 1.1.5    4/6/2009	Changed conditional UsesLCD>>PrintString00092 1D10 	; 1.1.4    12/30/2007	Added _GIE paranoid BCF, Changed to org 0x1F0600093 1D10 	; 1.1.3    5/2/2005	Added PM_FBF First Boot Flag00094 1D10 	; 1.1.2    10/22/2004  Copied I2C_Read into this routine to make it more robust.00095 1D10 	;	New origin is 0x1F0800096 1D10 	; 1.1.1    9/12/2004	Added notes to explain why/when the bootloaded will fail.00097 1D10 	; 1.1      8/30/2004	Modified for multi-file overlay support, added SetUIPBitW00098 1D10 	; 1.0      8/27/2004	First working version.00099 1D10 	; 1.0d1    8/21/2004	First Code00100 1D10 	;00101 1D10 	;============================================================================================00102 1D10 		ifndef UseOldBL00104 1D10 		endif00105 1D10 	;00106 1D10 		if UseOldBL00107 1D10 		ORG	0x1F0800108 1F08 		else00110 1F08 		endif00111 1F08 	;============================================================================================00112 1F08 	;00113 1F08 	;Routines in this file00114 1F08 	; Name	(additional stack words required) Description (Bank in/Bank out)00115 1F08 	;============================================================================================00116 1F08 	; SetUIPBitW	(0+1) Set Update In Progress bit and file number00117 1F08 	; SetUIPBit	(1+1) Set Update In Progress bit00118 1F08 	; PwrUpTest	(1+4) If the Prog Mem checksum is missing or wrong UpdateProgMem00119 1F08 	; ReadPM_PI	(0)   Read data from Program Memory Param79(LSB):Param7A(MSB)=(PM_Addr++) (0/0)00120 1F08 	; ReadPM	(0)   Read data from Program Memory Param79(LSB):Param7A(MSB)=(Param7C:Param7B)00121 1F08 	; WritePM_PI	(0)   Write data to Program Memory (PM_Addr++)=Param79(LSB):Param7A(MSB)00122 1F08 	; WritePM	(0)   Write data to Program Memory (Param7C:Param7B)=Param79(LSB):Param7A(MSB)00123 1F08 	;00124 1F08 	; Gen_PM_CSUM	(1+0) Read every byte in program memory to calc check sum (0/0)00125 1F08 	; Gen_BLPM_CSUM	(1+0) Read the ROM image and calc check sum (0/0)00126 1F08 	;00127 1F08 	; WriteI2CToPM	(1+1) Copy from I2C to Prog Mem, Don't rewrite, Don't write 0x3FFF bytes (0/0)00128 1F08 	; OpenPMImageFile	(1+2) Open the Prog Mem image file.00129 1F08 	; PM_LenToStop	(0)   Convert len to stop addr00130 1F08 	;00131 1F08 	; VerifyRICSum	(1+3) Verify the checksum of the rom image, W=0 noErr, W=0x80 FNF or bad csum00132 1F08 	;00133 1F08 	; ClrUIPBit	(1+1) Clr Update In Progress bit00134 1F08 	; UpdateProgMem	(1+4) Update the program memory.00135 1F08 	;00136 1F08 	;============================================================================================00137 1F08 	;============================================================================================00138 1F08 	;Set Update In Progress bit and file number00139 1F08 	;00140 1F08 	; Entry: W=file number 0..900141 1F08 	; Exit: none00142 1F08 	; RAM used: Param78,Param7900143 1F08 	; Calls: (0+1) WriteEEP79W_D1800144 1F08 	;00145 1F08 390F 	SetUIPBitW	ANDLW	0x0F	;parnoid!00146 1F09 00F8 		MOVWF	Param7800147 1F0A 300F 		MOVLW	ePM_Flags00148 1F0B 00F9 		MOVWF	Param7900149 1F0C 0E78 		SWAPF	Param78,W	;move file number to upper niddle00150 1F0D 3801 		IORLW	PM_UIPMask	;set load bit00151 1F0E 2827 		GOTO	WriteEEP79W_D18	00152 1F0F 	;00153 1F0F 	;============================================================================================Highland Greeley PIC.asm   "Bootloader.asm"                              Page: 227500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Bootloader.asm00154 1F0F 	;Set Update In Progress bit00155 1F0F 	;00156 1F0F 	; Entry: none00157 1F0F 	; Exit: none00158 1F0F 	; RAM used: Param78,Param7900159 1F0F 	; Calls: (1+1) ReadEE79_D18, WriteEEP79W_D1800160 1F0F 	;00161 1F0F 300F 	SetUIPBit	MOVLW	ePM_Flags00162 1F10 00F9 		MOVWF	Param7900163 1F11 2021 		CALL	ReadEE79_D1800164 1F12 00F8 		MOVWF	Param7800165 1F13 3901 		ANDLW	PM_UIPMask00166 1F14 		SKPZ00166 1F14 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00167 1F15 0008 		RETURN00168 1F16 	;	00169 1F16 		MOVFW	Param7800169 1F16 0878      M		MOVF	Param78,W		MOVF	src,W00170 1F17 3801 		IORLW	PM_UIPMask00171 1F18 2827 		GOTO	WriteEEP79W_D1800172 1F19 	;00173 1F19 	;============================================================================================00174 1F19 	; If the ePM_Flags,PM_UIP bit is set goto UpdateProgMem00175 1F19 	;00176 1F19 	; Entry: none00177 1F19 	; Exit: Does not exit if programming happens, UpdateProgMem00178 1F19 	; RAM used: Param70,Param71,Param77,Param79,Param7A,Param7B,Param7C00179 1F19 	; Calls: (1+4) ReadEE79_D18,UpdateProgMem00180 1F19 	;00181 1F19 300F 	PwrUpTest	MOVLW	ePM_Flags	;Is Update In Progress bit set?00182 1F1A 00F9 		MOVWF	Param7900183 1F1B 2021 		CALL	ReadEE79_D1800184 1F1C 00F7 		MOVWF	Param7700185 1F1D 3901 		ANDLW	PM_UIPMask00186 1F1E 		SKPNZ00186 1F1E 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00187 1F1F 0008 		RETURN		; No00188 1F20 	;00189 1F20 27E7 		CALL	ClrUIPBit	;we get one shot at this00190 1F21 0E77 		SWAPF	Param77,W00191 1F22 390F 		ANDLW	0x0F	;parnoid! only 0..9 are valid00192 1F23 00C0 		MOVWF	PM_FileNum	;"b.b" or "bN.b"00193 1F24 		if UsesLCD00194 1F24 202F 		CALL	lcd_GotoLine2_300195 1F25 3031 		MOVLW	StrLoadRIPtr00196 1F26 203A 		CALL	PrintString_D1800197 1F27 		endif00198 1F27 2FEC 		GOTO	UpdateProgMem00199 1F28 	;00200 1F28 	;============================================================================================00201 1F28 	; Read data from Program Memory Param79(LSB):Param7A(MSB)=(PM_Addr++)00202 1F28 	;00203 1F28 	; Entry: none00204 1F28 	; Exit: PM_Addr++00205 1F28 	; RAM used: Param78,Param79,Param7A,Param7B,Param7C00206 1F28 	; Calls:(0) ReadPM, WritePM00207 1F28 	;00208 1F28 01F8 	ReadPM_PI	CLRF	Param7800209 1F29 279D 	ReadPM_PI_E2	CALL	MovePMAddrToTemp00210 1F2A 	;00211 1F2A 2740 		CALL	BLIncAddr00212 1F2B 1878 		BTFSC	Param78,000213 1F2C 2F46 		GOTO	WritePM00214 1F2D 	;00215 1F2D 	; fall through to ReadPM00216 1F2D 	;============================================================================================00217 1F2D 	; Read data from Program Memory Param79(LSB):Param7A(MSB)=(Param7C:Param7B)00218 1F2D 	;00219 1F2D 	; Entry: PM Addr in Param7C:Param7B00220 1F2D 	; Exit: none00221 1F2D 	; RAM used: Param79,Param7A,Param7B,Param7C00222 1F2D 	; Calls: (0) None00223 1F2D 	;00224 1F2D 	ReadPM	mBank200224 1F2D 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000224 1F2E 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100225 1F2F 		MOVFW	Param7B	;Write the00225 1F2F 087B      M		MOVF	Param7B,W		MOVF	src,W00226 1F30 008D 		MOVWF	EEADR	;address bytes00227 1F31 		MOVFW	Param7C	;for the desired00227 1F31 087C      M		MOVF	Param7C,W		MOVF	src,W00228 1F32 008F 		MOVWF	EEADRH	;address to read00229 1F33 1683 		BSF	_RP0	;Bank 300230 1F34 178C 		BSF	EECON1,EEPGD	;Point to Program memory00231 1F35 140C 		BSF	EECON1,RD	;Start read operation00232 1F36 0000 		NOP		;Required two NOPs00233 1F37 0000 		NOP00234 1F38 1283 		BCF	_RP0	;Bank 200235 1F39 080C 		MOVF	EEDATA,W	;Param79(LSB) = EEDATA00236 1F3A 00F9 		MOVWF	Param7900237 1F3B 080E 		MOVF	EEDATH,W	;Param7A = EEDATH00238 1F3C 00FA 		MOVWF	Param7A00239 1F3D 	BL_RTN_Bnk0	mBank000239 1F3D 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000239 1F3E 1303      M		BCF	STATUS,RP1		BCF	STATUS,RP100240 1F3F 0008 		RETURN00241 1F40 	;00242 1F40 	;============================================================================================00243 1F40 0AB8 	BLIncAddr	INCF	PM_Addr_Lo,F00244 1F41 		SKPNZHighland Greeley PIC.asm   "Bootloader.asm"                              Page: 228500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Bootloader.asm00244 1F41 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00245 1F42 0AB9 		INCF	PM_Addr_Hi,F00246 1F43 0008 		RETURN00247 1F44 	;============================================================================================00248 1F44 	; Write data to Program Memory (PM_Addr++)=Param79(LSB):Param7A(MSB)00249 1F44 	; Disable interupts before calling "BCF	INTCON,GIE"00250 1F44 	;00251 1F44 	; Entry: PM_Addr,Param79/A00252 1F44 	; Exit: PM_Addr++00253 1F44 	; RAM used: Param78,Param79,Param7A,Param7B,Param7C00254 1F44 	; Calls:(0) WritePM00255 1F44 	;00256 1F44 1478 	WritePM_PI	BSF	Param78,000257 1F45 2F29 		GOTO	ReadPM_PI_E200258 1F46 	;00259 1F46 	; fall through to WritePM00260 1F46 	;============================================================================================00261 1F46 	; Write data to Program Memory (Param7C:Param7B)=Param79(LSB):Param7A(MSB)00262 1F46 	; Disable interupts before calling "BCF	INTCON,GIE"00263 1F46 	;00264 1F46 	; Entry: PM Addr in Param7C:Param7B, Data in Param7A:Param7900265 1F46 	; Exit: none00266 1F46 	; RAM used: Param79,Param7A,Param7B,Param7C00267 1F46 	; Calls: (0) None00268 1F46 	;00269 1F46 	WritePM	mBank200269 1F46 1283      M		BCF	STATUS,RP0		BCF	STATUS,RP000269 1F47 1703      M		BSF	STATUS,RP1		BSF	STATUS,RP100270 1F48 087B 		MOVF	Param7B,W	;Write address00271 1F49 008D 		MOVWF	EEADR	; of desired00272 1F4A 087C 		MOVF	Param7C,W	; program memory00273 1F4B 008F 		MOVWF	EEADRH	; location00274 1F4C 0879 		MOVF	Param79,W	;Write value to00275 1F4D 008C 		MOVWF	EEDATA	; program at00276 1F4E 087A 		MOVF	Param7A,W	; desired memory00277 1F4F 008E 		MOVWF	EEDATH	; location00278 1F50 1683 		BSF	_RP0	;Bank 300279 1F51 178C 		BSF	EECON1,EEPGD	;Point to Program memory00280 1F52 150C 		BSF	EECON1,WREN	;Enable writes00281 1F53 3055 		MOVLW	0x55	;Write 55h to00282 1F54 008D 		MOVWF	EECON2	; EECON200283 1F55 30AA 		MOVLW	0xAA	;Write AAh to00284 1F56 008D 		MOVWF	EECON2	; EECON200285 1F57 148C 		BSF	EECON1,WR	;Start write operation00286 1F58 0000 		NOP		;Two NOPs to allow micro00287 1F59 0000 		NOP		; to setup for write00288 1F5A 110C 		BCF	EECON1,WREN	;Disable writes00289 1F5B 2F3D 		GOTO	BL_RTN_Bnk000290 1F5C 	;00291 1F5C 	;============================================================================================00292 1F5C 	; Read every byte in program memory to calc check sum00293 1F5C 	;00294 1F5C 	; Entry: PM_Addr,PM_StopAddr00295 1F5C 	; Exit: Param71:Param70=CSUM00296 1F5C 	; RAM used: Param70,Param71,Param77,Param79,Param7A,Param7B,Param7C00297 1F5C 	; Calls: (1+0) ReadPM_PI or BL_i2c_read_ACK00298 1F5C 	;00299 1F5C 01F7 	Gen_PM_CSUM	CLRF	Param7700300 1F5D 01F0 	Gen_PM_CSUM_E2	CLRF	Param7000301 1F5E 01F1 		CLRF	Param7100302 1F5F 	;00303 1F5F 1C77 	Gen_PM_CSUM_L1	BTFSS	Param77,000304 1F60 2728 		CALL	ReadPM_PI	;Read PM_Value00305 1F61 1C77 		BTFSS	Param77,000306 1F62 2F68 		GOTO	Gen_PM_CSUM_100307 1F63 	;00308 1F63 27A2 		CALL	BL_i2c_read_ACK00309 1F64 00FA 		MOVWF	Param7A00310 1F65 27A2 		CALL	BL_i2c_read_ACK00311 1F66 00F9 		MOVWF	Param7900312 1F67 2740 		CALL	BLIncAddr00313 1F68 	;00314 1F68 	Gen_PM_CSUM_1	MOVFW	Param79	;CSUM+=PM_Value00314 1F68 0879      M		MOVF	Param79,W		MOVF	src,W00315 1F69 07F0 		ADDWF	Param70,F00316 1F6A 		SKPNC00316 1F6A 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00317 1F6B 0AF1 		INCF	Param71,F00318 1F6C 		MOVFW	Param7A00318 1F6C 087A      M		MOVF	Param7A,W		MOVF	src,W00319 1F6D 07F1 		ADDWF	Param71,F00320 1F6E 	;00321 1F6E 		MOVFW	PM_StopAddrH00321 1F6E 083D      M		MOVF	PM_StopAddrH,W		MOVF	src,W00322 1F6F 0239 		SUBWF	PM_Addr_Hi,W00323 1F70 		SKPZ00323 1F70 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00324 1F71 2F5F 		GOTO	Gen_PM_CSUM_L100325 1F72 		MOVFW	PM_StopAddrL00325 1F72 083C      M		MOVF	PM_StopAddrL,W		MOVF	src,W00326 1F73 0238 		SUBWF	PM_Addr_Lo,W00327 1F74 		SKPZ00327 1F74 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00328 1F75 2F5F 		GOTO	Gen_PM_CSUM_L100329 1F76 2F3D 		GOTO	BL_RTN_Bnk000330 1F77 	;00331 1F77 	;============================================================================================00332 1F77 	; Read the ROM image and calc check sum00333 1F77 	;00334 1F77 	; Entry: i2c file open ready to read first byte (0/0)Highland Greeley PIC.asm   "Bootloader.asm"                              Page: 229500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Bootloader.asm00335 1F77 	; Exit: Param71:Param70=CSUM00336 1F77 	; RAM used: Param70,Param71,Param77,Param79,Param7A,Param7B,Param7C00337 1F77 	; Calls: (1+0) Gen_PM_CSUM_E200338 1F77 	;00339 1F77 1477 	Gen_BLPM_CSUM	BSF	Param77,000340 1F78 2F5D 		GOTO	Gen_PM_CSUM_E200341 1F79 	;00342 1F79 	;============================================================================================00343 1F79 	; Copy from I2C to Prog Mem, Don't rewrite, Don't write 0x3FFF bytes00344 1F79 	;00345 1F79 	; Entry: i2c file open ready to read first byte, PM_StopAddr=Last+1, PM_Addr=first address00346 1F79 	; Exit: none00347 1F79 	; RAM used: Param70,Param71,Param77,Param79,Param7A,Param7B,Param7C00348 1F79 	; Calls: (1+1) BL_i2c_read_ACK, ReadPM, WritePM_PI00349 1F79 	;00350 1F79 27A2 	WriteI2CToPM	CALL	BL_i2c_read_ACK	;Get new word00351 1F7A 00BB 		MOVWF	PM_Data_Hi00352 1F7B 27A2 		CALL	BL_i2c_read_ACK00353 1F7C 00BA 		MOVWF	PM_Data_Lo00354 1F7D 3C3F 		SUBLW	0x3F	;Test for unused word 0x3FFF00355 1F7E 		SKPZ00355 1F7E 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00356 1F7F 2F83 		GOTO	WriteI2CToPM_100357 1F80 0A3A 		INCF	PM_Data_Lo,W00358 1F81 		SKPNZ00358 1F81 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00359 1F82 2F9B 		GOTO	WriteI2CToPM_Skp	;Skip this word00360 1F83 	;00361 1F83 279D 	WriteI2CToPM_1	CALL	MovePMAddrToTemp00362 1F84 	;00363 1F84 272D 		CALL	ReadPM	;Get Current PM Param79/A00364 1F85 		MOVFW	Param7900364 1F85 0879      M		MOVF	Param79,W		MOVF	src,W00365 1F86 023A 		SUBWF	PM_Data_Lo,W00366 1F87 		SKPZ00366 1F87 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00367 1F88 2F8D 		GOTO	WriteI2CToPM_Prog00368 1F89 		MOVFW	Param7A00368 1F89 087A      M		MOVF	Param7A,W		MOVF	src,W00369 1F8A 023B 		SUBWF	PM_Data_Hi,W00370 1F8B 		SKPNZ00370 1F8B 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00371 1F8C 2F9B 		GOTO	WriteI2CToPM_Skp00372 1F8D 	;00373 1F8D 	WriteI2CToPM_Prog	MOVFW	PM_Data_Lo00373 1F8D 083A      M		MOVF	PM_Data_Lo,W		MOVF	src,W00374 1F8E 00F9 		MOVWF	Param7900375 1F8F 		MOVFW	PM_Data_Hi00375 1F8F 083B      M		MOVF	PM_Data_Hi,W		MOVF	src,W00376 1F90 00FA 		MOVWF	Param7A00377 1F91 2744 		CALL	WritePM_PI00378 1F92 	;00379 1F92 	WriteI2CToPM_2	MOVFW	PM_StopAddrH00379 1F92 083D      M		MOVF	PM_StopAddrH,W		MOVF	src,W00380 1F93 0239 		SUBWF	PM_Addr_Hi,W00381 1F94 		SKPZ00381 1F94 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00382 1F95 2F79 		GOTO	WriteI2CToPM00383 1F96 		MOVFW	PM_StopAddrL00383 1F96 083C      M		MOVF	PM_StopAddrL,W		MOVF	src,W00384 1F97 0238 		SUBWF	PM_Addr_Lo,W00385 1F98 		SKPZ00385 1F98 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00386 1F99 2F79 		GOTO	WriteI2CToPM00387 1F9A 0008 		RETURN00388 1F9B 	;00389 1F9B 2740 	WriteI2CToPM_Skp	CALL	BLIncAddr00390 1F9C 2F92 		GOTO	WriteI2CToPM_200391 1F9D 	;00392 1F9D 	;=========================================================================================00393 1F9D 	;00394 1F9D 	MovePMAddrToTemp	MOVFW	PM_Addr_Lo00394 1F9D 0838      M		MOVF	PM_Addr_Lo,W		MOVF	src,W00395 1F9E 00FB 		MOVWF	Param7B00396 1F9F 		MOVFW	PM_Addr_Hi00396 1F9F 0839      M		MOVF	PM_Addr_Hi,W		MOVF	src,W00397 1FA0 00FC 		MOVWF	Param7C00398 1FA1 0008 		RETURN00399 1FA2 	;00400 1FA2 	;=========================================================================================00401 1FA2 	; Read from external serial eeprom(s)00402 1FA2 	; Entry: Bank0, Read next byte send ACK00403 1FA2 	; Exit: W = Return Value00404 1FA2 	; RAM used: none00405 1FA2 	; Calls:(0) none00406 1FA2 	;00407 1FA2 118C 	BL_i2c_read_ACK	BCF	PIR1,SSPIF	; clear interrupt flag00408 1FA3 1683 		BSF	STATUS,RP0	; Bank100409 1FA4 1591 		BSF	SSPCON2,RCEN	; enable receive mode00410 1FA5 1283 		BCF	STATUS,RP0	; Bank000411 1FA6 1D8C 		BTFSS	PIR1,SSPIF	; has SSP received a data byte?00412 1FA7 2FA6 		GOTO	$-1	; no, loop back to test00413 1FA8 1683 		BSF	STATUS,RP0	; Bank100414 1FA9 1291 		BCF	SSPCON2,ACKDT	; ACK00415 1FAA 1611 		BSF	SSPCON2,ACKEN	; send ACKDT bit00416 1FAB 	;00417 1FAB 1A11 		BTFSC	SSPCON2,ACKEN	; has ACKDT bit been sent yet?00418 1FAC 2FAB 		GOTO	$-1	; no, loop back to test00419 1FAD 1283 		BCF	STATUS,RP000420 1FAE 	;Highland Greeley PIC.asm   "Bootloader.asm"                              Page: 230500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Bootloader.asm00421 1FAE 0813 		MOVF	SSPBUF,W	; save data to RAM00422 1FAF 1683 		BSF	STATUS,RP0	; Bank100423 1FB0 1191 		BCF	SSPCON2,RCEN	; disable receive mode00424 1FB1 1283 		BCF	STATUS,RP0	; Bank000425 1FB2 0008 		RETURN00426 1FB3 	;============================================================================================00427 1FB3 	; Open the Prog Mem image file and put the header info in ram.00428 1FB3 	;00429 1FB3 	; Entry: PM_FileNum00430 1FB3 	; Exit: W=0=file is open, 0x80=FNF00431 1FB3 	; RAM used: Param70,Param71,Param77,Param79,Param7A,Param7B,Param7C00432 1FB3 	; Calls: (1+2) ZeroFName_D18, find_file_D18, open_file_D18, BL_i2c_read_ACK00433 1FB3 	;00434 1FB3 2006 	OpenPMImageFile	CALL	ZeroFName_D1800435 1FB4 3062 		MOVLW	'b'	;Set filename = "bN.b"00436 1FB5 200C 		CALL	DOP_Ram_D1800437 1FB6 		MOVFW	PM_FileNum00437 1FB6 0840      M		MOVF	PM_FileNum,W		MOVF	src,W00438 1FB7 		SKPNZ00438 1FB7 1903      M		BTFSC	STATUS,Z		BTFSC	STATUS,Z00439 1FB8 2FBB 		GOTO	OpenPMImageFile_100440 1FB9 3E30 		ADDLW	'0'00441 1FBA 200C 		CALL	DOP_Ram_D1800442 1FBB 302E 	OpenPMImageFile_1	MOVLW	'.'00443 1FBC 200C 		CALL	DOP_Ram_D1800444 1FBD 3062 		MOVLW	'b'00445 1FBE 200C 		CALL	DOP_Ram_D1800446 1FBF 	;00447 1FBF 200F 		CALL	find_file_D1800448 1FC0 1C78 		BTFSS	Param78,000449 1FC1 3480 		RETLW	0x80	;file not found00450 1FC2 2015 		CALL	open_file_D1800451 1FC3 27A2 		CALL	BL_i2c_read_ACK00452 1FC4 00B9 		MOVWF	PM_Addr_Hi	;PM_Addr=Destination00453 1FC5 27A2 		CALL	BL_i2c_read_ACK00454 1FC6 00B8 		MOVWF	PM_Addr_Lo00455 1FC7 27A2 		CALL	BL_i2c_read_ACK	;PM_StopAddr=Length00456 1FC8 00BD 		MOVWF	PM_StopAddrH00457 1FC9 27A2 		CALL	BL_i2c_read_ACK00458 1FCA 00BC 		MOVWF	PM_StopAddrL00459 1FCB 27A2 		CALL	BL_i2c_read_ACK	;PM_CSum=Checksum00460 1FCC 00BF 		MOVWF	PM_CSumH00461 1FCD 27A2 		CALL	BL_i2c_read_ACK00462 1FCE 00BE 		MOVWF	PM_CSumL00463 1FCF 3400 		RETLW	0x0000464 1FD0 	;00465 1FD0 	;============================================================================================00466 1FD0 	; convert len to stop addr (0/0)00467 1FD0 	;00468 1FD0 	; Entry: Bank0, PM_Addr, PM_StopAddr00469 1FD0 	; Exit: PM_StopAddr00470 1FD0 	; RAM used: none00471 1FD0 	; Calls: (0) none00472 1FD0 	;00473 1FD0 	PM_LenToStop	MOVFW	PM_Addr_Lo	00473 1FD0 0838      M		MOVF	PM_Addr_Lo,W		MOVF	src,W00474 1FD1 07BC 		ADDWF	PM_StopAddrL,F00475 1FD2 		SKPNC00475 1FD2 1803      M		BTFSC	STATUS,C		BTFSC	STATUS,C00476 1FD3 0ABD 		INCF	PM_StopAddrH,F00477 1FD4 		MOVFW	PM_Addr_Hi00477 1FD4 0839      M		MOVF	PM_Addr_Hi,W		MOVF	src,W00478 1FD5 07BD 		ADDWF	PM_StopAddrH,F00479 1FD6 0008 		RETURN00480 1FD7 	;00481 1FD7 	;============================================================================================00482 1FD7 	; Verify the checksum of the rom image00483 1FD7 	;00484 1FD7 	; Entry: PM_FileNum00485 1FD7 	; Exit: W=0 noErr, W=0x80 FNF or bad csum00486 1FD7 	; RAM used: Param70,Param71,Param77,Param79,Param7A,Param7B,Param7C00487 1FD7 	; Calls: (1+3) OpenPMImageFile, PM_LenToStop, Gen_BLPM_CSUM, close_file_D1800488 1FD7 	;00489 1FD7 	;00490 1FD7 27B3 	VerifyRICSum	CALL	OpenPMImageFile00491 1FD8 3800 		IORLW	0x0000492 1FD9 		SKPZ00492 1FD9 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00493 1FDA 2FE5 		GOTO	VRICsErr	;file not found00494 1FDB 	;00495 1FDB 27D0 		CALL	PM_LenToStop00496 1FDC 2777 		CALL	Gen_BLPM_CSUM	;Param71:Param70=CSUM00497 1FDD 201B 		CALL	close_file_D1800498 1FDE 	;00499 1FDE 		MOVFW	Param7000499 1FDE 0870      M		MOVF	Param70,W		MOVF	src,W00500 1FDF 023E 		SUBWF	PM_CSumL,W00501 1FE0 		SKPZ00501 1FE0 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00502 1FE1 3480 		RETLW	0x80	;Doesn't Match00503 1FE2 	;00504 1FE2 		MOVFW	Param7100504 1FE2 0871      M		MOVF	Param71,W		MOVF	src,W00505 1FE3 023F 		SUBWF	PM_CSumH,W00506 1FE4 		SKPZ00506 1FE4 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00507 1FE5 3480 	VRICsErr	RETLW	0x80	;Doesn't Match00508 1FE6 3400 		RETLW	0x00	;It's GOOD!00509 1FE7 	;00510 1FE7 	;============================================================================================Highland Greeley PIC.asm   "Bootloader.asm"                              Page: 231500 GB:Oxford V.U.E., Inc.:Brain Test and Master files:Master Files:Bootloader.asm00511 1FE7 	; Clr Update In Progress bit00512 1FE7 	;00513 1FE7 	; Entry: none00514 1FE7 	; Exit: none00515 1FE7 	; RAM used: Param78,Param7900516 1FE7 	; Calls: (1+1) ReadEE79_D18, WriteEEP79W_D1800517 1FE7 	;00518 1FE7 300F 	ClrUIPBit	MOVLW	ePM_Flags	00519 1FE8 00F9 		MOVWF	Param7900520 1FE9 2021 		CALL	ReadEE79_D1800521 1FEA 390E 		ANDLW	PM_UIPMaskClr00522 1FEB 2827 		GOTO	WriteEEP79W_D1800523 1FEC 	;00524 1FEC 	;============================================================================================00525 1FEC 	; Update the program memory.00526 1FEC 	;00527 1FEC 	; Find then program memory image in eerom and verify its checksum.00528 1FEC 	; Clear ePM_Flags,PM_UIP bit. If this bit is cleared at startup then this proccess was00529 1FEC 	;  interupted and must be completed.00530 1FEC 	; 00531 1FEC 	;00532 1FEC 	; Entry: PM_FileNum00533 1FEC 	; Exit: Does not exit, GOTO 0x000000534 1FEC 	; RAM used: Param70,Param71,Param77,Param78,Param79,Param7A,Param7B,Param7C00535 1FEC 	; Calls: (1+4) OpenPMImageFile,WriteI2CToPM,VerifyRICSum00536 1FEC 	;00537 1FEC 27D7 	UpdateProgMem	CALL	VerifyRICSum00538 1FED 3800 		IORLW	0x0000539 1FEE 		SKPZ		;skip if noErr00539 1FEE 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00540 1FEF 2FFC 		GOTO	CheckSumError	;rom image had bad csum00541 1FF0 	;00542 1FF0 270F 		CALL	SetUIPBit00543 1FF1 	;00544 1FF1 27B3 		CALL	OpenPMImageFile00545 1FF2 3800 		IORLW	0x0000546 1FF3 		SKPZ00546 1FF3 1D03      M		BTFSS	STATUS,Z		BTFSS	STATUS,Z00547 1FF4 2FFC 		GOTO	CheckSumError	;file not found00548 1FF5 	;00549 1FF5 27D0 		CALL	PM_LenToStop00550 1FF6 	;00551 1FF6 138B 		BCF	_GIE	;disable interupts00552 1FF7 		if UseOldBL00553 1FF7 		else00556 1FF7 		endif00557 1FF7 	;00558 1FF7 2779 		CALL	WriteI2CToPM00559 1FF8 201B 		CALL	close_file_D1800560 1FF9 	;00561 1FF9 27E7 		CALL	ClrUIPBit00562 1FFA 	;00563 1FFA 018A 		CLRF	PCLATH00564 1FFB 2800 		GOTO	0x000000565 1FFC 	;00566 1FFC 	CheckSumError	00567 1FFC 		if UsesLCD00568 1FFC 202F 		CALL	lcd_GotoLine2_300569 1FFD 3022 		MOVLW	Str_ErrorPtr00570 1FFE 203A 		CALL	PrintString_D1800571 1FFF 		endif00572 1FFF 2FFF 	CSumNoRtn	GOTO	CSumNoRtn00573 2000 	;00574 2000 	;============================================================================================00575 2000 	;00576 2000 	; End of Bootloader.asm00577 2000 	;00578 2000 	;01025 2000 	;01026 2000 	;01027 2000 	;01028 2000 	;01029 2000 	;01030 2000 	;01031 2000 	;01032 2000 	;01033 2000 		END		; directive 'end of program'Memory Usage Map ('X' = Used, '-' = Unused) 0000  : XXX-XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0040  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0080  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX00C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0100  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0140  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0180  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX01C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0200  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0240  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0280  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX02C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0300  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0340  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0380  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX03C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0400  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0440  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0480  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX04C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXXHighland Greeley PIC.asm   Memory Usage Map                              Page: 232500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asm0500  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0540  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0580  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX05C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0600  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0640  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0680  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX06C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0700  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0740  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXX------------- ----------------0800  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0840  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0880  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX08C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0900  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0940  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0980  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX09C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0A00  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0A40  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0A80  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0AC0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0B00  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0B40  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0B80  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0BC0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0C00  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0C40  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0C80  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0CC0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0D00  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0D40  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0D80  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0DC0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0E00  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0E40  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0E80  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0EC0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0F00  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0F40  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX0F80  : XXXXXX---------- ---------------- ---------------- ----------------1000  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1040  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1080  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX10C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1100  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1140  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1180  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX11C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1200  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1240  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1280  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX12C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1300  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1340  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1380  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX13C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1400  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1440  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1480  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX14C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1500  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1540  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1580  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX15C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1600  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1640  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1680  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX16C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1700  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1740  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX ---------------- ----------------1780  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX17C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXX---1800  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1840  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1880  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX18C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1900  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1940  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1980  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX19C0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1A00  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1A40  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1A80  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1AC0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1B00  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1B40  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1B80  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1BC0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1C00  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1C40  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1C80  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1CC0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1D00  : XXXXXXXXXXXXXXXX ---------------- ---------------- ----------------1F00  : --------XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1F40  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1F80  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX1FC0  : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX Program Memory Words Used:7373Highland Greeley PIC.asm   Memory Usage Map                              Page: 233500 GB:HPRR Electrical Dept:HPRR.ASM:Highland/Greeley:Highland Greeley PIC.asmProgram Memory Words Free:819 UserID2000  :XXXX Config2007  :X EEPROM2100  : XXXXXXX-XXXXXXXX ---------------- ---------------- ----------------21C0  : ---------------- --------XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX Data EEPROM Bytes Used:55Data EEPROM Bytes Free:201